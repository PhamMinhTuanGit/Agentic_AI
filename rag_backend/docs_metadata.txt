ZebOS-XP® Network Platform Version 1.4 Extended Performance Bidirectional Forwarding Detection Command Reference December 2015 IP Infusion Inc. Proprietary © 2015 IP Infusion Inc. All Rights Reserved. This documentation is subject to change without notice. The software described in this document and this documentation are furnished under a license agreement or nondisclosure agreement. The software and documentation may be used or
copied only in accordance with the terms of the applicable agreement. No part of this publication may be reproduced, stored in a retrieval system, or transmitted in any form or any means electronic or mechanical, including photocopying and recording for any purpose other than the purchaser's internal use without the written permission of IP Infusion Inc. IP Infusion Inc. 3965 Freedom Circle, Suite 200 Santa Clara, CA 95054 +1 408-400-1900 http://www.ipinfusion.com/
+1 408-400-1900 http://www.ipinfusion.com/ For support, questions, or comments via E-mail, contact: support@ipinfusion.com Trademarks: IP Infusion, OcNOS, VirNOS, ZebM, ZebOS, and ZebOS-XP are trademarks or registered trademarks of IP Infusion. All other trademarks, service marks, registered trademarks, or registered service marks are the property of their respective owners. ii IP Infusion Inc. Proprietary Contents
owners. ii IP Infusion Inc. Proprietary Contents Preface . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . v Audience . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .v Conventions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .v
Contents . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .v Related Documents. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .v Support . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . vi
Comments. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . vi CHAPTER 1 Command Line Interface. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 7 Overview . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .7 Starting the Command Line Interface . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .7
Command Line Interface Help . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .7 Command Completion. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .8 Command Abbreviations. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .9
Command Line Errors . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .9 Command Negation. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .9 Syntax Conventions. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .10
Variable Placeholders . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .11 Command Description Format. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .12 Keyboard Operations. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .12
Show Command Modifiers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .13 Begin Modifier . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .13 Include Modifier . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .14
Exclude Modifier . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .14 Redirect Modifier . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .15 Command Modes. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .15
Debug Command. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .16 CHAPTER 2 Bidirectional Forwarding Commands . . . . . . . . . . . . . . . . . . . . . . . . 17 bfd auth type. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .18 bfd disable. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .19
bfd echo. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .20 bfd echo interval. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .21 bfd gtsm. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .22
bfd gtsm ttl. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .23 bfd interval. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .24 bfd multihop-peer. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .25
bfd multihop-peer A.B.C.D . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .27 bfd multihop-peer X:X::X:X. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .28 bfd notification. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .29
bfd session . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .30 bfd slow-timer . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .32 debug bfd. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .33 © 2015 IP Infusion Inc. Proprietary iii Contents
© 2015 IP Infusion Inc. Proprietary iii Contents key. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 34 key chain . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 35 send-lifetime . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 36
show bfd. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 37 show bfd interface. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 38 show bfd session . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 39
show bfd session A.B.C.D. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 40 show bfd session ipv6 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 41 show debugging bfd. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 42
snmp restart bfd . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 43 CHAPTER 3 Protocol Commands for BFD . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 45 area virtual-link . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 46
bfd all-interfaces . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 47 debug bgp bfd. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 48 debug isis bfd . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 49
debug ospf bfd. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 50 debug rip bfd . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 51 ip ospf bfd . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 52
isis bfd . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 53 neighbor fall-over bfd (BGP). . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 54 neighbor fall-over bfd (RIP). . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 55 CHAPTER 4 BFD Static Route Commands. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 57
ip bfd static all-interfaces. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 58 ip static fall-over bfd . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 59 ip static bfd. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 60
ipv6 static all-interfaces . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 61 ipv6 static fall-over bfd. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 62 ipv6 static bfd. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 63
Index . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 65 iv © 2015 IP Infusion Inc. Proprietary Preface This document describes the ZebOS-XP commands for Bidirectional Forwarding Detection (BFD). Audience This document is intended for network administrators and other engineering professionals who configure and manage BFD. Conventions Table P-1 shows the conventions used in this guide. Table P-1: Conventions
Table P-1: Conventions Convention Description Italics Emphasized terms; titles of books Note: Special instructions, suggestions, or warnings monospaced type Code elements such as commands, functions, parameters, files, and directories Contents This document contains these chapters: • Chapter 1, Command Line Interface • Chapter 2, Bidirectional Forwarding Commands • Chapter 3, Protocol Commands for BFD • Chapter 4, BFD Static Route Commands Related Documents
Related Documents The following guides are related to this document: • Bidirectional Forwarding Detection Developer Guide • Bidirectional Forwarding Detection Configuration Guide • Installation Guide Note: All ZebOS-XP technical manuals are available to licensed customers at http://www.ipinfusion.com/support/ document_list. © 2015 IP Infusion Inc. Proprietary v Preface Support For support-related questions, contact support@ipinfusion.com. Comments
Comments If you have comments, or need to report a problem with the content, contact techpubs@ipinfusion.com. vi © 2015 IP Infusion Inc. Proprietary Command Line Interface CHAPTER 1 This chapter introduces the ZebOS-XP Command Line Interface (CLI) and how to use its features. Overview You use the CLI to configure, monitor, and maintain ZebOS-XP devices. The CLI is text-based and each command is usually associated with a specific task.
usually associated with a specific task. You can give the commands described in this manual locally from the console of a device running ZebOS-XP or remotely from a terminal emulator such as putty or xterm. You can also use the commands in scripts to automate configuration tasks. Starting the Command Line Interface You must start daemons as described in this section before you can use the CLI. The general steps are listed below.
For details about the ZebOS-XP daemons, see the Installation Guide. 1. Start your terminal emulator and connect to the device or go to the console of the device running ZebOS-XP. 2. Connect to the directory where you installed the ZebOS-XP executables. 3. Start the Network Services Module (NSM). # ./nsm -d 4. Start the protocol module daemons that your organization uses, such as mstpd, ospf6d, or ripd. # ./mstpd –d 5. Start the Integrated Management Interface (IMI) daemon. # ./imi -d
# ./imi -d 6. Start the IMI shell. # ./imish Note: Your organization may use a ZebOS-XP build that does not include imish. If that is the case, you must connect to a port on which a protocol daemon is listening. For details, see the Installation Guide. You can now begin using the CLI. Command Line Interface Help You access the CLI help by entering a full or partial command string and a question mark “?”. The CLI displays the
command keywords or parameters along with a short description. For example, at the CLI command prompt, type: > show ? The CLI displays this keyword list with short descriptions for each keyword: show ? application-priority Application Priority © 2015 IP Infusion Inc. Proprietary 7 Command Line Interface arp Internet Protocol (IP) bfd Bidirectional Forwarding Detection (BFD) bgp Border Gateway Protocol (BGP) bi-lsp Bi-directional lsp status and configuration bridge Bridge group commands
bridge Bridge group commands ce-vlan COS Preservation for Customer Edge VLAN class-map Class map entry cli Show CLI tree of current mode clns Connectionless-Mode Network Service (CLNS) control-adjacency Control Adjacency status and configuration control-channel Control Channel status and configuration cspf CSPF Information customer Display Customer spanning-tree cvlan Display CVLAN information debugging Debugging functions (see also 'undebug') dot1x IEEE 802.1X Port-Based Access Control
dot1x IEEE 802.1X Port-Based Access Control etherchannel LACP etherchannel ethernet Layer-2 ... If you type the ? in the middle of a keyword, the CLI displays help for that keyword only. > show de? debugging Debugging functions (see also 'undebug') If you type the ? in the middle of a keyword, but the incomplete keyword matches several other keywords, ZebOS-XP displays help for all matching keywords. > show i? (CLI does not display the question mark).
interface Interface status and configuration ip IP information isis ISIS information Command Completion The CLI can complete the spelling of a command or a parameter. Begin typing the command or parameter and then press the tab key. For example, at the CLI command prompt type sh: > sh Press the tab key. The CLI displays: > show If the spelling of a command or parameter is ambiguous, the CLI displays the choices that match the abbreviation. Type show i and press the tab key. The CLI displays:
show i and press the tab key. The CLI displays: > show i interface ip ipv6 isis > show i The CLI displays the interface and ip keywords. Type n to select interface and press the tab key. The CLI displays: > show in > show interface Type ? and the CLI displays the list of parameters for the show interface command. > show interface IFNAME Interface name | Output modifiers 8 © 2015 IP Infusion Inc. Proprietary Command Line Interface > Output redirection <cr>
Command Line Interface > Output redirection <cr> The CLI displays the only parameter associated with this command, the IFNAME parameter. Command Abbreviations The CLI accepts abbreviations that uniquely identify a keyword in commands. For example: > sh in eth0 is an abbreviation for: > show interface eth0 Command Line Errors Any unknown spelling causes the CLI to display the error Unrecognized command in response to the ?. The CLI displays the command again as last entered. > show dd?
> show dd? % Unrecognized command > show dd When you press the Enter key after typing an invalid command, the CLI displays: (config)#router ospf here ^ % Invalid input detected at '^' marker. where the ^ points to the first character in error in the command. If a command is incomplete, the CLI displays the following message: > show % Incomplete command. Some commands are too long for the display line and can wrap mid-parameter or mid-keyword, as shown below. This
does not cause an error and the command performs as expected: area 10.10.0.18 virtual-link 10.10.0.19 authent ication-key 57393 Command Negation Many commands have a no form that resets a feature to its default value or disables the feature. For example: • The ip address command assigns an IPv4 address to an interface • The no ip address command removes an IPv4 address from an interface © 2015 IP Infusion Inc. Proprietary 9 Command Line Interface Syntax Conventions
Command Line Interface Syntax Conventions Table 1-1 describes the conventions used to represent command syntax in this reference. Table 1-1: Syntax conventions Convention Description Example monospaced Command strings entered on a command line show bfd font lowercase Keywords that you enter exactly as shown in the show bfd command syntax. UPPERCASE See Variable Placeholders IFNAME () Optional parameters, from which you must select (A.B.C.D|<0-4294967295>)
one. Vertical bars delimit the selections. Do not enter the parentheses or vertical bars as part of the command. () Optional parameters, from which you select one or (A.B.C.D|<0-4294967295>|) none. Vertical bars delimit the selections. Do not enter the parentheses or vertical bars as part of the command. () Optional parameter which you can specify or omit. (IFNAME|) Do not enter the parentheses or vertical bar as part of the command.
of the command. {} Optional parameters, from which you must select {intra-area <1-255>|inter-area one or more. Vertical bars delimit the selections. Do <1-255>|external <1-255>} not enter the braces or vertical bars as part of the command. [] Optional parameters, from which you select zero or [<1-65535>|AA:NN|internet|local-AS| more. Vertical bars delimit the selections. Do not no-advertise|no-export] enter the brackets or vertical bars as part of the command.
command. A '?' before a parameter in square brackets limits that parameter to one occurrence in a command string. . Repeatable parameter. The parameter that follows a set as-path prepend .<1-65535> period can be repeated more than once. Do not enter the period as part of the command. 10 © 2015 IP Infusion Inc. Proprietary Command Line Interface Variable Placeholders Table 1-2 shows the tokens used in command syntax use to represent variables for which you supply a value.
Table 1-2: Variable placeholders Token Description WORD A contiguous text string (excluding spaces) LINE A text string, including spaces; no other parameters can follow this parameter IFNAME Interface name whose format varies depending on the platform; examples are: eth0, Ethernet0, ethernet0, xe0 A.B.C.D IPv4 address A.B.C.D/M IPv4 address and mask/prefix X:X::X:X IPv6 address X:X::X:X/M IPv6 address and mask/prefix HH:MM:SS Time format AA:NN BGP community value XX:XX:XX:XX:XX:XX MAC address
XX:XX:XX:XX:XX:XX MAC address <1-5> Numeric range <1-65535> <0-2147483647> <0-4294967295> © 2015 IP Infusion Inc. Proprietary 11 Command Line Interface Command Description Format Table 1-3 explains the sections used to describe each command in this reference. Table 1-3: Command descriptions Section Description Command Name The name of the command, followed by what the command does and when should it be used Command Syntax The syntax of the command
Command Syntax The syntax of the command Parameters Parameters and options for the command Default The state before the command is executed Command Mode The mode in which the command runs; see Command Modes Example An example of the command being executed Keyboard Operations Table 1-4 lists the operations you can perform from the keyboard. Table 1-4: Keyboard operations Key combination Operation
Key combination Operation Left arrow or Ctrl+b Moves one character to the left. When a command extends beyond a single line, you can press left arrow or Ctrl+b repeatedly to scroll toward the beginning of the line, or you can press Ctrl+a to go directly to the beginning of the line. Right arrow or Ctrl-f Moves one character to the right. When a command extends beyond a single line, you can press right
arrow or Ctrl+f repeatedly to scroll toward the end of the line, or you can press Ctrl+e to go directly to the end of the line. Esc, b Moves back one word Esc, f Moves forward one word Ctrl+e Moves to end of the line Ctrl+a Moves to the beginning of the line Ctrl+u Deletes the line Ctrl+w Deletes from the cursor to the previous whitespace Alt+d Deletes the current word Ctrl+k Deletes from the cursor to the end of line
Ctrl+k Deletes from the cursor to the end of line Ctrl+y Pastes text previously deleted with Ctrl+k, Alt+d, Ctrl+w, or Ctrl+u at the cursor 12 © 2015 IP Infusion Inc. Proprietary Command Line Interface Table 1-4: Keyboard operations (Continued) Key combination Operation Ctrl+t Transposes the current character with the previous character Ctrl+c Ignores the current line and redisplays the command prompt Ctrl+z Ends configuration mode and returns to exec mode Ctrl+l Clears the screen
Ctrl+l Clears the screen Up Arrow or Ctrl+p Scroll backward through command history Down Arrow or Ctrl+n Scroll forward through command history Show Command Modifiers You can use two tokens to modify the output of a show command. Enter a question mark to display these tokens: # show users ? | Output modifiers > Output redirection You can type the | (vertical bar character) to use output modifiers. For example: > show rsvp | ? begin Begin with the line that matches
begin Begin with the line that matches exclude Exclude lines that match include Include lines that match redirect Redirect output Begin Modifier The begin modifier displays the output beginning with the first line that contains the input string (everything typed after the begin keyword). For example: # show run | begin eth1 ...skipping interface eth1 ipv6 address fe80::204:75ff:fee6:5393/64 ! interface eth2 ipv6 address fe80::20d:56ff:fe96:725a/64 ! line con 0 login ! end
! line con 0 login ! end You can specify a regular expression after the begin keyword, This example begins the output at a line with either “eth3” or “eth4”: # show run | begin eth[3-4] ...skipping interface eth3 © 2015 IP Infusion Inc. Proprietary 13 Command Line Interface shutdown ! interface eth4 shutdown ! interface svlan0.1 no shutdown ! route-map myroute permit 3 ! route-map mymap1 permit 10 ! route-map rmap1 permit 3 ! line con 0 login line vty 0 4 login ! end Include Modifier
login line vty 0 4 login ! end Include Modifier The include modifier includes only those lines of output that contain the input string. In the output below, all lines containing the word “input” are included: # show interface eth1 | include input input packets 80434552, bytes 2147483647, dropped 0, multicast packets 0 input errors 0, length 0, overrun 0, CRC 0, frame 0, fifo 1, missed 0
You can specify a regular expression after the include keyword. This examples includes all lines with “input” or “output”: #show int eth0 | include (in|out)put input packets 597058, bytes 338081476, dropped 0, multicast packets 0 input errors 0, length 0, overrun 0, CRC 0, frame 0, fifo 0, missed 0 output packets 613147, bytes 126055987, dropped 0 output errors 0, aborted 0, carrier 0, fifo 0, heartbeat 0, window 0 Exclude Modifier
Exclude Modifier The exclude modifier excludes all lines of output that contain the input string. In the following output example, all lines containing the word “input” are excluded: # show interface eth1 | exclude input Interface eth1 Scope: both Hardware is Ethernet, address is 0004.75e6.5393 index 3 metric 1 mtu 1500 <UP,BROADCAST,RUNNING,MULTICAST> VRF Binding: Not bound Administrative Group(s): None DSTE Bandwidth Constraint Mode is MAM inet6 fe80::204:75ff:fee6:5393/64
inet6 fe80::204:75ff:fee6:5393/64 output packets 4438, bytes 394940, dropped 0 output errors 0, aborted 0, carrier 0, fifo 0, heartbeat 0, window 0 collisions 0 You can specify a regular expression after the exclude keyword. This example excludes lines with “output” or “input”: 14 © 2015 IP Infusion Inc. Proprietary Command Line Interface # show interface eth0 | exclude (in|out)put Interface eth0 Scope: both Hardware is Ethernet Current HW addr: 001b.2139.6c4a
Physical:001b.2139.6c4a Logical:(not set) index 2 metric 1 mtu 1500 duplex-full arp ageing timeout 3000 <UP,BROADCAST,RUNNING,MULTICAST> VRF Binding: Not bound Bandwidth 100m DHCP client is disabled. inet 10.1.2.173/24 broadcast 10.1.2.255 VRRP Master of : VRRP is not configured on this interface. inet6 fe80::21b:21ff:fe39:6c4a/64 collisions 0 Redirect Modifier The redirect modifier writes the output into a file. The output is not displayed. # show history | redirect /var/frame.txt
# show history | redirect /var/frame.txt The output redirection token (>) does the same thing: # show history >/var/frame.txt Command Modes Commands are grouped into modes arranged in a hierarchy. Each mode has its own set of commands. Table 1-5 lists the command modes common to all protocols. Table 1-5: Common command modes Name Description Executive Also called view mode, this is the first mode to appear after you start the CLI. It is a base mode from where you
mode can perform basic commands such as show, exit, quit, help, list, and enable. Privileged Also called enable mode, in this mode you can run additional basic commands such as debug, write, and executive show. mode Configure Also called configure terminal mode, in this mode you can run configuration commands and go into other mode modes such as interface, router, route map, key chain, and address family.
Interface In this mode you can configure protocol-specific settings for a particular interface. Any setting you configure in mode this mode overrides a setting configured in router mode. Router This mode is used to configure router-specific settings for a protocol such as RIP or OSPF. mode © 2015 IP Infusion Inc. Proprietary 15 Command Line Interface Command Mode Tree The diagram below shows the common command mode hierarchy. Start in executive mode enable (password) Privileged executive mode
mode enable (password) Privileged executive mode configure terminal Configure mode interface eth0 router rip Interface Router mode mode Figure 1-1: Common command modes To change modes: 1. Enter privileged executive mode by entering enable in Executive mode. 2. Enter configure mode by entering configure terminal in Privileged Executive mode. The example below shows starting imish and then moving from executive mode to privileged executive mode to configure mode and finally to router mode:
configure mode and finally to router mode: # ./imish > enable mypassword # configure terminal Enter configuration commands, one per line. End with CNTL/Z. (config)# router rip (config-router)# Note: Each protocol can have modes in addition to the common command modes. See the command reference for the respective protocol for details. Debug Command Whether the settings you make for a debug command persist between sessions depends on the mode where you make the settings:
make the settings: • When you make settings for a debug command in executive mode, the configuration is valid for the current session only and is not saved in the ZebOS.conf file. • When you make settings for a debug command in configuration mode, the configuration is retained and saved in ZebOS.conf and used even after the session restarts. 16 © 2015 IP Infusion Inc. Proprietary Bidirectional Forwarding Commands CHAPTER 2
Bidirectional Forwarding Commands CHAPTER 2 This chapter includes the commands used to configure and manage the BFD base module in a network. It includes the following commands: • bfd auth type on page 18 • bfd disable on page 19 • bfd echo on page 20 • bfd echo interval on page 21 • bfd gtsm on page 22 • bfd gtsm ttl on page 23 • bfd interval on page 24 • bfd multihop-peer on page 25 • bfd multihop-peer A.B.C.D on page 27 • bfd multihop-peer X:X::X:X on page 28 • bfd notification on page 29
• bfd notification on page 29 • bfd session on page 30 • bfd slow-timer on page 32 • debug bfd on page 33 • key on page 34 • key chain on page 35 • send-lifetime on page 36 • show bfd on page 37 • show bfd interface on page 38 • show bfd session on page 39 • show bfd session A.B.C.D on page 40 • show bfd session ipv6 on page 41 • show debugging bfd on page 42 • snmp restart bfd on page 43 © 2015 IP Infusion Inc. Proprietary 17 Bidirectional Forwarding Commands bfd auth type
Bidirectional Forwarding Commands bfd auth type Use this command to enable BFD authentication on an interface that has either an IPv4 or an IPv6 BFD session. The configured key-chain option identifies the key-chain name. A key-chain consists of a configured key-id and authentication string, which can be configured under key-chain mode (refer to key chain on page 35 for more information). BFD authentication uses the active key-id when there are multiple key-ids under a key-chain.
Use the no form of the command to disable BFD authentication. Command Syntax bfd auth type (simple | keyed-md5 | meticulous-keyed-md5 | keyed-sha1 | meticulous- keyed-sha1) (key-id <0-255> key LINE | key-chain LINE) no bfd auth Parameters simple Specify a simple authentication type. keyed-md5 Specify a keyed message digest authentication type. meticulous-keyed-md5 Specify a meticulous keyed message digest authentication type.
keyed-sha1 Specify a keyed secure hashing algorithm authentication type. meticulous-keyed-sha1 Specify an authentication key meticulous keyed secure hashing algorithm authentication. key-id Indicate the key-id keyword. <0-255> Specify the key ID value. key Indicate the key keyword. LINE Specify the authentication key name. key-chain Indicate the key-chain keyword. LINE Specify the authentication key-chain name. Command Mode Interface mode Example
Command Mode Interface mode Example Do the following to configure a single-key support: (config)#interface eth1 (config-if)#bfd auth type simple key-id 14 key ipi-zebos Do the following to configure a multiple-key support: (config)#interface eth1 (config-if)#bfd auth type simple key-chain bfd-auth (config-if)#exit (config)#key chain bfd-chain (config-keychain)#key 14 (config-keychain-key)#key-string ipi-zebos 18 © 2015 IP Infusion Inc. Proprietary Bidirectional Forwarding Commands bfd disable
Bidirectional Forwarding Commands bfd disable Use this command to disable all the BFD sessions on this interface. Command Syntax bfd disable Parameters None Command Mode Interface mode Example #configure terminal (config)#interface eth1 (config-if)#bfd disable © 2015 IP Infusion Inc. Proprietary 19 Bidirectional Forwarding Commands bfd echo Use this command to set BFD sessions to echo mode. Use the no form of the command to return a BFD session to its default mode. Command Syntax bfd echo
Command Syntax bfd echo no bfd echo Parameters None Command Mode Configure mode Example #configure terminal (config)#bfd echo 20 © 2015 IP Infusion Inc. Proprietary Bidirectional Forwarding Commands bfd echo interval Use this command to set the BFD echo interval. Use the no form of this command to reset the echo interval to its default value. Command Syntax bfd echo interval <1-4294967> no bfd echo interval <1-4294967> Parameter <1-4294967> Transmit interval in milliseconds. Command Mode
Command Mode Interface mode Example The following command sets the BFD echo with no values. #configure terminal (config)#interface eth1 (config-if)#bfd echo interval 234 © 2015 IP Infusion Inc. Proprietary 21 Bidirectional Forwarding Commands bfd gtsm Use this command to enable or disable BFD GTSM (Generalized TTL Security Mechanism) protection. Command Syntax bfd gtsm (enable | disable) Parameters disable Disable GTSM protection. enable Enable GTSM protection. Command Mode Configure mode
Command Mode Configure mode Examples #configure terminal (config)#bfd gtsm enable 22 © 2015 IP Infusion Inc. Proprietary Bidirectional Forwarding Commands bfd gtsm ttl Use this command sets a BFD GTSM TTL (time to live) value. Command Syntax bfd gtsm ttl <1-255> Parameters <1-255> Allowed range for TTL Command Mode Configure mode Examples #configure terminal (config)#bfd gtsm ttl 123 © 2015 IP Infusion Inc. Proprietary 23 Bidirectional Forwarding Commands bfd interval
Bidirectional Forwarding Commands bfd interval Use this command to configure BFD transmit and receive intervals, and the value of Hello Multiplier. Use the no form of the command to set the intervals and multiplier back to their default values. Command Syntax bfd interval <50-999> minrx <50-999> multiplier <3-50> no bfd interval <50-999> minrx <50-999> multiplier <3-50> Parameters <50-999> Transmit interval in milliseconds. minrx Indicate the minrx parameter.
minrx Indicate the minrx parameter. <50-999> Specify the actual reception interval in milliseconds. multiplier Indicate the multiplier parameter. <3-50> Specify the actual hello multiplier value. Command Mode Interface mode Default Multiplier value is 3 Example #configure terminal (config)#interface eth1 (config-if)#bfd interval 100 minrx 100 multiplier 5 (config-if)# 24 © 2015 IP Infusion Inc. Proprietary Bidirectional Forwarding Commands bfd multihop-peer
bfd multihop-peer Use this command to enable authentication over either a multihop IPv4 or IPv6 session Use the no form of the command to disable BFD authentication. Command Syntax bfd multihop-peer (A.B.C.D | X:X::X:X) auth type (simple | keyed-md5 | meticulous- keyed-md5 | keyed-sha1 | meticulous-keyed-sha1) key-id <0-255> key LINE | key- chain LINE) no bfd multihop-peer (A.B.C.D | X:X::X:X) auth type (simple | keyed-md5 |
meticulous-keyed-md5 | keyed-sha1 | meticulous-keyed-sha1) key-id <0-255> key LINE | key-chain LINE) Parameters A.B.C.D Specify an IPv4 address. X:X::X:X Specify an IPv6 address. auth type Specify an authentication type. simple Specify a simple authentication type. keyed-md5 Specify a keyed message digest authentication type. meticulous-keyed-md5 Specify a meticulous keyed message digest authentication type. keyed-sha1 Specify a keyed secure hashing algorithm authentication type.
meticulous-keyed-sha1 Specify an authentication key Meticulous Keyed Secure hashing algorithm authentication type. key-id Indicate the key-id keyword. <0-255> Specify the key ID value. key Indicate the key keyword. LINE Specify the authentication key name. key-chain Indicate the key-chain keyword. LINE Specify the authentication key-chain name. Command Mode Configure mode Example Do the following to configure a single-key support: #configure terminal
#configure terminal (config)#bfd multihop-peer 123.12.1.2 auth-type simple key-id 14 key ipi-zebos © 2015 IP Infusion Inc. Proprietary 25 Bidirectional Forwarding Commands Do the following to configure a multiple-key support: #configure terminal (config)#bfd multihop-peer 123.12.1.2 auth-type key-chain bfd-auth (config)#key chain bfd-chain (config-keychain)#key 14 (config-keychain-key)#key-string ipi-zebos 26 © 2015 IP Infusion Inc. Proprietary Bidirectional Forwarding Commands
Bidirectional Forwarding Commands bfd multihop-peer A.B.C.D Use this command to configure IPv4 BFD multihop peer timer values. Use the no form of the command to reset the IPv4 multihop peer timer value. Command Syntax bfd multihop-peer A.B.C.D interval <50-999> minrx <50-999> multiplier <3-50> no bfd multihop-peer A.B.C.D interval <50-999> minrx <50-999> multiplier <3-50> Parameters interval Indicate the interval parameter. <50-999> Specify the actual transmit interval in milliseconds.
minrx Indicate the minrx parameter. <50-999> Specify the actual reception interval in milliseconds. multiplier Indicate the multiplier parameter. <3-50> Specify the actual hello multiplier value. Command Mode Configure mode Default Multiplier value is 3 Example #configure terminal (config)#bfd multihop-peer 10.1.1.67 interval 100 minrx 100 multiplier 3 (config)# © 2015 IP Infusion Inc. Proprietary 27 Bidirectional Forwarding Commands bfd multihop-peer X:X::X:X
bfd multihop-peer X:X::X:X Use this command to configure an IPv6 BFD multihop peer timer values. Use the no form of the command to reset the IPv6 multihop peer timer values. Command Syntax bfd multihop-peer X:X::X:X interval <50-999> minrx <50-999> multiplier <3-50> no bfd multihop-peer X:X::X:X interval <50-999> minrx <50-999> multiplier <3-50> Parameters interval Indicate the interval parameter. <50-999> Specify the actual transmit interval in milliseconds. minrx Indicate the minrx parameter.
minrx Indicate the minrx parameter. <50-999> Specify the actual reception interval in milliseconds. multiplier Indicate the multiplier parameter. <3-50> Specify the actual hello multiplier value. Command Mode Configure mode Default Default multiplier value is 3 Example #configure terminal (config)#bfd multihop-peer 10.1.1.1 interval 100 minrx 100 multiplier 3 28 © 2015 IP Infusion Inc. Proprietary Bidirectional Forwarding Commands bfd notification
bfd notification Use this command to enable or disable BFD notification. Command Syntax bfd notification (enable | disable) Parameters disable Disable BFD notification. enable Enable BFD notification. Command Mode Configure mode Examples #configure terminal (config)#bfd notification enable (config)#bfd notification disable © 2015 IP Infusion Inc. Proprietary 29 Bidirectional Forwarding Commands bfd session Use this command to configure a BFD session.
Use this command to configure a BFD session. You can configure a BFD session without any existing BFD application (such as OSPF or static routes) using this command. This can be useful in scenarios where the peer has a BFD application and requires the device under test (DUT) to sustain a BFD session. Use the no parameter with this command to remove this BFD session. Command Syntax IPv4 without MPLS-TP: bfd session A.B.C.D A.B.C.D (multihop|) (demand-mode|) (non-persistent|) (admindown|)
(admindown|) no bfd session A.B.C.D A.B.C.D (multihop|) (demand-mode|) (non-persistent|) (admindown|) IPv6 without MPLS-TP: bfd session X:X::X:X X:X::X:X (multihop|) (demand-mode|) (non-persistent|) (admindown|) no bfd session X:X::X:X X:X::X:X (multihop|) (demand-mode|) (non-persistent|) (admin-down|) IPv4 and IPv6 with MPLS-TP: bfd session (data-link-oam (mac-address MAC|) | X:X::X:X X:X::X:X (multihop|) (demand-mode|) (non-persistent|) (admin-down|))
(demand-mode|) (non-persistent|) (admin-down|)) no bfd session (data-link-oam (mac-address MAC|) | X:X::X:X X:X::X:X (multihop|) (demand-mode|) (non-persistent|) (admin-down|)) Syntax A.B.C.D Source IPv4 address. A.B.C.D Destination IPv4 address. X:X::X:X Source IPv6 address. X:X::X:X Destination IPv6 address. non-persistent Not a persistent session. admin-down Session admin down. demand-mode Demand mode session. mac-address Indicate the mac-address parameter.
mac-address Indicate the mac-address parameter. MAC Specify the actual destination MAC address. Command Mode Interface mode 30 © 2015 IP Infusion Inc. Proprietary Bidirectional Forwarding Commands Examples #configure terminal (config)#interface eth1 (config-if)##bfd session 1:1::1:1 1:1::1:1 non-persistent admin-down (config-if)#no bfd session 1.2.3.4 1.2.3.5 non-persistent admin-down (config-if)#exit #configure terminal (config)#interface eth1
#configure terminal (config)#interface eth1 (config-if)#bfd session data-link-oam mac-address 1:1::1:1 (config-if)#no bfd session data-link-oam mac-address 1:1::1:1 © 2015 IP Infusion Inc. Proprietary 31 Bidirectional Forwarding Commands bfd slow-timer Use this command to set a BFD slow timer interval. Use the no form of the command to reset the timer to default values. Command Syntax bfd slow-timer <1000-3000> no bfd slow-timer <1000-3000> Parameter
no bfd slow-timer <1000-3000> Parameter <1000-3000> Interval for the slow-timer in milliseconds Command Mode Configure mode Default Default slow-timer value is 2000 Example #configure terminal (config)#bfd slow-timer 1500 (config)# 32 © 2015 IP Infusion Inc. Proprietary Bidirectional Forwarding Commands debug bfd Use this command to enable debugging for BFD. Use the no form of the command to disable all debugging for BFD. Command Syntax debug bfd (all|)
Command Syntax debug bfd (all|) debug bfd (event|ipc-error|ipc-event|nsm|packet|session) no debug bfd (all|) no debug all no debug all bfd no debug bfd (event|ipc-error|ipc-event|nsm|packet|session) Parameters all Enable all debugging. event Enable BFD event debugging. ipc-error Enable BFD IPC-error debugging ipc-event Enable BFD IPC-event debugging. nsm Enable BFD NSM debugging. packet Enable BFD packet debugging. session Enable BFD session debugging. Command Mode
Command Mode Exec, Privileged Exec and Configure Mode Examples #debug bfd all #no debug bfd all #debug bfd event #debug bfd ipc-error #debug bfd ipc-event #debug bfd nsm #debug bfd packet #debug bfd session © 2015 IP Infusion Inc. Proprietary 33 Bidirectional Forwarding Commands key Use this command to manage, add or delete authentication keys in a key-chain. This command allows you to enter the keychain-key mode to set a password for the key. Command Syntax key <0-2147483647>
Command Syntax key <0-2147483647> no key <0-2147483647> Parameters <0-2147483647> Specify a key identifier. Default By default, BFD uses level-1-2 if there is no Level-2 instance nor a Level-1-2 instance. Otherwise, it uses level-1. Command Mode Keychain mode Examples The following example configures a key number 1 and shows the change to keychain-key command mode. #configure terminal (config)#key chain mychain (config-keychain)#key 1 (config-keychain-key)#
(config-keychain)#key 1 (config-keychain-key)# 34 © 2015 IP Infusion Inc. Proprietary Bidirectional Forwarding Commands key chain Use this command to enter the key chain management mode and to configure a key chain with a key chain name. This command allows you to enter the keychain mode to specify keys on this key chain. Command Syntax key chain WORD no key chain WORD Parameters WORD Specify the name of the key chain to manage. Command Mode Configure mode Examples
Command Mode Configure mode Examples The following example shows the creation of a key chain named mychain and the change to keychain mode: #configure terminal (config)#key chain mychain (config-keychain)# © 2015 IP Infusion Inc. Proprietary 35 Bidirectional Forwarding Commands send-lifetime Use this command to specify the time period during which the authentication key on a key chain can be sent. Use the no parameter with this command to negate this command. Command Syntax
Command Syntax send-lifetime HH:MM:SS <1-31> MONTH <1993-2035> HH:MM:SS <1-31> MONTH <1993-2035> send-lifetime HH:MM:SS <1-31> MONTH <1993-2035> HH:MM:SS MONTH <1-31> <1993-2035> send-lifetime HH:MM:SS MONTH <1-31> <1993-2035> HH:MM:SS <1-31> MONTH <1993-2035> send-lifetime HH:MM:SS MONTH <1-31> <1993-2035> HH:MM:SS MONTH <1-31> <1993-2035> send-lifetime HH:MM:SS <1-31> MONTH <1993-2035> infinite send-lifetime HH:MM:SS MONTH <1-31> <1993-2035> infinite
send-lifetime HH:MM:SS <1-31> MONTH <1993-2035> duration <1-2147483646> send-lifetime HH:MM:SS MONTH <1-31> <1993-2035> duration <1-2147483646> no send-lifetime Parameters HH:MM:SS Specify the start time of accept-lifetime in hours, minutes and seconds. <1-31> Specify the day of the month to start. MONTH Specify the month of the year to start as the first three letters of the month, for example, Jan. <1993-2035> Specify the year to start.
Jan. <1993-2035> Specify the year to start. HH:MM:SS Specify the end time of accept-lifetime in hours, minutes and seconds. <1-31> Specify the day of the month to end. MONTH Specify the month of the year to end as the first three letters of the month, for example, Jan. <1993-2035> Specify the year to end. duration Indicate the duration parameter. <1-2147483646> Specify the actual end time duration of a key in seconds. infinite Specify the end time to never expire. Command Mode Keychain-key mode
Command Mode Keychain-key mode Examples The following example shows the setting of send-lifetime for key 1 on the key chain named mychain: #configure terminal (config)#key chain mychain (config-keychain)#key 1 (config-keychain-key)#send-lifetime 03:03:01 Jan 3 2004 04:04:02 Dec 6 2006 36 © 2015 IP Infusion Inc. Proprietary Bidirectional Forwarding Commands show bfd Use this command to display information about the BFD process. Command Syntax show bfd Parameters None Command Mode
show bfd Parameters None Command Mode Exec mode and Privilege Exec mode Example The example below displays the command syntax and sample output from the command. #show bfd BFD ID: 00 Start Time:Fri May 1 09:55:06 2009 Number of Sessions: 1 Slow Timer: 1000 Image type: MONOLITHIC Echo Mode: Disabled Next Session Discriminator: 2 # © 2015 IP Infusion Inc. Proprietary 37 Bidirectional Forwarding Commands show bfd interface
show bfd interface Use this command to display details for an interface running BFD or for all interfaces configured for BFD. Command Syntax show bfd interface (ifindex <0-4294967295>|all|) Parameters all Display all interfaces. ifindex Display an interface index. <0-4294967295> Display an ID of an interface in this range. Command Mode Exec mode and Privilege Exec mode Example The example below displays the command syntax and sample output from the command. #show bfd interface all
#show bfd interface all Interface: lo ifindex: 1 state: UP Interface level configuration: NO ECHO, NO SLOW TMR Timers in Milliseconds Min Tx: 20 Min Rx: 20 Multiplier: 5 Interface: eth0 ifindex: 2 state: UP Interface level configuration: NO ECHO, NO SLOW TMR Timers in Milliseconds Min Tx: 20 Min Rx: 20 Multiplier: 5 Interface: eth1 ifindex: 3 state: DOWN Interface level configuration: NO ECHO, NO SLOW TMR Timers in Milliseconds Min Tx: 20 Min Rx: 20 Multiplier: 5
Min Tx: 20 Min Rx: 20 Multiplier: 5 Interface: sit0 ifindex: 4 state: DOWN Interface level configuration: NO ECHO, NO SLOW TMR Timers in Milliseconds Min Tx: 20 Min Rx: 20 Multiplier: 5 Interface: gre0 ifindex: 5 state: DOWN Interface level configuration: NO ECHO, NO SLOW TMR Timers in Milliseconds Min Tx: 20 Min Rx: 20 Multiplier: 5 38 © 2015 IP Infusion Inc. Proprietary Bidirectional Forwarding Commands show bfd session Use this command to display all BFD sessions. Command Syntax
Command Syntax show bfd session (detail|) Parameters detail Display session details. Command Mode Exec mode and Privilege Exec mode Example The example below displays the command syntax and sample output from the command using the detail parameter. #show bfd session detail Session Interface Index : 3 Session Index : 1 Lower Layer : IPv4 Version : 1 Session Type : Single Hop Session State : Down Local Discriminator : 1 Local Address : 19.19.19.2/32
Remote Discriminator : 0 Remote Address : 19.19.19.1/32 Local Port : 49152 Remote Port : 3784 Options : Diagnostics: None Timers in Milliseconds : Min Tx: 20 Min Rx: 20 Multiplier: 5 Neg Tx: 0 Neg Rx: 0 Neg detect mult: 0 Min echo Tx: 20 Min echo Rx: 10 Neg echo intrvl: 0 Storage type: 2 Sess down time: 00:00:00 Sess discontinue time : 00:00:00 Bfd GTSM Disabled Auth: Enabled | Disabled Auth-Type: Simple | (Keyed | Meticulous-keyed) MD5 | SHA1 Auth-Key-Id: <0-255> Counters values:
Auth-Key-Id: <0-255> Counters values: Pkt In : 0000000000000000 Pkt Out : 0000000000000011 Echo Out : 0000000000000000 IPv6 Echo Out : 0000000000000000 IPv6 Pkt In : 0000000000000000 IPv6 Pkt Out : 0000000000000000 UP Count : 0 UPTIME : 00:00:00 Protocol Client Info: BFD-> Client ID: 28 Flags: 4 ---------------------------------------------------------- Number of Sessions: 1 # © 2015 IP Infusion Inc. Proprietary 39 Bidirectional Forwarding Commands show bfd session A.B.C.D
show bfd session A.B.C.D Use this command to display information about an IPv4 BFD session neighbor. Command Syntax show bfd session A.B.C.D A.B.C.D (detail|) show bfd session A.B.C.D A.B.C.D <0-4294967295> (detail|) Parameters A.B.C.D Display the local IPv4 address. A.B.C.D Display the neighbor IPv4 address. <0-4294967295> Display the interface index of the address. detail Display detailed information. Command Mode Exec mode and Privilege Exec mode Example
Exec mode and Privilege Exec mode Example The example below displays the command syntax and sample output from the command. #show bfd session 10.1.1.66 10.1.1.67 3 Session Interface Index: 3 Session Index: 1 Lower Layer: IPv4 Single Hop Session State: Up Local Discriminator: 1 Remote Discriminator: 163 Local Address: 10.1.1.66/32 Remote Address: 10.1.1.67/32 Local Port: 49152 Remote Port: 3784 Timers in Milliseconds Min Tx: 1000 Min Rx: 1000 Multiplier: 4 UP Count: 1 UPTIME: 00:10:08
UP Count: 1 UPTIME: 00:10:08 40 © 2015 IP Infusion Inc. Proprietary Bidirectional Forwarding Commands show bfd session ipv6 Use this command to display information about an IPv6 BFD session neighbor. Command Syntax show bfd session ipv6 X:X::X:X X:X::X:X (detail|) show bfd session ipv6 X:X::X:X X:X::X:X <0-4294967295> (detail|) Parameters X:X::X:X Display the local IPv6 address. X:X::X:X Display the neighbor IPv6 address. <0-4294967295> Display the interface index of the address.
detail Display detailed information. Command Mode Exec mode and Privileged Exec mode Example The example below displays the command syntax and sample output from the command. #show bfd session 2001::1222 2001::1223 3 Session Interface Index : 3 Session Index: 1 Lower Layer: IPv6 Single Hop Session State : Up Local Discriminator : 1 Remote Discriminator: 163 Local Address : 2001::1222/128 Remote Address: 2001::1223/128 Local Port : 49152 Remote Port: 3784 Timers in Milliseconds
Timers in Milliseconds Min Tx: 1000 Min Rx: 1000 Multiplier: 4 UP Count: 1 UPTIME: 00:06:03 © 2015 IP Infusion Inc. Proprietary 41 Bidirectional Forwarding Commands show debugging bfd Use this command to display debugging information for BFD processes. Command Syntax show debugging bfd Parameters None Command Mode Exec mode and Privileged Exec mode Example The example below displays the command syntax and sample output from the command. #show debugging bfd BFD debugging status:
#show debugging bfd BFD debugging status: BFD events debugging is on BFD packet debugging is on BFD ipc-error debugging is on BFD ipc-event debugging is on BFD session debugging is on BFD nsm debugging is on # 42 © 2015 IP Infusion Inc. Proprietary Bidirectional Forwarding Commands snmp restart bfd Use this command to restart SNMP in Bidirectional Forwarding (BFD) Command Syntax snmp restart bfd Parameters None Command Mode Configure mode Examples #configure terminal (config)#snmp restart bfd
#configure terminal (config)#snmp restart bfd © 2015 IP Infusion Inc. Proprietary 43 Bidirectional Forwarding Commands 44 © 2015 IP Infusion Inc. Proprietary Protocol Commands for BFD CHAPTER 3 The chapter describes the commands used to manage BFD functionality for the OSPF, IS-IS and BGP protocol modules. It includes the following commands: • area virtual-link on page 46 • bfd all-interfaces on page 47 • debug bgp bfd on page 48 • debug isis bfd on page 49 • debug ospf bfd on page 50
• debug ospf bfd on page 50 • debug rip bfd on page 51 • ip ospf bfd on page 52 • isis bfd on page 53 • neighbor fall-over bfd (BGP) on page 54 • neighbor fall-over bfd (RIP) on page 55 © 2015 IP Infusion Inc. Proprietary 45 Protocol Commands for BFD area virtual-link Use this command to enable the BFD option for a specified virtual-link neighbor. Use the no form of the command to disable BFD on a virtual-link neighbor. Command Syntax
Command Syntax area (A.B.C.D|<0-4294967295>) virtual-link A.B.C.D {fall-over bfd} no area (A.B.C.D|<0-4294967295>) virtual-link A.B.C.D {fall-over bfd} Parameters A.B.C.D Indicate an area IP address <0-429467295> Indicate an area ID in integer format virtual-link Indicate a virtual link and its parameters A.B.C.D Indicate the IP address of the virtual link fall-over Indicate fall-over detection bfd Specify the Bidirectional Forwarding Detection (BFD) Command Mode Router mode Example
Command Mode Router mode Example #configure terminal (config)#router ospf (config-router)#area 1 virtual-link 192.168.0.1 fall-over bfd 46 © 2015 IP Infusion Inc. Proprietary Protocol Commands for BFD bfd all-interfaces Use this command to enable BFD for all neighbors maintained by an OSPF or RIP process, or an ISIS instance. Use the no form of the command to disable BFD. Note: This command does not apply BFD to virtual-link neighbors. Command Syntax bfd all-interfaces no bfd all-interfaces
bfd all-interfaces no bfd all-interfaces Parameters None Command Mode Configure router mode Example #configure terminal (config)#router ospf (config-router)#bfd all-interfaces #configure terminal (config)#router isis (config-router)#bfd all-interfaces #configure terminal (config)#router rip (config-router)#bfd all-interfaces © 2015 IP Infusion Inc. Proprietary 47 Protocol Commands for BFD debug bgp bfd Use this command to debug BFD processes in BGP.
Use this command to debug BFD processes in BGP. Use the no form of the command to stop debugging. Command Syntax debug bgp bfd no bgp debug bfd undebug bgp bfd Parameters None Command Mode Configure mode Example #configure terminal (config)#debug bgp bfd 48 © 2015 IP Infusion Inc. Proprietary Protocol Commands for BFD debug isis bfd Use this command to debug BFD processes in IS-IS. Use the no form of the command to stop debugging. Command Syntax debug isis bfd no debug isis bfd undebug isis bfd
debug isis bfd no debug isis bfd undebug isis bfd Parameters None Command Mode Configure mode Example #configure terminal (config)#debug isis bfd © 2015 IP Infusion Inc. Proprietary 49 Protocol Commands for BFD debug ospf bfd Use this command to debug BFD processes in OSPF. Use the no form of the command to stop debugging. Command Syntax debug ospf bfd no debug ospf bfd undebug ospf bfd Parameters None Command Mode Configure mode Example #configure terminal (config)#debug ospf bfd
#configure terminal (config)#debug ospf bfd 50 © 2015 IP Infusion Inc. Proprietary Protocol Commands for BFD debug rip bfd Use this command to debug BFD processes in RIP. Use the no form of the command to stop debugging. Command Syntax debug rip bfd no debug rip bfd Parameters None Command Mode Configure mode Example #configure terminal (config)#debug rip bfd © 2015 IP Infusion Inc. Proprietary 51 Protocol Commands for BFD ip ospf bfd
Protocol Commands for BFD ip ospf bfd Use this command to enable the BFD option for OSPF neighbors on an interface. Use the no form of the command to disable the BFD option for OSPF neighbors on an interface. Command Syntax ip ospf bfd (disable|) no ip ospf bfd (disable|) Parameter disable Disable the BFD option for neighbors on an interface Command Mode Interface mode Example #configure terminal (config)#interface eth1 (config-if)#ip ospf bfd 52 © 2015 IP Infusion Inc. Proprietary
52 © 2015 IP Infusion Inc. Proprietary Protocol Commands for BFD isis bfd Use this command to enable the BFD option for IS-IS neighbors on an interface. Use the no form of the command to disable the BFD option for neighbors on an interface. Command Syntax isis bfd (disable|) no isis bfd (disable|) Parameter disable Used to disable the BFD option for neighbors on an interface Command Mode Interface mode Example #configure terminal (config)#interface eth1 (config-if)#isis bfd disable
(config-if)#isis bfd disable © 2015 IP Infusion Inc. Proprietary 53 Protocol Commands for BFD neighbor fall-over bfd (BGP) Use this command to enable the BFD option on an IPv4 or IPv6 BGP peer. Use the no form of the command to disable the BFD option on a BGP peer. Command Syntax neighbor (A.B.C.D|X:X::X:X) fall-over bfd (multihop|) no neighbor (A.B.C.D|X:X::X:X) fall-over bfd (multihop|) Parameters A.B.C.D Peer address in an IPv4 format X:X::X:X Peer address in an IPv6 format
X:X::X:X Peer address in an IPv6 format multihop Enable multihop Command Mode Router mode Example (config)#router bgp 10 (config-router)#neighbor 10.10.0.1 fall-over bfd 54 © 2015 IP Infusion Inc. Proprietary Protocol Commands for BFD neighbor fall-over bfd (RIP) Use this command to enable the BFD option on an IPv4 RIP peer. Use the no form of the command to disable the BFD option on an IPv4 RIP peer. Command Syntax neighbor A.B.C.D fall-over bfd no neighbor A.B.C.D fall-over bfd Parameters
no neighbor A.B.C.D fall-over bfd Parameters A.B.C.D Peer address in an IPv4 format Command Mode Router mode Example (config)#router rip (config-router)#neighbor 10.10.2.9 fall-over bfd © 2015 IP Infusion Inc. Proprietary 55 Protocol Commands for BFD 56 © 2015 IP Infusion Inc. Proprietary BFD Static Route Commands CHAPTER 4 Bidirectional Forwarding Detection (BFD) support for static routes can be configured on a static route basis, interface basis, or on a global level:
basis, or on a global level: • When BFD is configured for an IPv4 or IPv6 static route, BFD provides the next-hop reachability detection for the given static route. • When BFD is configured for an interface, BFD provides the data plane next-hop reachability information for any IPv4 or IPv6 static route configured through the given interface. • When BFD is configured globally, BFD is applied on all interfaces with a single command. In all these cases, the
BFD session update for NSM governs the state of the static routes. This chapter includes the following commands: • ip bfd static all-interfaces on page 58 • ip static fall-over bfd on page 59 • ip static bfd on page 60 • ipv6 static all-interfaces on page 61 • ipv6 static fall-over bfd on page 62 • ipv6 static bfd on page 63 © 2015 IP Infusion Inc. Proprietary 57 BFD Static Route Commands ip bfd static all-interfaces
ip bfd static all-interfaces Use this command to enable BFD support for IPv4 static routes configured on all interfaces. Use the no option with this command to disable BFD support for IPv4 static routes configured on all interfaces. Command Syntax ip bfd static all-interfaces no ip bfd static all-interfaces Parameters None Command Mode Configure mode Example #configure terminal (config)#ip bfd static all-interfaces 58 © 2015 IP Infusion Inc. Proprietary BFD Static Route Commands
BFD Static Route Commands ip static fall-over bfd Use this command to enable or disable BFD support for a specific IPv4 static route. Use the no form of the command to disable the BFD support for a specific IPv4 static route. Command Syntax ip static A.B.C.D/M A.B.C.D fall-over bfd (disable|) no ip static A.B.C.D/M A.B.C.D fall-over bfd (disable|) Parameters A.B.C.D/M The IPv4 destination prefix and mask length. A.B.C.D The IPv4 gateway address. disable Specify to disable BFD. Command Mode
disable Specify to disable BFD. Command Mode Configure mode Example #configure terminal (config)#ip static 4.4.4.4/32 20.0.10.82 fall-over bfd © 2015 IP Infusion Inc. Proprietary 59 BFD Static Route Commands ip static bfd Use this command to enable or disable BFD support for IPv4 static route(s) configured on an interface. Use the no option with this command to reset BFD support for IPv4 static route(s) configured on an interface. Command Syntax ip static bfd (disable|)
Command Syntax ip static bfd (disable|) no ip static bfd (disable|) Parameters None Command Mode Interface mode Default By default, BFD static route support is disabled at all levels. Example #configure terminal (config)#interface eth1 (config-if)#ip static bfd disable (config)#interface eth1 (config-if)#ip static bfd 60 © 2015 IP Infusion Inc. Proprietary BFD Static Route Commands ipv6 static all-interfaces
ipv6 static all-interfaces Use this command to enable or disable BFD support for IPv6 static routes configured on all interfaces. Use the no option with this command to disable BFD support for IPv6 static routes configured on all interfaces. Command Syntax ipv6 bfd static all-interfaces no ipv6 bfd static all-interfaces Parameters None Command Mode Configure mode Example #configure terminal (config)#ipv6 bfd static all-interfaces © 2015 IP Infusion Inc. Proprietary 61 BFD Static Route Commands
BFD Static Route Commands ipv6 static fall-over bfd Use this command to enable or disable BFD support for a specific IPv6 static route. Use the no option with this command to disable BFD support for a specific IPv6 static route. Command Syntax ipv6 static X:X::X:X/M X:X::X:X fall-over bfd (disable|) no ipv6 static X:X::X:X/M X:X::X:X fall-over bfd (disable|) Parameters X:X::X:X/M The IPv6 destination prefix and mask length. X:X::X:X The IPv6 gateway address. disable Specify to disable BFD.
disable Specify to disable BFD. Command Mode Configure mode Examples #configure terminal (config)#ipv6 static 2345:6::0:1/28 2345:6::0:2 fall-over bfd #configure terminal (config)#ipv6 static 2345:12::1/64 2345:12::2 fall-over bfd disable 62 © 2015 IP Infusion Inc. Proprietary BFD Static Route Commands ipv6 static bfd Use this command to disable BFD support for IPv6 static route(s) configured on an interface.
Use the no option with this command to reset BFD support for IPv6 static route(s) configured on an interface. Command Syntax ipv6 static bfd (disable|) no ipv6 static bfd (disable|) Parameters None Command Mode Interface mode Example #configure terminal (config)#interface eth1 (config-if)#ipv6 static bfd disable © 2015 IP Infusion Inc. Proprietary 63 BFD Static Route Commands 64 © 2015 IP Infusion Inc. Proprietary Index B | 10 A.B.C.D 11 begin modifier 13 A.B.C.D/M 11 BFD commands AA:NN 11
BFD commands AA:NN 11 bfd echo 19, 20, 22, 23 BGP community value 11 bfd echo interval 21 braces 10 bfd interval 24 conventions 10 bfd multihop-peer A.B.C.D 27 curly brackets 10 bfd slow-timer 32 HH:MM:SS 11 debug bfd all 33 IFNAME 11 show bfd 37 interface name 11 show bfd interface detail 38 IPv4 address 11 show bfd session 39 IPv6 address 11 show bfd session A.B.C.D 40 LINE 11 show bfd session ipv6 41 lowercase 10 show debugging bfd 42 MAC address 11
show debugging bfd 42 MAC address 11 BFD protocol commands 45 monospaced font 10 debug nsm bfd 48 numeric range 11 debug ospf bfd 50, 51 parentheses 10 IS-IS period 10 isis bfd 53 square brackets 10 neighbor fall-over bfd 37 time 11 OSPFv2 uppercase 10 bfd all-interfaces 46 variable placeholders 11 ip ospf bfd 52 vertical bars 10 BFD static route commands WORD 11 ip static bfd disable 60 X:X::X:X 11 BGP community value X:X::X:X/M 11 command syntax 11 XX:XX:XX:XX:XX:XX 11
command syntax 11 XX:XX:XX:XX:XX:XX 11 Bidirectional Forwarding Commands 17 configure mode 15 braces curly brackets command syntax 10 command syntax 10 C E command abbreviations 9 exec command mode 15 command completion 8 command line I errors 9 help 7 IFNAME 11 keyboard operations 12 interface mode 15 starting 7 ip static bfd disable 60 command modes 15 IPv4 address configure 15 command syntax 11 exec 15 IPv6 address interface 15 command syntax 11 privileged exec 15 IS-IS commands
privileged exec 15 IS-IS commands router 15 key 36 command negation 9 key chain 35 command syntax () 10 {} 10 © 2015 IP Infusion Inc. Proprietary 65 Index K R key chain 35 router mode 15 key command 36 S L show commands 13 LINE 11 exclude modifier 14 include modifier 14 M redirect modifier 15 square brackets MAC address command syntax 10 command syntax 11 T N time neighbor fall-over bfd 37 command syntax 11 P V parentheses vertical bars command syntax 10 command syntax 10 period
command syntax 10 command syntax 10 period command syntax 10 W privileged exec mode 15 WORD 11 66 © 2015 IP Infusion Inc. Proprietary
ZebOS-XP® Network Platform Version 1.4 Extended Performance Bidirectional Forwarding Detection Configuration Guide December 2015 IP Infusion Inc. Proprietary © 2015 IP Infusion Inc. All Rights Reserved. This documentation is subject to change without notice. The software described in this document and this documentation are furnished under a license agreement or nondisclosure agreement. The software and documentation may be used or
copied only in accordance with the terms of the applicable agreement. No part of this publication may be reproduced, stored in a retrieval system, or transmitted in any form or any means electronic or mechanical, including photocopying and recording for any purpose other than the purchaser's internal use without the written permission of IP Infusion Inc. IP Infusion Inc. 3965 Freedom Circle, Suite 200 Santa Clara, CA 95054 +1 408-400-1900 http://www.ipinfusion.com/
+1 408-400-1900 http://www.ipinfusion.com/ For support, questions, or comments via E-mail, contact: support@ipinfusion.com Trademarks: IP Infusion, OcNOS, VirNOS, ZebM, ZebOS, and ZebOS-XP are trademarks or registered trademarks of IP Infusion. All other trademarks, service marks, registered trademarks, or registered service marks are the property of their respective owners. ii IP Infusion Inc. Proprietary Contents
owners. ii IP Infusion Inc. Proprietary Contents Preface . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . v Audience . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .v Conventions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .v
Contents . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .v Related Documents. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .v Chapter Organization. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . vi
Support . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . vi Comments. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . vi CHAPTER 1 Base BFD Configuration . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 9
Topology. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .9 CHAPTER 2 BFD Protocol Configurations. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 11 OSPF—BFD Single-Hop Session . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .11 Topology. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .11
OSPF—BFD Multi-Hop Session . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .13 Topology. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .13 OSPFv3—BFD Single-Hop Session . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .14
Topology. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .14 OSPFv3—BFD Multi-Hop Sessions. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .18 Topology. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .18
BFD Configuration in IS-IS . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .20 Topology. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .20 BFD Configuration in BGP . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .21
Topology. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .21 BFD Configuration in RIP . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .22 Topology. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .22
CHAPTER 3 BFD Static Route Configuration . . . . . . . . . . . . . . . . . . . . . . . . . . . . 25 Topology . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .25 CHAPTER 4 BFD for MPLS LSPs . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 27 Overview . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .27
Configure BFD for LDP LSP. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .27 Configure BFD for RSVP LSP . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .29 Configure BFD for Static LSP. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .32 Configure BFD for Static LSP with Explicit Null. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .34
Disable BFD for MPLS LSP. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .36 Remove BFD for MPLS LSP . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .36 CHAPTER 5 BFD Authentication . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 37 Overview . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .37
Enabling BFD Authentication. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .37 Topology. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .37 © 2015 IP Infusion Inc. Proprietary iii Contents Enabling BFD Authentication for Single-hop for IPv4, Using Key-ID . . . . . . . . . . . . . . . . . 41
Topology. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 41 Enabling BFD Authentication for Multihop for IPv6, Using Key-chain . . . . . . . . . . . . . . . . 43 Enabling BFD Authentication for Multihop for IPv6, Using Key-ID. . . . . . . . . . . . . . . . . . . 47 Configuring Active Key for Enabling BFD Authentication for Multihop for IPv6, Using Key-
chain. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 49 iv © 2015 IP Infusion Inc. Proprietary Preface This guide describes how to configure Bidirectional Forwarding Detection (BFD) in ZebOS-XP. Audience This guide is intended for network administrators and other engineering professionals who configure BFD. Conventions Table P-1 shows the conventions used in this guide. Table P-1: Conventions
Table P-1: Conventions Convention Description Italics Emphasized terms; titles of books Note: Special instructions, suggestions, or warnings monospaced type Code elements such as commands, functions, parameters, files, and directories Contents This document contains these chapters and appendices: • Chapter 1, Base BFD Configuration • Chapter 2, BFD Protocol Configurations • Chapter 3, BFD Static Route Configuration • Chapter 4, BFD for MPLS LSPs • Chapter 5, BFD Authentication Related Documents
• Chapter 5, BFD Authentication Related Documents Use this guide with the Bidirectional Forwarding Detection Command Reference for details about the commands used in the configurations. Note: All ZebOS-XP technical manuals are available to licensed customers at http://www.ipinfusion.com/support/ document_list. © 2015 IP Infusion Inc. Proprietary v Preface Chapter Organization The chapters in this guide are organized into these major sections: • An overview that explains a configuration in words
• Topology with a diagram that shows the devices and connections used in the configuration • Configuration steps in a table for each device where the left-hand side shows the commands you enter and the right-hand side explains the actions that the commands perform • Validation which shows commands and their output that verify the configuration Support For support-related questions, contact support@ipinfusion.com. Comments
Comments If you have comments, or need to report a problem with the content, contact techpubs@ipinfusion.com. vi © 2015 IP Infusion Inc. Proprietary Base BFD Configuration CHAPTER 1 This chapter provides the steps for configuring the base Bidirectional Forwarding Detection (BFD) setup. Topology Figure 1-1: Basic Topology of Three Routers BFD Echo Function Router#configure terminal Enter the Configure mode. Router(config)#bfd echo Enable BFD echo mode. BFD Slow Timer
BFD Slow Timer Router#configure terminal Enter the Configure mode. Router(config)#bfd slow-timer 1000 Configure BFD slow-timer in milliseconds. BFD Multihop Peer Timer Router#configure terminal Enter Configure mode. Router(config)#bfd multihop-peer 20.1.1.3 Configure BFD multihop-peer timer and reception interval 100 minrx 100 multiplier 3 intervals in milliseconds and the Hello multiplier. BFD Single-hop Session Timer Router#configure terminal Enter the Configure mode.
Router(config)#interface eth1 Enter the Interface mode. Router(config-if)#bfd interval 100 minrx 100 Configure BFD single-hop sessions timer and reception multiplier 4 interval in millisecond and the Hello multiplier. BFD Echo Interval Router#configure terminal Enter the Configure mode. Router(config)#interface eth1 Enter the Interface mode. Router(config-if)#bfd echo interval 100 Configure BFD echo interval in milliseconds. © 2015 IP Infusion Inc. Proprietary 9 Base BFD Configuration
Base BFD Configuration 10 © 2015 IP Infusion Inc. Proprietary BFD Protocol Configurations CHAPTER 2 This chapter describes the BFD protocol configurations. OSPF—BFD Single-Hop Session This section provides the steps for configuring BFD for Single-Hop OSPF. Topology Figure 2-1: Single-Hop OSPF Topology Configuration for R1 R1#configure terminal Enter the Configure mode. R1(config)#router ospf 100 Enter the Router mode for OSPF.
R1(config-router)#network 10.1.1.0/24 area 1 Advertise network 10.1.1.0/24 in OSPF area 1. R1(config-router)#network 1.1.1.1/32 area 1 Advertise loopback network 1.1.1.1/32 in OSPF area 1. R1(config-router)#bfd all-interfaces Enable BFD for all neighbors. Configuration for R2 R2#configure terminal Enter the Configure mode. R2(config)#router ospf 100 Enter the Router mode for OSPF. R2(config-router)#network 10.1.1.0/24 area 1 Advertise network 10.1.1.0/24 in OSPF area 1.
R2(config-router)#network 20.1.1.0/24 area 1 Advertise network 20.1.1.0/24 in OSPF area 1. R2(config-router)#network 2.2.2.2/32 area 1 Advertise loopback network 2.2.2.2/32 in OSPF area 1. R2(config-router)#bfd all-interfaces Enable BFD for all neighbors. Configuration for R3 R3#configure terminal Enter the Configure mode. R3(config)#router ospf 100 Enter the Router mode for OSPF. R3(config-router)#network 20.1.1.0/24 area 1 Advertise network 20.1.1.0/24 in OSPF area 1.
© 2015 IP Infusion Inc. Proprietary 11 BFD Protocol Configurations R3(config-router)#network 3.3.3.3/32 area 1 Advertise loopback network 3.3.3.3/32 in OSPF area 1. R3(config-router)#bfd all-interfaces Enable BFD for all neighbors Validation The example that follows is the output of the command: R2#show bfd session Session Interface Index : 3 Session Index: 1 Lower Layer: IPv4 Single Hop Session State : Up Local Discriminator : 1 Remote Discriminator: 1
Local Discriminator : 1 Remote Discriminator: 1 Local Address : 10.1.1.67/32 Remote Address: 10.1.1.66/32 Local Port : 49152 Remote Port: 3784 Timers in Milliseconds Min Tx: 20 Min Rx: 20 Multiplier: 5 UP Count: 1 UPTIME: 00:14:12 Session Interface Index : 4 Session Index: 4 Lower Layer: IPv4 Single Hop Session State : Up Local Discriminator : 4 Remote Discriminator: 4 Local Address : 20.1.1.67/32 Remote Address: 20.1.1.68/32 Local Port : 49155 Remote Port: 3784 Timers in Milliseconds
Timers in Milliseconds Min Tx: 20 Min Rx: 20 Multiplier: 5 UP Count: 1 UPTIME: 00:01:12 Number of Sessions: 2 12 © 2015 IP Infusion Inc. Proprietary BFD Protocol Configurations OSPF—BFD Multi-Hop Session This section provides the steps for configuring BFD for OSPF multi-hop sessions. Topology Figure 2-2: Multi-hop OSPFv3 Topology Configuration for R1 R1#configure terminal Enter the Configure mode. R1(config)#router ospf 100 Enter the Router mode for OSPF.
R1(config-router)#network 10.1.1.0/24 area 1 Advertise network 20.1.1.0/24 in OSPF area 1. R1(config-router)#network 1.1.1.1/32 area 1 Advertise loopback network 1.1.1.1/32 in OSPF area 1. R1(config-router)#network 30.1.1.0/24 area 0 Advertise network 30.1.1.0/24 in OSPF area 0. R1(config-router)#area 1 virtual-link Create a virtual link to R3 with BFD. 3.3.3.3 fall-over bfd Configuration for R2 R2#configure terminal Enter the Configure mode
R2#configure terminal Enter the Configure mode R2(config)#router ospf 100 Enter the Router mode for OSPF. R2(config-router)#network 10.1.1.0/24 area 1 Advertise network 10.1.1.0/24 in OSPF area 1. R2(config-router)#network 20.1.1.0/24 area 1 Advertise network 20.1.1.0/24 in OSPF area 1. R2(config-router)#network 2.2.2.2/32 area 1 Advertise loopback network 2.2.2.2/32 in OSPF area 1. © 2015 IP Infusion Inc. Proprietary 13 BFD Protocol Configurations Configuration for R3
BFD Protocol Configurations Configuration for R3 R3#configure terminal Enter the Configure mode. R3(config)#router ospf 100 Enter the Router mode for OSPF. R3(config-router)#network 20.1.1.0/24 area 1 Advertise network 20.1.1.0/24 in OSPF area 1. R3(config-router)#network 3.3.3.3/32 area 1 Advertise loopback network 3.3.3.3/32 in OSPF area 1. R3(config-router)#area 1 virtual-link Create a virtual link to R1 with BFD. 1.1.1.1 fall-over bfd Validation
1.1.1.1 fall-over bfd Validation The example that follows is the output of the command: R1#show bfd session Session Interface Index : 0 Session Index: 2 Lower Layer: IPv4 Multihop Arbit Path Session State : Up Local Discriminator : 2 Remote Discriminator: 1 Local Address : 10.1.1.66/32 Remote Address: 20.1.1.68/32 Local Port : 49153 Remote Port: 4784 Min Tx: 2 Min Rx: 20 Multiplier: 5 UP Count: 1 UPTIME: 00:03:58 Number of Sessions: 1 OSPFv3—BFD Single-Hop Session
OSPFv3—BFD Single-Hop Session This section provides the steps for configuring BFD for single-hop OSPFv3. Topology Figure 2-3: Single-Hop OSPFv3 Topology 14 © 2015 IP Infusion Inc. Proprietary BFD Protocol Configurations Configuration for R1 R1#configure terminal Enter the Configure mode. R1(config)#interface eth1 Enter the Interface mode for eth1. R1(config-if)#ipv6 address 2000::1/64 Configure IPv6 address for the interface eth1.
R1(config-if)#ipv6 router ospf area 0 Enable OSPFv3 on the interface in area 0. R1(config-if)#exit Exit from the Interface mode. R1(config)#router ipv6 ospf 100 Enter the Router mode for OSPFv3. R1(config-router)#router-id 1.1.1.1 Configure OSPFv3 Router-ID. R1(config-router)#bfd all-interfaces Enable BFD on all OSPFv3 enabled interfaces. R1(config-router)#exit Exit from the Router mode. Configuration for R2 R2#configure terminal Enter the Configure mode.
R2#configure terminal Enter the Configure mode. R2(config)#interface eth1 Enter the Interface mode eth1. R2(config-if)#ipv6 address 2000::2/64 Configure IPv6 address for the interface eth1. R2(config-if)#ipv6 router ospf area 0 Enable OSPFv3 on the interface in area 0. R2(config-if)#exit Exit from the Interface mode. R2(config)#interface eth2 Enter the Interface mode for eth2. R2(config-if)#ipv6 address 3000::2/64 Configure IPv6 address for the interface eth2.
R2(config-if)#ipv6 router ospf area 0 Enable OSPFv3 on the interface in area 0. R2(config-if)#exit Exit from the Interface mode. R2(config)#router ipv6 ospf 100 Enter the Router mode for OSPFv3. R2(config-router)#router-id 2.2.2.2 Configure OSPFv3 Router-ID. R2(config-router)#bfd all-interfaces Enable BFD on all OSPFv3 enabled interfaces. R2(config-router)#exit Exit from the Router mode. Configuration for R3 R3#configure terminal Enter the Configure mode.
R3#configure terminal Enter the Configure mode. R3(config)#interface eth1 Enter the Interface mode for eth1. R3(config-if)#ipv6 address 3000::1/64 Configure IPv6 address for the interface eth1. R3(config-if)#ipv6 router ospf area 0 Enable OSPFv3 on the interface in area 0. R3(config-if)#exit Exit from the Interface mode. R3(config)#router ipv6 ospf 100 Enter the Router mode for OSPFv3. R3(config-router)#router-id 3.3.3.3 Configure OSPFv3 Router-ID.
R3(config-router)#bfd all-interfaces Enable BFD on all OSPFv3 enabled interfaces. R3(config-router)#exit Exit from the Router mode. © 2015 IP Infusion Inc. Proprietary 15 BFD Protocol Configurations Validation This section provides the output of show commands used to confirm the configurations for BFD for single-hop OSPFv3. R2#show bfd session Sess-Idx Remote-Disc Lower-Layer Sess-Type Sess-State UP-Time Remote-Addr 20 12 IPv6 Single-Hop Up 00:00:33 fe80::5054:ff:fe31:3233/128
fe80::5054:ff:fe31:3233/128 21 1 IPv6 Single-Hop Up 00:00:26 fe80::7074:ff:fe72:7374/128 Number of Sessions: 2 R2#show bfd session detail ====================================================== Session Interface Index : 3 Session Index : 10 Lower Layer : IPv6 Version : 1 Session Type : Single Hop Session State : Up Local Discriminator : 10 Local Address : fe80::5054:ff:fe31:3233/128 Remote Discriminator : 12 Remote Address : fe80::7074:ff:fe72:7374/128 Local Port : 49161 Remote Port : 13784
Local Port : 49161 Remote Port : 13784 Options : Diagnostics : None Timers in Milliseconds : Min Tx: 1000 Min Rx: 1000 Multiplier: 2 Neg Tx: 1000 Neg Rx: 1000 Neg detect mult: 2 Min echo Tx: 20 Min echo Rx: 10 Neg echo intrvl: 0 Storage type : 2 Sess down time : 00:00:00 Sess discontinue time : 00:00:00 Bfd GTSM Disabled Bfd Authentication Disabled Counters values: Pkt In : 0000000000000000 Pkt Out : 0000000000000000 Echo Out : 0000000000000000 IPv6 Echo Out : 0000000000000000
IPv6 Pkt In : 0000000000000494 IPv6 Pkt Out : 00000000000004e3 UP Count : 4 UPTIME : 00:15:09 Protocol Client Info: OSPF6-> Client ID: 5 Flags: 4 ---------------------------------------------------------- Session Interface Index : 3 Session Index : 19 Lower Layer : IPv4 Version : 1 Session Type : Single Hop Session State : Up Local Discriminator : 19 Local Address : 2.2.2.1/32 Remote Discriminator : 13 Remote Address : 2.2.2.2/32 Local Port : 49170 Remote Port : 3784
Local Port : 49170 Remote Port : 3784 16 © 2015 IP Infusion Inc. Proprietary BFD Protocol Configurations Options : Diagnostics : None Timers in Milliseconds : Min Tx: 1000 Min Rx: 1000 Multiplier: 2 Neg Tx: 1000 Neg Rx: 1000 Neg detect mult: 2 Min echo Tx: 20 Min echo Rx: 10 Neg echo intrvl: 0 Storage type : 2 Sess down time : 00:00:00 Sess discontinue time : 00:00:00 Bfd GTSM Disabled Bfd Authentication Disabled Counters values: Pkt In : 000000000000006f Pkt Out : 000000000000006c
Echo Out : 0000000000000000 IPv6 Echo Out : 0000000000000000 IPv6 Pkt In : 0000000000000000 IPv6 Pkt Out : 0000000000000000 UP Count : 1 UPTIME : 00:01:36 Protocol Client Info: RIP-> Client ID: 2 Flags: 4 ---------------------------------------------------------- Number of Sessions: 2 © 2015 IP Infusion Inc. Proprietary 17 BFD Protocol Configurations OSPFv3—BFD Multi-Hop Sessions This section provides the steps for configuring BFD for OSPFv3 multi-hop sessions. Topology
Topology Figure 2-4: Multi-Hop OSPFv3 Topology Configuration for R1 R1#configure terminal Enter the Configure mode. R1(config)#interface eth2 Enter the Interface mode eth2. R1(config-if)#ipv6 address 1000::1/64 Configure IPv6 address for the interface eth2. R1(config-if)#ipv6 router ospf area 0 Enable OSPFv3 on the interface in area 0. R1(config-if)#exit Exit from the Interface mode. R1(config)#interface eth1 Enter the Interface mode for eth1.
R1(config-if)#ipv6 address 2000::1/64 Configure IPv6 address for the interface eth1. R1(config-if)#ipv6 router ospf area 1 Enable OSPFv3 on the interface in area 1. R1(config-if)#exit Exit from the Interface mode. R1(config)#router ipv6 ospf 100 Enter the Router mode for OSPFv3. R1(config-router)#router-id 1.1.1.1 Configure OSPFv3 Router-ID. R1(config-router)#area 1 virtual-link Create an OSPFv3 virtual-link to R2 with BFD. 2.2.2.2 fall-over bfd R1(config-router)#exit Exit from the Router mode.
R1(config-router)#exit Exit from the Router mode. Configuration for R2 R2#configure terminal Enter the Configure mode. R2(config)#interface eth1 Enter the Interface mode eth1. R2(config-if)#ipv6 address 2000::2/64 Configure IPv6 address for the interface eth1. R2(config-if)#ipv6 router ospf area 1 Enable OSPFv3 on the interface in area 1. R2(config-if)#exit Exit from the Interface mode. R2(config)#interface eth2 Enter the Interface mode for eth2.
R2(config-if)#ipv6 address 3000::2/64 Configure IPv6 address for the interface eth2. R2(config-if)#ipv6 router ospf area 2 Enable OSPFv3 on the interface in area 2. R2(config-if)#exit Exit from the Interface mode. 18 © 2015 IP Infusion Inc. Proprietary BFD Protocol Configurations R2(config)#router ipv6 ospf 100 Enter the Router mode for OSPFv3. R2(config-router)#router-id 2.2.2.2 Configure OSPFv3 Router-ID. R2(config-router)#area 1 virtual-link Create an OSPFv3 virtual-link to R1 with BFD.
1.1.1.1 fall-over bfd R2(config-router)#exit Exit from the Router mode. Configuration for R3 R3#configure terminal Enter the Configure mode. R3(config)#interface eth1 Enter the Interface mode for eth1. R3(config-if)#ipv6 address 3000::1/64 Configure IPv6 address for the interface eth1. R3(config-if)#ipv6 router ospf area 2 Enable OSPFv3 on the interface in area 2. R3(config-if)#exit Exit from the Interface mode. R3(config)#router ipv6 ospf 100 Enter the Router mode for OSPFv3.
R3(config-router)#router-id 3.3.3.3 Configure OSPFv3 Router-ID. R3(config-router)#exit Exit from the Router mode. Validation This section provides the output of show commands used to confirm the configurations for BFD for OSPFv3 multi-hop sessions. R3#show bfd session Sess-Idx Remote-Disc Lower-Layer Sess-Type Sess-State UP-Time Remote-Addr 14 24 IPv6 Multi-Hop Up 00:01:14 2000::2/128 Number of Sessions: 1 R3#show bfd session detail ======================================================
Session Interface Index : 3 Session Index : 10 Lower Layer : IPv6 Version : 1 Session Type : Multi Hop Session State : Up Local Discriminator : 10 Local Address : 2000::1/128 Remote Discriminator : 12 Remote Address : 2000::2/128 Local Port : 49161 Remote Port : 13784 Options : Diagnostics : None Timers in Milliseconds : Min Tx: 1000 Min Rx: 1000 Multiplier: 2 Neg Tx: 1000 Neg Rx: 1000 Neg detect mult: 2 Min echo Tx: 20 Min echo Rx: 10 Neg echo intrvl: 0 Storage type : 2
Storage type : 2 Sess down time : 00:00:00 Sess discontinue time : 00:00:00 Bfd GTSM Disabled © 2015 IP Infusion Inc. Proprietary 19 BFD Protocol Configurations Bfd Authentication Disabled Counters values: Pkt In : 0000000000000000 Pkt Out : 0000000000000000 Echo Out : 0000000000000000 IPv6 Echo Out : 0000000000000000 IPv6 Pkt In : 0000000000000494 IPv6 Pkt Out : 00000000000004e3 UP Count : 4 UPTIME : 00:15:09 Protocol Client Info: OSPF6-> Client ID: 5 Flags: 4 BFD Configuration in IS-IS
BFD Configuration in IS-IS This section provides the steps for configuring BFD for the IS-IS protocol. Topology Figure 2-5: Basic Topology for BFD-ISIS Configuration for R1 R1#configure terminal Enter the Configure mode. R1(config)#router isis Enter the Router mode for IS-IS. R1(config-router)#net 10.0000.0000.0001.00 Advertise network 10.0000.0000.0001.00 in IS-IS. R1(config-router)#bfd all-interface Enable BFD for all neighbors. Configuration for R2
Configuration for R2 R2#configure terminal Enter the Configure mode. R2(config)#router isis Enter the Router mode for IS-IS. R2(config-router)#net 10.0000.0000.0002.00 Advertise network 10.0000.0000.0001.00 in IS-IS. R2(config-router)#bfd all-interface Enable BFD for all neighbors. 20 © 2015 IP Infusion Inc. Proprietary BFD Protocol Configurations BFD Configuration in BGP This section provides the steps for configuring BFD for the BGP protocol. Topology Figure 2-6: Basic Topology for BFD in BGP
Figure 2-6: Basic Topology for BFD in BGP Configuration for R1 R1#configure terminal Enter the Configure mode. R1(config)#router bgp 100 Enter the Router mode for BGP. R1(config-router)#neighbor 3.3.3.3 remote-as Add the neighbor 3.3.3.3/32 to remote-as 100 100 R1(config-router)#neighbor 3.3.3.3 fall-over Enable the BFD option for the neighbor. bfd multihop Configuration for R2 R2#configure terminal Enter the Configure mode. R2(config)#router bgp 100 Enter the Router mode for BGP.
R2(config-router)#neighbor 2.2.2.2 remote-as Add the neighbor 2.2.2.2 to remote-as 100. 100 R2(config-router)#neighbor 2.2.2.2 fall-over Enable the BFD option for the neighbor. bfd multihop Configuration for R3 R3#configure terminal Enter the Configure mode. R3(config)#router bgp 100 Enter the Router mode for BGP. R3(config)#router bgp 100 Configure BGP. R3(config-router)#neighbor 1.1.1.1 remote-as Add the neighbor 1.1.1.1 to remote-as 100. 100
100 R3(config-router)#neighbor 1.1.1.1 fall-over Enable the BFD option for the neighbor. bfd multihop © 2015 IP Infusion Inc. Proprietary 21 BFD Protocol Configurations BFD Configuration in RIP This section provides the steps for configuring BFD for the RIP protocol. Topology Figure 2-7: Basic Topology for BFD in RIP Configuration for R1 R1#configure terminal Enter the Configure mode. R1(config)#router rip Enter the Router mode for RIP.
R1(config-router)#network 10.1.1.0/24 Advertise network 10.1.1.0/24 in RIP. R1(config-router)#bfd all-interfaces Enable BFD for all neighbors. or R1(config-router)#neighbor 10.1.1.2 fall- Enable BFD for a specific RIP neighbor over bfd Configuration for R2 R2#configure terminal Enter the Configure mode. R2(config)#router rip Enter the Router mode for RIP. R2(config-router)#network 10.1.1.0/24 Advertise network 10.1.1.0/24 in RIP.
R2(config-router)#bfd all-interfaces Enable BFD for all neighbors. or R2(config-router)#neighbor 10.1.1.1 fall- Enable BFD for a specific RIP neighbor. over bfd Validation This section provides the output of show commands used to confirm the configurations for BFD for the RIP protocol. R1#show bfd session Sess-Idx Remote-Disc Lower-Layer Sess-Type Sess-State UP-Time Remote-Addr 1 1 IPv4 Single-Hop Up 00:05:01 10.1.1.1/32 Number of Sessions: 2 22 © 2015 IP Infusion Inc. Proprietary
22 © 2015 IP Infusion Inc. Proprietary BFD Protocol Configurations R1#show bfd session detail ====================================================== Session Interface Index : 4 Session Index : 18 Lower Layer : IPv4 Version : 1 Session Type : Single Hop Session State : Up Local Discriminator : 18 Local Address : 3.3.3.1/32 Remote Discriminator : 14 Remote Address : 3.3.3.2/32 Local Port : 49169 Remote Port : 3784 Options : Diagnostics : None Timers in Milliseconds :
Diagnostics : None Timers in Milliseconds : Min Tx: 1000 Min Rx: 1000 Multiplier: 2 Neg Tx: 1000 Neg Rx: 1000 Neg detect mult: 5 Min echo Tx: 20 Min echo Rx: 10 Neg echo intrvl: 0 Storage type : 2 Sess down time : 00:00:00 Sess discontinue time : 00:00:00 Bfd GTSM Disabled Bfd Authentication Disabled Counters values: Pkt In : 0000000000000702 Pkt Out : 0000000000000704 Echo Out : 0000000000000000 IPv6 Echo Out : 0000000000000000 IPv6 Pkt In : 0000000000000000 IPv6 Pkt Out : 0000000000000000
UP Count : 1 UPTIME : 00:01:37 Protocol Client Info: RIP-> Client ID: 2 Flags: 4 ---------------------------------------------------------- © 2015 IP Infusion Inc. Proprietary 23 BFD Protocol Configurations 24 © 2015 IP Infusion Inc. Proprietary BFD Static Route Configuration CHAPTER 3 This chapter describes the configurations for BFD static routes. In order to establish alternate paths to destinations that have the least possible delay it is important to quickly detect
any changes to static route validity. BFD detects the liveliness of a static route’s nexthop and then uses the nexthop’s reachability information to determine whether routes are valid. Using BFD to reach a static route’s nexthop also ensures that a static route is inserted in the forwarding database only when the nexthop neighbor is reachable. Topology Figure 3-1: BFD Static Route Basic Topology Configuration for R2 R2#configure terminal Enter the Configure mode.
R2#configure terminal Enter the Configure mode. R2(config)#ip route 30.1.1.0/24 20.1.1.3 Configure static route. R2(config)#ip bfd static all-interfaces Enable BFD for all static routes. R2(config)#interface eth1 Enter the Interface configuration mode for eth1. R2(config-if)#ip static bfd Enable static BFD on the interface. R2(config-if)#exit Exit the Interface configuration mode. R2(config)#ip static 30.1.1.0/24 20.1.1.3 Enable static BFD at static route level. fall-over bfd
fall-over bfd Configuration for R3 R3#configure terminal Enter the Configure mode. R3(config)#ip route 10.1.1.0/24 20.1.1.2 Configure static route. R3(config)#ip bfd static all-interfaces Enable BFD for all static routes. R3(config)#int eth1 Enter the Interface configuration mode for eth1. R3(config-if)#ip static bfd Enable static BFD at interface level. © 2015 IP Infusion Inc. Proprietary 25 BFD Static Route Configuration R3(config-if)#exit Exit the Interface configuration mode.
R3(config)#ip static 20.1.1.0/24 10.1.1.2 Enable static BFD at static route level. fall-over bfd Verification and Validation Enter the commands listed in the following section to confirm the configurations. Verify Traffic Class Groups Configuration Show IP Route R2#show ip route Codes: K - kernel, C - connected, S - static, R - RIP, B - BGP O - OSPF, IA - OSPF inter area N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2 E1 - OSPF external type 1, E2 - OSPF external type 2
i - IS-IS, L1 - IS-IS level-1, L2 - IS-IS level-2, ia - IS-IS inter area * - candidate default Gateway of last resort is 10.1.2.1 to network 0.0.0.0 K* 0.0.0.0/0 via 10.1.2.1, eth0 C 10.1.2.0/24 is directly connected, eth0 C 127.0.0.0/8 is directly connected, lo K 169.254.0.0/16 is directly connected, eth0 R2# Show BFD Session Detail R2#show bfd session detail -------------------------------------------- Session Interface Index: 5 Session Index: 1
Session Interface Index: 5 Session Index: 1 Lower Layer: IPv4 Version: 1 Session Type: Single Hop Session State: Up Local Discriminator: 1 Remote Discriminator: 1 Local Address: 20.1.1.2/32 Remote Address: 20.1.1.3/32 Local Port: 49152 Remote Port: 3784 Options: Diagnostics: None Timers in Milliseconds Min Tx: 20 Min Rx: 20 Multiplier: 5 Min echo Tx: 20 Min echo Rx: 10 Neg Tx: 20 Neg echo intrvl: 0 Neg detect mult: 5 Storage type: 2 Last sess down time: 00:00:00 Sess discontinue time: 00:00:00
Sess discontinue time: 00:00:00 Counters values: Pkt In 0000000000007675 Pkt Out 0000000000007612 Echo Out 0000000000000000 IPv6 Pkt In 0000000000000000 IPv6 Pkt Out 0000000000000000 IPv6 Echo Out 0000000000000000 UP Count: 1 UPTIME: 00:09:37 NSM-> Client ID: 1 Flags: 4 Number of Sessions: 1 26 © 2015 IP Infusion Inc. Proprietary BFD for MPLS LSPs CHAPTER 4 This chapter provides the BFD configuration information for Multi-Protocol Label Switched (MPLS) Label Switched Paths (LSPs). Overview
Paths (LSPs). Overview BFD tracks the liveliness of an MPLS LSP, such as detecting a data plane failure in the forwarding path of an MPLS LSP. If MPLS LSP fails to deliver data traffic, BFD detects the failure using the control plane. An example of this issue is if the dataplane is incorrectly forwarding or dropping packets even when the control plane is functional. In this example, BFD detects the dataplane failure in the forwarding path of the MPLS LSP.
LSP ping helps detect MPLS LSP data plane failures and verifies the dataplane against the control plane. Verification occurs only if you map the LSP to the same Forwarding Equivalence Class (FEC) at both the ingress and the egress. LSP ping has extensive control plane verification features, whereas BFD only tests the dataplane BFD. This makes it more suitable for implementation in both system hardware and firmware.
Note: Basic OSPF configuration is required for MPLS LSPs, but not for static LSPs. Configure BFD for LDP LSP Figure 4-1: BFD for LDP LSP Configuration for PE1 PE-1#configure terminal Enter the Configure mode. PE-1(config)#router ldp Enter the Router LDP mode. PE-1(config-router)#targeted-peer ipv4 Configure targeted LDP session to PE2 loopback address. 3.3.3.3 PE-1(config-router-targeted-peer)#exit Exit the Router LDP mode and return to Configure mode.
PE-1(config)#interface eth2 Enter the Interface mode for eth2. PE-1(config-if)#label-switching Configure label-switching on provider interface of PE1. PE-1(config-if)#enable-ldp ipv4 Enable LDP on the provider interface of PE1. PE-1(config-if)#exit Exit the Interface mode and return to Configure mode. © 2015 IP Infusion Inc. Proprietary 27 BFD for MPLS LSPs PE-1(config)#mpls bfd ldp all force- Configure BFD session for all the LDP FEC entries.
explicit-null lsp-ping-intvl 10 min-rx 300 Note: BFD can be enabled for particular FEC.PE-1 min-tx 300 multiplier 2 PE-1(config)#mpls bfd ldp all lsp-ping-intvl Configure BFD session for all the LDP FEC entries. 10 min-rx 300 min-tx 300 multiplier 2 Note: If explicit-null is enabled on egress router, then force-explicit-null should not be configured in MPLS BFD configuration. Configuration for P P#configure terminal Enter the Configure mode. P(config)#router ldp Enter the Router LDP mode.
P(config)#router ldp Enter the Router LDP mode. P(config-router)#exit Exit the Router LDP mode and return to Configure mode. P(config)#interface eth1 Enter the Interface mode. P(config-if)#label-switching Configure label-switching. P(config-if)#enable-ldp ipv4 Enable LDP. PP(config-if)#exit Exit the Interface mode and return to Configure mode. P(config)#interface eth2 Enter the Interface mode for eth2. P(config-if)#label-switching Configure label-switching.
P(config-if)#enable-ldp ipv4 Enable LDP. P(config-if)#exit Exit the Interface mode and return to Configure mode. P(config)#exit Exit the Configure mode. Configuration for PE2 PE2#configure terminal Enter the Configure mode. PE2(config)#router ldp Enter the Router LDP mode. PE2(config-router)#targeted-peer ipv4 Configure targeted LDP session to PE2 loopback address. 1.1.1.1 PE2(config-router-targeted-peer)#exit Exit the Router LDP mode and return to Configure mode.
PE2(config)#interface eth1 Enter the Interface mode for eth1. PE2(config-if)#label-switching Configure label-switching on provider interface of PE2. PE2(config-if)#enable-ldp ipv4 Enable LDP on the provider interface of PE2. PE2(config-if)#exit Exit the Interface mode and return to Configure mode. 28 © 2015 IP Infusion Inc. Proprietary BFD for MPLS LSPs Configure BFD for RSVP LSP Note: RSVP commands are not supported for ZebIC releases. Figure 4-2: BFD for RSVP LSP Topology
Figure 4-2: BFD for RSVP LSP Topology Configuration for PE1 PE1#configure terminal Enter the Configure mode. PE1(config)#mpls class-type ct0 default Configure default class type. PE1(config)#mpls te-class te0 default 0 Configure default te-class for te0. PE1(config)#mpls te-class te1 default 1 Configure default te-class for te1. PE1(config)#mpls te-class te2 default 2 Configure default te-class for te2. PE1(config)#mpls te-class te3 default 3 Configure default te-class for te3.
PE1(config)#mpls te-class te4 default 4 Configure default te-class for te4. PE1(config)#mpls te-class te5 default 5 Configure default te-class for te5. PE1(config)#mpls te-class te6 default 6 Configure default te-class for te6. PE1(config)#mpls te-class te7 default 7 Configure default te-class for te7. PE1(config)#router rsvp Enter the Router RSVP mode. PE1(config-router)#exit Exit the Router RSVP mode and return to Configure mode. PE1(config)#interface eth2 Enter the Interface mode for eth2.
PE1(config-if)#label-switching Configure label-switching on the interface. PE1(config-if)#bandwidth 100m Configure bandwidth on the interface. PE1(config-if)#reservable-bandwidth 100m Configure reservable bandwidth on the interface. PE1(config-if)#enable-rsvp Enable RSVP on the interface. PE1(config-if)#exit Exit the Interface mode and return to Configure mode. PE1(config)#rsvp-trunk t1 ipv4 Configure RSVP trunk. PE1(config-trunk)#to 3.3.3.3 Configure egress router address in RSVP trunk.
PE1(config)#mpls bfd rsvp mpls bfd rsvp Configure BFD session for RSVP trunk t1. tunnel-name t1 force-explicit-null lsp-ping- intvl 10 min-rx 300 min-tx 300 multiplier 2 PE1(config)#mpls bfd rsvp mpls bfd rsvp Configure BFD session for RSVP trunk t1. tunnel-name t1 lsp-ping-intvl 10 min-rx 300 Note: If explicit-null is enabled on egress router then, min-tx 300 multiplier 2 force-explicit-null should not be configured in MPLS BFD configuration. © 2015 IP Infusion Inc. Proprietary 29
© 2015 IP Infusion Inc. Proprietary 29 BFD for MPLS LSPs Configuration for P P#configure terminal Enter the Configure mode. P(config)#mpls class-type ct0 default Configure default class type. P(config)#mpls te-class te0 default 0 Configure default te-class for te0. P(config)#mpls te-class te1 default 1 Configure default te-class for te1. P(config)#mpls te-class te2 default 2 Configure default te-class for te2. P(config)#mpls te-class te3 default 3 Configure default te-class for te3.
P(config)#mpls te-class te4 default 4 Configure default te-class for te4. P(config)#mpls te-class te5 default 5 Configure default te-class for te5. P(config)#mpls te-class te6 default 6 Configure default te-class for te6. P(config)#mpls te-class te7 default 7 Configure default te-class for te7. P(config)#router rsvp Enter the Router RSVP mode. P(config-router)#exit Exit the Router RSVP mode and return to Configure mode. P(config)#interface eth1 Enter the Interface mode for eth1.
P(config-if)#label-switching Configure label-switching on the interface. P(config-if)#bandwidth 100m Configure bandwidth on the interface. P(config-if)#reservable-bandwidth 100m Configure reservable bandwidth on the interface. P(config-if)#enable-rsvp Enable RSVP on the interface. P(config-if)#exit Exit the Interface mode and return to Configure mode. P(config)#interface eth2 Enter the Interface mode for eth2. P(config-if)#label-switching Configure label-switching on the interface.
P(config-if)#bandwidth 100m Configure bandwidth on the interface. P(config-if)#reservable-bandwidth 100m Configure reservable bandwidth on the interface. P(config-if)#enable-rsvp Enable RSVP on the interface. P(config-if)#exit Exit the Interface mode and return to Configure mode. P(config)#exit Exit the Configure mode. Configuration for PE2 PE2#configure terminal Enter the Configure mode. PE2(config)#mpls class-type ct0 default Configure default class type.
PE2(config)#mpls te-class te0 default 0 Configure default te-class for te0. PE2(config)#mpls te-class te1 default 1 Configure default te-class for te1. PE2(config)#mpls te-class te2 default 2 Configure default te-class for te2. PE2(config)#mpls te-class te3 default 3 Configure default te-class for te3. PE2(config)#mpls te-class te4 default 4 Configure default te-class for te4. PE2(config)#mpls te-class te5 default 5 Configure default te-class for te5.
PE2(config)#mpls te-class te6 default 6 Configure default te-class for te6. PE2(config)#mpls te-class te7 default 7 Configure default te-class for te7. PE2(config)#router rsvp Enter the Router RSVP mode. 30 © 2015 IP Infusion Inc. Proprietary BFD for MPLS LSPs PE2(config-router)#exit Exit the Router RSVP mode and return to Configure mode. PE2(config)#interface eth1 Enter the Interface mode for eth1. PE2(config-if)#label-switching Configure label-switching on the interface.
PE2(config-if)#bandwidth 100m Configure bandwidth on the interface. PE2(config-if)#reservable-bandwidth 100m Configure reservable bandwidth on the interface. PE2(config-if)#enable-rsvp Enable RSVP on the interface. PE2(config-if)#exit Exit the Interface mode and return to Configure mode. Validation Enter the following commands: • show bfd session • show bfd session detail • show mpls forwarding-table Verify BFD Session for RSVP LSP PE1#show mpls forwarding-table
PE1#show mpls forwarding-table Codes: > - selected FTN, p - stale FTN, B - BGP FTN, K - CLI FTN,L - LDP FTN, R - RSVP-TE FTN, S - SNMP FTN, I - IGP-Shortcut, U - unknown FTN Code FEC Tunnel-id FTN-ID Pri Nexthop Out-Label Out-Intf LSP-Type L> 2.2.2.2/32 0 1 Yes 100.1.1.2 3 eth2 LSP_DEFAULT R> 3.3.3.3/32 101 4 Yes 100.1.1.2 53760 eth2 LSP_DEFAULT L 3.3.3.3/32 0 2 Yes 100.1.1.2 53121 eth2 LSP_DEFAULT L> 200.1.1.0/24 0 3 Yes 100.1.1.2 3 eth2 LSP_DEFAULT PE1#show bfd session
PE1#show bfd session Session Interface Index : 3 Session Index: 2 Lower Layer: MPLS LSP Single Hop Session State : Up Local Discriminator: 2 Remote Discriminator: 2 LSP Owner: RSVP FTN Ix: 4 Tunnel Name: t1 LSP Ping Interval in seconds: 10 Local Address : 1.1.1.1/32 Remote Address: 127.0.0.12/32 Local Port : 49153 Remote Port: 3784 Timers in Milliseconds Min Tx: 300 Min Rx: 300 Multiplier: 2 UP Count: 0 UPTIME: 00:00:00 Bfd GTSM Disabled Number of Sessions: 1 PE1#show bfd session detail
Number of Sessions: 1 PE1#show bfd session detail -------------------------------------------- Session Interface Index : 3 Session Index: 2 Lower Layer: MPLS LSP Version : 1 Session Type: Single Hop Session State : Up Local Discriminator : 2 Remote Discriminator: 2 LSP Owner: RSVP FTN Ix: 4 Tunnel Name: t1 LSP Ping Interval in seconds: 10 © 2015 IP Infusion Inc. Proprietary 31 BFD for MPLS LSPs Local Address : 1.1.1.1/32 Remote Address: 127.0.0.12/32 Local Port : 49153 Remote Port: 3784
Local Port : 49153 Remote Port: 3784 Options : Diagnostics: None Timers in Milliseconds Min Tx: 300 Min Rx: 300 Multiplier: 2 Min echo Tx: 0 Min echo Rx: 0 Neg Tx: 300 Neg echo intrvl: 0 Neg detect mult: 5 Storage type: 2 Sess down time: 00:00:00 Sess discontinue time: 00:00:00 Counters values: Pkt In 0000000000000012 Pkt Out 0000000000000000 Echo Out 0000000000000000 IPv6 Pkt In 0000000000000000 IPv6 Pkt Out 0000000000000000 IPv6 Echo Out 0000000000000000 UP Count: 1 UPTIME: 00:00:07
UP Count: 1 UPTIME: 00:00:07 NSM-> Client ID: 1 Flags: 4 Number of Sessions: 1 Configure BFD for Static LSP Figure 4-3: BFD for Static LSP Topology Configuration for PE1 PE1#configure terminal Enter the Configure mode. PE1(config)#mpls ftn-entry tunnel-id 11 Configure MPLS FTN entry for static LSP. 3.3.3.3/32 100 100.1.1.2 eth2 primary PE1(config)#mpls bfd static 3.3.3.3/32 Configures BFD session for static LSP. force-explicit-null lsp-ping-intvl 10 min-rx 300 min-tx 300 multiplier 2
300 min-tx 300 multiplier 2 PE1(config)#exit Exit the Configure mode. 32 © 2015 IP Infusion Inc. Proprietary BFD for MPLS LSPs Configuration on Router P PE1#configure terminal Enter the Configure mode. PE1(config)#mpls ilm-entry 100 eth1 swap 3 Configure MPLS FTN entry for static LSP. eth2 200.1.1.2 3.3.3.3/32 PE1(config)#exit Exit the Configure mode. Validation Enter the following commands: • show bfd session • show bfd session detail • show mpls forwarding-table Verify BFD Session for LDP LSP
Verify BFD Session for LDP LSP PE1#show mpls forwarding-table Codes: > - selected FTN, p - stale FTN, B - BGP FTN, K - CLI FTN,L - LDP FTN, R - RSVP-TE FTN, S - SNMP FTN, I - IGP-Shortcut, U - unknown FTN Code FEC Tunnel-id FTN-ID Pri Nexthop Out-Label Out-Intf LSP-Type L> 2.2.2.2/32 0 1 Yes 100.1.1.2 3 eth2 LSP_DEFAULT L> 3.3.3.3/32 0 2 Yes 100.1.1.2 53121 eth2 LSP_DEFAULT L> 200.1.1.0/24 0 3 Yes 100.1.1.2 3 eth2 LSP_DEFAULT PE1#show bfd session Session Interface Index: 3 Session Index: 1
Session Interface Index: 3 Session Index: 1 Lower Layer: MPLS LSP Single Hop Session State: Up Local Discriminator: 1 Remote Discriminator: 1 LSP Owner: LDP FTN Ix: 2 FEC: 3.3.3.3/32 LSP Ping Interval in seconds: 10 Local Address: 1.1.1.1/32 Remote Address: 127.0.0.12/32 Local Port: 49152 Remote Port: 3784 Timers in Milliseconds Min Tx: 300 Min Rx: 300 Multiplier: 2 UP Count: 1 UPTIME: 00:00:22 Bfd GTSM Disabled Number of Sessions: 1 PE1#show bfd session detail
Number of Sessions: 1 PE1#show bfd session detail -------------------------------------------- Session Interface Index: 3 Session Index: 1 Lower Layer: MPLS LSP Version: 1 Session Type: Single Hop Session State: Up Local Discriminator: 1 Remote Discriminator: 1 LSP Owner: LDP FTN Ix: 2 FEC: 3.3.3.3/32 LSP Ping Interval in seconds: 10 Local Address: 1.1.1.1/32 Remote Address: 127.0.0.12/32 Local Port: 49152 Remote Port: 3784 Options: © 2015 IP Infusion Inc. Proprietary 33 BFD for MPLS LSPs
BFD for MPLS LSPs Diagnostics: None Timers in Milliseconds Min Tx: 300 Min Rx: 300 Multiplier: 2 Min echo Tx: 0 Min echo Rx: 0 Neg Tx: 300 Neg echo intrvl: 0 Neg detect mult: 5 Storage type: 2 Sess down time: 00:00:00 Sess discontinue time: 00:00:00 Counters values: Pkt In 000000000000005d Pkt Out 0000000000000000 Echo Out 0000000000000000 IPv6 Pkt In 0000000000000000 IPv6 Pkt Out 0000000000000000 IPv6 Echo Out 0000000000000000 UP Count: 1 UPTIME: 00:00:25 NSM-> Client ID: 1 Flags: 4
NSM-> Client ID: 1 Flags: 4 Number of Sessions: 1 Configure BFD for Static LSP with Explicit Null Figure 4-4: Static LSP BFD with Explicit Null Configuration for PE1 PE1#configure terminal Enter the Configure mode. PE1(config)#mpls ftn-entry tunnel-id 11 Configure MPLS FTN entry for static LSP. 3.3.3.3/32 100 100.1.1.2 eth2 primary PE1(config)#mpls bfd static 3.3.3.3/32 lsp- Configures BFD session for static LSP. ping-intvl 10 min-rx 300 min-tx 300 multiplier 2
ping-intvl 10 min-rx 300 min-tx 300 multiplier 2 PE1(config)#exit Exit the Configure mode. Configuration for P P#configure terminal Enter the Configure mode. P(config)#mpls ilm-entry 100 eth1 swap 0 Configure MPLS ILM entry for static LSP. eth2 200.1.1.2 3.3.3.3/32 P(config)#exit Exit the Configure mode. 34 © 2015 IP Infusion Inc. Proprietary BFD for MPLS LSPs Validation Enter the following commands: • show bfd session • show bfd session detail • show mpls forwarding-table
• show mpls forwarding-table Verify BFD Session for Static LSP PE1#show mpls forwarding-table Codes: > - selected FTN, p - stale FTN, B - BGP FTN, K - CLI FTN,L - LDP FTN, R - RSVP-TE FTN, S - SNMP FTN, I - IGP-Shortcut,U - unknown FTN Code FEC Tunnel-id FTN-ID Pri Nexthop Out-Label Out-Intf LSP-Type L> 2.2.2.2/32 0 1 Yes 100.1.1.2 3 eth2 LSP_DEFAULT K> 3.3.3.3/32 11 5 Yes 100.1.1.2 100 eth2 LSP_DEFAULT R 3.3.3.3/32 101 4 Yes 100.1.1.2 53760 eth2 LSP_DEFAULT
L 3.3.3.3/32 0 2 Yes 100.1.1.2 53121 eth2 LSP_DEFAULT L> 200.1.1.0/24 0 3 Yes 100.1.1.2 3 eth2 LSP_DEFAULT PE1#show bfd session Session Interface Index : 3 Session Index: 3 Lower Layer: MPLS LSP Single Hop Session State : Up Local Discriminator : 3 Remote Discriminator: 3 LSP Owner: Static FTN Ix: 5 FEC: 3.3.3.3/32 LSP Ping Interval in seconds: 10 Local Address : 1.1.1.1/32 Remote Address: 127.0.0.12/32 Local Port : 49154 Remote Port: 3784 Timers in Milliseconds
Timers in Milliseconds Min Tx: 300 Min Rx: 300 Multiplier: 2 UP Count: 1 UPTIME: 00:00:37 Bfd GTSM Disabled Number of Sessions: 1 PE1#show bfd session detail -------------------------------------------- Session Interface Index : 3 Session Index: 3 Lower Layer: MPLS LSP Version : 1 Session Type: Single Hop Session State : Up Local Discriminator : 3 Remote Discriminator: 3 LSP Owner: Static FTN Ix: 5 FEC: 3.3.3.3/32 LSP Ping Interval in seconds: 10
LSP Ping Interval in seconds: 10 Local Address : 1.1.1.1/32 Remote Address: 127.0.0.12/32 Local Port : 49154 Remote Port: 3784 Options : Diagnostics: None Timers in Milliseconds Min Tx: 300 Min Rx: 300 Multiplier: 2 Min echo Tx: 0 Min echo Rx: 0 Neg Tx: 300 Neg echo intrvl: 0 Neg detect mult: 5 © 2015 IP Infusion Inc. Proprietary 35 BFD for MPLS LSPs Storage type: 2 Sess down time: 00:00:00 Sess discontinue time: 00:00:00 Counters values: Pkt In 0000000000000095 Pkt Out 0000000000000000
Pkt In 0000000000000095 Pkt Out 0000000000000000 Echo Out 0000000000000000 IPv6 Pkt In 0000000000000000 IPv6 Pkt Out 0000000000000000 IPv6 Echo Out 0000000000000000 UP Count: 1 UPTIME: 00:00:42 NSM-> Client ID: 1 Flags: 4 Number of Sessions: 1 wqa12# Disable BFD for MPLS LSP Configuration for PE1 PE1#configure terminal Enter the Configure mode. PE1(config)#mpls bfd static 3.3.3.3/32 Disable BFD for static LSP. disable PE1(config)#mpls bfd rsvp tunnel-name t1 Disable BFD for RSVP LSP. disable
disable PE1(config)#mpls bfd ldp 3.3.3.3/32 disable Disable BFD for LDP LSP. PE1(config)#exit Exit the Configure mode. Remove BFD for MPLS LSP Referring to the same basic topology, follow the steps in the table below to remove BFD for MPLS LSP. Configuration for PE1 PE1#configure terminal Enter the Configure mode. PE1(config)#no mpls bfd static all Unconfigure BFD for all Static LSPs. PE1(config)#no mpls bfd ldp all Unconfigure BFD for all LDP LSPs.
PE1(config)#no mpls bfd rsvp all Unconfigure BFD for all RSVP LSPs. PE1(config)#exit Exit the Configure mode. 36 © 2015 IP Infusion Inc. Proprietary BFD Authentication CHAPTER 5 This chapter provides BFD authentication configuration examples. Overview Bidirectional Forwarding Detection (BFD) is a protocol intended to detect faults in the bidirectional path between two forwarding engines, including physical interfaces, sub-interfaces, and data link. It operates independently of media,
data protocols, and routing protocols. A session will be created between links. When BFD links is hacked, the link may be falsely declared to be down, or falsely declared to be up. To overcome this type of situations, need to use authentication on BFD. Using this we can mitigate threats from attackers. ZebOS-XP supports the following authentication types: • Simple password • Keyed/Meticulous MD5 • Keyed/Meticulous SHA1 Among these types, meticulous SHA1 is the strongest one.
Authentication is optionally enabled on BFD sessions. By default, it is disabled and is configurable via CLI. When authentication is enabled, BFD packets will exchange with authentication section (based on the configured auth type). Receiving system will examine the authentication section of the packet; if it is successful then it will accept. Otherwise, it will discard. Enabling BFD Authentication
it will discard. Enabling BFD Authentication On a Router BFD authentication can be enabled for multiple keys & or single key support over a BFD sessions: • Using Key-chain, for multiple key support • Using Key-ID, for single key support ZebOS-XP supports BFD Authentication for IPv4 & IPv6, with single-hop & multihop. Enabling BFD Authentication for Single-hop for IPv4, using key chain. In this example, the BFD session is configured between R1 & R2 using multiple key (using key chain).
key (using key chain). Once the BFD session is up, the authentication is enabled on both the routers, with the authentication type as simple password. We can enable the authentication on BFD session using any one of the above-mentioned authentication type, with the identical authentication Type on both side. Steps for configuring BFD authentication for IPv6 are mentioned along with the configuration steps for IPv4. Topology Figure 5-1: Basic Topology of Two Routers
Figure 5-1: Basic Topology of Two Routers © 2015 IP Infusion Inc. Proprietary 37 BFD Authentication Router 1 (R1) R1#configure terminal Enter the Configure mode. R1(config)#key chain IPInfusion Configure the key chain by assigning the string to it. R1(config-keychain)#key 14 Configure key-ID for the key chain. Multiple keys can be configured for same key chain but only one will be used for authentication. R1(config-keychain-key)#key-string R1 Assign the key-string to the key.
R1(config-keychain)#key 15 Configure the key-ID for the key chain. R1(config-keychain-key)#key-string IPI- Assign the key-string to the key. ZebOS R1(config-keychain-key)#exit Exit from the Key mode. R1(config-keychain)#exit Exit from the Key Chain mode. R1(config)#interface eth1 Enter the Interface configuration mode. R1(config-if)#bfd session 10.10.10.1 Enable the BFD session between peers. 10.10.10.2 Note: For IPv6, provide the IPv6 source and destination addresses for the BFD session.
addresses for the BFD session. R1(config-if)#bfd auth type simple key-chain Enable the Authentication for BFD as Type-simple password. IP Infusion Note: Configure authentication type as any one of mentioned types. R1(config-if)#end Exit the Interface mode. Router 2 (R2) R2#configure terminal Enter the Configure mode. R2(config)#key chain IPInfusion Configure the key chain by assigning the string to it. R2(config-keychain)#key 14 Configure key-ID for the key chain. Multiple keys can be
configured for same key chain but only one will be used for authentication. R2(config-keychain-key)#key-string R2 Assign the key-string to the key. R2(config-keychain)#key 15 Configure the key-ID for the key chain. R2(config-keychain-key)#key-string IPI- Assign the key-string to the key. ZebOS R2(config-keychain-key)#exit Exit from the Key mode. R2(config-keychain)#exit Exit from the Key Chain mode. R2R2(config)#interface eth1 Enter the Interface configuration mode.
R2(config-if)#bfd session 10.10.10.2 Enable the BFD session between peers. 10.10.10.1 Note: For IPv6, provide the IPv6 source and destination addresses for the BFD session. R2(config-if)#bfd auth type simple key-chain Enable the Authentication for BFD as Type-simple password. IP Infusion Note: Configure authentication type as any one of mentioned types. R2(config-if)#end Exit the Interface mode. Validation
Validation Check for Session to be single-hop, up with the remote address as of R2 in “show bfd session” & in “show bfd session detail”, check for BFD authentication is enabled with authentication type- configured. 38 © 2015 IP Infusion Inc. Proprietary BFD Authentication R1#show bfd session Sess-Idx Remote-Disc Lower-Layer Sess-Type Sess-State UP-Time Remote- Addr 1 1 IPv4 Single-Hop Up 00:00:20 10.10.10.2/32 Number of Sessions: 1 R1#sh bfd session detail
Number of Sessions: 1 R1#sh bfd session detail ====================================================== Session Interface Index : 3 Session Index : 1 Lower Layer : IPv4 Version : 1 Session Type : Single Hop Session State : Up Local Discriminator : 1 Local Address : 10.10.10.1/32 Remote Discriminator : 1 Remote Address : 10.10.10.2/32 Local Port : 49152 Remote Port : 3784 Options : Diagnostics : None Timers in Milliseconds : Min Tx: 20 Min Rx: 20 Multiplier: 5
Min Tx: 20 Min Rx: 20 Multiplier: 5 Neg Tx: 20 Neg Rx: 1000 Neg detect mult: 5 Min echo Tx: 20 Min echo Rx: 10 Neg echo intrvl: 0 Storage type : 2 Sess down time : 00:00:00 Sess discontinue time : 00:00:00 Bfd GTSM Disabled Bfd Authentication Enabled Authentication type : simple Authentication Key-id : 14 Counters values: Pkt In : 00000000000003bd Pkt Out : 000000000000042c Echo Out : 0000000000000000 IPv6 Echo Out : 0000000000000000
IPv6 Pkt In : 0000000000000000 IPv6 Pkt Out : 0000000000000000 UP Count : 1 UPTIME : 00:00:22 Protocol Client Info: BFD-> Client ID: 28 Flags: 4 ---------------------------------------------------------- Number of Sessions: 1 R2#sh bfd session Sess-Idx Remote-Disc Lower-Layer Sess-Type Sess-State UP-Time Remote- Addr 1 1 IPv4 Single-Hop Up 00:00:09 10.10.10.1/32 Number of Sessions: 1 R2#sh bfd session detail ======================================================
Session Interface Index : 3 Session Index : 1 Lower Layer : IPv4 Version : 1 Session Type : Single Hop Session State : Up Local Discriminator : 1 Local Address : 10.10.10.2/32 Remote Discriminator : 1 Remote Address : 10.10.10.1/32 © 2015 IP Infusion Inc. Proprietary 39 BFD Authentication Local Port : 49152 Remote Port : 3784 Options : Diagnostics : None Timers in Milliseconds : Min Tx: 20 Min Rx: 20 Multiplier: 5 Neg Tx: 20 Neg Rx: 20 Neg detect mult: 5
Neg Tx: 20 Neg Rx: 20 Neg detect mult: 5 Min echo Tx: 20 Min echo Rx: 10 Neg echo intrvl: 0 Storage type : 2 Sess down time : 00:00:00 Sess discontinue time : 00:00:00 Bfd GTSM Disabled Bfd Authentication Enabled Authentication type : simple Authentication Key-id : 14 Counters values: Pkt In : 000000000000020a Pkt Out : 000000000000020e Echo Out : 0000000000000000 IPv6 Echo Out : 0000000000000000 IPv6 Pkt In : 0000000000000000 IPv6 Pkt Out : 0000000000000000 UP Count : 1 UPTIME : 00:00:11
UP Count : 1 UPTIME : 00:00:11 Protocol Client Info: BFD-> Client ID: 28 Flags: 4 ---------------------------------------------------------- Number of Sessions: 1 40 © 2015 IP Infusion Inc. Proprietary BFD Authentication Enabling BFD Authentication for Single-hop for IPv4, Using Key-ID In this example, the BFD session is configured between R1 and R2 using single key (using key-ID). Once the BFD
session is up, the authentication is enabled on both the routers, with the authentication type as keyed-MD5. We can enable the authentication on BFD session using any one of the above mentioned authentication type, with the Identical authentication type on both side. Topology Figure 5-2: Basic Topology of Two Routers Router 1 (R1) R1#configure terminal Enter the Configure mode. R1(config)#interface eth1 Enter the Interface configuration mode.
R1(config-if)#bfd session 10.10.10.1 Enable the BFD session between peers. 10.10.10.2 Note: For IPv6, provide the IPv6 source and destination addresses for the BFD session. R1(config-if)#bfd auth type keyed-md5 Enable the Authentication for BFD as Type keyed-MD5. key-id 10 key ZebOS Note: Configure authentication type as any one of mentioned types. R1(config-if)#end Exit the Interface mode. Router 2 (R2) R2#configure terminal Enter the Configure mode.
R2#configure terminal Enter the Configure mode. R2(config)#interface eth1 Enter the Interface configuration mode. R2(config-if)#bfd session 10.10.10.2 Enable the BFD session between peers. 10.10.10.1 Note: For IPv6, provide the IPv6 source and destination addresses for the BFD session. R2(config-if)#bfd auth type keyed-md5 Enable the Authentication for BFD as Type keyed-MD5. key-id 10 key ZebOS Note: Configure authentication type as any one of mentioned types.
types. R2(config-if)#end Exit the Interface mode. © 2015 IP Infusion Inc. Proprietary 41 BFD Authentication Validation Check for Session to be single-hop, up with the remote address as of R2 in “show bfd session” & in “show bfd session detail”, check for BFD authentication is enabled with authentication type- configured. R1#show bfd session Sess-Idx Remote-Disc Lower-Layer Sess-Type Sess-State UP-Time Remote- Addr 1 1 IPv4 Single-Hop Up 00:00:40 10.10.10.2/32 Number of Sessions: 1
10.10.10.2/32 Number of Sessions: 1 R1#sh bfd session detail ====================================================== Session Interface Index : 3 Session Index : 1 Lower Layer : IPv4 Version : 1 Session Type : Single Hop Session State : Up Local Discriminator : 1 Local Address : 10.10.10.1/32 Remote Discriminator : 1 Remote Address : 10.10.10.2/32 Local Port : 49152 Remote Port : 3784 Options : Diagnostics : None Timers in Milliseconds : Min Tx: 20 Min Rx: 20 Multiplier: 5
Min Tx: 20 Min Rx: 20 Multiplier: 5 Neg Tx: 20 Neg Rx: 20 Neg detect mult: 5 Min echo Tx: 20 Min echo Rx: 10 Neg echo intrvl: 0 Storage type : 2 Sess down time : 00:00:00 Sess discontinue time : 00:00:00 Bfd GTSM Disabled Bfd Authentication Enabled Authentication type : keyed-md5 Authentication Key-id : 10 Counters values: Pkt In : 0000000000002a97 Pkt Out : 0000000000002b15 Echo Out : 0000000000000000 IPv6 Echo Out : 0000000000000000
IPv6 Pkt In : 0000000000000000 IPv6 Pkt Out : 0000000000000000 UP Count : 2 UPTIME : 00:00:42 Protocol Client Info: BFD-> Client ID: 28 Flags: 4 ---------------------------------------------------------- Number of Sessions: 1 R2#show bfd session Sess-Idx Remote-Disc Lower-Layer Sess-Type Sess-State UP-Time Remote- Addr 1 1 IPv4 Single-Hop Up 00:00:04 10.10.10.1/32 Number of Sessions: 1 R2#sh bfd session detail ======================================================
Session Interface Index : 3 Session Index : 1 Lower Layer : IPv4 Version : 1 42 © 2015 IP Infusion Inc. Proprietary BFD Authentication Session Type : Single Hop Session State : Up Local Discriminator : 1 Local Address : 10.10.10.2/32 Remote Discriminator : 1 Remote Address : 10.10.10.1/32 Local Port : 49152 Remote Port : 3784 Options : Diagnostics : None Timers in Milliseconds : Min Tx: 20 Min Rx: 20 Multiplier: 5 Neg Tx: 20 Neg Rx: 1000 Neg detect mult: 5
Neg Tx: 20 Neg Rx: 1000 Neg detect mult: 5 Min echo Tx: 20 Min echo Rx: 10 Neg echo intrvl: 0 Storage type : 2 Sess down time : 00:00:00 Sess discontinue time : 00:00:00 Bfd GTSM Disabled Bfd Authentication Enabled Authentication type : keyed-md5 Authentication Key-id : 10 Counters values: Pkt In : 000000000000236b Pkt Out : 0000000000002373 Echo Out : 0000000000000000 IPv6 Echo Out : 0000000000000000 IPv6 Pkt In : 0000000000000000 IPv6 Pkt Out : 0000000000000000 UP Count : 2 UPTIME : 00:00:07
UP Count : 2 UPTIME : 00:00:07 Protocol Client Info: BFD-> Client ID: 28 Flags: 4 ---------------------------------------------------------- Number of Sessions: 1 Enabling BFD Authentication for Multihop for IPv6, Using Key-chain In this example, configure the BFD Multihop session between R1 & R3 with the network reachability between R1, R2 & R3. Configure the static route between R1-R3 & then enable the Authentication on R1 & R3 with the identical
authentication type on both as mentioned as following: • Simple Password • Keyed-MD5 • Meticulous-keyed-MD5 • Keyed-SHA1 • Meticulous-keyed-SHA1 Figure 5-3: Basic Topology of Three Routers Router 1 (R1) R1#configure terminal Enter the Configure mode. R1(config)#key chain IPInfusion Configure the key chain by assigning the string to it. © 2015 IP Infusion Inc. Proprietary 43 BFD Authentication R1(config-keychain)#key 14 Configure key-ID for the keychain. Multiple keys can be configured
for same key chain. R1(config-keychain-key)#key-string R1 Assign the key-string to the key. R1(config-keychain)#key 15 Configure the key-ID for the keychain. R1(config-keychain-key)#key-string IPI- Assign the key-string to the key. ZebOS R1(config-keychain-key)#exit Exit from the Key mode. R1(config-keychain)#exit Exit from the Key Chain mode. R1(config)#interface eth1 Enter the Interface configuration mode.
R1(config-if)#bfd session 2000::1 3000::1 Enable the BFD multihop session between peers. multihop Note: For IPv4, provide the IPv4 source and destination addresses for the BFD session. R1(config-if)#exit Exit the interface mode. R1(config)#bfd multihop-peer 3000::1 auth Enable the Authentication for BFD as Type-keyed-SHA1. type keyed-sha1 key-chain IPInfusion Note: Configure authentication type as any one of mentioned types.
types. R1(config)#ipv6 route 3000::/64 2000::2 Configure the static route between the multihop BFD peers. R1(config)#exit Exit the Router mode. Router 3 (R3) R3#configure terminal Enter the Configure mode. R3(config)#key chain IPInfusion Configure the key chain by assigning the string to it. R3(config-keychain)#key 14 Configure key-ID for the keychain. Multiple keys can be configured for same key chain. R3(config-keychain-key)#key-string R3 Assign the key-string to the key.
R3(config-keychain)#key 15 Configure the key-ID for the keychain. R3(config-keychain-key)#key-string IPI- Assign the key-string to the key. ZebOS R3(config-keychain-key)#exit Exit from the Key mode. R3(config-keychain)#exit Exit from the Key Chain mode. R3(config)#interface eth1 Enter the Interface configuration mode. R3(config-if)#bfd session 3000::1 2000::1 Enable the BFD multihop session between peers. multihop Note: For IPv4, provide the IPv4 source and destination addresses
for the BFD session. R3(config-if)#exit Exit the interface mode. R3(config)#bfd multihop-peer 2000::1 auth Enable the authentication for BFD as Type-keyed-SHA1. type keyed-sha1 key-chain IPInfusion Note: Configure authentication type as any one of mentioned types. R3(config)#ipv6 route 2000::/64 3000::2 Configure the static route between the multihop BFD peers. R3(config)#exit Exit the Router mode. Validation
R3(config)#exit Exit the Router mode. Validation Check for Session to be multi-hop, up with the remote IPv6 address as of R3 in “show bfd session” & in “show bfd session detail”, check for BFD authentication is enabled with authentication type- configured. R1#show bfd session 44 © 2015 IP Infusion Inc. Proprietary BFD Authentication Sess-Idx Remote-Disc Lower-Layer Sess-Type Sess-State UP-Time Remote- Addr 1 1 IPv6 Multi-Hop Up 00:09:17 3000::1/128 Number of Sessions: 1
3000::1/128 Number of Sessions: 1 DUT#sh bfd session detail ====================================================== Session Interface Index : 0 Session Index : 1 Lower Layer : IPv6 Version : 1 Session Type : Multihop Arbit Path Session State : Up Local Discriminator : 1 Local Address : 2000::1/128 Remote Discriminator : 1 Remote Address : 3000::1/128 Local Port : 49152 Remote Port : 14784 Options : Diagnostics : None Timers in Milliseconds : Min Tx: 20 Min Rx: 20 Multiplier: 5
Min Tx: 20 Min Rx: 20 Multiplier: 5 Neg Tx: 20 Neg Rx: 1000 Neg detect mult: 5 Min echo Tx: 20 Min echo Rx: 10 Neg echo intrvl: 0 Storage type : 2 Sess down time : 00:00:00 Sess discontinue time : 00:00:00 Bfd GTSM Disabled Bfd Authentication Enabled Authentication type : keyed-sha1 Authentication Key-id : 14 Counters values: Pkt In : 0000000000000000 Pkt Out : 0000000000000000 Echo Out : 0000000000000000 IPv6 Echo Out : 0000000000000000
IPv6 Pkt In : 00000000000096e0 IPv6 Pkt Out : 0000000000009788 UP Count : 2 UPTIME : 00:09:19 Protocol Client Info: BFD-> Client ID: 28 Flags: 4 ---------------------------------------------------------- Number of Sessions: 1 R2#sh bfd session Sess-Idx Remote-Disc Lower-Layer Sess-Type Sess-State UP-Time Remote- Addr 1 1 IPv6 Multi-Hop Up 00:09:34 2000::1/128 Number of Sessions: 1 R2#sh bfd session detail ======================================================
Session Interface Index : 0 Session Index : 1 Lower Layer : IPv6 Version : 1 Session Type : Multihop Arbit Path Session State : Up Local Discriminator : 1 Local Address : 3000::1/128 Remote Discriminator : 1 Remote Address : 2000::1/128 Local Port : 49152 Remote Port : 14784 Options : © 2015 IP Infusion Inc. Proprietary 45 BFD Authentication Diagnostics : None Timers in Milliseconds : Min Tx: 20 Min Rx: 20 Multiplier: 5 Neg Tx: 20 Neg Rx: 20 Neg detect mult: 5
Neg Tx: 20 Neg Rx: 20 Neg detect mult: 5 Min echo Tx: 20 Min echo Rx: 10 Neg echo intrvl: 0 Storage type : 2 Sess down time : 00:00:00 Sess discontinue time : 00:00:00 Bfd GTSM Disabled Bfd Authentication Enabled Authentication type : keyed-sha1 Authentication Key-id : 14 Counters values: Pkt In : 0000000000000000 Pkt Out : 0000000000000000 Echo Out : 0000000000000000 IPv6 Echo Out : 0000000000000000 IPv6 Pkt In : 0000000000009a73 IPv6 Pkt Out : 0000000000009a7e UP Count : 2 UPTIME : 00:09:36
UP Count : 2 UPTIME : 00:09:36 Protocol Client Info: BFD-> Client ID: 28 Flags: 4 ---------------------------------------------------------- Number of Sessions: 1 46 © 2015 IP Infusion Inc. Proprietary BFD Authentication Enabling BFD Authentication for Multihop for IPv6, Using Key-ID In this example, configure the BFD Multihop session between R1 & R3 with the network reachability between R1, R2 &
R3. Configure the static route between R1-R3 & then enable the Authentication on R1 & R3 with the identical authentication type for single BFD session (using key-ID) Figure 5-4: Basic Topology of Three Routers Router 1 (R1) R1#configure terminal Enter the Configure mode. R1(config)#interface eth1 Enter the Interface configuration mode. R1(config-if)#bfd session 2000::1 3000::2 Enable the BFD multihop session between peers.
multihop Note: For IPv4, provide the IPv4 source and destination addresses for the BFD session. R1(config-if)#exit Exit the interface mode. R1(config)#bfd multihop-peer 3000::2 auth Enable the Authentication for BFD as Type-keyed-SHA1. type meticulous-keyed-sha1 key-id 10 key Note: Configure authentication type as any one of mentioned ZebOS types. R1(config)#ipv6 route 3000::/64 2000::2 Configure the static route between the multihop BFD peers. R1(config)#exit Exit the Router mode.
R1(config)#exit Exit the Router mode. Router 3 (R3) R3#configure terminal Enter the Configure mode. R3(config)#interface eth1 Enter the Interface configuration mode. R3(config-if)#bfd session 3000::2 2000::1 Enable the BFD multihop session between peers. multihop Note: For IPv4, provide the IPv4 source and destination addresses for the BFD session. R3(config-if)#exit Exit the interface mode. R3(config)#bfd multihop-peer 2000::1 auth Enable the Authentication for BFD as Type-keyed-SHA1.
type meticulous-keyed-sha1 key-id 10 key Note: Configure authentication type as any one of mentioned ZebOS types. R3(config)#ipv6 route 2000::/64 3000::1 Configure the static route between the multihop BFD peers. R3(config)#exit Exit the Router mode. Validation Check for Session to be multi-hop, up with the remote IPv6 address as of R3 in “show bfd session” & in “show bfd session detail”, check for BFD authentication is enabled with authentication type- configured. R1#show bfd session detail
R1#show bfd session detail ====================================================== Session Interface Index : 0 Session Index : 1 Lower Layer : IPv6 Version : 1 © 2015 IP Infusion Inc. Proprietary 47 BFD Authentication Session Type : Multihop Arbit Path Session State : Up Local Discriminator : 1 Local Address : 2000::1/128 Remote Discriminator : 1 Remote Address : 3000::2/128 Local Port : 49152 Remote Port : 14784 Options : Diagnostics : None Timers in Milliseconds :
Diagnostics : None Timers in Milliseconds : Min Tx: 20 Min Rx: 20 Multiplier: 5 Neg Tx: 20 Neg Rx: 20 Neg detect mult: 5 Min echo Tx: 20 Min echo Rx: 10 Neg echo intrvl: 0 Storage type : 2 Sess down time : 00:00:00 Sess discontinue time : 00:00:00 Bfd GTSM Disabled Bfd Authentication Enabled Authentication type : meticulous-keyed-sha1 Authentication Key-id : 10 Counters values: Pkt In : 0000000000000000 Pkt Out : 0000000000000000 Echo Out : 0000000000000000 IPv6 Echo Out : 0000000000000000
IPv6 Pkt In : 000000000001c8c2 IPv6 Pkt Out : 000000000001def6 UP Count : 8 UPTIME : 00:13:09 Protocol Client Info: BFD-> Client ID: 28 Flags: 4 ---------------------------------------------------------- Number of Sessions: 1 R3#show bfd session detail ====================================================== Session Interface Index : 0 Session Index : 1 Lower Layer : IPv6 Version : 1 Session Type : Multihop Arbit Path Session State : Up Local Discriminator : 1 Local Address : 3000::2/128
Remote Discriminator : 1 Remote Address : 2000::1/128 Local Port : 49152 Remote Port : 14784 Options : Diagnostics : None Timers in Milliseconds : Min Tx: 20 Min Rx: 20 Multiplier: 5 Neg Tx: 20 Neg Rx: 1000 Neg detect mult: 5 Min echo Tx: 20 Min echo Rx: 10 Neg echo intrvl: 0 Storage type : 2 Sess down time : 00:00:00 Sess discontinue time : 00:00:00 Bfd GTSM Disabled Bfd Authentication Enabled Authentication type : meticulous-keyed-sha1 Authentication Key-id : 10 Counters values:
Authentication Key-id : 10 Counters values: Pkt In : 0000000000000000 Pkt Out : 0000000000000000 48 © 2015 IP Infusion Inc. Proprietary BFD Authentication Echo Out : 0000000000000000 IPv6 Echo Out : 0000000000000000 IPv6 Pkt In : 000000000001dfce IPv6 Pkt Out : 000000000001e04b UP Count : 8 UPTIME : 00:13:16 Protocol Client Info: BFD-> Client ID: 28 Flags: 4 ---------------------------------------------------------- Number of Sessions: 1
Number of Sessions: 1 Configuring Active Key for Enabling BFD Authentication for Multihop for IPv6, Using Key-chain In this example, configure active key using send-lifetime, for the multiple keys configured under key chain. The active key will be selected on below mention criteria. If start of time is default value (means zero) or key start of time has started to use (configured value), then that active key will be selected from the key chain. Figure 5-5: Basic Topology of Three Routers
Figure 5-5: Basic Topology of Three Routers Router 1 (R1) R1#configure terminal Enter the Configure mode. R1(config)#key chain IPInfusion Configure the key chain by assigning the string to it. R1(config-keychain)#key 14 Configure key-ID for the keychain. Multiple keys can be configured for same key chain. R1(config-keychain-key)#send-lifetime Use this command to specify the time period during which the 13:30:00 Jun 13 2012 duration 300 authentication key on a key chain can be sent.
R1(config-keychain-key)#key-string ZebOS Assign the key-string to the key. R1(config-keychain)#key 15 Configure the key-ID for the keychain. R1(config-keychain-key)#key-string IPI- Assign the key-string to the key. ZebOS R1(config-keychain-key)#exit Exit from the Key mode. R1(config-keychain)#exit Exit from the Key Chain mode. R1(config)#interface eth1 Enter the Interface configuration mode. R1(config-if)#bfd session 2000::1 3000::1 Enable the BFD multihop session between peers.
multihop Note: For IPv4, provide the IPv4 source and destination addresses for the BFD session. R1(config-if)#exit Exit the interface mode. R1(config)#bfd multihop-peer 3000::1 auth Enable the Authentication for BFD as Type-keyed-SHA1. type keyed-sha1 key-chain IPInfusion Note: Configure authentication type as any one of mentioned types. R1(config)#ipv6 route 3000::/64 2000::2 Configure the static route between the multihop BFD peers. R1(config)#exit Exit the Router mode.
R1(config)#exit Exit the Router mode. © 2015 IP Infusion Inc. Proprietary 49 BFD Authentication Router 3 (R3) R3#configure terminal Enter the Configure mode. R3(config)#key chain IPInfusion Configure the key chain by assigning the string to it. R3(config-keychain)#key 14 Configure key-ID for the keychain. Multiple keys can be configured for same key chain. R3(config-keychain-key)#send-lifetime Use this command to specify the time period during which the
13:30:00 Jun 13 2012 duration 300 authentication key on a key chain can be sent. R3(config-keychain-key)#key-string ZebOS Assign the key-string to the key. R3(config-keychain)#key 15 Configure the key-ID for the keychain. R3(config-keychain-key)#key-string IPI- Assign the key-string to the key. ZebOS R3(config-keychain-key)#exit Exit from the Key mode. R3(config-keychain)#exit Exit from the Key Chain mode. R3(config)#interface eth1 Enter the Interface configuration mode.
R3(config-if)#bfd session 3000::1 2000::1 Enable the BFD multihop session between peers. multihop Note: For IPv4, provide the IPv4 source and destination addresses for the BFD session. R3(config-if)#exit Exit the interface mode. R3(config)#bfd multihop-peer 2000::1 auth Enable the Authentication for BFD as Type-keyed-SHA1. type keyed-sha1 key-chain IPInfusion Note: Configure authentication type as any one of mentioned types.
types. R3(config)#ipv6 route 2000::/64 3000::2 Configure the static route between the multihop BFD peers. R3(config)#exit Exit the Router mode. Validation R1#show bfd session Sess-Idx Remote-Disc Lower-Layer Sess-Type Sess-State UP-Time Remote- Addr 1 1 IPv6 Multi-Hop Up 00:09:17 3000::1/128 Number of Sessions: 1 DUT#sh bfd session detail ====================================================== Session Interface Index : 0 Session Index : 1 Lower Layer : IPv6 Version : 1
Lower Layer : IPv6 Version : 1 Session Type : Multihop Arbit Path Session State : Up Local Discriminator : 1 Local Address : 2000::1/128 Remote Discriminator : 1 Remote Address : 3000::1/128 Local Port : 49152 Remote Port : 14784 Options : Diagnostics : None Timers in Milliseconds : Min Tx: 20 Min Rx: 20 Multiplier: 5 Neg Tx: 20 Neg Rx: 1000 Neg detect mult: 5 Min echo Tx: 20 Min echo Rx: 10 Neg echo intrvl: 0 Storage type : 2 Sess down time : 00:00:00 50 © 2015 IP Infusion Inc. Proprietary
50 © 2015 IP Infusion Inc. Proprietary BFD Authentication Sess discontinue time : 00:00:00 Bfd GTSM Disabled Bfd Authentication Enabled Authentication type : keyed-sha1 Authentication Key-id : 14 Counters values: Pkt In : 0000000000000000 Pkt Out : 0000000000000000 Echo Out : 0000000000000000 IPv6 Echo Out : 0000000000000000 IPv6 Pkt In : 00000000000096e0 IPv6 Pkt Out : 0000000000009788 UP Count : 2 UPTIME : 00:09:19 Protocol Client Info: BFD-> Client ID: 28 Flags: 4
BFD-> Client ID: 28 Flags: 4 ---------------------------------------------------------- Number of Sessions: 1 R2#sh bfd session Sess-Idx Remote-Disc Lower-Layer Sess-Type Sess-State UP-Time Remote- Addr 1 1 IPv6 Multi-Hop Up 00:09:34 2000::1/128 Number of Sessions: 1 R2#sh bfd session detail ====================================================== Session Interface Index : 0 Session Index : 1 Lower Layer : IPv6 Version : 1 Session Type : Multihop Arbit Path Session State : Up
Local Discriminator : 1 Local Address : 3000::1/128 Remote Discriminator : 1 Remote Address : 2000::1/128 Local Port : 49152 Remote Port : 14784 Options : Diagnostics : None Timers in Milliseconds : Min Tx: 20 Min Rx: 20 Multiplier: 5 Neg Tx: 20 Neg Rx: 20 Neg detect mult: 5 Min echo Tx: 20 Min echo Rx: 10 Neg echo intrvl: 0 Storage type : 2 Sess down time : 00:00:00 Sess discontinue time : 00:00:00 Bfd GTSM Disabled Bfd Authentication Enabled Authentication type : keyed-sha1
Authentication type : keyed-sha1 Authentication Key-id : 14 Counters values: Pkt In : 0000000000000000 Pkt Out : 0000000000000000 Echo Out : 0000000000000000 IPv6 Echo Out : 0000000000000000 IPv6 Pkt In : 0000000000009a73 IPv6 Pkt Out : 0000000000009a7e UP Count : 2 UPTIME : 00:09:36 Protocol Client Info: BFD-> Client ID: 28 Flags: 4 ---------------------------------------------------------- © 2015 IP Infusion Inc. Proprietary 51 BFD Authentication Number of Sessions: 1
BFD Authentication Number of Sessions: 1 52 © 2015 IP Infusion Inc. Proprietary Index A authentication 37 B BFD Configuration 9 Echo Function 9 Echo Interval 9 Multi-hop Peer Timer 9 Single-hop Session Timer 9 Slow Timer 9 Topology 9, 37 BFD for LDP LSP 27 BFD for MPLS LSPs 27 BFD for RSVP LSP 29 BFD for Static LSP 32 BFD for Static LSP with Explicit Null 34 BFD Protocol Configurations 11 BFD Static Configurations 25 Topology 25 C Configuration BFD Configuration in BGP 21
C Configuration BFD Configuration in BGP 21 BFD Configuration in IS-IS 20 BFD Configuration in RIP 22 OSPF—BFD Multi-hop Session 13 OSPF—BFD Single Hop Session 11 OSPFv3—BFD Multi-Hop Sessions 18 OSPFv3—BFD Single-Hop Session 14 R Remove MPLS LSPs BFD 36 © 2015 IP Infusion Inc. Proprietary 53 Index 54 © 2015 IP Infusion Inc. Proprietary
ZebOS-XP® Network Platform Version 1.4 Extended Performance Bidirectional Forwarding Detection Developer Guide December 2015 IP Infusion Inc. Proprietary © 2015 IP Infusion Inc. All Rights Reserved. This documentation is subject to change without notice. The software described in this document and this documentation are furnished under a license agreement or nondisclosure agreement. The software and documentation may be used or
copied only in accordance with the terms of the applicable agreement. No part of this publication may be reproduced, stored in a retrieval system, or transmitted in any form or any means electronic or mechanical, including photocopying and recording for any purpose other than the purchaser's internal use without the written permission of IP Infusion Inc. IP Infusion Inc. 3965 Freedom Circle, Suite 200 Santa Clara, CA 95054 +1 408-400-1900 http://www.ipinfusion.com/
+1 408-400-1900 http://www.ipinfusion.com/ For support, questions, or comments via E-mail, contact: support@ipinfusion.com Trademarks: IP Infusion, OcNOS, VirNOS, ZebM, ZebOS, and ZebOS-XP are trademarks or registered trademarks of IP Infusion. All other trademarks, service marks, registered trademarks, or registered service marks are the property of their respective owners. ii IP Infusion Inc. Proprietary Contents
owners. ii IP Infusion Inc. Proprietary Contents Preface . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .ix Audience . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ix Conventions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ix
Contents . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ix Related Documents. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .x Support . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .x
Comments. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .x CHAPTER 1 Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 11 Features. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .11
Operation. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .11 Failover Modes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .11 Design . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .12
Mode of operation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .12 CHAPTER 2 BFD Software Architecture . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 15 BFD Base Module . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .15 BFD Abstraction Layer . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .16
BFD Hello Processing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .16 BFD Client Module. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .16 Client-Server IPC. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .17
Client and Server Restart Scenario. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .17 BFD Server Module. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .17 BFD and NSM. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .18
NSM BFD Module . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .18 BFD HAL/PAL Layer . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .18 Admin Down State. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .18
Echo Design . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .19 Session FSM Module. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .19 BFD Message Module. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .19
Interfaces. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .19 Management Interface. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .20 Application Protocol Interface . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .20
Distribution Interface . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .21 Distribution Line Card Interface. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .21 BFD-NSM Interface . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .21
System Design . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .21 Software Integration. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .21 Session Performance Table. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .21
BFD Session Discriminator Mapping Table . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .22 CHAPTER 3 BFD Application Protocol Modules . . . . . . . . . . . . . . . . . . . . . . . . . . 23 Modules. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .23 © 2015 IP Infusion Inc. Proprietary iii Contents
© 2015 IP Infusion Inc. Proprietary iii Contents BFD NSM Static Route Module . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 23 BFD BGP Module. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 23 BFD IS-IS Module . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 23
BFD OSPFv2 Module. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 24 BFD RIP Module . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 24 Interfaces. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 24
Application Protocol Interface. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 24 BFD NSM Management Interface . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 24 BFD OSPFv2 Management Interface. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 24 BFD IS-IS Management Interface . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 25
BFD BGP Management Interface. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 25 BFD RIP Management Interface . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 25 BFD NSM Static Interface . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 25 CHAPTER 4 Data Structures. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 27
bfd_master. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 27 bfd . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 29 rip_master . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 32
bfd_client_session_info . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 34 bfd_event_session. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 36 bfd_notify_event. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 36
bfd_storage_type . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 37 CHAPTER 5 OAM for BFD and MPLS. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 39 Overview . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 39 BFD Support for MPLS. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 39
BFD Support for VCCV . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 39 Architecture . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 40 Virtual Circuit Connectivity Verification. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 40 Signaling Capabilities from Local PE to Remote PE . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 40
Control Channel Messages . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 41 Operational Modes. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 41 BFD VCCV Capabilities Signaling . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 41
VCCV LSP Ping. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 42 VCCV LSP Ping Request Processing . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 42 BFD for MPLS LSP and VC. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 43
BFD for VCCV. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 44 Command API. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 46 nsm_mpls_bfd_api_fec_set . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 46
nsm_mpls_bfd_api_fec_unset . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 47 nsm_mpls_bfd_api_fec_disable_set . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 47 nsm_mpls_bfd_api_lsp_all_set . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 48 nsm_mpls_bfd_api_lsp_all_unset . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 49
nsm_mpls_bfd_api_vccv_trigger . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 49 CHAPTER 6 Network Services Module . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 51 Overview . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 51 Interfaces and Messages . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 52
iv © 2015 IP Infusion Inc. Proprietary Contents Interfaces. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .52 Messages. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .52 Command API . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .52
nsm_ipv4_if_bfd_static_set . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .53 nsm_ipv4_if_bfd_static_unset . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .53 nsm_ipv4_if_bfd_static_set_all . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .54 nsm_ipv4_if_bfd_static_unset_all . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .54
nsm_ipv6_if_bfd_static_set . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .55 nsm_ipv6_if_bfd_static_unset . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .56 nsm_ipv6_if_bfd_static_set_all . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .56 nsm_ipv6_if_bfd_static_unset_all . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .57
CHAPTER 7 Border Gateway Protocol . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 59 Overview . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .59 Interfaces and Messages . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .59
Interfaces. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .59 Messages. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .60 Command API . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .60
bgp_peer_bfd_set . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .60 bgp_peer_bfd_unset . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .61 CHAPTER 8 Intermediate System To Intermediate System. . . . . . . . . . . . . . . . . . 63 Overview . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .63
Interfaces and Messages . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .63 Interfaces. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .63 Messages. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .64
Command API . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .64 isis_if_bfd_set . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .64 isis_if_bfd_unset . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .65
isis_if_bfd_disable_set. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .65 isis_if_bfd_disable_unset. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .65 isis_bfd_all_interfaces_set. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .66
isis_bfd_all_interfaces_unset. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .67 CHAPTER 9 Open Shortest Path First. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 69 Overview . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .69 BFD OSPFv2 Module . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .69
Interfaces and Messages . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .69 Interfaces. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .69 Messages. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .70
OSPFv2 BFD Command API. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .70 ospf_if_bfd_set. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .71 ospf_if_bfd_unset. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .71
ospf_if_bfd_disable_set. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .72 ospf_if_bfd_disable_unset. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .72 ospf_bfd_all_interfaces_set. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .73
ospf_bfd_all_interfaces_unset. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .74 ospf_vlink_bfd_set. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .74 © 2015 IP Infusion Inc. Proprietary v Contents ospf_vlink_bfd_unset . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 75
CHAPTER 10 Routing Information Protocol. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 77 Overview . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 77 Interfaces and Messages . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 78
Interfaces . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 78 Messages. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 78 RIP and BFD Command API. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 79
rip_bfd_all_interfaces_set . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 80 rip_bfd_all_interfaces_unset . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 81 rip_bfd_neighbor_set . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 81
rip_bfd_neighbor_unset . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 82 rip_bfd_debug_set . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 83 rip_bfd_debug_unset . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 83 CHAPTER 11 BFD Authentication . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 85
Overview . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 85 Authentication Types . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 85 Software Design. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 85
Command APIs. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 86 bfd_construct_auth. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 86 bfd_proto_auth_set . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 87
bfd_proto_auth_unset . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 88 bfd_proto_multihop_auth_set. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 88 bfd_proto_multihop_auth_unset. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 89 bfd_construct_mpls_packet . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 90
bfd_construct_packet. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 90 bfd_construct_packet6. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 91 bfd_avl_if_config_write. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 91
bfd_mh_config_write_for_if . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 92 bfd_auth_process_validate . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 92 CHAPTER 12 Virtual Router . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 93
Overview . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 93 BFD API for VR. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 93 CHAPTER 13 BFD Command API. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 95
bfd_add_user_session. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 96 bfd_del_user_session . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 97 bfd_add_ipv6_user_session. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 98
bfd_del_ipv6_user_session . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 99 bfd_echo_interval_set . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 100 bfd_echo_interval_unset . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 100
bfd_proto_interval_set . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 101 bfd_proto_interval_unset . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 102 bfd_proto_multihop_interval_set . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 102 bfd_proto_multihop_interval_unset . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 103
bfd_protol_multihop_ipv6_interval_set. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 104 bfd_protol_multihop_ipv6_interval_unset. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 105 vi © 2015 IP Infusion Inc. Proprietary Contents bfd_echo_mode_set . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .106
bfd_echo_mode_unset . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .106 bfd_proto_slow_timer_set . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .107 bfd_proto_slow_timer_unset . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .107 bfd_proto_slow_timer_set_interface . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .108
bfd_proto_slow_timer_unset_interface . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .109 CHAPTER 14 BFD MIB Support . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 111 Overview . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .111 BFD Session Table . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .111
APIs . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .114 bfd_sess_lookup_by_index . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .114 bfd_sess_lookup_next_by_index. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .114
bfd_notification_set . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .115 bfd_api_set_sess_version_no. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .115 bfd_api_get_sess_version. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .116
bfd_api_set_sess_addr_type. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .116 bfd_api_get_sess_type . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .117 bfd_api_get_sess_mh_unlnk_mode . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .117 bfd_api_get_sess_disc . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .118
bfd_api_get_sess_rmte_disc. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .118 bfd_api_get_sess_dest_udp_port . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .119 bfd_api_set_sess_src_udp_port . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .119 bfd_api_get_sess_src_udp_port . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .120
bfd_api_set_sess_echo_src_udp_port . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .120 bfd_api_get_sess_echo_src_udp_port . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .121 bfd_api_set_sess_admin_status . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .121 bfd_api_get_sess_admin_status. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .122
bfd_api_get_sess_state. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .122 bfd_api_get_sess_rmte_heard_flag. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .123 bfd_api_get_sess_diag . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .123 bfd_api_get_sess_oper_mode. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .124
bfd_api_set_sess_dmnd_mode_dsrd_flag . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .124 bfd_api_get_sess_dmnd_mode_dsrd_flag . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .125 bfd_api_get_sess_cntrlplane_indep_flag. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .125 bfd_api_set_sess_interface. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .126
bfd_api_get_sess_interface. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .126 bfd_api_set_sess_addr_type. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .127 bfd_api_get_sess_addr_type. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .127 bfd_api_set_sess_addr6 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .128
bfd_api_get_sess_addr . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .128 bfd_api_set_sess_gtsm. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .129 bfd_api_get_sess_gtsm. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .129
bfd_api_set_sess_gtsm_ttl . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .130 bfd_api_get_sess_gtsm_ttl . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .130 bfd_api_set_sess_dsrd_min_tx_intvl. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .131 bfd_api_get_sess_dsrd_min_tx_intvl. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .131
© 2015 IP Infusion Inc. Proprietary vii Contents bfd_api_set_sess_req_min_rx_intvl. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 132 bfd_api_get_sess_req_min_rx_intvl. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 132 bfd_api_set_sess_req_min_echo_rx_intvl. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 133
bfd_api_get_sess_req_min_echo_rx_intvl. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 133 bfd_api_set_sess_detect_mult. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 134 bfd_api_get_sess_detectmult. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 134 bfd_api_get_sess_neg_intvl. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 135
bfd_api_get_sess_neg_echo_intvl. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 135 bfd_api_get_sess_neg_detect_mult. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 136 bfd_api_get_sess_auth_pres_flag. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 136 bfd_api_get_sess_auth_type. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 137
bfd_api_get_sess_auth_key_id . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 137 bfd_api_get_sess_auth_key. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 138 bfd_api_set_sess_stor_type. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 138 bfd_api_get_sess_stor_type . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 139
bfd_api_set_sess_row_status . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 139 bfd_api_get_sess_row_status . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 140 bfd_api_get_perf_pkt_in. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 140 bfd_api_get_perf_pkt_out. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 141
bfd_api_get_sess_up_time . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 141 bfd_api_get_perf_lastcomm_lost_diag. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 142 bfd_api_get_perf_sess_up_count . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 142 bfd_api_get_perf_disc_time. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 143
bfd_api_get_perf_pkt_in_hc. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 143 bfd_api_get_perf_pkt_out_hc. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 144 bfd_sess_lookup_by_disc_map_index. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 144 Traps and Scalar Objects . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 145
Notifications . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 145 Scalar Variables . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 145 Index . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 147 viii © 2015 IP Infusion Inc. Proprietary Preface
viii © 2015 IP Infusion Inc. Proprietary Preface This guide describes the ZebOS-XP application programming interface (API) for Bidirectional Forwarding Detection (BFD). Audience This guide is intended for developers who write code to customize and extend BFD. Conventions Table P-1 shows the conventions used in this guide. Table P-1: Conventions Convention Description Italics Emphasized terms; titles of books Note: Special instructions, suggestions, or warnings
monospaced type Code elements such as commands, functions, parameters, files, and directories Contents This guide contains these chapters: • Chapter 1, Introduction • Chapter 2, BFD Software Architecture • Chapter 3, BFD Application Protocol Modules • Chapter 4, Data Structures • Chapter 5, OAM for BFD and MPLS • Chapter 6, Network Services Module • Chapter 7, Border Gateway Protocol • Chapter 8, Intermediate System To Intermediate System • Chapter 9, Open Shortest Path First
• Chapter 9, Open Shortest Path First • Chapter 10, Routing Information Protocol • Chapter 11, BFD Authentication • Chapter 12, Virtual Router • Chapter 13, BFD Command API © 2015 IP Infusion Inc. Proprietary ix Preface • Chapter 14, BFD MIB Support Related Documents The following guides are related to this document: • Bidirectional Forwarding Detection Command Reference • Bidirectional Forwarding Detection Configuration Guide • Network Services Module Developer Guide
• Network Services Module Developer Guide • Network Services Module Command Reference • Installation Guide • Architecture Guide Note: All ZebOS-XP technical manuals are available to licensed customers at http://www.ipinfusion.com/support/ document_list. Support For support-related questions, contact support@ipinfusion.com. Comments If you have comments, or need to report a problem with the content, contact techpubs@ipinfusion.com. x © 2015 IP Infusion Inc. Proprietary Introduction CHAPTER 1
Introduction CHAPTER 1 The Bidirectional Forwarding Detection (BFD) module supports BGP, IS-IS, OSPFv2, and RIP protocols as part of the ZebOS-XP protocol suite. Protocols often rely upon a relatively slow “Hello” mechanism to detect failures when there was no hardware signaling to assist. Detection times in protocol modules are often no better than a few seconds. This delay is too long for critical
applications and represents a loss of data at very high processing rates. BFD works in conjunction with BGP, IS-IS, OSPFv2, and RIP to detect failures faster. Features BFD also provides the following features • Low-overhead, short-duration detection of failures along the path between adjacent forwarding engines • Rapid detection of communication failures between adjacent systems to more quickly establish alternative paths
• A single mechanism to detect liveliness over any media and in any protocol layer • Passive, Active, Synchronous, Asynchronous, and Demand modes of operation • Improved system performance when faster detection is required, because data-plane reachability detection is detached from control-plane functionality • Sub-second detection times, similar to those provided in SONET/SDH networks
• A separate process in ZebOS-XP works in conjunction with routing protocols and NSM to detect forwarding plane reachability to protocol next hops • Protocol modules support BFD irrespective of where BFD packet-sending operations take place; in the interfaces, data links, or to some extent, in the forwarding engines themselves • BFD is Graceful-Restart unaware. Whenever BFD timers expire, a session-down event is triggered to the protocol
module, and BFD maintains sessions for the protocol while it undergoes Graceful Restart • BFD state machine interactions, as defined in the IETF drafts, are supported • A faster mechanism to detect liveliness of static next-hops Operation BFD only works when both ends of the connection support BFD, making it incrementally deployable. With BFD, faster detection times are possible without overloading the control-plane CPU, thus allowing it to focus on other control plane
tasks. Because it enhances control plane protocol performance, BFD should be run at all times. When BFD is running, it provides critical functions, so timer values must be correctly configured. This is because very small timer values can cause flaps and large values can cause BFD detection to become redundant. If a BFD failure occurs, the time required for the backup system to come online can be just milliseconds, based on the data plane failure detection time desired. Failover Modes
Failover Modes BFD may be run in two failover modes: © 2015 IP Infusion Inc. Proprietary 11 Introduction • It shares the fate of the control plane. • It does not share the fate of the control plane. In non-fate-sharing mode, BFD is Graceful-Restart friendly, because it allows the data plane to run independently of the control plane. In fate-sharing mode, BFD may inhibit protocol Graceful-Restart mechanisms, due to its shorter
detection periods. Although the ZebOS-XP BFD module can be run in both modes, owing to the ZebOS-XP architecture, it runs only in a “non-fate-shared” mode. Design Each protocol module that supports BFD uses BFD client APIs to communicate with the BFD base module. These APIs are connected to and exchange information with the BFD server module. The BFD server module encodes and decodes messages from clients and configures sessions in the BFD base module. Using the BFD abstraction layer, the
base module configures relevant information for the BFD Hello processing module. In turn, the BFD Hello module does all packet processing and FSM-related functions. Session triggers and data plane-related information are passed by the Hello processing module back to the BFD base module via the abstraction layer. A BFD abstraction layer is supported to allow sessions to configure remotely when BFD is used in a distributed architecture. Mode of operation
Mode of operation BFD is supported in a monolithic architecture. BFD process runs on the same card (which may be the control card) along with other ZebOS-XP protocols. The BFD Abstraction Layer can be a dummy layer. The BFD Base Module directly calls functions in the BFD Packet processing module. The BFD Abstraction layer is a thin layer that provides abstractions and makes various direct function calls. Figure 1-1: BFD Mode of Operation
Figure 1-1: BFD Mode of Operation The HAL/PAL module attached to the BFD module in turn sends BFD packets to the hardware. 12 © 2015 IP Infusion Inc. Proprietary BFD Software Architecture CHAPTER 2 The Bidirectional Forwarding Detection (BFD) module works with most router architectures wherever hardware supports some level of BFD capabilities, and in situations where there is no hardware support at all. The BFD module
is designed to work in conjunction with application protocol modules (for example, OSPF, BGP, RIP) to enable them to configure BFD sessions and for the sessions to get the bidirectional forwarding failure notifications from BFD. The way each application reacts to a session-down event is application-specific. Figure 2-1: BFD Software Architecture BFD Base Module The BFD base module: • contains most of the functionality as defined in the BFD base specification. All protocol modules and the NSM
interact with the base module using the BFD client to program BFD for related functionality. Session information as configured by the application resides in the base module. • interacts with management modules, and is the data store for all relevant information configured by management. It stores all protocol-specific information and configures forwarding session-specific information to the Hello sending module.
sending module. • interacts with the NSM to get interface and VR/VRF-specific information. However, BFD itself does not use VR or VRF information. • contains the counter-polling mechanism that retrieves current counter values from the BFD forwarding module for BFD forwarding-state-related counters. Counters clear-on-read counters and the polling interval is 5 seconds by default. • receives forwarding -elated information from the BFD Hello Processing Module, including the trigger for session
Up/ Down and forwarding-related information. • is hitless-restart aware. A BFD session is not terminated, even when the BFD protocol module goes down. The BFD base module maintains the session for the period configured by each protocol or session. However, if the BFD session goes down, it silently stops the session. © 2015 IP Infusion Inc. Proprietary 15 BFD Software Architecture • tracks all interface-specific and multi-hop BFD information.
Sessions are identified by source address, destination address, client module identifier, interface index of the port, lower layer, and whether the session is multi-hop or not, for the applications. For protocol and management purposes, a session is identified by a system-wide local identifier that is unique across an individual system (or box). BFD Abstraction Layer The BFD Abstraction Layer abstracts the forwarding module from the base BFD functionality: In other words, the hello-
sending process is abstracted from the base BFD module. Whenever a global parameter is changed in the base module, the information is propagated to the hello-processing module via the line card. The abstraction layer also abstracts the (reverse data flow) Hello-sending module to the BFD base module. This implies that all session triggers to the BFD base module pass from the BFD hello layer through the abstraction layer.
All data plane functionality, such as counters, are polled by the base module through the abstraction layer. BFD Hello Processing The Hello Processing module processes hellos received from a neighbor and sends hellos when a session is configured from the BFD base module. This module keeps track of packet statistics and other forwarding plane functionality. All shadow session information required for forwarding is maintained by this module.
The hello-processing module can be co-located with the BFD process in a monolithic architecture (HAVE_BFD_MONO), and in the hardware or software on a different card or with a different process in a distributed architecture (HAVE_BFD_MAIN or HAVE_BFD_LINE). BFD hello processing triggers BFD session Up/ Down events in the base module. In hardware, the Hardware Services Layer/Hardware Abstraction Layer (HSL/HAL) polls for the session Up/Down message, then notifies BFD appropriately.
appropriately. BFD Client Module The BFD client is a library attached to all application protocol modules, the NSM, and other modules that require the services of the BFD base module. The BFD client module is responsible for encoding and decoding messages between the BFD base module and a client application, such as NSM or a ZebOS-XP protocol module. The BFD client in turn calls appropriate functions registered, based on the message received from the BFD base module. This module
configures client-specific session information such as session add, session delete and session modify. Information also includes Graceful Restart-related information. The BFD client is triggered by a BFD server for a session Down/Up or a BFD protocol Down/ Up, in which case it submits information to the respective protocol module. The BFD client layer propagates various BFD messages to the
protocol module identified by the BFD message module. It follows the NSM client module design in that it abstracts the BFD message module to the protocol module. The main tasks of the client module are: • BFD message communication management • BFD session management • Graceful restart management First, the client module maintains BFD message communication. It initiates a BFD message to the BFD server in the
initialization phase, and ensures that the connection is up and running until termination. In the event of communication loss, the client retries initiation to the BFD server at specific intervals. This avoids dependency on protocol module startup order. 16 © 2015 IP Infusion Inc. Proprietary BFD Software Architecture Second, the client module maintains a BFD session to multiplex BFD messages coming from the BFD server to a
protocol module. This is necessary because certain protocol modules require an identical BFD session for different entries, for example, the NSM module for static route next-hop detection. Overall performance is improved for multiple- entry lookup, and BFD messages are minimized between the client and server by avoiding the duplicate messages for the same session. Finally, the module takes care of graceful-restart. It synchronizes BFD session information with the
BFD server in case of planned or unplanned graceful-restart events. It automatically detects the server existence by re- connecting to the server periodically and re-issues BFD session requests to the server once it connects. Client-Server IPC BFD solution provides a modularized architecture by separating protocol-specific functions (BFD client) from the core BFD module (BFD server). This ensures that CPU-intensive BFD operations do not affect the main task of a protocol
module. Communication between the BFD server and the BFD client is handled through a standard client-server IPC. BFD server creates a socket and waits for the connection requests from the BFD clients. BFD clients, on the other hand, initiate a connection during the start-up phase, and make sure that the connection is up by doing a connection retry just in case the BFD server is not up and running. After connection set-up, the BFD client issues BFD message
(session add and the session delete) to the BFD server so that it starts track reachability. When the BFD server identifies a state change in a BFD session, for example, session up or session down, it propagates this to BFD clients via the BFD client-server IPC. The IPC is closed when either the BFD client or server terminates their process. Client and Server Restart Scenario The ZebOS-XP BFD module supports BFD server and client restart scenarios. Here is how: BFD Server Restart
BFD Server Restart In the case of BFD server restart, for example, the BFD server process is upgraded, BFD clients retry the IPC connection until the server comes back up and accepts the connections from the client. Once connections are established, clients will re-issue BFD session requests to the server in a batch process so that the BFD server starts maintaining BFD sessions for clients, just as before the restart took place. BFD Client-Server Restart
BFD Client-Server Restart In the case of BFD client restart, for example, OSPFv2 graceful restart, a BFD client supplies restart parameters (such as grace period) to the BFD server beforehand, if it is able to do so. When a client terminates the process, the BFD server maintains a BFD session for the client. Clients can re-issue BFD session requests to the server after restart occurs, just like the normal start process, and override previously requested sessions maintained by the server during
the restart period. The BFD server flushes the sessions that are not overridden after the grace period expires. BFD Server Module The BFD server module manages BFD message handling on the BFD server side with the following tasks: • BFD message communication management • BFD client management • Graceful restart management First, it accepts a BFD message communication request from a protocol module by opening a streaming socket, either
a Unix domain socket (default) or a TCP socket. It follows same approach to NSM message communication using a different Unix path (/tmp/.bfdserv) or port (TCP/4600). Second, it maintains BFD clients to correctly propagate BFD session messages to the client, and avoids duplicate client connections from the same protocol module. Finally, it synchronizes BFD session information during graceful restart, both for the protocol modules and the BFD server. © 2015 IP Infusion Inc. Proprietary 17
© 2015 IP Infusion Inc. Proprietary 17 BFD Software Architecture BFD and NSM The NSM BFD module is responsible for BFD-specific interactions required in NSM, including checking the connectivity to a static route next hop, which is configured in NSM. This module is similar to a protocol client module. The difference between NSM and other protocols is that, unlike protocols that set a trigger to BFD when a particular neighbor entity is
discovered, NSM static routes have no protocol-specific information. Therefore, sessions for NSM static routes need to be persistent. Note: BFD support for NSM static routes is not available in ZebOS-XP. NSM BFD Module This is the plug-in module for NSM that supports BFD capability for both IPv4 and IPv6. It manages the following tasks in addition to initialization and termination of the BFD client module: • Callback registration for the BFD session-event handling
• Session initiation towards BFD in OAMD for static-route next hops • Static-route function handling calls based on the callback trigger received from BFD Currently, NSM applies BFD as the nexthop reachability-detection method only for IPv4 static routes. It adds a BFD session when NSM creates a static route entry in the NSM RIB, and deletes the session when NSM removes the static route from the NSM RIB.
route from the NSM RIB. A BFD client session key is generated with a combination of outgoing interface index as the BFD interface index, the IP address of the outgoing interface corresponding to the static route, and the nexthop IP address as the BFD destination address. A persistent session flag is set for all sessions, and the multi-hop flag is set if the nexthop address is not in the
same subnet as the outgoing interface address. A single BFD session is initiated for all static routes configured on a specified interface, using, or resolving to, a designated directly-connected nexthop address. In other words, for multiple static routes using the same nexthop address through a particular interface, only a single BFD session exists. Callback functions are registered so NSM can respond to BFD session events, for example, session up, or session
down. Enabling or disabling the static route feature on an interface basis or globally, on all interfaces, triggers the creation or deletion of BFD sessions on a specified interface. When all static routes for a given interface and nexthop are removed from the configuration, only then is the corresponding BFD session deleted. The ADMIN_DOWN flag for the BFD session-down request is set if the session-down request is triggered by an operator command. BFD HAL/PAL Layer
BFD HAL/PAL Layer The BFD HAL/PAL layer is an API layer exposing the APIs to send BFD packets over hardware with appropriate encapsulations. This layer currently serves to send BFD packets out of an interface in a session to a peer. Since there is no support in the hardware module, the PAL module is the only one currently populated and defined. Admin Down State BFD allows an administrative down (admin down) state on each interface for a single-hop session, or on a neighbor
basis for a multi-hop session. In this state, hellos are sent with the session state to admin down. This allows the peer to bring down the BFD sessions without bringing down the client session. 18 © 2015 IP Infusion Inc. Proprietary BFD Software Architecture Echo Design BFD Echo mode is configurable on a per-interface basis for all single-hop BFD sessions. BFD echo mode is not defined for multi-hop sessions. To send a packet in echo mode a session must be in the Up state. Once the session is
up, an echo packet is sent to the reserved BFD echo port addressed to its own address at the IP layer and the peer at the link layer. This tests the actual forwarding path. Echo mode can be active in both demand and asynchronous mode. Session FSM Module The BFD FSM is maintained in the BFD Packet Processing module. A session can be in any of the following states: Admin Down. The session has been administratively brought down. .
Down. The session is in the Down state; no valid packet from the neighbor has been received. . Init. This state is reached when a packet from a neighbor has been received, however the neighbor lists the session in . the Down state, so a three-way handshake is not complete. Up. This state is reached when both the ends of the session have received valid packets from the neighbor and the . three-way handshake is complete. BFD Message Module
BFD Message Module The message module manages BFD client and server communication. It follows the same design principle as the NSM client and server communication for these reasons: • Robustness • Extensibility • Reliability • Portability Robustness of the NSM message module is one of the key features of the ZebOS-XP modularized architecture. The BFD message module also uses the TLV message format, like NSM, so it is also fully extensible. The underlying IPC
mechanisms, Unix domain socket (default) or TCP, is also common to NSM, thus guaranteeing message delivery and portability. Interfaces The BFD module interacts with external modules, as shown in the diagram that follows. The main interfaces are to: • Management (SNMP/CLI) • Application Protocol(s) • BFD Distribution Layer • NSM APIs • HAL/PAL APIs © 2015 IP Infusion Inc. Proprietary 19 BFD Software Architecture Figure 2-2: BFD Module interfaces Management Interface
Management Interface The BFD Management module consists of the CLI modules. A management interface module is required to program BFD-related parameters in the BFD module. Typical operations are to set various timer values, and the BFD mode, whether echo or asynchronous, on a router or interface basis. The management interface is also used to set the parameters for multi-hop BFD sessions. Application Protocol Interface
Application Protocol Interface The BFD Application Protocol Interface (API) provides the interface to the application protocols requiring forwarding plane liveliness detection. Typical operations are to create, delete, or update a new session. Another operation is to specify BFD Graceful Restart parameters, if any, for a session. 20 © 2015 IP Infusion Inc. Proprietary BFD Software Architecture Distribution Interface
BFD Software Architecture Distribution Interface The BFD Distribution Interface provides the BFD base module interface to the BFD Hello module. The Hello module can either be co-located within the process, in a separate process on the same card or another card, or in the hardware. The distribution interface provides a layer of abstraction to the BFD base module so that it can work independently of the system architecture. Typical operations are to set various timer values, and the BFD mode,
whether echo or asynchronous, on a router or an interface. It is also sets parameters for multi-hop BFD sessions. Distribution Line Card Interface The BFD Distribution Line Card Interface provides the BFD packet processing module from the interface to the BFD Base module. The Packet module can either be co-located within the base module process, in a separate process on the same card or another card, or in the hardware. The Line Card Interface module provides a layer of abstraction to
the BFD packet processing module so that it can work independently of the system architecture. Typical operations for this module are to get information from the Base module, and send information back to the Main card module. It is also used to set parameters for multi-hop BFD sessions. BFD-NSM Interface The BFD to NSM interface provides an interface to NSM for forwarding plane liveliness detection of static routes.
Typical operations for this model are creating a new session, or deleting or updating an existing session. It is also necessary to specify BFD Graceful-Restart parameters for a session. System Design BFD can run in a pizza box or on a chassis-based system. For a pizza box, the monolithic version of BFD will generally be used, although the distributed version, with the hello-sending functionality, running either as a separate process or
in the hardware, can also be used. For a chassis-based system, it is generally advisable to run the BFD base module, along with other control plane processes, in the central control processor. The BFD Hello processing modules can be distributed across the line cards where the Hello processing is run either in the software or in the hardware. Software Integration BFD base module interacts with other modules, such as NSM and protocol modules, via the BFD client. The BFD client
library in the protocol modules connects to the BFD server library in the BFD base module using the socket interface. Session Performance Table The BFD session performance table (bfdSessPerfTable) is used for collecting BFD performance counts on a per session basis. This table is an augment to the BFD session table; therefore the index for this table is bfdSessIndex. An entry in this table is created by a BFD-enabled node for every BFD Session. The bfdCounterDiscontinuityTime is used
to indicate potential discontinuity for all counter objects in this table. All objects in this table are of read-only type, so no Set operations are allowed. The Session Table functions are also used to retrieve the BFD sessions. BFD maintains an array of two 32-bit value to support both 64-bit and 32-bit versions of a counter object. When SNMP requests are received for a 32-bit object, the 0th index of the array is used to return value to the user. When SNMP requests are
received for a 64-bit object, both the 0th and the 1st index of the array are returned to the user. © 2015 IP Infusion Inc. Proprietary 21 BFD Software Architecture BFD Session Discriminator Mapping Table The BFD Session Discriminator Mapping Table (bfdSessDiscMapTable) maps a local discriminator value to the associated BFD session’s BfdSessIndexTC used in the bfdSessTable. The index used is the BFD session’s local
discriminator. The object in this table is of type read-only, therefore, no Set operation is allowed. 22 © 2015 IP Infusion Inc. Proprietary BFD Application Protocol Modules CHAPTER 3 This chapter discusses the application protocol modules that interact with the BFD protocol. Modules The following subsection describes the external modules that interact with the BFD client. Refer to Chapter 2, BFD Software Architecture to see a diagram of this interaction. BFD NSM Static Route Module
BFD NSM Static Route Module BFD for NSM static routes is a core module that handles the static route functionality based on BFD session updates. NSM searches all Routing Information Base (RIB) entries upon receiving a BFD session event, which uses the specified next-hop address and outgoing interface from its routing table entries. The next-hop could match any one of the multiple next-hops stored in the RIB entry, which may be in either the active or inactive state.
Refer to Chapter 6, Network Services Module for more information. BFD BGP Module This is the plug-in module for BGP to support BFD capability for both IPv4 and IPv6. It manages the following tasks in addition initialization and termination of the BFD client module: • BFD session handling for the BGP peer-reachability detection • Callback registration for the BFD session-event handling
The BGP BFD module applies BFD as the peer-reachability detection for both iBGP peers and eBGP peers. It adds the BFD session when a BGP peer reaches the ESTABLISHED state and deletes it if the peer moves down from the ESTABLISHED state. Refer to Chapter 7, Border Gateway Protocol for more information. BFD IS-IS Module This is the plug-in module for IS-IS to support BFD capability for both IPv4 and IPv6. It manages the following tasks in
addition to initialization and termination of the BFD client module: • BFD session handling for IS-IS neighbor-reachability detection • Callback registration for BFD session-event handling This module applies BFD as the neighbor-reachability detection protocol for both a shared link and a point-to-point link. It adds a BFD session when an IS-IS neighbor is in the Full state, except for a shared link. A session is added only
when either the neighbor or itself is Designated Intermediate System (DIS) on a shared link to prevent an unnecessary full mesh of the BFD session on shared media. It deletes the BFD session when the neighbor is below Full state. Refer to Chapter 8, Intermediate System To Intermediate System for more information. © 2015 IP Infusion Inc. Proprietary 23 BFD Application Protocol Modules BFD OSPFv2 Module
BFD OSPFv2 Module This is the plug-in module for OSPFv2 to support BFD capability. It manages the following tasks: • BFD session handling for OSPF neighbor reachability detection • Callback registration for BFD session-event handling The OSPFv2 BFD module applies BFD as the neighbor-reachability detection protocol for both standard shared links and OSPF virtual links. It adds a BFD session when an OSPF neighbor goes beyond the OSPF two-way state, thus
avoiding an unnecessary full mesh of the BFD session on shared links. Refer to Chapter 9, Open Shortest Path First for more information. BFD RIP Module This is the plug-in module for RIP to support BFD capability. It manages the following tasks: • BFD session handling for RIP neighbor reachability detection • Callback registration for BFD session-event handling When RIP-BFD support is enabled for all interfaces or a specific neighbor, a new BFD session is added. RIP registers
with BFD, which triggers the creation of a BFD session for a neighbor. BFD then creates a session for the given neighbor. RIP maintains a configured neighbor list in a RIP instance for all neighbors for which BFD is enabled. New neighbors are automatically enabled for BFD when the update packets are received. Refer to Chapter 10, Routing Information Protocol for more information. Interfaces The following subsection describes the external interfaces that interact with the BFD client.
Application Protocol Interface The BFD Application Protocol Interface is the interface to the application protocols requiring forwarding plane liveliness and nexthop data plane failure detection. Typical operations supported are to create, delete or update sessions. It is also required to specify any BFD Graceful restart parameters for a session. BFD NSM Management Interface The BFD NSM interface provides forwarding plane liveliness and nexthop data plane failure detection of static routes.
Typically, this module creates, deletes or updates sessions. It is also required to specify any BFD Graceful restart parameters for a session. BFD OSPFv2 Management Interface The OSPFv2 management interface provides forwarding plane liveliness detection of static routes. Typically, this module creates, deletes or updates sessions. It is also required to specify any BFD Graceful restart parameters for a session. 24 © 2015 IP Infusion Inc. Proprietary BFD Application Protocol Modules
BFD Application Protocol Modules BFD IS-IS Management Interface The BFD IS-IS interface provides forwarding plane liveliness detection of static routes. Typically, this module creates, deletes or updates sessions. It is also required to specify any BFD Graceful restart parameters for a session. BFD BGP Management Interface The BFD BGP interface provides forwarding plane liveliness detection of static routes. Typically, this module creates,
deletes or updates sessions. It is also required to specify any BFD Graceful restart parameters for a session. BFD RIP Management Interface The BFD RIP management interface provides forwarding plane liveliness detection of RIP neighbors. Typically, this module creates, deletes or updates sessions. It is also required to specify any BFD Graceful restart parameters for a session. BFD NSM Static Interface
session. BFD NSM Static Interface The BFD Static interface detects the static route nexthop data-plane failure. Typically, this module creates, deletes or updates sessions. © 2015 IP Infusion Inc. Proprietary 25 BFD Application Protocol Modules 26 © 2015 IP Infusion Inc. Proprietary Data Structures CHAPTER 4 This chapter describes the BFD data structures. Note: The nsm_master data structure is common for all ZebOS-XP protocols and is used in BFD functions. See the
Common Data Structures Developer Guide for a description of this data structure. bfd_master This data structure contains the system wide configuration parameters and variables that are used with the BFD Master. It is defined in oamd/oam.h. Member Description vr Virtual router (of type ipi_vr) nc NSM client (of type nsm_client) zg Library globals (of type lib_globals) bfd BFD instance (of type list) flags Flags if_table Interface table (of type avl_tree)
if_table Interface table (of type avl_tree) mh_table Multihop table (of type avl_tree) notifiers Notifier events (of type list) traps Traps of type vector image_type Bfd image type whose value are: • BFD_IMAGE_MONOLITHIC • BFD_IMAGE_DIST_MAIN • BFD_IMAGE_DIST_LINE debug Debugging flags one per virtual router cfg_debug Debugging flags one per virtual router bfd_notify_flag BFD Notification flag mpls_oam_list OAM master data list (of type list)
mpls_oam_list OAM master data list (of type list) oam_recvd_req_list OAM received request list (of type list) oam_vc_cache_list OAM Virtual Circuit (VC) cache list (of type list) mpls_oam_read OAM read thread oam_sock OAM socket descriptor © 2015 IP Infusion Inc. Proprietary 27 Data Structures Member Description oam_s_sock OAM socket descriptor oam_ipv4_nhop_cache OAM nexthop cache (of type route_table) Definition struct bfd_master { /* Pointer to VR. */ struct ipi_vr *vr; /* NSM Client. */
struct ipi_vr *vr; /* NSM Client. */ struct nsm_client *nc; /* Pointer to globals. */ struct lib_globals *zg; /* BFD instance list. */ struct list *bfd; /* BFD global flags */ u_char flags; /* Tree of all interfaces in the system */ struct avl_tree *if_table; /* Tree of all multihop session parameters in the system */ struct avl_tree *mh_table; /* BFD notifiers. */ struct list *notifiers [BFD_NOTIFY_MAX]; /* BFD SNMP trap callback function */ #ifdef HAVE_SNMP vector traps [BFD_TRAP_ID_MAX];
#ifdef HAVE_SNMP vector traps [BFD_TRAP_ID_MAX]; #endif /* HAVE_SNMP */ /* BFD image type - Monolithic or distributed */ u_char image_type; #define BFD_IMAGE_MONOLITHIC 1 #define BFD_IMAGE_DIST_MAIN 2 #define BFD_IMAGE_DIST_LINE 3 /* Debugging flags one per VR */ u_int32_t debug; u_int32_t cfg_debug; /* BFD Notification flag */ bool_t bfd_notify_flag; #ifdef HAVE_MPLS_OAM /* MPLS OAM Master Data */ struct list *mpls_oam_list; struct list *oam_recvd_req_list; struct list *oam_vc_cache_list;
struct list *oam_vc_cache_list; struct thread *mpls_oam_read; int oam_sock; int oam_s_sock; struct route_table *oam_ipv4_nhop_cache; #endif /* HAVE_MPLS_OAM */ 28 © 2015 IP Infusion Inc. Proprietary Data Structures }; bfd This data structure contains the configuration parameters and structures that are used with BFD. It is defined in the oamd/oam.h file. Member Description bfd_id BFD identifier next_sock Next socket descriptor start_time BFD start time bm BFD master (of type bfd_master)
bm BFD master (of type bfd_master) bv BFD VRF binding (of type bfd_vrf) router_id Router Identifier address (of type pal_in4_addr) flags Administrative flag whose values are the following: • BFD_PROC_UP • BFD_PROC_DESTROY fd BFD socket descriptor for read and write operations config Configuration variable proto_info Protocol info (of type bfd_proto_info) bi BFD global interface structure Sess List of all session for particular instance (of type list) loc_disc Local discriminator
loc_disc Local discriminator g_echo_allowed Global echo mode g_slow_timer Globally configured slow timer value trap_count Trap count notify_time Notification time (of type pal_time_t) sess_key_main Session key main (of type avl_tree) sess_mpls Session table based on FTN ID related to MPLS (of type avl_tree) sess_mpls_egress Session table based on Remote Disc, Destination address sess_vccv Session table based on incoming VC label
sess_fwd_vccv Session table based on incoming VC label for Virtual Circuit Connection Verification (VCCV) related session sess_index Session table based on index © 2015 IP Infusion Inc. Proprietary 29 Data Structures Member Description t_read_async Thread for async (of type thread) t_read_mhop Thread for multihop operation (of type thread) t_read_echo Thread for echo operation (of type thread) sock_async Socket descriptor for asynchronous operation sock_echo Socket descriptor for echo operation
sock_echo Socket descriptor for echo operation sock_mhop Socket descriptor for multihop operation sock_echo_send Raw socket descriptor sock_async_send UPD socket descriptor t_read_async6 Thread for async of IPV6 (of type thread) t_read_echo6 Thread for echo operation for IPV6 (of type thread) t_read_mhop6 Thread for multihop operation for IPV6 (of type thread) sock_echo6_send Socket descriptor for echo operation of IPV6 sock_async6_send Socket descriptor for asynchronous operation of IPV6
sock_multihop6_send Socket descriptor for multihop operation of IVP6 sess_key BFD session structure tree (of type avl_tree) sess_disc Session tree based on discriminator obuf Output buffer rcv_pkt Session pre-allocated receive packet Definition struct bfd { /* BFD ID. */ u_int16_t bfd_id; u_int16_t next_sock; /* BFD start time. */ pal_time_t start_time; /* Pointer to BFD master. */ struct bfd_master *bm; /* BFD VRF binding */ struct bfd_vrf *bv; /* BFD Router ID. */
struct bfd_vrf *bv; /* BFD Router ID. */ struct pal_in4_addr router_id; /* BFD Router-ID. */ /* Administrative flags. */ u_int16_t flags; #define BFD_PROC_UP (1 << 0) 30 © 2015 IP Infusion Inc. Proprietary Data Structures #define BFD_PROC_DESTROY (1 << 1) /* BFD socket for read/write. */ s_int32_t fd; /* Configuration variables. */ u_int16_t config; struct bfd_proto_info proto_info [IPI_PROTO_MAX]; /* Global interface structure - For all information not part of any particular interface*/
particular interface*/ struct bfd_interface *bi; #ifdef HAVE_BFD /* List of all session for this instance */ struct list *sess; #if defined (HAVE_BFD_MONO) || defined (HAVE_BFD_MAIN) /* Next local discriminator to be given */ u_int32_t loc_disc; /* Global echo mode */ bool_t g_echo_allowed; /* Globally configured slow timer value */ u_int32_t g_slow_timer; /* Trap variables */ u_int16_t trap_count; pal_time_t notify_time;
u_int16_t trap_count; pal_time_t notify_time; /* Configure tables information from applications - bfd_session structure tree */ struct avl_tree *sess_key_main [BFD_ADDR_FAMILY_MAX]; #ifdef HAVE_MPLS_OAM /* Session table based on FTN ID. This is for MPLS related sessions at Ingress - bfd_session structure tree. */ struct avl_tree *sess_mpls; /* Session table based on Remote Disc, Destination Address. This is for MPLS related sessions at Egress - bfd_session structure tree. */
struct avl_tree *sess_mpls_egress; #endif /* HAVE_MPLS_OAM */ #ifdef HAVE_VCCV /* Session table based on Incoming VC Label. This is for VCCV related sessions at Ingress - bfd_session structure tree. */ struct avl_tree *sess_vccv; /* Session table based on Incoming VC Label. This is for VCCV related sessions' forwarding entries - bfd_session_fwd structure tree. */ struct avl_tree *sess_fwd_vccv; #endif /* HAVE_VCCV */ /* Session table based on index - use the my_discriminator */
struct avl_tree *sess_index; #endif /* HAVE_BFD_MONO || HAVE_BFD_MAIN */ #if defined (HAVE_BFD_MONO) || defined (HAVE_BFD_LINE) /* Structure sockets for the monolithic or line card case - not required for distributed main card case */ struct thread *t_read_async; struct thread *t_read_mhop; © 2015 IP Infusion Inc. Proprietary 31 Data Structures struct thread *t_read_echo; /* udp recv socket for IPv4 */ s_int32_t sock_async; s_int32_t sock_echo; s_int32_t sock_multihop;
s_int32_t sock_echo; s_int32_t sock_multihop; s_int32_t sock_echo_send; /* Raw socket */ s_int32_t sock_async_send; /* UDP socket */ #ifdef HAVE_IPV6 struct thread *t_read_async6; struct thread *t_read_echo6; struct thread *t_read_mhop6; /* udp recv socket for IPv6 */ s_int32_t sock_async6; s_int32_t sock_echo6; s_int32_t sock_multihop6; s_int32_t sock_echo6_send; /* Raw socket */ s_int32_t sock_async6_send; /* UDP socket */ s_int32_t sock_multihop6_send; #endif /* HAVE_IPV6 */
#endif /* HAVE_IPV6 */ /* Session based on IP Address/ ifindex from applications - bfd_session_fwd structure tree */ struct avl_tree *sess_key [BFD_ADDR_FAMILY_MAX]; /* Session tree based on your discriminator - bfd_session_fwd structure tree */ struct avl_tree *sess_disc; /* Output buffer and stream */ struct stream *obuf; /* Session pre-allocated receive packet */ u_char rcv_pkt [1600] ; #endif /* HAVE_BFD_MONO || HAVE_BFD_LINE */ #endif /* HAVE_BFD */ }; rip_master
#endif /* HAVE_BFD */ }; rip_master This data structure contains the system wide configuration parameters and variables that are used with the RIP Master. It is defined in the ripd/ripd.h file. Member Description vr Pointer to VR zg Pointer to globals rip RIP instance list config RIP global configuration flags RIP global flags if_table RIP global interface table if_params RIP interface parameter pool 32 © 2015 IP Infusion Inc. Proprietary Data Structures Member Description
Data Structures Member Description conf Debug flags for configuration term Debug flags for terminal global_route_changes RIP route changes global_queries RIP queries grace_period RIP grace period Definition struct rip_master { /* Pointer to VR. */ struct ipi_vr *vr; /* Pointer to globals. */ struct lib_globals *zg; /* RIP instance list. */ struct list *rip; /* RIP global configuration. */ u_char config; #define RIP_GLOBAL_CONFIG_RESTART_GRACE_PERIOD (1 << 0) /* RIP global flags. */
/* RIP global flags. */ u_char flags; #define RIP_GRACEFUL_RESTART (1 << 0) /* RIP global interface table. */ struct route_table *if_table; /* RIP interface parameter pool. */ struct list *if_params; /* RIP debug flags. */ struct { /* Debug flags for configuration. */ struct debug_rip conf; /* Debug flags for terminal. */ struct debug_rip term; } debug; /* RIP route changes. */ int global_route_changes; © 2015 IP Infusion Inc. Proprietary 33 Data Structures /* RIP queries. */
Data Structures /* RIP queries. */ int global_queries; #ifdef HAVE_RESTART /* RIP grace period. */ u_int32_t grace_period; #endif /* HAVE_RESTART */ }; bfd_client_session_info This data structure defines the configuration parameters that are used with the BFD client session. It is defined in the oamd/bfd/Bfd_common.h file. Member Description client Client identifier ifindex Interface index cli_ifindex BFD session interface index flags Flag whose values are: • BFD_MSG_SESSION_FLAG_MH
• BFD_MSG_SESSION_FLAG_MH • BFD_MSG_SESSION_FLAG_DC • BFD_MSG_SESSION_FLAG_PS • BFD_MSG_SESSION_FLAG_AD ll_type Prefix length sess_type Session type src_addr Source address (of type prefix) dst_addr Destination address (of type prefix) min_tx BFD minimum transmission interval min_rx BFD minimum reception interval multiplier BFD detection multiplier rem_disc Remote descriminator mpls_params Parameters for sessions related to MPLS LSP FEC vccv_params Parameters for VCCV related sessions
vccv_params Parameters for VCCV related sessions sess_index Session index Definition struct bfd_client_session_info { 34 © 2015 IP Infusion Inc. Proprietary Data Structures /* Client id */ module_id_t client; /* Interface index. */ u_int32_t ifindex; /* bfd session's interface index */ u_int32_t cli_ifindex; /* Flags of the session. */ u_char flags; #define BFD_MSG_SESSION_FLAG_MH (1 << 0) /* Multi-Hop. */ #define BFD_MSG_SESSION_FLAG_DC (1 << 1) /* Demand Circuit. */
#define BFD_MSG_SESSION_FLAG_PS (1 << 2) /* Persistent Session. */ #define BFD_MSG_SESSION_FLAG_AD (1 << 3) /* User Admin Down. */ /* Prefix length. */ u_char ll_type; /* Session type - not session type cannot be made just a flag */ u_char sess_type; /* Source and destination addresses. */ struct prefix src_addr; struct prefix dst_addr; /* BFD min Tx interval received from Application. */ u_int32_t min_tx; /* BFD min Rx interval recieved from Application. */ u_int32_t min_rx;
u_int32_t min_rx; /* BFD Detection Multiplier recieved from Application. */ u_int32_t multiplier; /* BFD Remote Discriminator received through BFD TLV in * LSP Ping for MPLS sessions at Egress. */ u_int32_t rem_disc; #ifdef HAVE_MPLS_OAM union { /* BFD Parameters for MPLS LSP FEC related sessions. */ struct bfd_mpls_params mpls_params; #ifdef HAVE_VCCV /* BFD Parameters for VCCV related sessions. */ struct bfd_vccv_params vccv_params; #endif /* HAVE_VCCV */ }addl;
#endif /* HAVE_VCCV */ }addl; © 2015 IP Infusion Inc. Proprietary 35 Data Structures #endif /* HAVE_MPLS_OAM */ #ifdef HAVE_SNMP u_int32_t sess_index; #endif /*HAVE_SNMP */ }; bfd_event_session The bfd_event_session enumeration defines all the session events. Constant Description BFD_EVENT_SESSION_ADMIN_DOWN The session is administratively configured to down BFD_EVENT_SESSION_DOWN Initial state on session creation
BFD_EVENT_SESSION_INIT Transits to “init” on reception of Down message from remote peer BFD_EVENT_SESSION_UP Transits to “UP” state on successful completion of a three-way handshake BFD_EVENT_SESSION_MAX Session Maximum Definition enum bfd_event_session { BFD_EVENT_SESSION_ADMIN_DOWN = 0, BFD_EVENT_SESSION_DOWN, BFD_EVENT_SESSION_INIT, BFD_EVENT_SESSION_UP, BFD_EVENT_SESSION_MAX }; bfd_notify_event The bfd_notify_event enumeration defines all the BFD notification events. Constant Description
Constant Description BFD_NOTIFY_PROCESS_NEW When a new process is added BFD_NOTIFY_PROCESS_DEL When a process is deleted BFD_NOTIFY_ROUTER_ID_CHANGED When router identifier is changed BFD_NOTIFY_LINK_NEW When a new link is added BFD_NOTIFY_LINK_DEL When a link is deleted BFD_NOTIFY_LINK_UP When a link is up BFD_NOTIFY_LINK_DOWN When a link is down BFD_NOTIFY_ADDRESS_NEW When a new address is added 36 © 2015 IP Infusion Inc. Proprietary Data Structures Constant Description
Data Structures Constant Description BFD_NOTIFY_ADDRESS_DEL When an address is deleted BFD_NOTIFY_MAX Maximum Definition enum bfd_notify_event { BFD_NOTIFY_PROCESS_NEW = 0, BFD_NOTIFY_PROCESS_DEL, BFD_NOTIFY_ROUTER_ID_CHANGED, BFD_NOTIFY_LINK_NEW, BFD_NOTIFY_LINK_DEL, BFD_NOTIFY_LINK_UP, BFD_NOTIFY_LINK_DOWN, BFD_NOTIFY_ADDRESS_NEW, BFD_NOTIFY_ADDRESS_DEL, BFD_NOTIFY_MAX }; bfd_storage_type The bfd_storage_type enumeration defines all the BFD storage types. Constant Description
Constant Description ST_OTHER When storage is other ST_VOLATILE When storage type is volatile ST_NONVOLATILE When storage type is nonvolatile ST_PERMANENT When storage is permanent ST_READONLY When storage is read only Definition enum bfd_storage_type { ST_OTHER = 1, ST_VOLATILE, ST_NONVOLATILE, ST_PERMANENT, ST_READONLY }; © 2015 IP Infusion Inc. Proprietary 37 Data Structures 38 © 2015 IP Infusion Inc. Proprietary OAM for BFD and MPLS CHAPTER 5
OAM for BFD and MPLS CHAPTER 5 This chapter describes the ZebOS-XP Operations, Administration, and Maintenance Daemon (oamd), which manages both the BFD and Multiprotocol Label Switching (MPLS) OAM. Base BFD functionality resides within the OAM module. Included in this chapter are descriptions of the OAM command functions. Overview OAM for MPLS and BFD manages the following: • Processing ping or trace requests from MPLS ONM
• Processing ping or trace requests from MPLS ONM • Sending requests and processing replies to or from Network Service Module (NSM) to fetch label information and label switched paths (LSP) Target Forwarding Equivalency Class (FEC) stack information to encode or decode LSP Echo requests or reply packets • Providing the ability to trigger periodic LSP ping packets from modules within OAMD
• Reusing the inputs received from NSM for further requests or reply messages if the node is the Ingress or Egress node for the FEC in the message • Establishing communication with the MPLS Forwarder (mplsfwd) module to send and receive MPLS OAM packets to or from the forwarder • Sending periodic LSP Ping Echo requests with additional BFD TLV for an FEC when a BFD session is configured for that FEC at Ingress
for that FEC at Ingress • Creating a BFD session when a valid LSP ping echo request with a BFD TLV is received at Egress • Bringing down the BFD session when an LSP ping failure occurs BFD Support for MPLS To support MPLS LSP, the BFD module has been enhanced to handle the following capabilities: • Creating new trees to store MPLS LSP-related sessions at Ingress and Egress nodes • De-multiplexing received BFD control packets related to MPLS sessions using a remote discriminator (RD) field
• Sending BFD control packets related to MPLS sessions to the MPLS forwarder to send the packets over MPLS LSP with necessary label encapsulation BFD Support for VCCV To support BFD Virtual Circuit Connectivity Verification (VCCV) sessions, BFD has been enhanced to handle the following capabilities: • Creating new trees for BFD-VCCV sessions and session forwarding entries • Sending BFD control packets related to VCCV to the MPLS Forwarder to send the packets over LSP with the
necessary label encapsulation © 2015 IP Infusion Inc. Proprietary 39 OAM for BFD and MPLS Architecture The architecture of the MPLS OAM feature is depicted in Figure 5-1, below. Figure 5-1: Module interaction for MPLS OAM Virtual Circuit Connectivity Verification Virtual Circuit Connectivity Verification provides a control channel (CC) between a pseudowire’s ingress and egress points, over which connectivity verification (CV) messages can be sent. Connectivity messages are used for end-to-
end fault detection and diagnosis to determine a pseudowire’s true operational state. The design of VCCV comprises the following capabilities: • A means of signaling BFD-VCCV capabilities of a local PE (provider edge) to a remote PE • Encapsulation of the BFD-VCCV control channel messages that allow the receiving PE to intercept, interpret, and process them locally as OAM messages • Provision for the operation of various VCCV operational modes transmitted within the VCCV messages
Signaling Capabilities from Local PE to Remote PE Dynamic Virtual Circuits When a pseudowire (PW) is initially signaled using the Label Discovery Protocol (LDP), a label mapping message is sent from the initiating PE to the receiving PE requesting that a pseudowire be set up. The label mapping message has been extended to include BFD-VCCV capability information. This information informs the receiving PE about the
combination of Control Channel (CC) and BFD Connectivity Verification (CV) types, and whether the sending PE is capable of receiving PE. If the receiving PE agrees to establish the PW, it returns its capabilities in the subsequent signaling message to indicate the CC and (BFD) CV types it is capable of processing. Static Virtual Circuits During Virtual Circuit (VC) creation, if VCCV requires a VC, the user has to specify the CC type to use. If BFD-VCCV is
required, then the BFD CV type must be provided as input. Note: It is not necessary to specify a CV type during VC creation. 40 © 2015 IP Infusion Inc. Proprietary OAM for BFD and MPLS Control Channel Messages VCCV encapsulation allows the control channel to be processed similar to data traffic for the PW, in order to test the data plane at the PE. It also allows the PE to intercept and process VCCV messages instead of forwarding them out of
the Access Circuit (AC) toward the Customer Edge (CE) as if they were data traffic. For MPLS PWs, the following CC types and CV types are supported. Based on the CC type and CV type, a VCCV message is encapsulated. Control Channel Types • Type 1: PWE3 Control Word with 0001b as first nibble • Type 2: MPLS Router Alert Label • Type 3: MPLS PW Label with TTL == 1 Connectivity Verification Types • LSP Ping • BFD IP/UDP-encapsulated, for PW Fault Detection only
• BFD IP/UDP-encapsulated, for PW Fault Detection and AC/PW Fault Status Signaling • BFD PW-ACH-encapsulated, for PW Fault Detection only • BFD PW-ACH-encapsulated, for PW Fault Detection and AC/PW Fault Status Signaling Operational Modes VCCV Control Channel type defines the control channels that VCCV can support. VCCV supports multiple CV types concurrently, but it only supports the use of a single CC type. A VCCV Control Channel can be in-band, and follow the
same path as PW data, or it can be out-of-band, meaning that the path may be different, because of the Equal Cost Multi-path (ECMP) behavior applied at the nodes. BFD VCCV Capabilities Signaling Figure 5-2 depicts BFD VCCV capabilities signaling. Figure 5-2: BFD VCCV Capabilities Signaling © 2015 IP Infusion Inc. Proprietary 41 OAM for BFD and MPLS VCCV LSP Ping Figure 5-3 depicts the sequence of operations for a VCCV LSP ping request. Figure 5-3: Sequence Diagram for VCCV LSP Ping
Figure 5-3: Sequence Diagram for VCCV LSP Ping VCCV LSP Ping Request Processing Figure 5-4 depicts the sequence for processing a VCCV LSP ping request. 42 © 2015 IP Infusion Inc. Proprietary OAM for BFD and MPLS Figure 5-4: Sequence Diagram for VCCV LSP Ping Request Processing BFD for MPLS LSP and VC BFD is used to detect an MPLS LSP data plane failure and periodic verification of VC using VCCV control channels. Figure 5-5: Data Flow Diagram for BFD-MPLS © 2015 IP Infusion Inc. Proprietary 43
© 2015 IP Infusion Inc. Proprietary 43 OAM for BFD and MPLS At Ingress—End 1 In Figure 5-5, steps 1 through 5 are executed in the same order, then BFD and LSP ping run independently. Step 1. NSM MPLS asks BFD for session addition or deletion information for an FEC with ftn-index as identifier and link-layer type as bfd_ll_mpls_lsp. Step 2. BFD, upon receiving a session add message from NSM with a link-layer type of bfd_ll_mpls_lsp,
generates a My Discriminator (MD) for the session, and adds an LSP ping echo request in the global oam_req_list with bfd_req flag set. The OAMD module sends an LSP ping echo request message towards the Egress with the BFD TLV set, including the local discriminator (LD) value. At this point, BFD is in passive state. At Egress—End 2 Step 3. Upon receipt of an LSP ping echo request with a BFD TLV, the FEC in the request is validated, then a multi-hop
BFD session is added with the MD of the the ingress LSR (label switched route) as the remote discriminator and link- layer type as bfd_ll_mpls_lsp. Step 4. If the LSP ping echo request message is valid, an echo reply is sent to the ingress node. The echo reply message may have the BFD TLV. For an initial echo reply packet, the BFD TLV is not inserted, but the local discriminator for that session is generated by BFD and included in the packet.
Step 5. At Egress, BFD runs in the active state, sending out the first BFD control packet with remote discriminator filled with the value received in the LSP ping echo request message. BFD for VCCV Figure 5-6 depicts the data flow for BFD for VCCV. Figure 5-6: Data Flow Diagram for BFD VCCV • At Ingress, an LSP ping echo request message is periodically sent at an interval configured by the user, while
configuring BFD for the FEC. These periodic LSP ping echo requests messages always include the BFD TLV. • The BFD session at the Ingress node takes the passive role and waits for the BFD messages to be received from the Egress node before sending BFD control packets. • BFD control packets are sent to the MPLS Forwarder for encapsulation with an MPLS LABEL, and then forwarded over the LSP for that FEC. 44 © 2015 IP Infusion Inc. Proprietary OAM for BFD and MPLS
OAM for BFD and MPLS • When an LSP ping fails (five consecutive echo time-outs occur) and the corresponding BFD session for that FEC is UP, then the BFD session is brought down. A session Down message is sent to NSM, which in turn notifies the LSP owner about its state. • NSM sends a BFD session delete message to BFD for an FEC when the FEC is removed or when the BFD configuration for the FEC is removed. In the latter case, the ADMIN_DOWN flag is set in the session-delete message.
message. • At Egress, BFD session is boot-strapped with the LSP Ping with the BFD TLV set. For sessions at the Egress, the BFD module itself acts as the protocol client. • BFD takes the active role at Egress. The My Discriminator information received from the Ingress LSR is used as the remote discriminator of the BFD session. As part of FSM processing, control packets are then routed to the Ingress LSR directly through the stack.
Ingress LSR directly through the stack. • At the Egress, after a session is created (in FSM Down state), a timer is added with a hold time of five seconds. If no more packets come from the Ingress for this session within the hold time, the session is deleted. • When a local discriminator is generated for a session at Egress, and is updated to the OAM module in BFD, the OAM module does not send any further session-add messages to BFD upon receipt of subsequent echo requests
with BFD TLVs for the same FEC from the same source. • At Egress, when a BFD session goes down, or if an Admin Down notificationis received from Ingress, a timer is activated with a timeout value calculated as “Detect. Interval * Negotiated Tx interval”. If the session does not come UP before the timer expires, it is deleted. • All BFD sessions for an LSP (from Ingress to Egress) are single-hop sessions; however, in the reverse direction (from Egress to Ingress), they are multi-hop sessions.
• The destination UDP port used for ingress-to-egress BFD single-hop sessions is 3784. The destination UDP port used for egress-to-ingress BFD multi-hop sessions is 4784. • BFD control packets and LSP-Ping packets have the same destination address prefix in the IP header. This address is in the 127/8 address range. • NSM sends a BFD session add message to BFD module when VC gets installed in the Forwarder and BFD is
configured for that VC. The link layer type for VCCV related sessions is set to ‘bfd_ll_mpls_vccv’. • Additional parameters sent to the BFD module to enable BFD to encapsulate and send BFD control packets over VC are VC ID, tunnel label, outgoing VC label, CC type, CV type, access interface index (ac_ix). • On receiving BFD session-add message from NSM, BFD creates a single-hop session in the sess_vccv AVL tree
with incoming VC Label as the key. The Label information and the CC type, CV type received during session add are stored in the bfd_vccv_params structure in the bfd_session and the bfd_session_fwd structures. • A session-add request is also sent to the BFD packet processing layer. In this layer, a new session forward entry is created and added to the sess_fwd_vccv tree. The key to the tree is the incoming VC Label. The tree is used to
identify the VCCV session for the first BFD control packet received with 0 in the remote discriminator field. • Once the session is added, based on the CV type, a BFD control packet is constructed and sent to the MPLS forwarder based on the encapsulation type. The following encapsulation types are defined for BFD VCCV packets: • If CV type is 0x20 or 0x10, BFD PW-ACH-encapsulation is used (without IP/UDP headers) • If CV type is 0x08 or 0x04, BFD IP/UDP-encapsulation is used
• BFD runs in active mode at both ends for VCCV-related sessions. • When a BFD control packet is received for VCCV-related sessions from the MPLS Forwarder, packet sanity is verified first. If a valid session exits, then the CC type over which the packet was received and the CV type of the packet is verified with the CC type and CV type for that VC. If they do not match. the packet is dropped, and the global counter ivccv_discards is incremented.
global counter ivccv_discards is incremented. • When a VC is removed, NSM sends a BFD session-delete message for the VC and the VC FIB is deleted. • A BFD session for a VC can be administratively brought down using a ping mpls command invoked by the user. © 2015 IP Infusion Inc. Proprietary 45 OAM for BFD and MPLS Command API The functions defined in this chapter are called by the OAM commands defined in the NSM Command Reference. Function Application
Function Application nsm_mpls_bfd_api_fec_set Sets the BFD fall-over check for the FEC of an LSP type (LDP, Resource Reservation Protocol (RSVP) or Static) nsm_mpls_bfd_api_fec_unset Removes the BFD fall-over check for the FECs of an LSP type nsm_mpls_bfd_api_fec_disable_set Disables the BFD fall-over check for the FEC or Trunk of an LSP type nsm_mpls_bfd_api_lsp_all_set Sets the BFD fall-over check for all FECs of an LSP type
nsm_mpls_bfd_api_lsp_all_unset Removes the BFD fall-over check for all FECs of an LSP type nsm_mpls_bfd_api_vccv_trigger Starts or stops the BFD VCCV session for a VC based on the specified operation nsm_mpls_bfd_api_fec_set This function sets the BFD fall-over check for the FEC of an LSP-type (LDP, RSVP, or Static). Syntax int nsm_mpls_bfd_api_fec_set (u_int32_t vr_id, char **lsp_name, char *input, u_int32_t lsp_ping_intvl, u_int32_t min_tx, u_int32_t min_rx, u_int32_t mult,
u_int32_t min_rx, u_int32_t mult, bool_t force_explicit_null) Input Parameters vr_id Virtual router ID of the VR in this context lsp_name LSP type name as LDP, RSVP, or Static input FEC as Prefix or Trunk name lsp_ping_intvl The LSP Ping Interval in seconds min_tx Minimum BFD transmission in milliseconds min_rx Minimum BFD reception in milliseconds mult BFD Detection Multiplier value force_explicit_null Flag option Output Parameters None Return Values
Flag option Output Parameters None Return Values NSM_API_SET_ERR_VR_NOT_EXIST when the VR does not exist 46 © 2015 IP Infusion Inc. Proprietary OAM for BFD and MPLS NSM_FAILURE when the nmpls element of the NSM master does not exist NSM_MPLS_BFD_ERR_LSP_UNKNOWN when the LSP type is unknown (other than LDP, RSVP, or Static) NSM_MPLS_BFD_ERR_INVALID_INTVL when the lsp_ping_interval is not within the valid range
NSM_MPLS_BFD_ERR_INVALID_PREFIX when the value of input cannot be converted to a valid prefix NSM_MPLS_BFD_ERR_ENTRY_EXISTS when the BFD entry already exists NSM_ERR_MEM_ALLOC_FAILURE when a memory allocation error occurs NSM_SUCCESS when the function succeeds nsm_mpls_bfd_api_fec_unset This function removes the BFD fall-over check for the FECs of an LSP type (LDP, RSVP, or Static). Syntax int nsm_mpls_bfd_api_fec_unset (u_int32_t vr_id, char **lsp_name, char *input) Input Parameters
Input Parameters vr_id Virtual router ID of the VR in this context lsp_name LSP type name as LDP, RSVP, or Static input FEC as Prefix or Trunk name Output Parameters None Return Values NSM_API_SET_ERR_VR_NOT_EXIST when the VR does not exist NSM_FAILURE when a generic error occurs NSM_MPLS_BFD_ERR_LSP_UNKNOWN when the LSP type is unknown (other than LDP, RSVP, or Static) NSM_MPLS_BFD_ERR_ENTRY_NOT_FOUND when the BFD entry does not exists NSM_SUCCESS when the function succeeds
NSM_SUCCESS when the function succeeds nsm_mpls_bfd_api_fec_disable_set This function disables the BFD fall-over check for the FEC or Trunk of an LSP-type. Syntax int nsm_mpls_bfd_api_fec_disable_set (u_int32_t vr_id, char *lsp_name, char *input) Input Parameters vr_id Virtual router ID of the VR in this context lsp_name LSP type name as LDP, RSVP, or Static input FEC as Prefix or Trunk name © 2015 IP Infusion Inc. Proprietary 47 OAM for BFD and MPLS Output Parameters None Return Values
Output Parameters None Return Values NSM_API_SET_ERR_VR_NOT_EXIST when the VR does not exist NSM_FAILURE when the nmpls element of the NSM master does not exist NSM_MPLS_BFD_ERR_LSP_UNKNOWN when the LSP type is unknown (other than LDP, RSVP, or Static) NSM_MPLS_BFD_ERR_INVALID_PREFIX when the value of input cannot be converted to a valid prefix NSM_MPLS_BFD_ERR_ENTRY_EXISTS when the BFD entry already exists NSM_ERR_MEM_ALLOC_FAILURE when a memory allocation error occurs
NSM_SUCCESS when the function succeeds nsm_mpls_bfd_api_lsp_all_set This function sets the BFD fall-over check for all FECs of an LSP type. Syntax int nsm_mpls_bfd_api_lsp_all_set (u_int32_t vr_id, char *lsp_name, u_int32_t lsp_ping_intvl, u_int32_t min_tx, u_int32_t min_rx, u_int32_t mult, bool_t force_explicit_null) Input Parameters vr_id Virtual router ID of the VR in this context lsp_name LSP type name as LDP, RSVP, or Static lsp_ping_intvl Specify LSP Ping Interval in seconds
Specify LSP Ping Interval in seconds min_tx Minimum BFD transmission in milliseconds min_rx Minimum BFD reception in milliseconds mult BFD Detection Multiplier value force_explicit_null Flag option Output Parameters None Return Values NSM_API_SET_ERR_VR_NOT_EXIST when the VR does not exist NSM_FAILURE when the nmpls element of the NSM master does not exist NSM_MPLS_BFD_ERR_LSP_UNKNOWN when the LSP type is unknown (other than LDP, RSVP, or Static)
NSM_MPLS_BFD_ERR_INVALID_INTVL when the lsp_ping_interval is not within the valid range 48 © 2015 IP Infusion Inc. Proprietary OAM for BFD and MPLS NSM_MPLS_BFD_ERR_INVALID_PREFIX when the FEC prefix/Tunnel-name is invalid NSM_MPLS_BFD_ERR_ENTRY_EXISTS when the BFD entry already exists NSM_SUCCESS when the function succeeds nsm_mpls_bfd_api_lsp_all_unset This function removes the BFD fall-over check for all FECs of an LSP type. Syntax int
Syntax int nsm_mpls_bfd_api_lsp_all_unset (u_int32_t vr_id, char *lsp_name) Input Parameters vr_id Virtual router ID of the VR in this context lsp_name LSP type name as LDP, RSVP, or Static Output Parameters None Return Values NSM_API_SET_ERR_VR_NOT_EXIST when the VR does not exist NSM_FAILURE when a generic error occurs NSM_MPLS_BFD_ERR_LSP_UNKNOWN when the LSP type is unknown (other than LDP, RSVP, or Static) NSM_SUCCESS when the function succeeds nsm_mpls_bfd_api_vccv_trigger
nsm_mpls_bfd_api_vccv_trigger This function starts or stops the BFD VCCV session for a VC based on the specified operation. Syntax int nsm_mpls_bfd_api_vccv_trigger (struct nsm_master *nm, uint32_t vc_id, u_char op) Input Parameters nm A pointer to NSM master structure vc_id Virtual circuit ID op Indicates start or stop operation Output Parameters None Return Values NSM_ERR_VC_ID_NOT_FOUND when the virtual circuit is not found
NSM_MPLS_BFD_VCCV_ERR_SESS_EXISTS when the BFD VCCV session already exists NSM_MPLS_BFD_VCCV_ERR_NOT_CONFIGURED when the BFD VCCV session configuration fails © 2015 IP Infusion Inc. Proprietary 49 OAM for BFD and MPLS NSM_MPLS_BFD_VCCV_ERR_SESS_NOT_EXISTS when the BFD BCCV session does not exists NSM_FAILURE when a generic error occurs NSM_SUCCESS when the function succeeds 50 © 2015 IP Infusion Inc. Proprietary Network Services Module CHAPTER 6
Network Services Module CHAPTER 6 This chapter describes the interaction between the Network Service Module (NSM) Static Route Module and the BFD module. Included in this chapter is an overview covering the interaction between the NSM and BFD modules, information about the interfaces between these two modules along with the messages exchanged between them, and a description of the static route command functions that support BFD. Overview
Overview BFD for NSM Static Route module is a core module that handles static route functionality based on BFD session updates. NSM searches all Routing Information Base (RIB) entries upon receiving a BFD session event, which uses the specified nexthop address and outgoing interface from its routing table entries. The nexthop could match any one of the multiple nexthops stored in the RIB entry, which may be in either the active or inactive state. In each of the
previously-matched nexthop entries that correspond to a static route (RIB type IPI_ROUTE_STATIC), a flag is set to indicate BFD reachability (NEXTHOP_FLAG_BFD_INACTIVE), based on the received session event. When a “session down” event is received, the NEXTHOP_FLAG_BFD_INACTIVE flag is set. When a “session up” event is received, the NEXTHOP_FLAG_BFD_INACTIVE flag is cleared. The RIB entry is further processed to
determine a path with an alternate nexthop or to modify the validity of the static route. If an alternate nexthop entry is available, the RIB entry is modified with the new nexthop. This may also result in static route being recursively resolved through a different nexthop and interface. If there are no valid nexthops available, the RIB entry is marked inactive and deleted from Forwarding Information Base (FIB). The static route status is updated to the client protocols into which it
has been re-distributed. The nexthop validity check in NSM verifies the NEXTHOP_FLAG_BFD_INACTIVE flag along with other conditions to determine the nexthop status. If NEXTHOP_FLAG_BFD_INACTIVE is set, the nexthop is considered as invalid and the next best nexthop is chosen for the given static route RIB entry. In case of multihop static routes, the recursively- resolved directly-connected gateway address and outgoing interface are already stored in the nexthop structure (rtype,
rifindex and rgate). They are passed as session parameters towards BFD. Thus, during the RIB entry lookup, it is also necessary to match the BFD session details with the recursive nexthop data. BFD for NSM manages the following tasks: • Initiating session towards BFD in OAMD for static route nexthops • Handling the static route function calls based on the callback trigger received from BFD
NSM triggers the creation of a BFD session for the interface and nexthop on which a static route is configured. BFD creates a BFD session on an interface for the given nexthop and aids in detecting a data plane nexthop failure. Only one BFD session is created for all static routes with the same nexthop. BFD session modifications are conveyed from the BFD server back to the NSM client in the form of events. NSM processes these events to decide and mark the corresponding static routes’ validity.
corresponding static routes’ validity. © 2015 IP Infusion Inc. Proprietary 51 Network Services Module Interfaces and Messages This section describes the interfaces between BFD and NSM and provides a list of the messages that are exchanged between these modules. Interfaces NSM interacts with the base module using a BFD client to program BFD for related functionality. The BFD client interacts with external modules including the NSM Management and NSM Static interfaces.
BFD NSM Management Interface The BFD NSM Interface is the interface to the NSM module for forwarding plane liveliness and nexthop data plane failure detection of static routes. Typical operations supported are to create, delete or update sessions. It is also required to specify any BFD Graceful restart parameters for a session. BFD NSM Static Interface The BFD NSM Static Interface provides an interface to the NSM module for detecting the static route nexthop data-
plane failure. The typical operations supported are to create, delete or update sessions. Messages The following messages are exchanged between the BFD client and the BFD NSM Management Interface: • BFD_SESSION_ADD • BFD_SESSION DEL • BFD_SESSION_REM • BFD_SESSION_DISABLE • BFD_SESSION_NO_DISABLE The following messages are exchanged between the BFD client and the BFD NSM Static Interface: • NSM_BFD_STATIC_SESSION_INVALID_OP • NSM_BFD_STATIC_SESSION_ADD • NSM_BFD_STATIC_SESSION_DEL
• NSM_BFD_STATIC_SESSION_DEL • NSM_BFD_STATIC_SESSION_REM • NSM_BFD_STATIC_SESSION_ADMIN_DEL Command API The NSM module uses the following static route functions for BFD. The functions defined in this section are called by the commands described in the Bidirectional Forwarding Detection Command Reference. Function Application nsm_ipv4_if_bfd_static_set Configures BFD static route support on an interface for address family IPv4 for a given VR
nsm_ipv4_if_bfd_static_unset Removes BFD static route support on an interface for address family IPv4 for a given VR 52 © 2015 IP Infusion Inc. Proprietary Network Services Module Function Application nsm_ipv4_if_bfd_static_set_all Configures BFD static route support on all interfaces for address family IPv4 for a given VR nsm_ipv4_if_bfd_static_unset_all Removes BFD static route support on all interfaces for address family IPv4 for a given VR
nsm_ipv6_if_bfd_static_set Configures BFD static route support on an interface for address family IPv6 for a given VR nsm_ipv6_if_bfd_static_unset Removes BFD static route support on an interface for address family IPv6 for a given VR nsm_ipv6_if_bfd_static_set_all Configures BFD static route support on all interfaces for address family IPv6 for a given VR nsm_ipv6_if_bfd_static_unset_all Removes BFD static route support on all interfaces for address family IPv6 for a given VR
nsm_ipv4_if_bfd_static_set This function configures BFD static route support on an interface for address family IPv4 for a given VR. Syntax int nsm_ipv4_if_bfd_static_set (u_int32_t vr_id, char *ifname) Input Parameters vr_id Virtual router ID. The default value is 0. For a non-VR implementation, pass 0 for this parameter. ifname Name of the interface. Output Parameters None Return Values NSM_API_SET_ERROR when a generic error occurs NSM_API_SET_ERR_VR_NOT_EXIST when the VR does not exist
NSM_API_SET_ERR_IF_NOT_EXIST when the given interface does not exist or there is no NSM interface associated with the given interface NSM_API_SET_ERR_STATIC_BFD_SET when the requested setting is already set NSM_API_SET_ERR_VRF_NOT_EXIST when the virtual routing/forwarding instances does not exist NSM_API_SET_SUCCESS when the function succeeds nsm_ipv4_if_bfd_static_unset This function removes BFD static route support on an interface for address family IPv4 for a given VR. Syntax int
Syntax int nsm_ipv4_if_bfd_static_unset (u_int32_t vr_id, char *ifname) © 2015 IP Infusion Inc. Proprietary 53 Network Services Module Input Parameters vr_id Virtual router ID. The default value is 0. For a non-VR implementation, pass 0 for this parameter. ifname Name of the interface. Output Parameters None Return Values NSM_API_SET_ERROR when a generic error occurs NSM_API_SET_ERR_VR_NOT_EXIST when the VR does not exist
NSM_API_SET_ERR_IF_NOT_EXIST when the interface given does not exist, or there is no NSM interface associated with the given interface NSM_API_SET_ERR_STATIC_BFD_UNSET when the requested setting is already set NSM_API_SET_ERR_VRF_NOT_EXIST when the virtual routing/forwarding instances does not exist NSM_API_SET_SUCCESS when the function succeeds nsm_ipv4_if_bfd_static_set_all This function configures BFD static route support on all interfaces for address family IPv4 for a given VR. Syntax int
Syntax int nsm_ipv4_if_bfd_static_set_all (u_int32_t vr_id) Input Parameters vr_id Virtual router ID. The default value is 0. For a non-VR implementation, pass 0 for this parameter. Output Parameters None Return Values NSM_API_SET_ERROR when a generic error occurs NSM_API_SET_ERR_VR_NOT_EXIST when the VR does not exist NSM_API_SET_ERR_IF_NOT_EXIST when the interface given does not exist, or there is no NSM interface associated with the given interface
associated with the given interface NSM_API_SET_ERR_STATIC_BFD_SET when the requested setting is already set NSM_API_SET_ERR_VRF_NOT_EXIST when the virtual routing/forwarding instances does not exist NSM_API_SET_SUCCESS when the function succeeds nsm_ipv4_if_bfd_static_unset_all This function removes BFD static route support on all interfaces for address family IPv4 for a given VR. 54 © 2015 IP Infusion Inc. Proprietary Network Services Module Syntax int
Network Services Module Syntax int nsm_ipv4_if_bfd_static_unset_all (u_int32_t vr_id) Input Parameters vr_id Virtual router ID. The default value is 0. For a non-VR implementation, pass 0 for this parameter. Output Parameters None Return Values NSM_API_SET_ERROR when a generic error occurs NSM_API_SET_ERR_VR_NOT_EXIST when the VR does not exist NSM_API_SET_ERR_STATIC_BFD_SET when the requested setting is already set
NSM_API_SET_ERR_VRF_NOT_EXIST when the virtual routing/forwarding instances does not exist NSM_API_SET_SUCCESS when the function succeeds nsm_ipv6_if_bfd_static_set This function configures BFD static route support on an interface for address family IPv6 for a given VR. Syntax int nsm_ipv6_if_bfd_static_set (u_int32_t vr_id, char *ifname) Input Parameters vr_id Virtual router ID. Default value is 0. Pass 0 for a non-VR implementation. ifname Name of the interface. Output Parameters None
Output Parameters None Return Values NSM_API_SET_ERROR when a generic error occurs NSM_API_SET_ERR_VR_NOT_EXIST when the VR does not exist NSM_API_SET_ERR_IF_NOT_EXIST when the interface given does not exist, or there is no NSM interface associated with the given interface NSM_API_SET_ERR_STATIC_BFD_SET when the requested setting is already set NSM_API_SET_ERR_VRF_NOT_EXIST when the virtual routing/forwarding instances does not exist NSM_API_SET_SUCCESS when the function succeeds
NSM_API_SET_SUCCESS when the function succeeds © 2015 IP Infusion Inc. Proprietary 55 Network Services Module nsm_ipv6_if_bfd_static_unset This function removes BFD static route support on an interface for address family IPv6 for a given VR. Syntax int nsm_ipv6_if_bfd_static_unset (u_int32_t vr_id, char *ifname) Input Parameters vr_id Virtual router ID. The default value is 0. For a non-VR implementation, pass 0 for this parameter. ifname Name of the interface. Output Parameters None
Output Parameters None Return Values NSM_API_SET_ERROR when a generic error occurs NSM_API_SET_ERR_VR_NOT_EXIST when the VR does not exist NSM_API_SET_ERR_IF_NOT_EXIST when the interface given does not exist, or there is no NSM interface associated with the given interface NSM_API_SET_ERR_STATIC_BFD_UNSET when the requested setting is already set NSM_API_SET_ERR_VRF_NOT_EXIST when the virtual routing/forwarding instances does not exist NSM_API_SET_SUCCESS when the function succeeds
NSM_API_SET_SUCCESS when the function succeeds nsm_ipv6_if_bfd_static_set_all This function configures BFD static route support on all interfaces for address family IPv6 for a given VR. Syntax int nsm_ipv6_if_bfd_static_set_all (u_int32_t vr_id) Input Parameters vr_id Virtual router ID. The default value is 0. For a non-VR implementation, pass 0 for this parameter. Output Parameters None Return Values NSM_API_SET_ERROR when a generic error occurs
NSM_API_SET_ERROR when a generic error occurs NSM_API_SET_ERR_VR_NOT_EXIST when the VR does not exist NSM_API_SET_ERR_STATIC_BFD_SET when the requested setting is already set NSM_API_SET_ERR_VRF_NOT_EXIST when the virtual routing/forwarding instances does not exist 56 © 2015 IP Infusion Inc. Proprietary Network Services Module NSM_API_SET_SUCCESS when the function succeeds nsm_ipv6_if_bfd_static_unset_all
nsm_ipv6_if_bfd_static_unset_all This function removes BFD static route support on all interfaces for address family IPv6 for a given VR. Syntax int nsm_ipv6_if_bfd_static_unset_all (u_int32_t vr_id) Input Parameters vr_id Virtual router ID. Default value is 0. Pass 0 for a non-VR implementation. Output Parameters None Return Values NSM_API_SET_ERROR when a generic error occurs NSM_API_SET_ERR_VR_NOT_EXIST when the VR does not exist
NSM_API_SET_ERR_STATIC_BFD_UNSET when the requested setting is already set NSM_API_SET_ERR_VRF_NOT_EXIST when the virtual routing/forwarding instances does not exist NSM_API_SET_SUCCESS when the function succeeds © 2015 IP Infusion Inc. Proprietary 57 Network Services Module 58 © 2015 IP Infusion Inc. Proprietary Border Gateway Protocol CHAPTER 7 This chapter describes the interaction between Border Gateway Protocol (BGP) and BFD. Included in this chapter is an
overview covering the interaction between BGP and BFD, information about the interfaces between these two protocols along with the messages exchanged between them, and a description of the BGP command functions that support BFD. Overview The BFD module supports the BGP protocol module that is part of the ZebOS-XP protocol suite. The BFD BGP module is the plug-in module for the BGP protocol to support BFD capabilities for both IPv4 and IPv6. It
manages the following tasks in addition to initialization and termination of the BFD client module: • BFD session handling for the BGP peer-reachability detection • Callback registration for the BFD session-event handling The BFD BGP module employs BFD as the peer-reachability detection protocol for both iBGP (Internal BGP) and eBGP (External BGP) peers. It adds a BFD session when a BGP peer reaches the ESTABLISHED state and deletes it if the peer moves down from the ESTABLISHED state.
A BFD client session key is generated using a combination of the outgoing interface index as the BFD session interface index, the source IP address of the BGP TCP session as the BFD source address, and the destination IP address of the BGP TCP session as the BFD destination address. BGP BFD registers callback functions for BGP to respond to BFD session-down events and registers a BGP peer
keep-alive expiration event via a session-down callback. It also registers callbacks for events when BFD is enabled or disabled in the context of a specific user VR. An ADMIN_DOWN flag for the BFD session-down request is set if the session-down request is triggered by an operator command. Interfaces and Messages This section describes the interfaces between BFD and BGP and provides a list of the messages that are exchanged between these two protocols. Interfaces
between these two protocols. Interfaces NSM interacts with the base module using a BFD client to program BFD for related functionality. The BFD client interacts with external modules including the BFD BGP management interface. BFD BGP Management Interface The BFD BGP management interface provides the interface to the NSM module for forwarding plane liveliness detection of static routes. The typical operations supported are to create, update or delete sessions. It is also required
to specify any BFD graceful restart parameters for a session. © 2015 IP Infusion Inc. Proprietary 59 Border Gateway Protocol Messages The following messages are exchanged between the BFD client and the BGP Management Interface: • BFD_MSG_SESSION_ADD • BFD_MSG_SESSION_DELETE • BFD_MSG_SESSION_UP • BFD_MSG_SESSION_DOWN • BFD_MSG_SESSION_ERROR • BFD_MSG_SESSION_ATTR_UPDATE Command API The BGP protocol module uses the following functions for BFD: Function Application
Function Application bgp_peer_bfd_set Sets the BFD fall-over check for a specified peer bgp_peer_bfd_unset Unsets the BFD fall-over check for a specified peer bgp_peer_bfd_set This function sets the BFD fall-over check for a specified peer. Syntax int bgp_peer_bfd_set (u_int32_t vr_id, vrf_id_t vrf_id, char *peer_str, bool_t mh) Input Parameters vr_id Virtual router ID. Default value is 0. Pass 0 for a non-VR implementation. vrf_id Virtual routing forwarder ID.
vrf_id Virtual routing forwarder ID. peer_str Character string that identifies the peer. mh Indicates whether the peer is a multi-hop (PAL_TRUE) or single-hop (PAL_FALSE) peer. Output Parameters None Return Values BGP_API_SET_ERR_INVALID_BGP when BGP instance is invalid BGP_API_SET_ERR_PEER_MALFORMED_ADDRESS when the peer address is malformed BGP_API_SET_ERR_PEER_SELF_ADDRESS when the peer address is the same as the interface address
BGP_API_SET_ERR_PEER_UNINITIALIZED when the peer has not been initialized BGP_API_SET_ERR_PEER_DUPLICATE when the peer address is a duplicate 60 © 2015 IP Infusion Inc. Proprietary Border Gateway Protocol BGP_API_SET_SUCCESS when the function succeeds bgp_peer_bfd_unset This function unsets the BFD fall-over check for a specified peer. Syntax int bgp_peer_bfd_unset (u_int32_t vr_id, vrf_id_t vrf_id, char *peer_str) Input Parameters
Input Parameters vr_id Virtual router ID. Default value is 0. Pass 0 for a non-VR implementation. vrf_id Virtual routing forwarder ID. peer_str Character string that identifies the peer. Output Parameters None Return Values BGP_API_SET_ERR_INVALID_BGP when BGP instance is invalid BGP_API_SET_ERR_PEER_MALFORMED_ADDRESS when the peer address is malformed BGP_API_SET_ERR_PEER_SELF_ADDRESS when the peer address is the same as the interface address
BGP_API_SET_ERR_PEER_UNINITIALIZED when the peer has not been initialized BGP_API_SET_ERR_PEER_DUPLICATE when the peer address is a duplicate BGP_API_SET_SUCCESS when the function succeeds © 2015 IP Infusion Inc. Proprietary 61 Border Gateway Protocol 62 © 2015 IP Infusion Inc. Proprietary Intermediate System To Intermediate System CHAPTER 8 This chapter describes the interaction between the Intermediate System To Intermediate System (IS-IS) and BFD.
Included in this chapter is an overview covering the interaction between IS-IS and BFD, information about the interfaces between these two protocols along with the messages exchanged between them, and a description of the IS-IS command functions that support BFD. Overview The BFD module supports the IS-IS protocol module that is part of the ZebOS-XP protocol suite. The BFD IS-IS is the
plug-in module for the IS-IS protocol to support BFD capabilities for both IPv4 and IPv6. It manages the following tasks in addition to initialization and termination of the BFD client module: • BFD session handling for IS-IS neighbor-reachability detection • Callback registration for BFD session-event handling The BFD IS-IS module employs BFD as the neighbor-reachability detection protocol for both shared links and point-to-
point links. It adds a BFD session when an IS-IS neighbor is in the Full state, except on a shared link. A session is added only when either the neighbor or itself is Designated Intermediate System (DIS) on a shared link to prevent an unnecessary full mesh of the BFD session on shared media. It deletes the BFD session when the neighbor goes below the Full state. A BFD client session key is generated using a combination of the IS-IS outgoing-interface index as the BFD session-
interface index, and the IS-IS outgoing-interface primary-IP address. They are advertised by the first IP interface address TLV in the hello packet as the BFD source address and the IS-IS neighbor primary IP address, which are advertised by the first IP interface address TLV in the neighbor's hello packet as the BFD destination address. BFD IS-IS registers callback functions for IS-IS to respond to BFD session-down events and registers an IS-IS
neighbor hold-timer-expired event via a session-down callback. An ADMIN_DOWN flag for a BFD session-down request is set if the session-down request is triggered by an operator command. Interfaces and Messages This section describes the interfaces between BFD and IS-IS and provides a list of the messages that are exchanged between these two protocols. Interfaces NSM interacts with the base module using a BFD client to program BFD for related functionality. The BFD client
interacts with external modules including the BFD IS-IS management interface. BFD IS-IS Management Interface The BFD IS-IS management interface provides the interface to the NSM module for the forwarding plane liveliness detection of static routes. The typical operations supported are to create, update or delete sessions. It is also required to specify any BFD graceful restart parameters for a session. © 2015 IP Infusion Inc. Proprietary 63 Intermediate System To Intermediate System Messages
Messages The following messages are exchanged between the BFD client and the BFD IS-IS Management Interface: • BFD_MSG_SESSION_ADD • BFD_MSG_SESSION_DELETE • BFD_MSG_SESSION_UP • BFD_MSG_SESSION_DOWN • BFD_MSG_SESSION_ERROR • BFD_MSG_SESSION_ATTR_UPDATE Command API The IS-IS protocol module uses the following functions for BFD: Function Application isis_if_bfd_set Sets the BFD fall-over check for neighbors on specified interface
isis_if_bfd_unset Sets the BFD fall-over check for neighbors on specified interface isis_if_bfd_disable_set Disables the BFD fall-over check for neighbors on specified interface isis_if_bfd_disable_unset Unsets the disable flag of BFD fall-over check for neighbors on specified interface isis_bfd_all_interfaces_set Sets the BFD fall-over check for all the interfaces under a specified process
isis_bfd_all_interfaces_unset Unsets the BFD fall-over check for all the interfaces under a specified process isis_if_bfd_set This function sets the BFD fall-over check for neighbors on specified interface. It enables BFD on an interface. Syntax int isis_if_bfd_set (u_int32_t vr_id, char *ifname) Input Parameters vr_id Virtual router ID. Default value is 0. Pass 0 for a non-VR implementation. ifname Interface name. Output Parameters None Return Values
Output Parameters None Return Values ISIS_API_SET_ERR_VR_NOT_EXIST when there is no active VR instance ISIS_API_SET_SUCCESS when the function succeeds 64 © 2015 IP Infusion Inc. Proprietary Intermediate System To Intermediate System isis_if_bfd_unset This function unsets the BFD fall-over check for neighbors on a specified interface. It disables BFD on an interface. Syntax int isis_if_bfd_unset (u_int32_t vr_id, char *ifname) Input Parameters
Input Parameters vr_id Virtual router ID. Default value is 0. Pass 0 for a non-VR implementation. ifnam Interface name. Output Parameters None Return Values SIS_API_SET_ERR_VR_NOT_EXIST when there is no active VR instance ISIS_API_SET_SUCCESS when the function succeeds isis_if_bfd_disable_set This function disables the BFD fall-over check for neighbors on specified interface. It sets BFD to disable on an interface. Syntax int isis_if_bfd_disable_set (u_int32_t vr_id, char *ifname)
Input Parameters vr_id Virtual router ID. Default value is 0. Pass 0 for a non-VR implementation. ifname Interface name. Output Parameters None Return Values ISIS_API_SET_ERR_VR_NOT_EXIST when there is no active VR instance ISIS_API_SET_SUCCESS when the function succeeds isis_if_bfd_disable_unset This function unsets the disable flag of BFD fall-over check for neighbors on a specified interface. It unsets the BFD disable parameter on an interface. Syntax int
disable parameter on an interface. Syntax int isis_if_bfd_disable_unset (u_int32_t vr_id, char *ifname) © 2015 IP Infusion Inc. Proprietary 65 Intermediate System To Intermediate System Input Parameters vr_id Virtual router ID. Default value is 0. Pass 0 for a non-VR implementation. ifname Interface name. Output Parameters None Return Values SIS_API_SET_ERR_VR_NOT_EXIST when there is no active VR instance ISIS_API_SET_SUCCESS when the function succeeds isis_bfd_all_interfaces_set
isis_bfd_all_interfaces_set This function sets the BFD fall-over check for all the interfaces under a specified process. Syntax int isis_bfd_all_interfaces_set (u_int32_t vr_id, char *tag) Input Parameters vr_id Virtual router ID. Default value is 0. Pass 0 for a non-VR implementation. tag String that identifies a particular IS-IS instance. Output Parameters None Return Values ISIS_API_SET_ERR_VR_NOT_EXIST when there is no active VR instance
ISIS_API_SET_ERR_INSTANCE_NOT_EXIST when the instance does not exist ISIS_API_SET_SUCCESS when the function succeeds 66 © 2015 IP Infusion Inc. Proprietary Intermediate System To Intermediate System isis_bfd_all_interfaces_unset This function unsets the BFD fall-over check for all the interfaces under a specified process. Syntax int isis_bfd_all_interfaces_unset (u_int32_t vr_id, char *tag) Input Parameters vr_id Virtual router ID. Default value is 0. Pass 0 for a non-VR implementation.
tag String that identifies a particular IS-IS instance. Output Parameters None Return Values ISIS_API_SET_ERR_VR_NOT_EXIST when there is no active VR instance ISIS_API_SET_ERR_INSTANCE_NOT_EXIST when the instance does not exist ISIS_API_SET_SUCCESS when the function succeeds © 2015 IP Infusion Inc. Proprietary 67 Intermediate System To Intermediate System 68 © 2015 IP Infusion Inc. Proprietary Open Shortest Path First CHAPTER 9
Open Shortest Path First CHAPTER 9 This chapter describes the interaction between Open Shortest Path First (OSPF) and BFD. Included in this chapter is an overview covering the interaction between the OSPF and BFD modules, information about the interfaces between these two protocols along with the messages exchanged between them, and a description of the OSPFv2 command functions that support BFD. Overview
functions that support BFD. Overview The BFD module supports the OSPFv2 protocol modules that is part of the ZebOS-XP protocol suite. BFD OSPFv2 Module The BFD OSPFv2 module is the plug-in module for the OSPFv2 to support BFD capability. It manages the following tasks in addition to initialization and termination of the BFD client module: • BFD session handling for OSPF neighbor reachability detection • Callback registration for BFD session-event handling
The OSPFv2 BFD module employs BFD as the neighbor-reachability detection protocol for both standard shared links and OSPF virtual links. It adds a BFD session when an OSPF neighbor goes beyond the OSPF two-way state, thereby avoiding an unnecessary full mesh of the BFD session on shared links. The BFD session is deleted when the neighbor is below or equal to the two-way state. A BFD client session key is generated with a combination of the OSPF outgoing-interface index as the BFD session-
interface index, the OSPF outgoing interface IP address as the BFD source address, and the OSPF neighbor IP address as the BFD destination address. The multi-hop flag is also set when the neighbor is on an OSPF virtual link. BFD OSPF registers callback functions for OSPF to respond to BFD session down events, and registers an OSPF kill- neighbor event via a session-down callback. It also registers callbacks for events when BFD is enabled or disabled in
the context of a specific user VR. An ADMIN_DOWN flag for a BFD session-down request is set if the session-down request is triggered by an operator command. Interfaces and Messages This subsection describes the interfaces between BFD and OSPF and provides a list of the messages that are exchanged between these two protocols. Interfaces NSM interacts with the base module using a BFD client to program BFD for related functionality. The BFD client
interacts with external modules including the BFD OSPFv2 management interface. BFD OSPFv2 Management Interface The BFD OSPFv2 management interface is the interface to the NSM module for forwarding plane liveliness detection of static routes. Typical operations supported are to create, update or delete sessions. It is also required to specify any BFD graceful restart parameters for a session. © 2015 IP Infusion Inc. Proprietary 69 Open Shortest Path First Messages
Open Shortest Path First Messages The following messages are exchanged between the BFD client and the BFD OSPF management interfaces: • BFD_MSG_SESSION_ADD • BFD_MSG_SESSION_DELETE • BFD_MSG_SESSION_UP • BFD_MSG_SESSION_DOWN • BFD_MSG_SESSION_ERROR • BFD_MSG_SESSION_ATTR_UPDATE OSPFv2 BFD Command API The OSPFv2 protocol module uses the following functions for BFD: Function Application ospf_if_bfd_set Sets the BFD fall-over check for neighbors on a specified interface
ospf_if_bfd_unset Unsets the BFD fall-over check for neighbors on a specified interface ospf_if_bfd_disable_set Disables the BFD fall-over check for neighbors on a specified interface ospf_if_bfd_disable_unset Unsets the disable flag of BFD fall-over check for neighbors on a specified interface ospf_bfd_all_interfaces_set Sets the BFD fall-over check for all the neighbors under a specified process
ospf_bfd_all_interfaces_unset Unsets the BFD fall-over check for all the neighbors under a specified process ospf_vlink_bfd_set Sets the BFD fall-over check for a specified virtual-link neighbor ospf_vlink_bfd_unset Unsets the BFD fall-over check for a specified virtual-link neighbor 70 © 2015 IP Infusion Inc. Proprietary Open Shortest Path First ospf_if_bfd_set This function sets the BFD fall-over check for neighbors on a specified interface. It enables BFD on an interface. Syntax int
Syntax int ospf_if_bfd_set (u_int32_t vr_id, char *ifname) Input Parameters vr_id Virtual router ID. Default value is 0. Pass 0 for a non-VR implementation. ifname Interface name. Output Parameters None Return Values OSPF_API_SET_ERR_VR_NOT_EXIST when there is no active VR instance OSPF_API_SET_SUCCESS when the function succeeds ospf_if_bfd_unset This function unsets the BFD fall-over check for neighbors on a specified interface. It disables BFD on an interface. Syntax int
Syntax int ospf_if_bfd_unset (u_int32_t vr_id, char *ifname) Input Parameters vr_id Virtual router ID. Default value is 0. Pass 0 for a non-VR implementation. ifname Interface name. Output Parameters None Return Values OSPF_API_SET_ERR_VR_NOT_EXIST when there is no active VR instance OSPF_API_SET_SUCCESS when the function succeeds © 2015 IP Infusion Inc. Proprietary 71 Open Shortest Path First ospf_if_bfd_disable_set
Open Shortest Path First ospf_if_bfd_disable_set This function disables the BFD fall-over check for neighbors on a specified interface. It sets BFD to disable on an interface. This function takes precedence over a global BFD configuration. Syntax int ospf_if_bfd_disable_set (u_int32_t vr_id, char *ifname) Input Parameters vr_id Virtual router ID. Default value is 0. Pass 0 for a non-VR implementation. ifname Interface name. Output Parameters None Return Values
Output Parameters None Return Values OSPF_API_SET_ERR_VR_NOT_EXIST when there is no active VR instance OSPF_API_SET_SUCCESS when the function succeeds ospf_if_bfd_disable_unset This function unsets the disable flag of BFD fall-over check for neighbors on a specified interface. It unsets the BFD disable parameter on an interface. This function takes precedence over a global BFD configuration. Syntax int ospf_if_bfd_disable_unset (u_int32_t vr_id, char *ifname) Input Parameters
Input Parameters vr_id Virtual router ID. Default value is 0. Pass 0 for a non-VR implementation. ifname Interface name. Output Parameters None Return Values OSPF_API_SET_ERR_VR_NOT_EXIST when there is no active VR instance OSPF_API_SET_SUCCESS when the function succeeds 72 © 2015 IP Infusion Inc. Proprietary Open Shortest Path First ospf_bfd_all_interfaces_set This function sets the BFD fall-over check for all the interfaces under a specified process. Syntax int
Syntax int ospf_bfd_all_interfaces_set (u_int32_t vr_id, int proc_id) Input Parameters vr_id Virtual router ID. Default value is 0. Pass 0 for a non-VR implementation. proc_id Process ID for affected interfaces. Output Parameters None Return Values OSPF_API_SET_ERR_VR_NOT_EXIST when there is no active VR instance OSPF_API_SET_ERR_PROCESS_ID_INVALID when the process ID is not valid OSPF_API_SET_ERR_PROCESS_NOT_EXIST when there is no active OSPF process with this ID
OSPF_API_SET_SUCCESS when the function succeeds © 2015 IP Infusion Inc. Proprietary 73 Open Shortest Path First ospf_bfd_all_interfaces_unset This function unsets the BFD fall-over check for all the interfaces under a specified process. Syntax int ospf_bfd_all_interfaces_unset (u_int32_t vr_id, int proc_id) Input Parameters vr_id Virtual router ID. Default value is 0. Pass 0 for a non-VR implementation. proc_id Process ID for affected interfaces. Output Parameters None Return Values
Output Parameters None Return Values OSPF_API_SET_ERR_VR_NOT_EXIST when there is no active VR instance OSPF_API_SET_ERR_PROCESS_ID_INVALID when the process ID is not valid OSPF_API_SET_ERR_PROCESS_NOT_EXIST when there is no active OSPF process with this ID OSPF_API_SET_SUCCESS when the function succeeds ospf_vlink_bfd_set This function sets the BFD fall-over check for a specified virtual-link neighbor. It enables BFD for a virtual-link neighbor. Syntax int
Syntax int ospf_vlink_bfd_set (u_int32_t vr_id, int proc_id, struct pal_in4_addr area_id, struct pal_in4_addr peer_id) Input Parameters vr_id Virtual router ID. Default value is 0. Pass 0 for a non-VR implementation. proc_id Process ID for affected interfaces. area_id Area ID in which the virtual-link neighbor exists in the form of an IPv4 address in dotted- decimal notation. peer_id ID of the virtual-link neighbor in the form of an IPv4 address in dotted decimal notation. Output Parameters
Output Parameters None Return Values OSPF_API_SET_ERR_VR_NOT_EXIST when there is no active VR instance OSPF_API_SET_ERR_PROCESS_ID_INVALID when the process ID is not valid OSPF_API_SET_ERR_PROCESS_NOT_EXIST when there is no active OSPF process with this ID 74 © 2015 IP Infusion Inc. Proprietary Open Shortest Path First OSPF_API_SET_ERR_VLINK_NOT_EXIST when a virtual link to the virtual-link neighbor does not exist OSPF_API_SET_SUCCESS when the function succeeds ospf_vlink_bfd_unset
ospf_vlink_bfd_unset This function unsets the BFD fall-over check for a specified virtual-link neighbor. It disables BFD for a virtual-link neighbor. Syntax int ospf_vlink_bfd_unset (u_int32_t vr_id, int proc_id, struct pal_in4_addr area_id, struct pal_in4_addr peer_id) Input Parameters vr_id Virtual router ID. Default value is 0. Pass 0 for a non-VR implementation. proc_id Process ID for affected interfaces.
proc_id Process ID for affected interfaces. area_id Area ID in which the virtual-link neighbor exists in the form of an IPv4 address in dotted- decimal notation. peer_id ID of the virtual-link neighbor in the form of an IPv4 address in dotted decimal notation. Output Parameters None Return Values OSPF_API_SET_ERR_VR_NOT_EXIST when there is no active VR instance OSPF_API_SET_ERR_PROCESS_ID_INVALID when the process ID is not valid
OSPF_API_SET_ERR_PROCESS_NOT_EXIST when there is no active OSPF process with this ID OSPF_API_SET_ERR_VLINK_NOT_EXIST when a virtual link to the virtual-link neighbor does not exist OSPF_API_SET_SUCCESS when the function succeeds © 2015 IP Infusion Inc. Proprietary 75 Open Shortest Path First 76 © 2015 IP Infusion Inc. Proprietary Routing Information Protocol CHAPTER 10 This chapter describes the interaction between the Routing Information Protocol (RIP) and BFD. Included in this
chapter are the following: • Overview covering the interaction between the RIP and BFD modules • Information about the interfaces between these two protocols • Messages exchanged between these two protocols • Description of the RIP command functions that support BFD Overview The BFD module supports the RIP protocol module that is part of the ZebOS-XP protocol suite by monitoring RIP
adjacency with its neighbors using BFD. This feature is used to contribute to finding alternate paths when a neighbor is down. RIP uses the timeout of prefixes for a particular neighbor to identify whether a neighbor is inactive. By default, the timeout is 180 seconds. If the next-hop router is inactive, the RIP router continues to broadcasts prefixes for up to 180 seconds, which can lead to data loss. To avoid this type of data loss, BFD is used to detect the neighbor path failure
within a sub second. The BFD protocol module runs as a separate process (as part of oamd) in the ZebOS-XP architecture model. It runs in conjunction with the routing protocols. BFD and RIP interact using the client server mechanism with BFD being the server and RIP and the other protocol modules being the BFD clients. The other routing protocol, such as OSPF or BGP, maintain a neighbor’s adjacency state information. RIP maintains a
list of configured neighbors for all neighbors for which BFD is enabled. RIP uses the update packets it receives from its neighbors to update this list. The neighbor addresses in the list are considered for establishing the BFD sessions. RIP registers with BFD, which triggers the creation of a BFD session for a neighbor. BFD then creates a session for the given neighbor. If the neighbor goes down or becomes inactive, RIP receives a down event through a BFD call-back
handler. For the down event, RIP executes the RIP timer handler for all routes learned from the given neighbor. The RIP timeout handler function executes after the expiration of the RIP timer and marks the routes of inactive neighbors as invalid. If an established BFD session for a neighbor fails, and a route is received from that neighbor with a next hop address that is not the address of neighbor, the route lingers until it times out (after 180 seconds). To avoid this lingering route
problem, all of the routes from the neighbor corresponding to the failed BFD session are timed out. © 2015 IP Infusion Inc. Proprietary 77 Routing Information Protocol When RIP initiates a BFD session with the following session parameters: • Outgoing interface index • IPv4 address of the outgoing interface • Neighbor address These correspond to the following: • BFD session interface index • Session outgoing interface • Session neighbor Interfaces and Messages
• Session neighbor Interfaces and Messages This subsection describes the interfaces between BFD and RIP and provides a list of the messages that are exchanged between these two protocols. Interfaces RIP is the client to the BFD. When communication is required between these two modules, RIP directly interacts with BFD using the BFD client. BFD RIP Management Interface The BFD RIP management interface provides forwarding plane liveliness detection of RIP neighbors. Typically, this
module creates, deletes or updates sessions. It is also required to specify any BFD Graceful restart parameters for a session. Messages The following messages are exchanged between the BFD client and the BFD RIP Management Interface: • BFD_MSG_SESSION_ADD • BFD_MSG_SESSION_DELETE • BFD_MSG_SESSION_UP • BFD_MSG_SESSION_DOWN • BFD_MSG_SESSION_ERROR 78 © 2015 IP Infusion Inc. Proprietary Routing Information Protocol RIP and BFD Command API
RIP and BFD Command API The RIP protocol module uses the following functions for BFD: Function Application rip_bfd_all_interfaces_set Sets the BFD fall-over check for all the interfaces under a specified process rip_bfd_all_interfaces_unset Unsets the BFD fall-over check for all the interfaces under a specified process rip_bfd_neighbor_set Sets the BFD fall-over check for a specific neighbor under a specified process
rip_bfd_neighbor_unset Unsets the BFD fall-over check for a specific neighbor under a specified process rip_bfd_debug_set Enables debugging for RIP BFD rip_bfd_debug_unset Disables debugging for RIP BFD © 2015 IP Infusion Inc. Proprietary 79 Routing Information Protocol rip_bfd_all_interfaces_set This function sets the BFD fall-over check for all the interfaces under a specified process. This function is called by the bfd all-interfaces command. Syntax int
Syntax int rip_bfd_all_interfaces_set (u_int32_t vr_id, int instance); Input Parameters vr_id Virtual router ID. Default value is 0. Pass 0 for a non-VR implementation. instance The instance identifier. Output Parameters None Return Values RIP_API_SET_ERR_VR_NOT_EXIST when the virtual router does not exist RIP_API_SET_ERR_PROCESS_NOT_EXIST when there is no active RIP process with this ID RIP_API_SET_ERR_BFD_CONF_SET when RIP BFD is already enabled RIP_API_SET_SUCCESS when the function succeeds
RIP_API_SET_SUCCESS when the function succeeds 80 © 2015 IP Infusion Inc. Proprietary Routing Information Protocol rip_bfd_all_interfaces_unset This function unsets the BFD fall-over check for all the interfaces under a specified process. This function is called by the no bfd all-interfaces command. Syntax int rip_bfd_all_interfaces_unset (u_int32_t vr_id, int instance); Input Parameters vr_id Virtual router ID. Default value is 0. Pass 0 for a non-VR implementation.
instance The instance identifier. Output Parameters None Return Values RIP_API_SET_ERR_VR_NOT_EXIST when the virtual router does not exist RIP_API_SET_ERR_PROCESS_NOT_EXIST when there is no active RIP process with this ID RIP_API_SET_ERR_BFD_CONF_UNSET when RIP BFD is already disabled RIP_API_SET_SUCCESS when the function succeeds rip_bfd_neighbor_set This function sets the BFD fall-over check for a specific neighbor under a specified process.
This function is called by the neighbor A.B.C.D fall-over bfd command. Syntax int rip_bfd_neighbor_set (struct pal_in4_addr *temp_nbr, u_int32_t vr_id, int instance); Input Parameters temp_nbr Neighbor address in an IPv4 address format. vr_id Virtual router ID. Default value is 0. Pass 0 for a non-VR implementation. instance The instance identifier. Output Parameters None Return Values RIP_API_SET_ERR_VR_NOT_EXIST when the virtual router does not exist
RIP_API_SET_ERR_PROCESS_NOT_EXIST when there is no active RIP process with this ID RIP_API_SET_ERR_BFD_NEIGHBOR_INVALID when the BFD neighbor is invalid RIP_API_SET_ERR_BFD_CONF_SET when RIP BFD is already enabled © 2015 IP Infusion Inc. Proprietary 81 Routing Information Protocol RIP_API_SET_SUCCESS when the function succeeds rip_bfd_neighbor_unset This function unsets the BFD fall-over check for a specific neighbor under a specified process.
This function is called by the no neighbor A.B.C.D fall-over bfd command. Syntax int rip_bfd_neighbor_unset (struct pal_in4_addr *nbr, u_int32_t vr_id, int instance); Input Parameters nbr Neighbor address in an IPv4 address format. vr_id Virtual router ID. Default value is 0. Pass 0 for a non-VR implementation instance The instance identifier. Output Parameters None Return Values RIP_API_SET_ERR_VR_NOT_EXIST when the virtual router does not exist
RIP_API_SET_ERR_PROCESS_NOT_EXIST when there is no active RIP process with this ID RIP_API_SET_ERR_BFD_NEIGHBOR_INVALID when the BFD neighbor is invalid RIP_API_SET_SUCCESS when the function succeeds RIP_API_SET_ERR_BFD_CONF_UNSET when RIP BFD is already disabled 82 © 2015 IP Infusion Inc. Proprietary Routing Information Protocol rip_bfd_debug_set This function enables debugging for RIP BFD. This function is called by the debug rip bfd command. Syntax void
Syntax void rip_bfd_debug_set (struct rip_master *rm); Input Parameters rm Pointer to the RIP master Output Parameters None Return Values LIB_API_ERROR when the debugging fails LIB_API_SUCCESS when the debugging succeeds rip_bfd_debug_unset This function disables debugging for RIP BFD. This function is called by the no debug rip bfd command. Syntax void rip_bfd_debug_unset (struct rip_master *rm); Input Parameters rm Pointer to the RIP master Output Parameters None Return Values
Output Parameters None Return Values LIB_API_ERROR when the debugging fails LIB_API_SUCCESS when the debugging succeeds © 2015 IP Infusion Inc. Proprietary 83 Routing Information Protocol 84 © 2015 IP Infusion Inc. Proprietary BFD Authentication CHAPTER 11 This chapter describes the authentication support for the BFD module. Authentication provides a security mechanism for the BFD module. This helps mitigate threats on a BFD session from hackers and attackers. Overview
Overview There always is the possibility of an attacker or hacker of gaining control of a link between systems whenever a BFD session runs between two peers. When in control, a hacker can easily drop BFD packets and forward everything else, which will cause the link to be falsely declared down. In addition, a hacker can also forward only BFD packets and not anything else, which causes the link to be falsely declared up. Authentication helps prevent these attacks. Authentication Types
Authentication Types The following authentication types provides a level of security varies based on the desired type chosen. That is, Simple password is the weakest type and meticulous SHA1 is the strongest. • Simple password • Keyed/Meticulous MD5 • Keyed/Meticulous SHA1 Software Design BFD commands enable authentication on both the interface and configure level for multihop IPv4 and IPv6 sessions.
Refer to the Bidirectional Forwarding Detection Command Reference for more information about these commands. Authentication commands are stored in a config file by using a “write” command. Whenever authentication is enabled on a session, it starts sending the authentication header in BFD packet. Whenever a BFD packet is received with an authentication header, it is processed and authenticated.
The key-chain module is used for multi-key BFD support. When multiple keys are configured by using the key-chain command, the selection of a key ID among multiple keys is based on the time in which the authentication key is active. The encoding and decoding of the authentication section in the BFD control packets is based on the configured authentication type. In addition, updating and validating the sequence number on an auth-section for BFD packets is
transmitted and received on types MD5 and SHA1, respectively. © 2015 IP Infusion Inc. Proprietary 85 BFD Authentication Command APIs The functions defined in this chapter are called by the BFD authentication commands. Function Application bfd_construct_auth Encodes an authentication section for a BFD packet. bfd_proto_auth_set Sets the authentication info on interface having sessions bfd_proto_auth_unset Unsets the authentication info on interface having sessions
bfd_proto_multihop_auth_set Sets the authentication information for a multihop session. bfd_proto_multihop_auth_unset Unsets the authentication information from a multihop session. bfd_construct_mpls_packet Constructs the BFD packet for both an MPLS- and VCCV-related BFD sessions. bfd_construct_packet Creates a BFD packet. bfd_construct_packet6 Creates a BFD packet. bfd_avl_if_config_write Saves the running configured parameters at the interface level.
bfd_mh_config_write_for_if Saves the running multihop authentication configuration at the configure level. bfd_auth_process_validate Decodes and validates an authentication section on a BFD packet. bfd_construct_auth This function encodes an authentication section for a BFD packet. Syntax int bfd_construct_auth (struct bfd_session_fwd *sess, u_char *bfd_pkt_buf) Input Parameters *sess BFD session forward entry. *bfd_pkt_buf BFD packet buffer. Output Parameters None Return Values
Output Parameters None Return Values BFD_FALSE on failure BFD_SUCCESS on success BFD_AUTH_NOT_ENABLED BFD_INVALID_AUTH_TYPE 86 © 2015 IP Infusion Inc. Proprietary BFD Authentication BFD_INVALID_KEY BFD_MD5_AUTH_SEC_LEN BFD_SHA1_AUTH_SEC_LEN bfd_proto_auth_set This function sets the authentication information on an interface having sessions. Syntax int bfd_proto_auth_set (u_int32_t vr_id, s_int32_t proc_id, char *ifname, \ char *auth_type_str,u_int32_t key_id,char *key_str,\ char *key_chain)
char *key_chain) Input Parameters vr_id Virtual router ID. Default value is 0. Pass 0 for a non-VR implementation. proc_id Process ID for the BFD instance <0–65535>. ifindex Interface index. *auth_type_str Authentication string type. key_id Key identifier. *key_str Key string. *key_chain Key chain. Output Parameters None Return Values BFD_FALSE on failure BFD_SUCCESS on success BFD_API_INVALID_AUTH_TYPE BFD_API_INVALID_KEY_ID BFD_API_SET_ERR_VR_NOT_EXIST BFD_API_INSTANCE_NOT_FOUND
BFD_API_INSTANCE_NOT_FOUND BFD_API_IF_NOT_FOUND BFD_RET_TO_API_RET © 2015 IP Infusion Inc. Proprietary 87 BFD Authentication bfd_proto_auth_unset This function unsets the authentication information on an interface having sessions. Syntax s_int32_t bfd_proto_auth_unset (u_int32_t vr_id, s_int32_t proc_id, uint32_t ifindex) Input Parameters vr_id Virtual router ID. Default value is 0. Pass 0 for a non-VR implementation. proc_id Process ID for the BFD instance <0–65535>. ifindex Interface index.
ifindex Interface index. Output Parameters None Return Values BFD_FALSE on failure BFD_SUCCESS on success BFD_API_INVALID_AUTH_TYPE BFD_API_INVALID_KEY_ID BFD_API_SET_ERR_VR_NOT_EXIST BFD_API_INSTANCE_NOT_FOUND BFD_API_IF_NOT_FOUND BFD_RET_TO_API_RET bfd_proto_multihop_auth_set This function sets the authentication information for a multihop session. Syntax s_int32_t bfd_proto_multihop_auth_set (u_int32_t vr_id, s_int32_t proc_id, \ u_int32_t ifindex, afi_t afi, void *addr,\
u_int32_t ifindex, afi_t afi, void *addr,\ char *auth_type_str,u_int32_t key_id, \ char *key_str,char *key_chain) Input Parameters vr_id Virtual router ID. Default value is 0. Pass 0 for a non-VR implementation. proc_id Process ID for the BFD instance <0–65535>. ifindex Interface index. afi Address family identifier. *addr Address type. *auth_type_str Authentication string type. 88 © 2015 IP Infusion Inc. Proprietary BFD Authentication key_id Key identifier. *key_str Key string.
key_id Key identifier. *key_str Key string. *key_chain Key chain. Output Parameters None Return Values BFD_FALSE on failure BFD_SUCCESS on success BFD_API_INVALID_AUTH_TYPE BFD_API_SET_ERR_VR_NOT_EXIST BFD_API_INSTANCE_NOT_FOUND BFD_API_IF_NOT_FOUND BFD_API_MH_NOT_FOUND BFD_RET_TO_API_RET bfd_proto_multihop_auth_unset This function unsets the authentication information from a multihop session. Syntax s_int32_t bfd_proto_multihop_auth_unset (u_int32_t vr_id, s_int32_t proc_id, s_int32_t ifindex,
afi_t afi, void *addr) Input Parameters vr_id Virtual router ID. Default value is 0. Pass 0 for a non-VR implementation. proc_id Process ID for the BFD instance <0–65535>. ifindex Interface index. afi Address family identifier. *addr Address type. Output Parameters None Return Values BFD_FALSE on failure BFD_SUCCESS on success BFD_API_SET_ERR_VR_NOT_EXIST BFD_API_INSTANCE_NOT_FOUND BFD_API_IF_NOT_FOUND © 2015 IP Infusion Inc. Proprietary 89 BFD Authentication BFD_API_MH_NOT_FOUND
BFD Authentication BFD_API_MH_NOT_FOUND BFD_RET_TO_API_RET bfd_construct_mpls_packet This function constructs the BFD packet for both an MPLS- and VCCV-related BFD sessions. Syntax void bfd_construct_mpls_packet (struct bfd_session_fwd *sess) Input Parameters *sess MPLS- or VCCV-related BFD session. Output Parameters None Return Values None bfd_construct_packet This function creates a BFD packet. Syntax void bfd_construct_packet (struct bfd_session_fwd *sess) Input Parameters
Input Parameters *sess MPLS- or VCCV-related BFD session. Output Parameters None Return Values None 90 © 2015 IP Infusion Inc. Proprietary BFD Authentication bfd_construct_packet6 This function creates a BFD packet. Syntax void bfd_construct_packet6 (struct bfd_session_fwd *sess) Input Parameters *sess MPLS- or VCCV-related BFD session. Output Parameters None Return Values None bfd_avl_if_config_write This function saves the running configured parameters at the interface level. Syntax s_int32_t
Syntax s_int32_t bfd_avl_if_config_write (void_t *avl_node_info, void_t *arg1, void_t *arg2) Input Parameters *avl_node_info AVL node information. *arg1 Argument 1 *arg2 Argument 2. Output Parameters None Return Values Return 0 © 2015 IP Infusion Inc. Proprietary 91 BFD Authentication bfd_mh_config_write_for_if This function saves the running multihop authentication configuration at the configure level. Syntax s_int32_t bfd_mh_config_write_for_if (struct cli *cli, struct bfd_interface *bif,
s_int32_t *write, char *str) Input Parameters *cli CLI command *bif BFD interface *write Write information *str String information Output Parameters None Return Values Return 0 bfd_auth_process_validate This function decodes and validates an authentication section on a BFD packet. Syntax bool_t bfd_auth_process_validate (struct bfd_session_fwd *sess, u_char *bfd_pkt_buf) Input Parameters *sess BFD authentication session. *bfd_pkt_buf BFD packet buffer. Output Parameters None Return Values
Output Parameters None Return Values BFD_FALSE validation failed BFD_TRUE validation success 92 © 2015 IP Infusion Inc. Proprietary Virtual Router CHAPTER 12 This chapter describes the interaction between the Virtual Router (VR) module and BFD. This chapter includes a description of BFD-related command functions. Overview The BFD Base Module interacts with the NSM to get interface and virtual router specific information. BFD functionality
is available in the Privilege VR (PVR) context, which is the default VR context. It is also available in the non-PVR context, if the BFD is attached to the associated VR. BFD uses the VR-ID of a VR to determine which VR context to apply the BFD functionality. Note: When handling client requests, the BFD determines the appropriate VR context to which to provide service using the VR-ID of the VR from which the request was sent. BFD API for VR
BFD API for VR The following BFD functions support virtual router API and are described in Chapter 5, OAM for BFD and MPLS: Function Application nsm_mpls_bfd_api_fec_set Sets the BFD fall-over check for the Forwarding Equivalency Class (FEC) of an label switched path (LSP) type (Label Discovery Protocol (LDP), Resource Reservation Protocol (RSVP) or Static) nsm_mpls_bfd_api_fec_unset Removes the BFD fall-over check for the FECs of an LSP-type
nsm_mpls_bfd_api_fec_disable_set Disables the BFD fall-over check for the FEC or Trunk of an LSP- type nsm_mpls_bfd_api_lsp_all_set Sets the BFD fall-over check for all FECs of an LSP-type nsm_mpls_bfd_api_lsp_all_unset Removes the BFD fall-over check for all FECs of an LSP-type nsm_mpls_bfd_api_vccv_trigger Starts or stops the BFD VCCV session for a VC based on the specified operation © 2015 IP Infusion Inc. Proprietary 93 Virtual Router 94 © 2015 IP Infusion Inc. Proprietary BFD Command API
BFD Command API CHAPTER 13 The BFD functions defined in this chapter are called by the BFD commands described in the Bidirectional Forwarding Detection Command Reference. The following BFD command functions are described in this chapter: Function Application bfd_add_user_session Adds an IPv4 BFD user session bfd_del_user_session Deletes an IPv4 BFD user session bfd_add_ipv6_user_session Adds an IPv6 BFD user session bfd_del_ipv6_user_session Deletes an IPv6 BFD user session
bfd_echo_interval_set Sets the BFD Echo mode transmission interval for all single-hop sessions on an interface bfd_echo_interval_unset Resets the BFD Echo mode transmission interval to its default value for all sessions on an interface bfd_proto_interval_set Sets minimum BFD transmission and reception intervals, and the value of the Hello multiplier for all sessions on an interface bfd_proto_interval_unset Resets BFD transmission and reception intervals and the Hello multiplier to their
default values for all sessions on an interface bfd_proto_multihop_interval_set Sets multihop interval peer timer values, and the Hello multiplier for an IPv4 interface bfd_proto_multihop_interval_unset Resets multihop interval peer timers and the Hello multiplier for an IPv4 interface to their default values bfd_protol_multihop_ipv6_interval_set Sets multihop interval peer timer values and the Hello multiplier for an IPv6 interface
interface bfd_protol_multihop_ipv6_interval_unset Resets multihop interval peer timers and the Hello multiplier for an IPv6 interface to their default values bfd_echo_mode_set Sets BFD to echo mode for all interfaces in a BFD process bfd_echo_mode_unset Removes BFD echo mode setting for all interfaces in a BFD process bfd_proto_slow_timer_set Sets a BFD slow timer for all interfaces in a BFD process bfd_proto_slow_timer_unset Removes a BFD slow timer for all interfaces in a BFD process
bfd_proto_slow_timer_set_interface Sets the slow timer value for a particular interface bfd_proto_slow_timer_unset_interface Unsets the slow timer for a particular interface © 2015 IP Infusion Inc. Proprietary 95 BFD Command API bfd_add_user_session This function adds an IPv4 BFD user session. Syntax s_int32_t bfd_add_user_session (u_int32_t vr_id, s_int32_t proc_id, struct pal_in4_addr *src_addr, struct pal_in4_addr *dst_addr, s_int32_t ifindex, uint32_t flags) Input Parameters
Input Parameters vr_id Virtual router ID. Default value is 0. Pass 0 for a non-VR implementation. proc_id Process ID for the BFD instance <0–65535>. src_addr Source address for the session. dst_addr Destination address for the session. ifindex Interface index. flags The flags define the properties of a session. They are: BFD_MSG_SESSION_FLAG_MH Multihop session. BFD_MSG_SESSION_FLAG_DC Session over Demand Circuit. BFD_MSG_SESSION_FLAG_PS Persistent Session. BFD_MSG_SESSION_FLAG_AD
Persistent Session. BFD_MSG_SESSION_FLAG_AD Session in Admin Down state. Output Parameters None Return Values BFD_API_SET_ERR_VR_NOT_EXIST when the VR does not exist BFD_API_INSTANCE_NOT_FOUND when the instance is not found BFD_API_SET_ERROR when a generic error occurs BFD_API_SET_SUCCESS when the function succeeds 96 © 2015 IP Infusion Inc. Proprietary BFD Command API bfd_del_user_session This function deletes an IPv4 BFD user session. Syntax s_int32_t
Syntax s_int32_t bfd_del_user_session (u_int32_t vr_id, s_int32_t proc_id, struct pal_in4_addr *src_addr, struct pal_in4_addr *dst_addr, s_int32_t ifindex, u_int32_t flags) Input Parameters vr_id Virtual router ID. Default value is 0. Pass 0 for a non-VR implementation. proc_id Process ID for the BFD instance <0–65535>. src_addr Source address for the session. dst_addr Destination address for the session. ifindex Interface index. flags The flags define the properties of a session. They are:
BFD_MSG_SESSION_FLAG_MH Multihop session. BFD_MSG_SESSION_FLAG_DC Session over Demand Circuit. BFD_MSG_SESSION_FLAG_PS Persistent Session. BFD_MSG_SESSION_FLAG_AD Session in Admin Down state. Output Parameters None Return Values BFD_API_SET_ERR_VR_NOT_EXIST when the VR does not exist BFD_API_INSTANCE_NOT_FOUND when the instance is not found BFD_API_SET_ERROR when a generic error occurs BFD_API_SET_SUCCESS when the function succeeds © 2015 IP Infusion Inc. Proprietary 97 BFD Command API
BFD Command API bfd_add_ipv6_user_session This function adds an IPv6 BFD user session. Syntax s_int32_t bfd_add_ipv6_user_session (u_int32_t vr_id, s_int32_t proc_id, struct pal_in6_addr *src_addr, struct pal_in6_addr *dst_addr, s_int32_t ifindex, u_int32_t flags) Input Parameters vr_id Virtual router ID. Default value is 0. Pass 0 for a non-VR implementation. proc_id Process ID for the BFD instance <0–65535>. src_addr Source address for the session.
src_addr Source address for the session. dst_addr Destination address for the session. ifindex Interface index. flags The flags define the properties of a session. They are: BFD_MSG_SESSION_FLAG_MH Multihop session. BFD_MSG_SESSION_FLAG_DC Session over Demand Circuit. BFD_MSG_SESSION_FLAG_PS Persistent Session. BFD_MSG_SESSION_FLAG_AD Session in Admin Down state. Output Parameters None Return Values BFD_API_SET_ERR_VR_NOT_EXIST when the VR does not exist
BFD_API_INSTANCE_NOT_FOUND when the instance is not found BFD_API_INVALID_ADDR when the address is invalid BFD_API_SET_ERROR when a generic error occurs BFD_API_SET_SUCCESS when the function succeeds 98 © 2015 IP Infusion Inc. Proprietary BFD Command API bfd_del_ipv6_user_session This function deletes an IPv6 BFD user session. Syntax s_int32_t bfd_del_ipv6_user_session (u_int32_t vr_id, s_int32_t proc_id, struct pal_in6_addr *src_addr, struct pal_in6_addr *dst_addr,
struct pal_in6_addr *dst_addr, s_int32_t ifindex, u_int32_t flags) Input Parameters vr_id Virtual router ID. Default value is 0. Pass 0 for a non-VR implementation. proc_id Process ID for the BFD instance <0–65535>. src_addr Source address for the session. dst_addr Destination address for the session. ifindex Interface index. flags The flags define the properties of a session. They are: BFD_MSG_SESSION_FLAG_MH Multihop session. BFD_MSG_SESSION_FLAG_DC Session over Demand Circuit.
Session over Demand Circuit. BFD_MSG_SESSION_FLAG_PS Persistent Session. BFD_MSG_SESSION_FLAG_AD Session in Admin Down state. Output Parameters None Return Values BFD_API_SET_ERR_VR_NOT_EXIST when the VR does not exist BFD_API_INSTANCE_NOT_FOUND when the instance is not found BFD_API_SET_SUCCESS when the function succeeds © 2015 IP Infusion Inc. Proprietary 99 BFD Command API bfd_echo_interval_set
BFD Command API bfd_echo_interval_set This function sets the BFD echo mode transmission interval for all single-hop sessions on an interface. Syntax s_int32_t bfd_echo_interval_set (u_int32_t vr_id, s_int32_t proc_id, char *name, u_int32_t echo_tx) Input Parameters vr_id Virtual router ID. Default value is 0. Pass 0 for a non-VR implementation. Process ID for the BFD instance <0–65535>. name Interface name. echo_tx Echo transmission interval. Output Parameters None Return Values
Output Parameters None Return Values BFD_API_SET_ERR_VR_NOT_EXIST when the VR does not exist BFD_API_INSTANCE_NOT_FOUND when the instance is not found BFD_API_IF_NOT_FOUND when the interface is not found BFD_API_SET_ERROR_PMIRROR_ENABLED when pmirror is enabled on an interface BFD_API_SET_ERROR when a generic error occurs BFD_API_SET_SUCCESS when the function succeeds bfd_echo_interval_unset
bfd_echo_interval_unset This function resets the BFD echo mode transmission interval to its default value for all sessions on an interface. Syntax s_int32_t bfd_echo_interval_unset (u_int32_t vr_id, s_int32_t proc_id, char *name) Input Parameters vr_id Virtual router ID. Default value is 0. Pass 0 for a non-VR implementation. proc_id Process ID for the BFD instance <0–65535>. name Interface name. Output Parameters None Return Values BFD_API_SET_ERR_VR_NOT_EXIST when the VR does not exist
100 © 2015 IP Infusion Inc. Proprietary BFD Command API BFD_API_INSTANCE_NOT_FOUND when the instance is not found BFD_API_IF_NOT_FOUND when the interface is not found BFD_API_SET_ERROR when a generic error occurs BFD_API_SET_SUCCESS when the function succeeds bfd_proto_interval_set This function sets the minimum BFD transmission and reception intervals, and the Hello multiplier value for all sessions on an interface. Syntax s_int32_t
on an interface. Syntax s_int32_t bfd_proto_interval_set (u_int32_t vr_id, s_int32_t proc_id, u_int32_t ifindex, char *name, u_int32_t min_tx, u_int32_t min_rx, u_int32_t multiplier) Input Parameters vr_id Virtual router ID. Default value is 0. Pass 0 for a non-VR implementation. proc_id Process ID for the BFD instance <0–65535>. ifindex Interface index. name Interface name. min_tx Minimum transmission interval. min_rx Minimum reception interval. multiplier Hello multiplier value.
multiplier Hello multiplier value. Output Parameters None Return Values BFD_API_SET_ERR_VR_NOT_EXIST when the VR does not exist BFD_API_INSTANCE_NOT_FOUND when the instance is not found BFD_API_IF_NOT_FOUND when the interface is not found BFD_API_SET_ERROR when a generic error occurs BFD_API_SET_SUCCESS when the function succeeds © 2015 IP Infusion Inc. Proprietary 101 BFD Command API bfd_proto_interval_unset
BFD Command API bfd_proto_interval_unset This function resets the BFD transmission and reception intervals, and the Hello multiplier value to their default values for all sessions on an interface. Syntax s_int32_t bfd_proto_interval_unset (u_int32_t vr_id, s_int32_t proc_id, uint32_t ifindex) Input Parameters vr_id Virtual router ID. Default value is 0. Pass 0 for a non-VR implementation. proc_id Process ID for the BFD instance <0–65535>. ifindex Interface index. Output Parameters None
ifindex Interface index. Output Parameters None Return Values BFD_API_SET_ERR_VR_NOT_EXIST when the VR does not exist BFD_API_IF_NOT_FOUND when the interface is not found BFD_API_SET_ERROR when a generic error occurs BFD_API_SET_SUCCESS when the function succeeds bfd_proto_multihop_interval_set This function sets the minimum BFD transmission and reception intervals, and the Hello multiplier value for all multihop sessions on an IPv4 interface. Syntax s_int32_t
sessions on an IPv4 interface. Syntax s_int32_t bfd_proto_multihop_interval_set (u_int32_t vr_id, s_int32_t proc_id, s_int32_t ifindex, struct pal_in4_addr ipv4, u_int32_t min_tx, u_int32_t min_rx, u_int32_t multiplier) Input Parameters vr_id Virtual router ID. Default value is 0. Pass 0 for a non-VR implementation. proc_id Process ID for the BFD instance <0–65535>. ifindex Interface index; this value is generally 0 for all multihop sessions not bound to an interface. ipv4 IPv4 address.
interface. ipv4 IPv4 address. min_tx Minimum transmission interval. min_rx Minimum reception interval. multiplier Hello multiplier value. 102 © 2015 IP Infusion Inc. Proprietary BFD Command API Output Parameters None Return Values BFD_API_SET_ERR_VR_NOT_EXIST when the VR does not exist BFD_API_INSTANCE_NOT_FOUND when the instance is not found BFD_API_MH_NOT_FOUND when the multihop instance is not found or allocated BFD_API_IF_NOT_FOUND when the interface is not found
BFD_API_SET_ERROR when a generic error occurs BFD_API_SET_SUCCESS when the function succeeds bfd_proto_multihop_interval_unset This function resets the BFD transmission and reception intervals, and the Hello multiplier value to their default values for all multihop sessions on an interface. Syntax s_int32_t bfd_proto_multihop_interval_unset (u_int32_t vr_id, s_int32_t proc_id, u_int32_t ifindex, struct pal_in4_addr ipv4) Input Parameters
Input Parameters vr_id Virtual router ID. Default value is 0. Pass 0 for a non-VR implementation. proc_id Process ID for the BFD instance <0–65535>. ifindex Interface index; this value is generally 0 for all multihop sessions not bound to an interface. ipv4 IPv4 address. Output Parameters None Return Values BFD_API_SET_ERR_VR_NOT_EXIST when the VR does not exist BFD_API_INSTANCE_NOT_FOUND when the instance is not found BFD_API_MH_NOT_FOUND when the multihop instance is not found or allocated
BFD_API_IF_NOT_FOUND when the interface is not found BFD_API_SET_ERROR when a generic error occurs BFD_API_SET_SUCCESS when the function succeeds © 2015 IP Infusion Inc. Proprietary 103 BFD Command API bfd_protol_multihop_ipv6_interval_set This function sets the minimum BFD transmission and reception intervals, and the Hello multiplier value for all multihop sessions on an IPv6 interface. Syntax s_int32_t bfd_proto_multihop_ipv6_interval_set (u_int32_t vr_id, s_int32_t proc_id,
u_int32_t ifindex, struct pal_in6_addr ipv6, u_int32_t min_tx, u_int32_t min_rx, u_int32_t multiplier) Input Parameters vr_id Virtual router ID. Default value is 0. Pass 0 for a non-VR implementation. proc_id Process ID for the BFD instance <0–65535>. ifindex Interface index; this value is generally 0 for all multihop sessions not bound to an interface. ipv6 IPv6 address. min_tx Minimum transmission interval. min_rx Minimum reception interval. multiplier Hello multiplier value.
multiplier Hello multiplier value. Output Parameters None Return Values BFD_API_SET_ERR_VR_NOT_EXIST when the VR does not exist BFD_API_INSTANCE_NOT_FOUND when the instance is not found BFD_API_MH_NOT_FOUND when the multihop instance is not found or allocated BFD_API_IF_NOT_FOUND when the interface is not found BFD_API_SET_ERROR when a generic error occurs BFD_API_SET_SUCCESS when the function succeeds 104 © 2015 IP Infusion Inc. Proprietary BFD Command API
BFD Command API bfd_protol_multihop_ipv6_interval_unset This function resets the BFD transmission and reception intervals, and the Hello multiplier value to their default values for all multihop sessions on an IPv6 interface. Syntax s_int32_t bfd_proto_multihop_ipv6_interval_unset (u_int32_t vr_id, s_int32_t proc_id, u_int32_t ifindex, struct pal_in6_addr ipv6) Input Parameters vr_id Virtual router ID. Default value is 0. Pass 0 for a non-VR implementation.
proc_id Process ID for the BFD instance <0–65535>. ifindex Interface index; this value is generally 0 for all multihop sessions not bound to an interface. ipv6 IPv6 address. Output Parameters None Return Values BFD_API_SET_ERR_VR_NOT_EXIST when the VR does not exist BFD_API_INSTANCE_NOT_FOUND when the instance is not found BFD_API_MH_NOT_FOUND when the multihop instance is not found or allocated BFD_API_IF_NOT_FOUND when the interface is not found BFD_API_SET_ERROR when a generic error occurs
BFD_API_SET_ERROR when a generic error occurs BFD_API_SET_SUCCESS when the function succeeds © 2015 IP Infusion Inc. Proprietary 105 BFD Command API bfd_echo_mode_set This function sets BFD to echo mode for all interfaces in a BFD process. Syntax s_int32_t bfd_echo_mode_set (u_int32_t vr_id, s_int32_t proc_id) Input Parameters vr_id Virtual router ID. Default value is 0. Pass 0 for a non-VR implementation. proc_id Process ID for the BFD instance <0–65535>. Output Parameters None Return Values
Output Parameters None Return Values BFD_API_INSTANCE_NOT_FOUND when the instance is not found BFD_API_SET_ERROR when a generic error occurs BFD_API_SET_SUCCESS when the function succeeds bfd_echo_mode_unset This function removes the BFD echo mode setting for all interfaces in a BFD process. Syntax s_int32_t bfd_echo_mode_unset (u_int32_t vr_id, s_int32_t proc_id) Input Parameters vr_id Virtual router ID. Default value is 0. Pass 0 for a non-VR implementation.
proc_id Process ID for the BFD instance <0–65535>. Output Parameters None Return Values BFD_API_INSTANCE_NOT_FOUND when the instance is not found BFD_API_SET_ERROR when a generic error occurs BFD_API_SET_SUCCESS when the function succeeds 106 © 2015 IP Infusion Inc. Proprietary BFD Command API bfd_proto_slow_timer_set This function sets a BFD slow timer for all interfaces in a BFD process. Syntax s_int32_t bfd_proto_slow_timer_set (u_int32_t vr_id, s_int32_t proc_id, u_int32_t val)
Input Parameters vr_id Virtual router ID. Default value is 0. Pass 0 for a non-VR implementation. proc_id Process ID for the BFD instance <0–65535>. val Timer value in milliseconds. Output Parameters None Return Values BFD_API_INSTANCE_NOT_FOUND when the instance is not found BFD_API_SET_ERROR when a generic error occurs BFD_API_SET_SUCCESS when the function succeeds bfd_proto_slow_timer_unset
bfd_proto_slow_timer_unset This function resets the BFD slow timer to the default value (BFD_SLOW_TIME_DEFAULT) for all interfaces in the BFD process. Syntax s_int32_t bfd_proto_slow_timer_unset (u_int32_t vr_id, s_int32_t proc_id) Input Parameters vr_id Virtual router ID. Default value is 0. Pass 0 for a non-VR implementation. proc_id Process ID for the BFD instance <0–65535>. Output Parameters None Return Values BFD_API_INSTANCE_NOT_FOUND when the instance is not found
BFD_API_SET_ERROR when a generic error occurs BFD_API_SET_SUCCESS when the function succeeds © 2015 IP Infusion Inc. Proprietary 107 BFD Command API bfd_proto_slow_timer_set_interface This function sets the slow timer value for a particular interface. This Hello interval is used when the session is not up. Syntax s_int32_t bfd_proto_slow_timer_set_interface (u_int32_t vr_id, s_int32_t proc_id, char *ifname, u_int32_t val) Input Parameters
char *ifname, u_int32_t val) Input Parameters vr_id Virtual router ID. Default value is 0. Pass 0 for a non-VR implementation. proc_id Process ID for the BFD instance <0–65535>. ifname Interface name. val Timer value in milliseconds. Output Parameters None Return Values BFD_API_SET_ERR_VR_NOT_EXIST when the VR does not exist BFD_API_SET_ERROR_PMIRROR_ENABLED when pmirror is enabled on an interface BFD_API_INSTANCE_NOT_FOUND when the instance is not found
BFD_API_IF_NOT_FOUND when the interface is not found BFD_API_SET_ERROR when a generic error occurs BFD_API_SET_SUCCESS when the function succeeds 108 © 2015 IP Infusion Inc. Proprietary BFD Command API bfd_proto_slow_timer_unset_interface This function unsets the slow timer to the default value (1 sec) for a particular interface. Syntax s_int32_t bfd_proto_slow_timer_unset_interface (u_int32_t vr_id, s_int32_t proc_id, u_int32_t ifindex) Input Parameters
u_int32_t ifindex) Input Parameters vr_id Virtual router ID. Default value is 0. Pass 0 for a non-VR implementation. proc_id Process ID for the BFD instance <0–65535>. ifindex Interface index. Output Parameters None Return Values BFD_API_SET_ERR_VR_NOT_EXIST when the VR does not exist BFD_API_INSTANCE_NOT_FOUND when the instance is not found BFD_API_IF_NOT_FOUND when the interface is not found BFD_API_SET_ERROR when a generic error occurs BFD_API_SET_SUCCESS when the function succeeds
BFD_API_SET_SUCCESS when the function succeeds © 2015 IP Infusion Inc. Proprietary 109 BFD Command API 110 © 2015 IP Infusion Inc. Proprietary BFD MIB Support CHAPTER 14 This chapter describes the API for the BFD management information base (MIB). Overview BFD managed objects are accessed through a virtual information store using Simple Network Management Protocol (SNMP). It describes managed objects to configure and/or monitor BFD for both single-hop and multi-hop sessions.
ZebOS-XP modules act as the sub-agent that communicates with the master agent using AgentX protocol. Master Agent ideally runs in the agent. When SNMP Manager makes a request to the agent, the agent sends a corresponding request to the ZebOS-XP sub-agent through AgentX protocol. Similarly, the response sent by the sub-agent to the master agent is sent back to the manager by the agent. For BFD MIB objects, when an SNMP request arrives from the SNMP master agent to BFD (which registers the BFD
MIB with the Master Agent), the BFD module finds the corresponding data structures and accesses or updates the request. For a Get request, the object value is retrieved and sent to the master agent. For a Set request, the corresponding data structure is modified. For notifications defined in the BFD MIB, which are generated from the BFD module, a Trap message is sent to the Master agent. The master agent forwards this message to the SNMP Trap manager registered with the agent. A
limitation is imposed on the number of traps at regular intervals, in order to avoid flooding of traffic between both the SNMP master agent – sub-agent (ZebOS-XP) and the SNMP master agent – SNMP manager. The limit is set to a maximum of 5 traps per minute. BFD Session Table The session table (bfdSessTable) is used to identify a BFD session between a pair of nodes. The index for this table is
bfdSessIndex, which is used to uniquely identify the BFD sessions. This table has the objects of types, read-only and read-create. Attribute Syntax Access Functions bfdSessTable BfdSessIndexTC not- bfd_sess_lookup_by_index accessible bfdSessTable - - bfd_sess_lookup_next_by_index bfdSessTable/ TruthValue read-write bfd_notification_set bfdSessNotificationsEnable bfdSessVersionNumber Unsigned32 (0..7) read- bfd_api_set_sess_version_no create
create bfdSessType INTEGER { singleHop(1), bfd_api_get_sess_type multiHopTotallyArbitraryPaths(2), multiHopOutOfBandSignaling(3), multiHopUnidirectionalLinks(4) } © 2015 IP Infusion Inc. Proprietary 111 BFD MIB Support bfdSessMultihopUniLinkMode Integer {none(1), active(2), read-only bfd_api_get_sess_mh_unlnk_mode passive(3)} bfdSessDiscriminator Unsigned32 (0 | 1..4294967295) read-only bfd_api_get_sess_disc bfdSessRemoteDiscr Unsigned32 (0 | 1..4294967295) read-only bfd_api_get_sess_rmte_disc
bfdSessDestinationUdpPort InetPortNumber read- bfd_api_get_sess_dest_udp_port create bfdSessSourceUdpPort InetPortNumber read- bfd_api_get_sess_src_udp_port create bfdSessEchoSourceUdpPort InetPortNumber read- bfd_api_get_sess_echo_src_udp_port create bfdSessAdminStatus INTEGER { stop(1), start(2)} read- bfd_api_get_sess_admin_status create bfdSessState INTEGER { adminDown(1), read-only bfd_api_get_sess_state down(2), init(3), up(4), failing(5) }
down(2), init(3), up(4), failing(5) } bfdSessRemoteHeardFlag TruthValue read-only bfd_api_get_sess_rmte_heard_flag bfdSessDiag BfdDiag read-only bfd_api_get_sess_diag bfdSessOperMode INTEGER read- bfd_api_get_sess_oper_mode {asyncModeWEchoFun(1), create asynchModeWOEchoFun(2), demandModeWEchoFunction(3) , demandModeWOEchoFunction (4) } bfdSessDemandModeDesiredFl TruthValue read- bfd_api_get_sess_dmnd_mode_dsrd_flag ag create
ag create bfdSessControlPlaneIndepFlag TruthValue read- bfd_api_get_sess_cntrlplane_indep_flag create bfdSessInterface InterfaceIndexOrZero read- bfd_api_get_sess_interface create bfdSessAddrType InterfaceIndexOrZero read- bfd_api_get_sess_addr_type create bfdSessAddr InetAddressType read- bfd_api_get_sess_addr create bfdSessGTSM TruthValue read- bfd_api_get_sess_gtsm create bfdSessGTSMTTL Unsigned32 (0..255) read- bfd_api_get_sess_gtsm_ttl create
create bfdSesDesiredMinTxInterval BfdInterval read- bfd_api_get_sess_dsrd_min_tx_intvl create bfdSessRequiredMinRxInterval BfdInterval read- bfd_api_get_sess_req_min_rx_intvl create 112 © 2015 IP Infusion Inc. Proprietary BFD MIB Support bfdSessReqMinEchoRxInterval BfdInterval read- bfd_api_get_sess_req_min_echo_rx_intvl create bfdSessDetectMult Unsigned32 read- bfd_api_get_sess_detectmult create bfdSessNegotiatedInterval BfdInterval read-only bfd_api_get_sess_neg_intvl
bfdSessNegotiatedEchoInterval BfdInterval read-only bfd_api_get_sess_neg_echo_intvl bfdSessNegotiatedDetectMult Unsigned32 read-only bfd_api_get_sess_neg_detect_mult bfdSessAuthPresFlag TruthValue read- bfd_api_get_sess_auth_pres_flag create bfdSessAuthenticationType INTEGER {reserved(0), read- bfd_api_get_sess_auth_type simplePassword(1), create keyedMD5(2), meticulousKeyedMD5(3), keyedSHA1(4), meticulousKeyedSHA1(5) }
keyedSHA1(4), meticulousKeyedSHA1(5) } bfdSessAuthenticationKeyID Integer32 (-1 | 0..255) read- bfd_api_get_sess_auth_key_id create bfdSessAuthenticationKey OCTET STRING (SIZE (0..252)) read- bfd_api_get_sess_auth_key create bfdSessStorType StorageType read- bfd_api_get_sess_stor_type create bfdSessRowStatus RowStatus read- bfd_api_get_sess_row_status create bfdSessPerfPktIn Counter32 read-only bfd_api_get_perf_pkt_in bfdSessPerfPktOut Counter32 read-only bfd_api_get_perf_pkt_out
bfdSessUpTime TimeStamp read-only bfd_api_get_sess_up_time bfdSessPerfLastCommLostDiag BfdDiag read-only bfd_api_get_perf_lastcomm_lost_diag bfdSessPerfSessUpCount Counter32 read-only bfd_api_get_perf_sess_up_count bfdSessPerfDiscTime TimeStamp read-only bfd_api_get_perf_disc_time bfdSessPerfPktInHC Counter64 read-only bfd_api_get_perf_pkt_in_hc bfdSessPerfPktOutHC Counter64 read-only bfd_api_get_perf_pkt_out_hc © 2015 IP Infusion Inc. Proprietary 113 BFD MIB Support APIs
BFD MIB Support APIs The following subsection list the APIs for BFD. bfd_sess_lookup_by_index This function loops through the BFD sessions for SNMP Get request based on the session index. Syntax struct bfd_session * bfd_sess_lookup_by_index (struct bfd *bfd, u_int32_t sess_index) Input Parameters *bfd A pointer to the BFD structure sess_index Session index Output Parameters None Return Values
Output Parameters None Return Values BFD session structure from the session list based on the index if it exists; otherwise, NULL is returned. bfd_sess_lookup_next_by_index This function loops through the BFD sessions for SNMP Getnext or Walk request based on the session index. Syntax struct bfd_session * bfd_sess_lookup_next_by_index (struct bfd *bfd, u_int32_t sess_index) Input Parameters bfd A pointer to the BFD structure sess_index Session index Output Parameters None Return Values
Output Parameters None Return Values Next BFD session structure from the list, based on the index next to the given index if it exists; otherwise, NULL is returned. 114 © 2015 IP Infusion Inc. Proprietary BFD MIB Support bfd_notification_set This function sets the notification traps. Syntax s_int32_t bfd_notification_set (u_int32_t vr_id, u_int32_t set) Input Parameters vr_id Virtual router ID set Value to be set Output Parameters None Return Values BFD_FAILURE when the function fails
Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds bfd_api_set_sess_version_no This function is used to set the session version for an SNMP set request. Syntax s_int32_t bfd_api_set_sess_version_no (struct bfd *bfd, u_int32_t index, u_int32_t intval, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Session index intval Value to be set snmp Enable SNMP Output Parameters None Return Values BFD_FAILURE when the function fails
Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds © 2015 IP Infusion Inc. Proprietary 115 BFD MIB Support bfd_api_get_sess_version This function gets a session version. Syntax s_int32_t bfd_api_get_sess_version (struct bfd *bfd,u_int32_t index, u_int32_t *ret, bool_t snmp) Input Parameters *bfd A pointer to the BFD structure index Index snmp Enable SNMP Output Parameters ret Return value Return Values BFD_FAILURE when the function fails
Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds BFD_VERSION_SUPP bfd_api_set_sess_addr_type This function is used to set the session address type. Syntax s_int32_t bfd_api_set_sess_addr_type (struct bfd *bfd, u_int32_t index, u_int32_t intval, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Session index intval Value to be set snmp Enable SNMP Output Parameters None Return Values BFD_FAILURE when the function fails
Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds 116 © 2015 IP Infusion Inc. Proprietary BFD MIB Support bfd_api_get_sess_type This function is used to get the session type for an SNMP Get request. Syntax s_int32_t bfd_api_get_sess_type (struct bfd *bfd,u_int32_t index, u_int32_t *ret, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Session index snmp Enable SNMP Output Parameter
snmp Enable SNMP Output Parameter ret Returns the session type when the function succeeds or 0 when it fails Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds bfd_api_get_sess_mh_unlnk_mode This function is used to get the session multihop UNI link mode for SNMP Get request. Syntax s_int32_t bfd_api_get_sess_mh_unlnk_mode (struct bfd *bfd, u_int32_t index, u_int32_t *ret, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Session index
index Session index snmp Enable SNMP Output Parameter ret Returns the multihop UNI link mode of a session when the function succeeds or 0 when it fails Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds © 2015 IP Infusion Inc. Proprietary 117 BFD MIB Support bfd_api_get_sess_disc This function is used to get the session discriminator for an SNMP Get request. Syntax s_int32_t bfd_api_get_sess_disc (struct bfd *bfd,u_int32_t index,
u_int32_t *ret, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Session index snmp Enable SNMP Output Parameter ret Returns the session discriminator when the function succeeds or 0 when it fails Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds bfd_api_get_sess_rmte_disc This function is used to get the session remote discriminator for an SNMP Get request. Syntax s_int32_t bfd_api_get_sess_rmte_disc (struct bfd *bfd,u_int32_t index,
u_int32_t *ret, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Session index snmp Enable SNMP Output Parameter ret Returns the session remote discriminator when the function succeeds or 0 when it fails Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds 118 © 2015 IP Infusion Inc. Proprietary BFD MIB Support bfd_api_get_sess_dest_udp_port This function is used to get the session destination UDP port for an SNMP Get request. Syntax
Syntax s_int32_t bfd_api_get_sess_dest_udp_port (struct bfd *bfd,u_int32_t index, u_int32_t *ret, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Session index snmp Enable SNMP Output Parameter ret Returns the destination UDP port number of the session when the function succeeds or 0 when it fails Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds bfd_api_set_sess_src_udp_port
bfd_api_set_sess_src_udp_port This function is used to set the session source UDP port for an SNMP Set request. Syntax s_int32_t bfd_api_set_sess_src_udp_port (struct bfd *bfd,u_int32_t index, u_int32_t intval, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Session index intval Value to be set snmp Enable SNMP Output Parameter None Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds © 2015 IP Infusion Inc. Proprietary 119 BFD MIB Support
BFD MIB Support bfd_api_get_sess_src_udp_port This function is used to get the session source UDP port for an SNMP Get request. Syntax s_int32_t bfd_api_get_sess_src_udp_port(struct bfd *bfd,u_int32_t index, u_int32_t *ret, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Session index snmp Enable SNMP Output Parameter ret Returns the source UDP port number of the session when the function succeeds or 0 when it fails Return Values BFD_FAILURE when the function fails
Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds bfd_api_set_sess_echo_src_udp_port This function is used to set the session echo source UDP port for an SNMP Set request. Syntax s_int32_t bfd_api_set_sess_echo_src_udp_port (struct bfd *bfd,u_int32_t index, u_int32_t intval, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Session index intval Value to be set snmp Enable SNMP Output Parameter None Return Values
Output Parameter None Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds 120 © 2015 IP Infusion Inc. Proprietary BFD MIB Support bfd_api_get_sess_echo_src_udp_port This function is used to get the session echo source UDP port for an SNMP Get request. Syntax s_int32_t bfd_api_get_sess_echo_src_udp_port (struct bfd *bfd,u_int32_t index, u_int32_t *ret, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Session index snmp Enable SNMP
index Session index snmp Enable SNMP Output Parameter ret Returns the echo source UDP port number of the session when the function succeeds or 0 when it fails Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds bfd_api_set_sess_admin_status This function is used to set the session administration status for an SNMP set request. Syntax s_int32_t bfd_api_set_sess_admin_status (struct bfd *bfd,u_int32_t index, u_int32_t intval, bool_t snmp) Input Parameters
u_int32_t intval, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Session index intval Value to be set snmp Enable SNMP Output Parameter None Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds © 2015 IP Infusion Inc. Proprietary 121 BFD MIB Support bfd_api_get_sess_admin_status This function is used to get the session administration status for an SNMP Get request. Syntax s_int32_t
Syntax s_int32_t bfd_api_get_sess_admin_status (struct bfd *bfd,u_int32_t index, u_int32_t *ret, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Session index snmp Enable SNMP Output Parameter ret Returns the session administration status when the function succeeds or 0 when it fails Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds bfd_api_get_sess_state This function is used to get the session state for an SNMP Get request. Syntax
Syntax s_int32_t bfd_api_get_sess_state (struct bfd *bfd,u_int32_t index, u_int32_t *ret, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Session index snmp Enable SNMP Output Parameter ret Returns session state when the function succeeds or 0 when it fails: BFD_API_SESS_ST_AD_DWN BFD_API_SESS_ST_DWN BFD_API_SESS_ST_UP BFD_API_SESS_ST_INIT Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds 122 © 2015 IP Infusion Inc. Proprietary
122 © 2015 IP Infusion Inc. Proprietary BFD MIB Support bfd_api_get_sess_rmte_heard_flag This function is used to get the session remote heard flag for an SNMP Get request. Syntax s_int32_t bfd_api_get_sess_rmte_heard_flag (struct bfd *bfd,u_int32_t index, u_int32_t *ret, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Session index snmp Enable SNMP Output Parameter ret Returns the remote heard flag of the session when the function succeeds or 0 when it fails Return Values
Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds bfd_api_get_sess_diag This function is used to get the session diagram for a SNMP Get request. Syntax s_int32_t bfd_api_get_sess_diag (struct bfd *bfd,u_int32_t index, u_int32_t *ret, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Session index snmp Enable SNMP Output Parameter ret Returns the session diagram when the function succeeds or 0 when it fails Return Values
Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds © 2015 IP Infusion Inc. Proprietary 123 BFD MIB Support bfd_api_get_sess_oper_mode This function is used to get the session OperMode for an SNMP Get request. Syntax s_int32_t bfd_api_get_sess_oper_mode (struct bfd *bfd,u_int32_t index, u_int32_t *ret, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Session index snmp Enable SNMP Output Parameter
snmp Enable SNMP Output Parameter ret Returns the operational mode of the session when the function succeeds or 0 when it fails Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds bfd_api_set_sess_dmnd_mode_dsrd_flag This function is used to set the session demand mode desired flag for an SNMP set request. Syntax s_int32_t bfd_api_set_sess_dmnd_mode_dsrd_flag (struct bfd *bfd,u_int32_t index, u_int32_t intval, bool_t snmp) Input Parameters
u_int32_t intval, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Session index intval Value to be set snmp Enable SNMP Output Parameter None Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds 124 © 2015 IP Infusion Inc. Proprietary BFD MIB Support bfd_api_get_sess_dmnd_mode_dsrd_flag This function is used to get the session demand mode desired flag for an SNMP Get request. Syntax s_int32_t
Syntax s_int32_t bfd_api_get_sess_dmnd_mode_dsrd_flag (struct bfd *bfd,u_int32_t index, u_int32_t *ret, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Session index snmp Enable SNMP Output Parameter ret Returns the demand mode desired flag of the session when the function succeeds or 0 when it fails Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds bfd_api_get_sess_cntrlplane_indep_flag
bfd_api_get_sess_cntrlplane_indep_flag This function is used to get the session control plane independent flag for an SNMP Get request. Syntax s_int32_t bfd_api_get_sess_cntrlplane_indep_flag (struct bfd *bfd,u_int32_t index, u_int32_t *ret, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Session index snmp Enable SNMP Output Parameter ret Returns the control plane independent flag of the session when the function succeeds or 0 when it fails Return Values
when it fails Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds © 2015 IP Infusion Inc. Proprietary 125 BFD MIB Support bfd_api_set_sess_interface This function is used to set the session interface for an SNMP set request. Syntax s_int32_t bfd_api_set_sess_interface (struct bfd *bfd,u_int32_t index, u_int32_t intval, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Session index intval Value to be set snmp Enable SNMP Output Parameter
snmp Enable SNMP Output Parameter None Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds bfd_api_get_sess_interface This function is used to get the session interface for an SNMP Get request. Syntax s_int32_t bfd_api_get_sess_interface (struct bfd *bfd,u_int32_t index, u_int32_t *ret, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Session index snmp Enable SNMP Output Parameter
snmp Enable SNMP Output Parameter ret Returns the session interface when the function succeeds or 0 when it fails Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds 126 © 2015 IP Infusion Inc. Proprietary BFD MIB Support bfd_api_set_sess_addr_type This function is used to set the session address type for an SNMP Set request. Syntax s_int32_t bfd_api_set_sess_addr_type (struct bfd *bfd, u_int32_t index, u_int32_t intval, bool_t snmp) Input Parameters
u_int32_t intval, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Session index intval Value to be set snmp Enable SNMP Output Parameter None Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds bfd_api_get_sess_addr_type This function is used to get the session address type for an SNMP Get request. Syntax s_int32_t bfd_api_get_sess_addr_type (struct bfd *bfd,u_int32_t index, u_int32_t *ret, bool_t snmp) Input Parameters
u_int32_t *ret, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Session index snmp Enable SNMP Output Parameter ret Returns the session address type when the function succeeds or 0 when it fails Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds © 2015 IP Infusion Inc. Proprietary 127 BFD MIB Support bfd_api_set_sess_addr6 This function sets an IPv6 session address for an SNMP set request Syntax s_int32_t
Syntax s_int32_t bfd_api_set_sess_addr6 (struct bfd *bfd,u_int32_t index, struct pal_in6_addr *addr, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Session index addr Enable SNMP snmp Enable SNMP Output Parameter None Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds bfd_api_get_sess_addr This function is used to get the session address for an SNMP Get request. Syntax s_int32_t bfd_api_get_sess_addr (struct bfd *bfd,u_int32_t index,
char **ret, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Session index snmp Enable SNMP Output Parameter ret Returns the session address when the function succeeds or NULL when it fails Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds 128 © 2015 IP Infusion Inc. Proprietary BFD MIB Support bfd_api_set_sess_gtsm This function is used to set the session GTSM for an SNMP Set request. Syntax s_int32_t
Syntax s_int32_t bfd_api_set_sess_gtsm (struct bfd *bfd,u_int32_t index, u_int32_t intval, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Session index intval Value to be set snmp Enable SNMP Output Parameter None Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds bfd_api_get_sess_gtsm This function is used to get the session GTSM for an SNMP Get request. Syntax s_int32_t bfd_api_get_sess_gtsm (struct bfd *bfd,u_int32_t index,
u_int32_t *ret, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Session index snmp Enable SNMP Output Parameter ret Returns the session address type when the function succeeds or 0 when it fails Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds © 2015 IP Infusion Inc. Proprietary 129 BFD MIB Support bfd_api_set_sess_gtsm_ttl This function is used to set the session GTSM TTL for an SNMP set request. Syntax s_int32_t
Syntax s_int32_t bfd_api_set_sess_gtsm_ttl (struct bfd *bfd,u_int32_t index, u_int32_t intval, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Session index intval Value to be set snmp Enable SNMP Output Parameter None Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds bfd_api_get_sess_gtsm_ttl This function is used to get the session GTSM TTL for an SNMP Get request. Syntax s_int32_t
Syntax s_int32_t bfd_api_get_sess_gtsm_ttl (struct bfd *bfd,u_int32_t index, u_int32_t *ret, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Session index snmp Enable SNMP Output Parameter ret Returns the session GTSM TTL when the function succeeds or 0 when it fails Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds 130 © 2015 IP Infusion Inc. Proprietary BFD MIB Support bfd_api_set_sess_dsrd_min_tx_intvl
bfd_api_set_sess_dsrd_min_tx_intvl This function is used to set the session desired minimum transmission interval for an SNMP Set request. Syntax s_int32_t bfd_api_set_sess_dsrd_min_tx_intvl (struct bfd *bfd,u_int32_t index, u_int32_t min_tx, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Session index min_tx Minimum BFD transmission in milliseconds snmp Enable SNMP Output Parameter None Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds
BFD_SUCCESS when the function succeeds bfd_api_get_sess_dsrd_min_tx_intvl This function is used to get the session desired minimum transmission interval for an SNMP Get request. Syntax s_int32_t bfd_api_get_sess_dsrd_min_tx_intvl (struct bfd *bfd,u_int32_t index, u_int32_t *ret, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Session index snmp Enable SNMP Output Parameter ret Returns the desired minimum transmission interval of the session when the function
succeeds or 0 when it fails Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds © 2015 IP Infusion Inc. Proprietary 131 BFD MIB Support bfd_api_set_sess_req_min_rx_intvl This function is used to set the session required minimum receive interval for an SNMP Set request. Syntax s_int32_t bfd_api_set_sess_req_min_rx_intvl (struct bfd *bfd,u_int32_t index, u_int32_t min_rx, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Session index
index Session index min_rx Minimum BFD reception in milliseconds snmp Enable SNMP Output Parameter None Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds bfd_api_get_sess_req_min_rx_intvl This function is used to get the session required minimum receive interval for an SNMP Get request. Syntax s_int32_t bfd_api_get_sess_req_min_rx_intvl (struct bfd *bfd,u_int32_t index, u_int32_t *ret, bool_t snmp) Input Parameters bfd A pointer to BFD structure
Input Parameters bfd A pointer to BFD structure index Session index snmp Enable SNMP Output Parameter ret Returns the required minimum receive interval of the session when the function succeeds or 0 when it fails Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds 132 © 2015 IP Infusion Inc. Proprietary BFD MIB Support bfd_api_set_sess_req_min_echo_rx_intvl
bfd_api_set_sess_req_min_echo_rx_intvl This function is used to set the session required minimum echo receive interval for an SNMP Set request. Syntax s_int32_t bfd_api_set_sess_req_min_echo_rx_intvl (struct bfd *bfd,u_int32_t index, u_int32_t echo_int, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Session index echo_int Echo interval snmp Enable SNMP Output Parameter None Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds
BFD_SUCCESS when the function succeeds bfd_api_get_sess_req_min_echo_rx_intvl This function is used to get the session required minimum echo receive interval for an SNMP Get request. Syntax s_int32_t bfd_api_get_sess_req_min_echo_rx_intvl (struct bfd *bfd,u_int32_t index, u_int32_t *ret, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Session index snmp Enable SNMP Output Parameter ret Returns the required minimum echo receive interval of the session when the function
succeeds or 0 when it fails Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds © 2015 IP Infusion Inc. Proprietary 133 BFD MIB Support bfd_api_set_sess_detect_mult This function is used to set the session detect multiplier for an SNMP Set request. Syntax s_int32_t bfd_api_set_sess_detect_mult (struct bfd *bfd,u_int32_t index, u_int32_t mult, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Session index mult Detection multiplier
index Session index mult Detection multiplier snmp Enable SNMP Output Parameter None Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds bfd_api_get_sess_detectmult This function is used to get the session detect multiplier for an SNMP Get request. Syntax s_int32_t bfd_api_get_sess_detectmult (struct bfd *bfd,u_int32_t index, u_int32_t *ret, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Session index snmp Enable SNMP Output Parameter
snmp Enable SNMP Output Parameter ret Returns the detect multiple value of the session when the function succeeds or 0 when it fails. Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds 134 © 2015 IP Infusion Inc. Proprietary BFD MIB Support bfd_api_get_sess_neg_intvl This function is used to get the session negotiated interval for an SNMP Get request. Syntax s_int32_t bfd_api_get_sess_neg_intvl (struct bfd *bfd,u_int32_t index, u_int32_t *ret, bool_t snmp)
u_int32_t *ret, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Session index snmp Enable SNMP Output Parameter ret Returns the negotiated interval of the session when the function succeeds or 0 when it fails Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds bfd_api_get_sess_neg_echo_intvl This function is used to get the session negotiated echo interval for an SNMP Get request. Syntax s_int32_t
Syntax s_int32_t bfd_api_get_sess_neg_echo_intvl (struct bfd *bfd,u_int32_t index, u_int32_t *ret, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Session index snmp Enable SNMP Output Parameter ret Returns the negotiated echo interval of the session when the function succeeds or 0 when it fails Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds © 2015 IP Infusion Inc. Proprietary 135 BFD MIB Support bfd_api_get_sess_neg_detect_mult
BFD MIB Support bfd_api_get_sess_neg_detect_mult This function is used to get the session negotiated detect multiplier for an SNMP Get request. Syntax s_int32_t bfd_api_get_sess_neg_detect_mult (struct bfd *bfd,u_int32_t index, u_int32_t *ret, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Session index snmp Enable SNMP Output Parameter ret Returns the negotiated detect multiple value of the session when the function succeeds or 0 when it fails Return Values
0 when it fails Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds bfd_api_get_sess_auth_pres_flag This function is used to get the session authentication preserve flag for an SNMP Get request. Syntax u_int32_t bfd_api_get_sess_auth_pres_flag (struct bfd *bfd,u_int32_t index, u_int32_t *ret, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Session index snmp Enable SNMP Output Parameter
snmp Enable SNMP Output Parameter ret Returns the authentication preserve flag of the session when the function succeeds or 0 when it fails Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds 136 © 2015 IP Infusion Inc. Proprietary BFD MIB Support bfd_api_get_sess_auth_type This function is used to get the session authentication type for an SNMP Get request. Syntax s_int32_t bfd_api_get_sess_auth_type (struct bfd *bfd,u_int32_t index,
u_int32_t *ret, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Session index snmp Enable SNMP Output Parameter ret Returns the session authentication type when the function succeeds or 0 when it fails Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds bfd_api_get_sess_auth_key_id This function is used to get the session authentication key ID for an SNMP Get request. Syntax s_int32_t
Syntax s_int32_t bfd_api_get_sess_auth_key_id (struct bfd *bfd,u_int32_t index, u_int32_t *ret, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Session index snmp Enable SNMP Output Parameter ret Returns the authentication key ID of the session when the function succeeds or 0 when it fails Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds © 2015 IP Infusion Inc. Proprietary 137 BFD MIB Support bfd_api_get_sess_auth_key
BFD MIB Support bfd_api_get_sess_auth_key This function is used to get the session authentication key for an SNMP Get request. Syntax s_int32_t bfd_api_get_sess_auth_key (struct bfd *bfd,u_int32_t index, char **ret, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Session index snmp Enable SNMP Output Parameter ret Returns the authentication key of the session when the function succeeds or NULL when it fails Return Values BFD_FAILURE when the function fails
Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds bfd_api_set_sess_stor_type This function is used to set the session storage type for an SNMP Set request. Syntax s_int32_t bfd_api_set_sess_stor_type (struct bfd *bfd,u_int32_t index, u_int32_t intval, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Session index intval Value to be set snmp Enable SNMP Output Parameter None Return Values BFD_FAILURE when the function fails
Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds 138 © 2015 IP Infusion Inc. Proprietary BFD MIB Support bfd_api_get_sess_stor_type This function is used to get the session storage type for an SNMP Get request. Syntax s_int32_t bfd_api_get_sess_stor_type (struct bfd *bfd,u_int32_t index, u_int32_t *ret, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Session index snmp Enable SNMP Output Parameter
snmp Enable SNMP Output Parameter ret Returns the session storage type when the function succeeds or 0 when it fails Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds bfd_api_set_sess_row_status This function is used to set the session row status for an SNMP Set request. Syntax s_int32_t bfd_api_set_sess_row_status (struct bfd_master *bm, u_int32_t index, u_int32_t val, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Session index
index Session index val Status value snmp Enable SNMP Output Parameter None Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds © 2015 IP Infusion Inc. Proprietary 139 BFD MIB Support bfd_api_get_sess_row_status This function is used to get the session row status for an SNMP Get request. Syntax s_int32_t bfd_api_get_sess_row_status (struct bfd *bfd,u_int32_t index, u_int32_t *ret, bool_t snmp) Input Parameters bfd A pointer to BFD structure
Input Parameters bfd A pointer to BFD structure index Session index snmp Enable SNMP Output Parameter ret Returns the session row status when the function succeeds or 0 when it fails Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds bfd_api_get_perf_pkt_in This function gets the number of performance packet received. Syntax u_int32_t bfd_api_get_perf_pkt_in (struct bfd *bfd, u_int32_t index, u_int32_t *ret, bool_t snmp) Input Parameters
u_int32_t *ret, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Packet index snmp Enable SNMP Output Parameter ret Returns the number performance packet received when the function succeeds or 0 when it fails Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds 140 © 2015 IP Infusion Inc. Proprietary BFD MIB Support bfd_api_get_perf_pkt_out This function gets the number of performance packet forwarded. Syntax s_int32_t
Syntax s_int32_t bfd_api_get_perf_pkt_out (struct bfd *bfd, u_int32_t index, u_int32_t *ret, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Packet index snmp Enable SNMP Output Parameter ret Returns the number of performance packets forwarded when the function succeeds or 0 when it fails Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds bfd_api_get_sess_up_time This function gets the session up time parameter. Syntax s_int32_t
Syntax s_int32_t bfd_api_get_sess_up_time (struct bfd *bfd, u_int32_t index, u_int32_t *ret, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Packet index snmp Enable SNMP Output Parameter ret Returns the up time parameter of the session when the function succeeds or 0 when it fails Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds © 2015 IP Infusion Inc. Proprietary 141 BFD MIB Support bfd_api_get_perf_lastcomm_lost_diag
bfd_api_get_perf_lastcomm_lost_diag This function gets the performance last communication lost diagnostic. Syntax s_int32_t bfd_api_get_perf_lastcomm_lost_diag (struct bfd *bfd, u_int32_t index, u_int32_t *ret, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Packet index snmp Enable SNMP Output Parameter ret Returns the performance last communication lost diagnostic when the function succeeds or 0 when it fails Return Values BFD_FAILURE when the function fails
Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds bfd_api_get_perf_sess_up_count This function gets the performance session up count parameter. Syntax s_int32_t bfd_api_get_perf_sess_up_count (struct bfd *bfd, u_int32_t index, u_int32_t *ret, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Packet index snmp Enable SNMP Output Parameter ret Returns the performance session up count parameter when the function succeeds or 0 when it fails
when it fails Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds 142 © 2015 IP Infusion Inc. Proprietary BFD MIB Support bfd_api_get_perf_disc_time This function gets the performance discriminator time parameter. Syntax s_int32_t bfd_api_get_perf_disc_time (struct bfd *bfd, u_int32_t index, u_int32_t *ret, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Packet index snmp Enable SNMP Output Parameter
snmp Enable SNMP Output Parameter ret Returns the performance discriminator time parameter when the function succeeds or 0 when it fails Return Values None bfd_api_get_perf_pkt_in_hc This function gets the number of high-capacity performance packets received. Syntax s_int32_t bfd_api_get_perf_pkt_in_hc (struct bfd *bfd, u_int32_t index, u_int32_t *ret, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Packet index snmp Enable SNMP Output Parameter
snmp Enable SNMP Output Parameter ret Returns the number of high-capacity performance packets received when the function succeeds or 0 when it fails Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds © 2015 IP Infusion Inc. Proprietary 143 BFD MIB Support bfd_api_get_perf_pkt_out_hc This function gets the number of high-capacity performance packet forwarded. Syntax s_int32_t bfd_api_get_perf_pkt_out_hc (struct bfd *bfd, u_int32_t index,
u_int32_t *ret, bool_t snmp) Input Parameters bfd A pointer to BFD structure index Packet index snmp Enable SNMP Output Parameter ret Returns the number of high-capacity performance packets forwarded when the function succeeds or 0 when it fails Return Values BFD_FAILURE when the function fails BFD_SUCCESS when the function succeeds bfd_sess_lookup_by_disc_map_index This function loops through the BFD sessions for SNMP Get request based on the session local discriminator. Syntax
Syntax struct bfd_session * bfd_sess_lookup_by_disc_map_index (u_int32_t loc_disc, u_int8_t exact, struct bfd *bfd) Input Parameters loc_disc Local discriminator exact Exact value bfd A pointer to BFD structure Output Parameters None Return Values BFD session structure from the session tree based on the local discriminator if it exists; otherwise, NULL is returned. 144 © 2015 IP Infusion Inc. Proprietary BFD MIB Support Traps and Scalar Objects
BFD MIB Support Traps and Scalar Objects Traps and scalar objects for the BFS session state are defined in this section. Notifications BFD Session Up Notification (bfdSessUp) This notification is generated when the bfdSessState object for one or more contiguous entries in bfdSessTable are about to enter the up (4) state from some other state. BFD Session Down or Session Admin Down Notification (bfdSessDown)
This notification is generated when the bfdSessState object for one or more contiguous entries in bfdSessTable are about to enter the down (2) or adminDown (1) state from some other state. Scalar Variables BFD Admin Status (bfdAdminStatus) The global administrative status of BFD in this router. The value “enabled” (1) denotes that the BFD Process is active on at least one interface; “disabled” (2) disables it on all interfaces. BFD Session Notification Enable (bfdSessNotificationsEnable)
If this object is set to true (1), then it enables the emission of bfdSessUp and bfdSessDown notifications; otherwise, these notifications are not emitted. The MIB is only for IP-based BFD sessions and BFD objects available for both Single-hop and Multi-hop sessions. © 2015 IP Infusion Inc. Proprietary 145 BFD MIB Support 146 © 2015 IP Infusion Inc. Proprietary Index A nsm_ipv6_if_bfd_static_unset 56 bfd_api_get_perf_disc_time 143 abstraction layer 16 bfd_api_get_perf_lastcomm_lost_diag 142
application protocol modules 23 bfd_api_get_perf_pkt_in 140 BGP BFD module 69, 78 bfd_api_get_perf_pkt_in_hc 143 interfaces 24, 52, 59, 63, 69, 78 bfd_api_get_perf_pkt_out 141 IS-IS BFD module 23 bfd_api_get_perf_pkt_out_hc 144 OSPF BFD module 24 bfd_api_get_perf_sess_up_count 142 OSPFv2 BFD module 69 bfd_api_get_sess_addr 128 RIP BFD module 24 bfd_api_get_sess_addr_type 127 bfd_api_get_sess_admin_status 122 B bfd_api_get_sess_auth_key 138 bfd_api_get_sess_auth_key_id 137
bfd_api_get_sess_auth_key_id 137 BFD bfd_api_get_sess_auth_pres_flag 136 design 12 bfd_api_get_sess_auth_type 137 failover modes 11 bfd_api_get_sess_cntrlplane_indep_flag 125 features 11 bfd_api_get_sess_dest_udp_port 119 operation 11 bfd_api_get_sess_detectmult 134 BFD and application protocol modules 23 bfd_api_get_sess_diag 123 BFD base module 15 bfd_api_get_sess_disc 118 BFD client module 16 bfd_api_get_sess_dsrd_min_tx_intvl 131 BFD command APIs 95 bfd_api_get_sess_echo_src_udp_port 121
bfd_add_ipv6_user_session 98 bfd_api_get_sess_gtsm 129 bfd_add_user_session 96 bfd_api_get_sess_gtsm_ttl 130 bfd_del_ipv6_user_session 99 bfd_api_get_sess_interface 126 bfd_del_user_session 97 bfd_api_get_sess_mh_unlnk_mode 117 bfd_echo_interval_set 100 bfd_api_get_sess_neg_detect_mult 136 bfd_echo_interval_unset 100 bfd_api_get_sess_neg_echo_intvl 135 bfd_echo_mode_set 106 bfd_api_get_sess_neg_intvl 135 bfd_echo_mode_set_interface 108 bfd_api_get_sess_oper_mode 124
bfd_echo_mode_unset 106 bfd_api_get_sess_req_min_echo_rx_intvl 133 bfd_echo_mode_unset_interface 108 bfd_api_get_sess_req_min_rx_intvl 132 bfd_proto_interval_set 101 bfd_api_get_sess_rmte_disc 118 bfd_proto_interval_unset 102 bfd_api_get_sess_rmte_heard_flag 123 bfd_proto_multihop_interval_set 102 bfd_api_get_sess_row_status 140 bfd_proto_multihop_interval_unset 103 bfd_api_get_sess_src_udp_port 120 bfd_proto_slow_timer_set 107 bfd_api_get_sess_state 122
bfd_proto_slow_timer_set_interface 108 bfd_api_get_sess_stor_type 139 bfd_proto_slow_timer_unset 107 bfd_api_get_sess_up_time 141 bfd_proto_slow_timer_unset_interface 109 bfd_api_set_sess_version_no 115 bfd_protol_multihop_ipv6_interval_set 104 bfd_notification_set 115 bfd_protol_multihop_ipv6_interval_unset 105 bfd_sess_interface_disable 115 BFD message module 19 bfd_sess_lookup_by_disc_map_index 144 BFD MIB Support 111 bfd_sess_lookup_by_idx 114
BFD MIB Support 111 bfd_sess_lookup_by_idx 114 BFD server module 17 bfd_sess_lookup_next_by_index 114 BFD Session IP Mapping Table Object API 145 BGP BFD module 69, 78 BFD Static Route command API bgp_peer_bfd_set 60 nsm_ipv4_bfd_static_set_all 54, 56 bgp_peer_bfd_unset 61 nsm_ipv4_bfd_static_unset_all 54 nsm_ipv4_if_bfd_static_set 53 C nsm_ipv4_if_bfd_static_unset 53 nsm_ipv6_bfd_static_unset_all 57 client-server IPC 17 nsm_ipv6_if_bfd_static_set 55 © 2015 IP Infusion Inc. Proprietary 147
© 2015 IP Infusion Inc. Proprietary 147 Index F OSPF BFD module 24 OSPFv2 BFD module 69 failover modes 11 fate-sharing 12 P non-fate-sharing 12 protocol command APIs for BFD H bgp_peer_bfd_set 60, 70 bgp_peer_bfd_unset 61 HAL/PAL layer 18 isis_bfd_all_interfaces_set 66, 70 hello processing 16 isis_bfd_all_interfaces_unset 67, 70 isis_if_bfd_disable_set 65, 70 I isis_if_bfd_disable_unset 65 isis_if_bfd_set 64, 70 interfaces 19 isis_if_bfd_unset 65
interfaces 19 isis_if_bfd_unset 65 application protocol interface 20, 24 ospf_bfd_all_interfaces_set 73 BFD BGP management interface 64 ospf_bfd_all_interfaces_unset 74 distribution 21 ospf_if_bfd_disable_set 72 distribution line card 21 ospf_if_bfd_disable_unset 72 management 20 ospf_if_bfd_set 71 interfaces and messages ospf_if_bfd_unset 71 BFD and NSM 52 ospf_vlink_bfd_set 74 IS-IS BFD module 23 ospf_vlink_bfd_unset 75 isis_bfd_all_interfaces_set 66 isis_bfd_all_interfaces_unset 67 R
isis_bfd_all_interfaces_unset 67 R isis_if_bfd_disable_set 65 isis_if_bfd_disable_unset 65 RIP BFD module 24 isis_if_bfd_set 64 isis_if_bfd_unset 65 S M session FSM 19 Session Performance Table (bfdSessPerfTable) 21 Messages exchanged software architecture BFD and NSM 52 abstraction layer 16 application protocol interface 20 N BFD base module 15 BFD client module 16 nsm_ipv4_bfd_static_set_all 54, 56 BFD message module 19 nsm_ipv4_bfd_static_unset_all 54 BFD server module 17
nsm_ipv4_if_bfd_static_set 53 client-server IPC 17 nsm_ipv4_if_bfd_static_unset 53 design 21 nsm_ipv6_bfd_static_unset_all 57 distribution interface 21 nsm_ipv6_if_bfd_static_set 55 distribution line card interface 21 nsm_ipv6_if_bfd_static_unset 56 HAL/PAL layer 18 hello processing 16 O integration 21 interfaces 19 OAMD API management interface 20 nsm_mpls_bfd_api_fec_disable_set 47 session FSM 19 nsm_mpls_bfd_api_fec_set 46 software integration 21 nsm_mpls_bfd_api_fec_unset 47, 93
nsm_mpls_bfd_api_fec_unset 47, 93 nsm_mpls_bfd_api_lsp_all_set 48 T nsm_mpls_bfd_api_lsp_all_unset 49 nsm_mpls_bfd_api_vccv_trigger 49 Traps and Scalar Objects 145 OAMD BFD and OAMD MPLS 39 148 © 2015 IP Infusion Inc. Proprietary
ZebOS-XP® Network Platform Version 1.4 Extended Performance Border Gateway Protocol Command Reference December 2015 IP Infusion Inc. Proprietary © 2015 IP Infusion Inc. All Rights Reserved. This documentation is subject to change without notice. The software described in this document and this documentation are furnished under a license agreement or nondisclosure agreement. The software and documentation may be used or
copied only in accordance with the terms of the applicable agreement. No part of this publication may be reproduced, stored in a retrieval system, or transmitted in any form or any means electronic or mechanical, including photocopying and recording for any purpose other than the purchaser's internal use without the written permission of IP Infusion Inc. IP Infusion Inc. 3965 Freedom Circle, Suite 200 Santa Clara, CA 95054 +1 408-400-1900 http://www.ipinfusion.com/
+1 408-400-1900 http://www.ipinfusion.com/ For support, questions, or comments via E-mail, contact: support@ipinfusion.com Trademarks: IP Infusion, OcNOS, VirNOS, ZebM, ZebOS, and ZebOS-XP are trademarks or registered trademarks of IP Infusion. All other trademarks, service marks, registered trademarks, or registered service marks are the property of their respective owners. ii IP Infusion Inc. Proprietary Contents
owners. ii IP Infusion Inc. Proprietary Contents Preface . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .ix Audience . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ix Conventions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ix
Contents . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ix Related Documents. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ix Support . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .x
Comments. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .x CHAPTER 1 Command Line Interface. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 11 Overview . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .11 Starting the Command Line Interface . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .11
Command Line Interface Help . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .11 Command Completion. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .12 Command Abbreviations. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .13
Command Line Errors . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .13 Command Negation. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .13 Syntax Conventions. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .14
Variable Placeholders . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .15 Command Description Format. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .16 Keyboard Operations. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .16
Show Command Modifiers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .17 Begin Modifier . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .17 Include Modifier . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .18
Exclude Modifier . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .18 Redirect Modifier . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .19 Command Modes. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .19
Command Mode Tree . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .20 Debug Command. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .20 CHAPTER 2 BGP Commands. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 21 address-family . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .25
aggregate-address. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .27 auto-summary. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .28 bgp aggregate-nexthop-check . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .29
bgp always-compare-med. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .30 bgp as-local-count . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .31 bgp bestpath as-path ignore. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .32 bgp bestpath compare-confed-aspath . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .33
bgp bestpath compare-routerid . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .34 bgp bestpath dont-compare-originator-id . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .35 bgp bestpath med. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .36 bgp bestpath tie-break-on-age. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .38
bgp client-to-client reflection. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .39 © 2015 IP Infusion Inc. Proprietary iii Contents bgp cluster-id. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 40 bgp confederation identifier. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 41
bgp confederation peers . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 42 bgp config-type . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 43 bgp dampening. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 44
bgp default ipv4-unicast. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 46 bgp default local-preference . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 47 bgp deterministic-med . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 48
bgp enforce-first-as. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 49 bgp extended-asn-cap. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 50 bgp fast-external-failover. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 51
bgp graceful-restart . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 52 bgp g-shut . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 53 bgp g-shut-capable. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 54
bgp g-shut-local-preference . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 55 bgp log-neighbor-changes. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 56 bgp multiple-instance. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 57
bgp nexthop-trigger delay . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 58 bgp nexthop-trigger enable. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 59 bgp rfc1771-path-select. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 60
bgp rfc1771-strict . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 61 bgp router-id . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 62 bgp scan-time . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 63
bgp update-delay . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 64 clear bgp (A.B.C.D|X:X::X:X) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 65 clear bgp * . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 66
clear bgp <1-4294967295>. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 68 clear bgp <1-65535> . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 70 clear bgp dampening . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 72
clear bgp external. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 73 clear bgp flap-statistics . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 75 clear bgp peer-group . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 76
clear bgp view. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 78 clear ip bgp A.B.C.D. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 80 clear ip bgp A.B.C.D vrf. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 82
clear ip bgp table-map . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 83 debug bgp . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 84 distance bgp . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 86
dump bgp all . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 87 dump bgp routes-mrt . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 88 dump bgp updates . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 89
exit-address-family. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 90 ip as-path access-list . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 91 ip community-list <1-99> . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 92
ip community-list <100-199>. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 93 ip community-list expanded. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 94 ip community-list standard. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 95 iv © 2015 IP Infusion Inc. Proprietary Contents
iv © 2015 IP Infusion Inc. Proprietary Contents ip community-list WORD. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .96 ip extcommunity-list <1-99> . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .97 ip extcommunity-list <100-199>. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .98
ip extcommunity-list expanded. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .99 ip extcommunity-list standard. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .100 match ip peer . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .101
max-paths . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .102 mpls-resolution. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .103 neighbor activate . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .104
neighbor advertisement-interval. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .105 neighbor allowas-in . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .106 neighbor as-origination-interval . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .107 neighbor attribute-unchanged. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .108
neighbor capability dynamic. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .109 neighbor capability graceful-restart . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .110 neighbor capability orf prefix-list. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .111 neighbor capability route-refresh. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .112
neighbor collide-established. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .113 neighbor connection-retry-time. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .114 neighbor default-originate. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .115
neighbor description. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .116 neighbor disallow-infinite-holdtime. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .117 neighbor distribute-list . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .118
neighbor dont-capability-negotiate. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .119 neighbor ebgp-multihop. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .120 neighbor enforce-multihop . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .121
neighbor fall-over bfd. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .122 neighbor filter-list . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .123 neighbor g-shut. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .124
neighbor g-shut-timer. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .125 neighbor local-as . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .126 neighbor maximum-prefix . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .127
neighbor next-hop-self. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .128 neighbor override-capability . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .129 neighbor passive . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .130
neighbor password. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .131 neighbor peer-group . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .132 neighbor port. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .133
neighbor prefix-list . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .134 neighbor remote-as . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .135 neighbor remove-private-AS. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .137
neighbor restart-time . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .138 neighbor route-map . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .139 neighbor route-reflector-client. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .140
neighbor route-server-client . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .141 neighbor send-community. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .142 neighbor send-label explicit-null. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .143 © 2015 IP Infusion Inc. Proprietary v Contents
© 2015 IP Infusion Inc. Proprietary v Contents neighbor shutdown. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 144 neighbor soft-reconfiguration inbound. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 145 neighbor strict-capability-match . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 146
neighbor timers. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 147 neighbor transparent-as. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 148 neighbor transparent-nexthop. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 149
neighbor unsuppress-map. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 150 neighbor update-source. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 151 neighbor version. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 152
neighbor weight. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 153 neighbor WORD peer-group. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 154 network. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 155
network synchronization . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 157 redistribute. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 158 restart bgp graceful. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 160
router bgp. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 161 router bgp view . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 162 snmp restart bgp. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 163
synchronization. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 164 table-map. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 165 timers bgp . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 167
undebug bgp . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 168 CHAPTER 3 BGP4+ Commands. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 169 aggregate-address X:X::X:X/M. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 170 clear bgp * ipv6. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 171
clear bgp ipv6 (A.B.C.D|X:X::X:X) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 172 clear bgp ipv6 <1-4294967295>. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 173 clear bgp ipv6 external. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 174 clear bgp ipv6 peer-group . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 175
clear bgp ipv6 unicast dampening . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 176 clear bgp ipv6 unicast flap-statistics . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 177 clear ip bpg ipv6 unicast table-map . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 178 clear ipv6 bgp * vrf . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 179
clear ipv6 bgp X:X::X:X vrf. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 180 network X:X::X:X. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 181 CHAPTER 4 BGP Virtual Private Network Commands . . . . . . . . . . . . . . . . . . . . 183 bgp inbound-route-filter . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 184
clear ip bgp * vpnv4 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 185 clear ip bgp * vpnv6 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 186 clear ip bgp <1-4294967295> vpnv4. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 187 clear ip bgp <1-4294967295> vpnv6. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 188
clear ip bgp A.B.C.D vpnv4. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 189 clear ip bgp X:X::X:X vpnv6. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 190 debug bgp mpls. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 191
import map. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 192 ip vrf . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 193 vi © 2015 IP Infusion Inc. Proprietary Contents neighbor allow-ebgp-vpn. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .194
neighbor as-override . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .195 neighbor send-community. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .196 neighbor soo. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .197
rd (route distinguisher). . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .198 route-target . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .199 CHAPTER 5 BGP Show Commands. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 201
show bgp. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .203 show bgp A.B.C.D . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .204 show bgp A.B.C.D/M. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .205
show bgp community. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .206 show bgp community-list. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .207 show bgp dampening dampened-paths . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .208 show bgp dampening flap-statistics. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .209
show bgp dampening parameters . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .210 show bgp filter-list. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .211 show bgp inconsistent-as . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .212
show bgp ipv6. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .213 show bgp neighbors. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .214 show bgp neighbors advertised-routes. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .215 show bgp neighbors received prefix-filter. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .216
show bgp neighbors received-routes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .217 show bgp neighbors routes. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .218 show bgp nexthop-tracking. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .219 show bgp nexthop-tree-details. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .220
show bgp paths. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .221 show bgp prefix-list . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .222 show bgp quote-regexp. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .223
show bgp regexp . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .224 show bgp route-map . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .225 show bgp summary . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .226
show bgp view . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .227 show bgp X:X::X:X. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .229 show bgp X:X::X:X/M longer prefixes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .230
show debugging bgp . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .231 show ip bgp. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .232 show ip bgp attribute-info . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .233
show ip bgp cidr-only. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .234 show ip bgp community-info. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .235 show ip bgp scan . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .236
show ip bgp vpnv4. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .237 show ip bgp vpnv6. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .239 show ip extcommunity-list. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .241
show ip protocols . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .242 show ip vrf. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .243 Appendix A Regular Expressions. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 245 © 2015 IP Infusion Inc. Proprietary vii Contents
© 2015 IP Infusion Inc. Proprietary vii Contents Index . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 247 viii © 2015 IP Infusion Inc. Proprietary Preface This document describes the ZebOS-XP commands for Border Gateway Protocol (BGP). Audience This document is intended for network administrators and other engineering professionals who configure and manage BGP. Conventions
BGP. Conventions TableP-1 shows the conventions used in this guide. Table P-1: Conventions Convention Description Italics Emphasized terms; titles of books Note: Special instructions, suggestions, or warnings monospaced type Code elements such as commands, functions, parameters, files, and directories Contents This document contains these chapters and appendices: • Chapter1, Command Line Interface • Chapter2, BGP Commands • Chapter3, BGP4+ Commands
• Chapter3, BGP4+ Commands • Chapter4, BGP Virtual Private Network Commands • Chapter5, BGP Show Commands • AppendixA, Regular Expressions Related Documents The following guides are related to this document: • Border Gateway Protocol Developer Guide • Unicast Configuration Guide • Installation Guide © 2015 IP Infusion Inc. Proprietary ix Preface Note: All ZebOS-XP technical manuals are available to licensed customers at http://www.ipinfusion.com/support/ document_list. Support
document_list. Support For support-related questions, contact support@ipinfusion.com. Comments If you have comments, or need to report a problem with the content, contact techpubs@ipinfusion.com. x © 2015 IP Infusion Inc. Proprietary Command Line Interface CHAPTER 1 This chapter introduces the ZebOS-XP Command Line Interface (CLI) and how to use its features. Overview You use the CLI to configure, monitor, and maintain ZebOS-XP devices. The CLI is text-based and each command is
usually associated with a specific task. You can give the commands described in this manual locally from the console of a device running ZebOS-XP or remotely from a terminal emulator such as putty or xterm. You can also use the commands in scripts to automate configuration tasks. Starting the Command Line Interface You must start daemons as described in this section before you can use the CLI. The general steps are listed below.
For details about the ZebOS-XP daemons, see the Installation Guide. 1. Start your terminal emulator and connect to the device or go to the console of the device running ZebOS-XP. 2. Connect to the directory where you installed the ZebOS-XP executables. 3. Start the Network Services Module (NSM). # ./nsm -d 4. Start the protocol module daemons that your organization uses, such as mstpd, ospf6d, or ripd. # ./mstpd –d 5. Start the Integrated Management Interface (IMI) daemon. # ./imi -d
# ./imi -d 6. Start the IMI shell. # ./imish Note: Your organization may use a ZebOS-XP build that does not include imish. If that is the case, you must connect to a port on which a protocol daemon is listening. For details, see the Installation Guide. You can now begin using the CLI. Command Line Interface Help You access the CLI help by entering a full or partial command string and a question mark “?”. The CLI displays the
command keywords or parameters along with a short description. For example, at the CLI command prompt, type: > show ? The CLI displays this keyword list with short descriptions for each keyword: show ? application-priority Application Priority © 2015 IP Infusion Inc. Proprietary 11 Command Line Interface arp Internet Protocol (IP) bfd Bidirectional Forwarding Detection (BFD) bgp Border Gateway Protocol (BGP) bi-lsp Bi-directional lsp status and configuration bridge Bridge group commands
bridge Bridge group commands ce-vlan COS Preservation for Customer Edge VLAN class-map Class map entry cli Show CLI tree of current mode clns Connectionless-Mode Network Service (CLNS) control-adjacency Control Adjacency status and configuration control-channel Control Channel status and configuration cspf CSPF Information customer Display Customer spanning-tree cvlan Display CVLAN information debugging Debugging functions (see also 'undebug') dot1x IEEE 802.1X Port-Based Access Control
dot1x IEEE 802.1X Port-Based Access Control etherchannel LACP etherchannel ethernet Layer-2 ... If you type the ? in the middle of a keyword, the CLI displays help for that keyword only. > show de? debugging Debugging functions (see also 'undebug') If you type the ? in the middle of a keyword, but the incomplete keyword matches several other keywords, ZebOS-XP displays help for all matching keywords. > show i? (CLI does not display the question mark).
interface Interface status and configuration ip IP information isis ISIS information Command Completion The CLI can complete the spelling of a command or a parameter. Begin typing the command or parameter and then press the tab key. For example, at the CLI command prompt type sh: > sh Press the tab key. The CLI displays: > show If the spelling of a command or parameter is ambiguous, the CLI displays the choices that match the abbreviation. Type show i and press the tab key. The CLI displays:
show i and press the tab key. The CLI displays: > show i interface ip ipv6 isis > show i The CLI displays the interface and ip keywords. Type n to select interface and press the tab key. The CLI displays: > show in > show interface Type ? and the CLI displays the list of parameters for the show interface command. > show interface IFNAME Interface name | Output modifiers 12 © 2015 IP Infusion Inc. Proprietary Command Line Interface > Output redirection <cr>
Command Line Interface > Output redirection <cr> The CLI displays the only parameter associated with this command, the IFNAME parameter. Command Abbreviations The CLI accepts abbreviations that uniquely identify a keyword in commands. For example: > sh in eth0 is an abbreviation for: > show interface eth0 Command Line Errors Any unknown spelling causes the CLI to display the error Unrecognized command in response to the ?. The CLI displays the command again as last entered. > show dd?
> show dd? % Unrecognized command > show dd When you press the Enter key after typing an invalid command, the CLI displays: (config)#router ospf here ^ % Invalid input detected at '^' marker. where the ^ points to the first character in error in the command. If a command is incomplete, the CLI displays the following message: > show % Incomplete command. Some commands are too long for the display line and can wrap mid-parameter or mid-keyword, as shown below. This
does not cause an error and the command performs as expected: area 10.10.0.18 virtual-link 10.10.0.19 authent ication-key 57393 Command Negation Many commands have a no form that resets a feature to its default value or disables the feature. For example: • The ip address command assigns an IPv4 address to an interface • The no ip address command removes an IPv4 address from an interface © 2015 IP Infusion Inc. Proprietary 13 Command Line Interface Syntax Conventions
Command Line Interface Syntax Conventions Table1-1 describes the conventions used to represent command syntax in this reference. Table 1-1: Syntax conventions Convention Description Example monospaced Command strings entered on a command line show bgp font lowercase Keywords that you enter exactly as shown in the show bgp command syntax. UPPERCASE See Variable Placeholders IFNAME () Optional parameters, from which you must select (A.B.C.D|<0-4294967295>)
one. Vertical bars delimit the selections. Do not enter the parentheses or vertical bars as part of the command. () Optional parameters, from which you select one or (A.B.C.D|<0-4294967295>|) none. Vertical bars delimit the selections. Do not enter the parentheses or vertical bars as part of the command. () Optional parameter which you can specify or omit. (IFNAME|) Do not enter the parentheses or vertical bar as part of the command.
of the command. {} Optional parameters, from which you must select {intra-area <1-255>|inter-area one or more. Vertical bars delimit the selections. Do <1-255>|external <1-255>} not enter the braces or vertical bars as part of the command. [] Optional parameters, from which you select zero or [<1-65535>|AA:NN|internet|local-AS| more. Vertical bars delimit the selections. Do not no-advertise|no-export] enter the brackets or vertical bars as part of the command.
command. A '?' before a parameter in square brackets limits that parameter to one occurrence in a command string. . Repeatable parameter. The parameter that follows a set as-path prepend .<1-65535> period can be repeated more than once. Do not enter the period as part of the command. 14 © 2015 IP Infusion Inc. Proprietary Command Line Interface Variable Placeholders Table1-2 shows the tokens used in command syntax use to represent variables for which you supply a value.
Table 1-2: Variable placeholders Token Description WORD A contiguous text string (excluding spaces) LINE A text string, including spaces; no other parameters can follow this parameter IFNAME Interface name whose format varies depending on the platform; examples are: eth0, Ethernet0, ethernet0, xe0 A.B.C.D IPv4 address A.B.C.D/M IPv4 address and mask/prefix X:X::X:X IPv6 address X:X::X:X/M IPv6 address and mask/prefix HH:MM:SS Time format AA:NN BGP community value XX:XX:XX:XX:XX:XX MAC address
XX:XX:XX:XX:XX:XX MAC address <1-5> Numeric range <1-65535> <0-2147483647> <0-4294967295> © 2015 IP Infusion Inc. Proprietary 15 Command Line Interface Command Description Format Table1-3 explains the sections used to describe each command in this reference. Table 1-3: Command descriptions Section Description Command Name The name of the command, followed by what the command does and when should it be used Command Syntax The syntax of the command
Command Syntax The syntax of the command Parameters Parameters and options for the command Default The state before the command is executed Command Mode The mode in which the command runs; see Command Modes Example An example of the command being executed Keyboard Operations Table1-4 lists the operations you can perform from the keyboard. Table 1-4: Keyboard operations Key combination Operation
Key combination Operation Left arrow or Ctrl+b Moves one character to the left. When a command extends beyond a single line, you can press left arrow or Ctrl+b repeatedly to scroll toward the beginning of the line, or you can press Ctrl+a to go directly to the beginning of the line. Right arrow or Ctrl-f Moves one character to the right. When a command extends beyond a single line, you can press right
arrow or Ctrl+f repeatedly to scroll toward the end of the line, or you can press Ctrl+e to go directly to the end of the line. Esc, b Moves back one word Esc, f Moves forward one word Ctrl+e Moves to end of the line Ctrl+a Moves to the beginning of the line Ctrl+u Deletes the line Ctrl+w Deletes from the cursor to the previous whitespace Alt+d Deletes the current word Ctrl+k Deletes from the cursor to the end of line
Ctrl+k Deletes from the cursor to the end of line Ctrl+y Pastes text previously deleted with Ctrl+k, Alt+d, Ctrl+w, or Ctrl+u at the cursor 16 © 2015 IP Infusion Inc. Proprietary Command Line Interface Table 1-4: Keyboard operations (Continued) Key combination Operation Ctrl+t Transposes the current character with the previous character Ctrl+c Ignores the current line and redisplays the command prompt Ctrl+z Ends configuration mode and returns to exec mode Ctrl+l Clears the screen
Ctrl+l Clears the screen Up Arrow or Ctrl+p Scroll backward through command history Down Arrow or Ctrl+n Scroll forward through command history Show Command Modifiers You can use two tokens to modify the output of a show command. Enter a question mark to display these tokens: # show users ? | Output modifiers > Output redirection You can type the | (vertical bar character) to use output modifiers. For example: > show rsvp | ? begin Begin with the line that matches
begin Begin with the line that matches exclude Exclude lines that match include Include lines that match redirect Redirect output Begin Modifier The begin modifier displays the output beginning with the first line that contains the input string (everything typed after the begin keyword). For example: # show run | begin eth1 ...skipping interface eth1 ipv6 address fe80::204:75ff:fee6:5393/64 ! interface eth2 ipv6 address fe80::20d:56ff:fe96:725a/64 ! line con 0 login ! end
! line con 0 login ! end You can specify a regular expression after the begin keyword, This example begins the output at a line with either “eth3” or “eth4”: # show run | begin eth[3-4] ...skipping interface eth3 © 2015 IP Infusion Inc. Proprietary 17 Command Line Interface shutdown ! interface eth4 shutdown ! interface svlan0.1 no shutdown ! route-map myroute permit 3 ! route-map mymap1 permit 10 ! route-map rmap1 permit 3 ! line con 0 login line vty 0 4 login ! end Include Modifier
login line vty 0 4 login ! end Include Modifier The include modifier includes only those lines of output that contain the input string. In the output below, all lines containing the word “input” are included: # show interface eth1 | include input input packets 80434552, bytes 2147483647, dropped 0, multicast packets 0 input errors 0, length 0, overrun 0, CRC 0, frame 0, fifo 1, missed 0
You can specify a regular expression after the include keyword. This examples includes all lines with “input” or “output”: #show int eth0 | include (in|out)put input packets 597058, bytes 338081476, dropped 0, multicast packets 0 input errors 0, length 0, overrun 0, CRC 0, frame 0, fifo 0, missed 0 output packets 613147, bytes 126055987, dropped 0 output errors 0, aborted 0, carrier 0, fifo 0, heartbeat 0, window 0 Exclude Modifier
Exclude Modifier The exclude modifier excludes all lines of output that contain the input string. In the following output example, all lines containing the word “input” are excluded: # show interface eth1 | exclude input Interface eth1 Scope: both Hardware is Ethernet, address is 0004.75e6.5393 index 3 metric 1 mtu 1500 <UP,BROADCAST,RUNNING,MULTICAST> VRF Binding: Not bound Administrative Group(s): None DSTE Bandwidth Constraint Mode is MAM inet6 fe80::204:75ff:fee6:5393/64
inet6 fe80::204:75ff:fee6:5393/64 output packets 4438, bytes 394940, dropped 0 output errors 0, aborted 0, carrier 0, fifo 0, heartbeat 0, window 0 collisions 0 You can specify a regular expression after the exclude keyword. This example excludes lines with “output” or “input”: 18 © 2015 IP Infusion Inc. Proprietary Command Line Interface # show interface eth0 | exclude (in|out)put Interface eth0 Scope: both Hardware is Ethernet Current HW addr: 001b.2139.6c4a
Physical:001b.2139.6c4a Logical:(not set) index 2 metric 1 mtu 1500 duplex-full arp ageing timeout 3000 <UP,BROADCAST,RUNNING,MULTICAST> VRF Binding: Not bound Bandwidth 100m DHCP client is disabled. inet 10.1.2.173/24 broadcast 10.1.2.255 VRRP Master of : VRRP is not configured on this interface. inet6 fe80::21b:21ff:fe39:6c4a/64 collisions 0 Redirect Modifier The redirect modifier writes the output into a file. The output is not displayed. # show history | redirect /var/frame.txt
# show history | redirect /var/frame.txt The output redirection token (>) does the same thing: # show history >/var/frame.txt Command Modes Commands are grouped into modes arranged in a hierarchy. Each mode has its own set of commands. Table1-5 lists the command modes common to all protocols. Table 1-5: Common command modes Name Description Executive Also called view mode, this is the first mode to appear after you start the CLI. It is a base mode from where you
mode can perform basic commands such as show, exit, quit, help, list, and enable. Privileged Also called enable mode, in this mode you can run additional basic commands such as debug, write, and executive show. mode Configure Also called configure terminal mode, in this mode you can run configuration commands and go into other mode modes such as interface, router, route map, key chain, and address family.
Interface In this mode you can configure protocol-specific settings for a particular interface. Any setting you configure in mode this mode overrides a setting configured in router mode. Router This mode is used to configure router-specific settings for a protocol such as RIP or OSPF. mode © 2015 IP Infusion Inc. Proprietary 19 Command Line Interface Command Mode Tree The diagram below shows the common command mode hierarchy. Start in executive mode enable (password) Privileged executive mode
mode enable (password) Privileged executive mode configure terminal Configure mode interface eth0 router rip Interface Router mode mode Figure 1-1: Common command modes To change modes: 1. Enter privileged executive mode by entering enable in Executive mode. 2. Enter configure mode by entering configure terminal in Privileged Executive mode. The example below shows starting imish and then moving from executive mode to privileged executive mode to configure mode and finally to router mode:
configure mode and finally to router mode: # ./imish > enable mypassword # configure terminal Enter configuration commands, one per line. End with CNTL/Z. (config)# router rip (config-router)# Note: Each protocol can have modes in addition to the common command modes. See the command reference for the respective protocol for details. Debug Command Whether the settings you make for a debug command persist between sessions depends on the mode where you make the settings:
make the settings: • When you make settings for a debug command in executive mode, the configuration is valid for the current session only and is not saved in the ZebOS.conf file. • When you make settings for a debug command in configuration mode, the configuration is retained and saved in ZebOS.conf and used even after the session restarts. 20 © 2015 IP Infusion Inc. Proprietary BGP Commands CHAPTER 2 This chapter describes the BGP configuration commands. • address-family • aggregate-address
• address-family • aggregate-address • auto-summary • bgp aggregate-nexthop-check • bgp always-compare-med • bgp as-local-count • bgp bestpath as-path ignore • bgp bestpath compare-confed-aspath • bgp bestpath compare-routerid • bgp bestpath dont-compare-originator-id • bgp bestpath med • bgp bestpath tie-break-on-age • bgp client-to-client reflection • bgp cluster-id • bgp confederation identifier • bgp confederation peers • bgp config-type • bgp dampening • bgp default ipv4-unicast
• bgp dampening • bgp default ipv4-unicast • bgp default local-preference • bgp deterministic-med • bgp enforce-first-as • bgp extended-asn-cap • bgp fast-external-failover • bgp graceful-restart • bgp g-shut • bgp g-shut-capable • bgp g-shut-local-preference • bgp log-neighbor-changes • bgp multiple-instance • bgp nexthop-trigger delay • bgp nexthop-trigger enable • bgp rfc1771-path-select © 2015 IP Infusion Inc. Proprietary 21 BGP Commands • bgp rfc1771-strict • bgp router-id • bgp scan-time
• bgp router-id • bgp scan-time • bgp update-delay • clear bgp (A.B.C.D|X:X::X:X) • clear bgp * • clear bgp <1-4294967295> • clear bgp <1-65535> • clear bgp dampening • clear bgp external • clear bgp flap-statistics • clear bgp peer-group • clear bgp view • clear ip bgp A.B.C.D • clear ip bgp A.B.C.D vrf • clear ip bgp table-map • debug bgp • distance bgp • dump bgp all • dump bgp routes-mrt • dump bgp updates • exit-address-family • ip as-path access-list • ip community-list <1-99>
• ip community-list <1-99> • ip community-list <100-199> • ip community-list expanded • ip community-list standard • ip community-list WORD • ip extcommunity-list <1-99> • ip extcommunity-list <100-199> • ip extcommunity-list expanded • ip extcommunity-list standard • match ip peer • max-paths • mpls-resolution • neighbor activate • neighbor advertisement-interval • neighbor allowas-in • neighbor as-origination-interval 22 © 2015 IP Infusion Inc. Proprietary BGP Commands
BGP Commands • neighbor attribute-unchanged • neighbor capability dynamic • neighbor capability graceful-restart • neighbor capability orf prefix-list • neighbor capability route-refresh • neighbor collide-established • neighbor connection-retry-time • neighbor default-originate • neighbor description • neighbor disallow-infinite-holdtime • neighbor distribute-list • neighbor dont-capability-negotiate • neighbor ebgp-multihop • neighbor enforce-multihop • neighbor fall-over bfd
• neighbor fall-over bfd • neighbor filter-list • neighbor g-shut • neighbor g-shut-timer • neighbor local-as • neighbor maximum-prefix • neighbor next-hop-self • neighbor override-capability • neighbor passive • neighbor password • neighbor peer-group • neighbor port • neighbor prefix-list • neighbor remote-as • neighbor remove-private-AS • neighbor restart-time • neighbor route-map • neighbor route-reflector-client • neighbor route-server-client • neighbor send-community
• neighbor send-community • neighbor send-label explicit-null • neighbor shutdown • neighbor soft-reconfiguration inbound • neighbor strict-capability-match • neighbor timers © 2015 IP Infusion Inc. Proprietary 23 BGP Commands • neighbor transparent-as • neighbor transparent-nexthop • neighbor unsuppress-map • neighbor update-source • neighbor version • neighbor weight • neighbor WORD peer-group • network • network synchronization • redistribute • restart bgp gracefull • router bgp
• restart bgp gracefull • router bgp • router bgp view • snmp restart bgp • synchronization • table-map • timers bgp • undebug bgp 24 © 2015 IP Infusion Inc. Proprietary BGP Commands address-family Use the address family command to enter the IPv4, IPv6 or VPNv4/v6 address family mode allowing configuration of address-family specific parameters. To leave the address family mode and return to the Configure mode use the exit-address-family command.
exit-address-family command. This command is used to configure routing exchange between Provider Edge (PE) and Customer Edge (CE) devices. The BGP sessions between PE routers can carry different types of routes (VPN-IPv4, IPv4, VPN-IPv6 and IPv6 routes). Address families are used to control the type of BGP session. Configure a BGP address family for each VRF configured on the PE router and a separate address family to carry VPN-IPv4 routes between PE routers. All non VPN
BGP neighbors are defined using the Router mode. All VPN BGP neighbors are defined under its associated Address Family mode. The BGP process with no address-family specified, is the default address-family where any sessions are configured that either are not associated with a VRF or are used to carry IPv4 or IPv6 routes. Use the no parameter with this command to disable the address-family configurations. Command Syntax address-family ipv4 address-family ipv4 (unicast|multicast)
address-family ipv4 (unicast|multicast) address-family ipv4 vrf NAME address-family ipv6 labeled-unicast address-family ipv6 (unicast|) address-family ipv6 vrf NAME address-family vpnv4 address-family vpn4 unicast address-family vpnv6 address-family vpnv6 unicast no address-family ipv4 vrf NAME no address-family ipv6 vrf NAME Parameters ipv4 IPv4 address family unicast Unicast address prefixes multicast Multicast address prefixes vrf VPN routing/forwarding instance
vrf VPN routing/forwarding instance NAME VPN routing/forwarding instance name ipv6 IPv6 address family labeled-unicast Enter IPv6 Provider Edge (6PE) Address Family mode to exchange labeled routes data among ISP PE-devices in Address-Family IPv6 Labeled-Unicast mode. When a neighbor activate command is given in this mode, the device becomes 6PE capable. unicast Unicast address prefixes vrf VPN routing/forwarding instance NAME VPN routing/forwarding instance name
NAME VPN routing/forwarding instance name © 2015 IP Infusion Inc. Proprietary 25 BGP Commands vpnv4 Virtual Private Network (VPN) version 4 address family unicast Unicast address prefixes vpnv6 VPN version 6 address family unicast Unicast address prefixes Command Mode Router mode Examples #configure terminal (config)#router bgp 7657 (config-router)#neighbor 3ffe:506::1 remote-as 7657 (config-router)#neighbor 3ffe:506::1 interface eth1 #configure terminal (config)#router bgp 7657
#configure terminal (config)#router bgp 7657 (config-router)#address-family ipv6 (config-router-af)#neighbor 3ffe:506::1 activate (config-router-af)#exit-address-family 26 © 2015 IP Infusion Inc. Proprietary BGP Commands aggregate-address Use this command to configure BGP aggregate entries. Aggregates are used to minimize the size of routing tables. Aggregation combines the characteristics of several
different routes and advertises a single route.The aggregate-address command creates an aggregate entry in the BGP routing table if any more-specific BGP routes are available in the specified range. Using the summary-only parameter advertises the prefix only, suppressing the more-specific routes to all neighbors. In the following example Router1 will propagate network 172.0.0.0 and suppresses the more specific route 172.10.0.0.
The as-set parameter creates an aggregate entry advertising the path for this route, consisting of all elements contained in all paths being summarized. Use this parameter to reduce the size of path information by listing the AS number only once, even if it was included in multiple paths that were aggregated. The as-set parameter is useful when aggregation of information results in an incomplete path information. Use the no parameter with this command to disable this function. Command Syntax
Command Syntax aggregate-address A.B.C.D/M aggregate-address A.B.C.D/M as-set aggregate-address A.B.C.D/M as-set summary-only aggregate-address A.B.C.D/M summary only aggregate-address A.B.C.D/M summary-only as-set no aggregate-address A.B.C.D/M no aggregate-address A.B.C.D/M as-set no aggregate-address A.B.C.D/M as-set summary-only no aggregate-address A.B.C.D/M summary only no aggregate-address A.B.C.D/M summary-only as-set Parameters A.B.C.D/M Aggregate prefix
Parameters A.B.C.D/M Aggregate prefix as-set Generate AS set path information summary-only Filter more specific routes from updates Default Disabled Command Mode Router mode Examples #configure terminal (config)#router bgp 100 (config-router)#aggregate-address 10.0.0.0/8 as-set summary-only (config)#router bgp 100 (config-router)#no aggregate-address 10.0.0.0/8 as-set summary-only © 2015 IP Infusion Inc. Proprietary 27 BGP Commands auto-summary
BGP Commands auto-summary Use this command to enable sending summarized routes by a BGP speaker to its peers in the router configuration mode or in the address-family configuration mode. Auto-summary is used by a BGP router to advertise summarized routes to its peers. Auto-summary can be enabled if certain routes have already been advertised: in this case, configuring auto-summary advertises the summarized routes first, then corresponding non-summarized routes are
withdrawn. If certain routes have already been advertised, and auto-summary is disabled, non-summarized routes are first advertised, then the corresponding summarized routes are withdrawn from all the connected peers. Use the no parameter with this command to disable this function. Command Syntax auto-summary no auto-summary Parameters None Default Disabled Command Mode Router mode and Address Family mode Examples The following example enables auto-summary in Router mode. #configure terminal
#configure terminal (config)#router bgp 11 (config-router)#auto-summary The following example enables auto-summary using the IPv4 address family. #configure terminal (config)#router bgp 1 (config)#address-family ipv4 (config-af)#auto-summary 28 © 2015 IP Infusion Inc. Proprietary BGP Commands bgp aggregate-nexthop-check Use this command to set the BGP option to perform aggregation only when next-hop matches the specified IP address.
Use the no parameter with this command to disable this functionality. Command Syntax bgp aggregate-nexthop-check no bgp aggregate-nexthop-check Parameters None Command Mode Configure mode Examples #configure terminal (config)#bgp aggregate-nexthop-check © 2015 IP Infusion Inc. Proprietary 29 BGP Commands bgp always-compare-med Use this command to compare the Multi Exit Discriminator (MED) for paths from neighbors in different autonomous
systems. Multi Exit Discriminator (MED) is used in best path selection by BGP. MED is compared after BGP attributes weight, local preference, AS-path and origin have been compared and are equal. MED comparison is done only among paths from the same autonomous system (AS). Use bgp always-compare-med command to allow comparison of MEDs from different ASs. The MED parameter is used to select the best path. A path with lower MED is preferred. If
the bgp table shows the following and the always-compare-med is enabled: Route1: as-path 400, med 300 Route2: as-path 200, med 200 Route3: as-path 400, med 250 Route1 is compared to Route2. Route2 is best of the two (lower MED). Next, Route2 is compared to Route3 and Route2 is chosen best path again (lower MED). If always-compare-med was disabled, MED is not taken into account when Route1 and Route2 are compared, because of different ASs and MED is compared for only Route1 and Route3.
In this case, Route3 would be the best path. The selected route is also affected by the bgp deterministic-med command. Please see bgp deterministic-med command for details. If this command is used to compare MEDs for all paths, it should be configured on every BGP router in the AS. Use the no parameter with this command to disallow the comparison. Command Syntax bgp always-compare-med no bgp always-compare-med Parameters None Default Disabled Command Mode Router mode Examples
Disabled Command Mode Router mode Examples #configure terminal (config)#router bgp 100 (config-router)#bgp always-compare-med 30 © 2015 IP Infusion Inc. Proprietary BGP Commands bgp as-local-count Use this command to set the number of times the local-AS (Autonomous System) is to be prepended. Use the no parameter with this command to stop prepending the local AS count. Command Syntax bgp as-local-count <2-64> no bgp as-local-count <2-64> Parameter
no bgp as-local-count <2-64> Parameter <2-64> The number of times the local-AS is to be prepended Command Mode Router mode Examples #configure terminal (config)#router bgp 100 (config-router)#bgp as-local-count 55 (config)#router bgp 100 (config-router)#no bgp as-local-count 55 © 2015 IP Infusion Inc. Proprietary 31 BGP Commands bgp bestpath as-path ignore Use this command to prevent the router from considering the autonomous system (AS) path length as a factor in the
algorithm for choosing a best path route. Use the no parameter with this command to allow the router to consider the AS path length in choosing a best path route. Command Syntax bgp bestpath as-path ignore no bgp bestpath as-path ignore Parameters None Command Mode Router mode Examples #configure terminal (config)#router bgp 100 (config-router)#bgp bestpath as-path ignore (config)#router bgp 100 (config-router)#no bgp bestpath as-path ignore 32 © 2015 IP Infusion Inc. Proprietary BGP Commands
BGP Commands bgp bestpath compare-confed-aspath Use this command to allow comparing of the confederation AS path length. This command specifies that the AS confederation path length must be used when available in the BGP best path decision process. It is effective only when bgp bestpath as-path ignore command has not been used. Use the no parameter with this command to ignore consideration of AS confederation path length in BGP best path selection. Command Syntax
selection. Command Syntax bgp bestpath compare-confed-aspath no bgp bestpath compare-confed-aspath Parameters None Default BGP receives routes with identical eBGP paths from eBGP peers and selects the first route received as the best path. Command Mode Router mode Examples #configure terminal (config)#router bgp 100 (config-router)#bgp bestpath compare-confed-aspath (config)#router bgp 100 (config-router)#no bgp bestpath compare-confed-aspath © 2015 IP Infusion Inc. Proprietary 33 BGP Commands
BGP Commands bgp bestpath compare-routerid Use this command to compare router IDs for identical eBGP paths. When comparing similar routes from peers, the BGP router does not consider the router ID of the routes. By default, it selects the first received route. Use this command to include router ID in the selection process; similar routes are compared and the route with the lowest router
ID is selected. The router IS is the highest IP address on the router, with preference given to loopback addresses. Router ID can be manually set by using the bgp router-id command. Use the no parameter with this command to disable this functionality. Command Syntax bgp bestpath compare-routerid no bgp bestpath compare-routerid Parameters None Default BGP receives routes with identical eBGP paths from eBGP peers and selects the first route received as the best path. Command Mode Router mode
Command Mode Router mode Examples #configure terminal (config)#router bgp 100 (config-router)#bgp bestpath compare-routerid (config)#router bgp 100 (config-router)#no bgp bestpath compare-routerid 34 © 2015 IP Infusion Inc. Proprietary BGP Commands bgp bestpath dont-compare-originator-id Use this command to change the default bestpath selection by not comparing an originator-ID for an identical EBGP path. Use the no parameter with this command to disable this functionality. Command Syntax
Command Syntax bgp bestpath dont-compare-originator-id no bgp bestpath dont-compare-originator-id Parameters None Command Mode Router mode Examples #configure terminal (config)#router bgp 100 (config-router)#bgp bestpath dont-compare-originator-id (config)#router bgp 100 (config-router)#no bgp bestpath dont-compare-originator-id © 2015 IP Infusion Inc. Proprietary 35 BGP Commands bgp bestpath med
BGP Commands bgp bestpath med Use this command to specify two MED (Multi Exit Discriminator) attributes, confed and missing-as-worst. The confed attribute enables MED comparison along paths learned from confederation peers. The MEDs are compared only if there is no external Autonomous System (an AS not within the confederation) in the path. If there is an external autonomous system in the path, the MED comparison is not made. For example in the following paths, the
MED is not compared with Route3 as it is not in the confederation. MED is compared for Route1 and Route2 only. Path1 = 32000 32004, med=4 Path2 = 32001 32004, med=2 Path3 = 32003 1, med=1 The missing-as-worst attribute to consider a missing MED attribute in a path as having a value of infinity, making the path without a MED value the least desirable path. If missing-as-worst is disabled, the missing MED is assigned the value of 0, making the path with the missing MED attribute the best path.
Use the no parameter with this command to prevent BGP from considering the MED attribute in comparing paths. Command Syntax bgp bestpath med confed missing-as-worst bgp bestpath med (confed|missing-as-worst|remove-recv-med|remove-send-med) bgp bestpath med missing-as-worst confed no bgp bestpath med confed missing-as-worst no bgp bestpath med (confed|missing-as-worst|remove-recv-med|remove-send-med) no bgp bestpath med missing-as-worst confed Parameters
Parameters confed Compare MED along confederation paths missing-as-worst Treat missing MED as the least preferred one remove-recv-med Remove received MED attribute remove-send-med Remove sent MED attribute Command Mode Router mode Default MED value is zero. Examples #configure terminal (config)#router bgp 100 (config-router)#bgp bestpath med missing-as-worst (config)#router bgp 100 36 © 2015 IP Infusion Inc. Proprietary BGP Commands (config-router)#bgp bestpath med remove-recv-med
(config-router)#bgp bestpath med remove-recv-med (config-router)#no bgp bestpath med remove-recv-med (config)#router bgp 100 (config-router)#bgp bestpath med remove-send-med (config-router)#no bgp bestpath med remove-send-med © 2015 IP Infusion Inc. Proprietary 37 BGP Commands bgp bestpath tie-break-on-age Use this command to always select a preferred older route even when the bgp bestpath compare-routerid command is configured.
command is configured. Use the no parameter with this command to disable this functionality. Command Syntax bgp bestpath tie-break-on-age no bgp bestpath tie-break-on-age Parameters None Command Mode Router mode Examples #configure terminal (config)#router bgp 100 (config-router)#bgp bestpath tie-break-on-age (config)#router bgp 100 (config-router)#no bgp bestpath tie-break-on-age 38 © 2015 IP Infusion Inc. Proprietary BGP Commands bgp client-to-client reflection
BGP Commands bgp client-to-client reflection Use this command to configure routers as route reflectors. Route reflectors are used when all Interior Border Gateway Protocol (iBGP) speakers are not fully meshed. If the clients are fully meshed the route reflector is not required, use no bgp client-to-client reflection command to disable the client-to-client route reflection. Use the no parameter with this command to turn off client-to-client reflection. Command Syntax
Command Syntax bgp client-to-client reflection no bgp client-to-client reflection Parameters None Default When a router is configured as a route reflector, client-to-client reflection is enabled by default. Command Mode Router mode Examples #configure terminal (config)#router bgp 100 (config-router)#bgp client-to-client reflection (config)#router bgp 100 (config-router)#no bgp client-to-client reflection © 2015 IP Infusion Inc. Proprietary 39 BGP Commands bgp cluster-id
BGP Commands bgp cluster-id Use this command to configure the cluster ID if the BGP cluster has more than one route reflector. A cluster includes route reflectors and its clients. Usually, each cluster is identified by the router ID of its single route reflector but to increase redundancy sometimes a cluster may have more than one route reflector. All router reflectors in such a cluster
are then identified by a cluster ID. The bgp cluster-id command is used to configure the 4 byte cluster ID for clusters with more than one route reflectors. Use the no parameter with this command (without any arguments) to remove a previously configured route reflector cluster ID. Command Syntax bgp cluster-id <1-4294967295> bgp cluster-id A.B.C.D no bgp cluster-id Parameters <1-4294967295> Route reflector ID as a 32-bit quantity A.B.C.D Route reflector ID in an IPv4 address format Command Mode
Command Mode Router mode Examples The following configuration creates a cluster-id 5 including two route-reflector-clients. #configure terminal (config)#router bgp 100 (config-router)#neighbor 2.2.2.2 remote-as 200 (config-router)#neighbor 3.3.3.3 remote-as 200 (config-router)#neighbor 3.3.3.3 route-reflector-client (config-router)#neighbor 5.5.5.5 remote-as 200 (config-router)#neighbor 5.5.5.5 route-reflector-client (config-router)#neighbor 6.6.6.6 remote-as 200
(config-router)#neighbor 6.6.6.6 remote-as 200 (config-router)#bgp cluster-id 5 40 © 2015 IP Infusion Inc. Proprietary BGP Commands bgp confederation identifier Use this command to specify a BGP confederation identifier. Use the no parameter with this command to remove a BGP confederation identifier. Command Syntax bgp confederation identifier <1-65535> no bgp confederation identifier Parameter <1-65535> Routing domain confederation AS number Command Mode Router mode Examples
Command Mode Router mode Examples #configure terminal (config)#router bgp 100 (config-router)#bgp confederation identifier 1 © 2015 IP Infusion Inc. Proprietary 41 BGP Commands bgp confederation peers Use this command to configure the Autonomous Systems (AS) that belong to a confederation. A confederation allows an AS to be divided into several ASs. The AS is given a confederation identifier. External BGP (eBGP) routers view
only the whole confederation as one AS. Each AS is fully meshed within itself and is visible internally to the confederation. Use the no parameter with this command to remove an autonomous system from the confederation. Command Syntax bgp confederation peers <1-65535> no bgp confederation peers <1-65535> Parameter <1-65535> AS numbers of eBGP peers that are in the same confederation Command Mode Router mode Examples
Command Mode Router mode Examples In the following configuration example, the neighbor 172.210.30.2 and 172.210.20.1 have iBGP connection within AS 100, neighbor 173.213.30.1 is a BGP connection with a confederation peer 200 and neighbor 6.6.6.6 has an eBGP connection to external AS 300. #configure terminal (config)#router bgp 100 (config-router)#bgp confederation identifier 300 (config-router)#bgp confederation peers 200 (config-router)#neighbor 172.210.30.2 remote-as 100
(config-router)#neighbor 172.210.20.1 remote-as 100 (config-router)#neighbor 173.213.30.1 remote-as 200 (config-router)#neighbor 6.6.6.6 remote-as 300 In this configuration, the neighbor 5.5.5.4 has an eBGP connection to confederation 300. #configure terminal (config)#router bgp 500 (config-router)#neighbor 5.5.5.4 remote-as 300 42 © 2015 IP Infusion Inc. Proprietary BGP Commands bgp config-type
BGP Commands bgp config-type Use this command to set the BGP configuration to the standard type. After setting the configuration to the standard type, use the neighbor send-community command to send out BGP community attributes. The zebos configuration type is the default and requires no specific configuration for sending out BGP standard community and extended community attributes. For the standard type, the no synchronization command is always shown in the configuration, whereas for the
zebos type, this command is the default. Use the no parameter with this command to remove this configuration. Command Syntax bgp config-type (standard|zebos) no bgp config-type Parameters standard Standard style configuration zebos ZebOS-XP style configuration Default The default configuration type is: bgp config-type zebos Command Mode Configure mode Examples #configure terminal (config)#bgp config-type standard © 2015 IP Infusion Inc. Proprietary 43 BGP Commands bgp dampening
BGP Commands bgp dampening Use this command to enable BGP route dampening and set various parameters. Route dampening minimizes the instability caused by route flapping. A penalty is added for every flap in a flapping route. As soon as the total penalty reaches the suppress limit the advertisement of the route is suppressed. This penalty is decayed according to the configured half time value. Once the penalty is lower than the reuse limit, the route advertisement is un-
suppressed. The dampening information is purged from the router once the penalty becomes less than half of the reuse limit. Use the no parameter with this command to unset BGP dampening parameters. Command Syntax bgp dampening bgp dampening <1-45> bgp dampening <1-45> <1-20000> <1-20000> <1-255> bgp dampening <1-45> <1-20000> <1-20000> <1-255> <1-45> bgp dampening route-map WORD no bgp dampening no bgp dampening <1-45> no bgp dampening <1-45> <1-20000> <1-20000> <1-255>
no bgp dampening <1-45> <1-20000> <1-20000> <1-255> <1-45> no bgp dampening route-map no bgp dampening route-map WORD Parameters <1-45> Reachability half-life time for the penalty in minutes. The time for the penalty to decrease to one-half of its current value. <1-20000> Value to start reusing a route. When the penalty for a suppressed route decays below the reuse value, the routes become unsuppressed.
reuse value, the routes become unsuppressed. <1-20000> Value to start suppressing a route. When the penalty for a route exceeds the suppress value, the route is suppressed <1-255> Maximum duration to suppress a stable route in minutes. <1-45> Un-reachability half-life time for the penalty in minutes. route-map Route map to specify criteria for dampening. WORD Route-map name. Defaults The default reachability half-life is 15 minutes. The default reuse limit is 750.
The default reuse limit is 750. The default suppress limit is 2000. The default max-suppress value is 4 times the half-life time, or 60 minutes. 44 © 2015 IP Infusion Inc. Proprietary BGP Commands Command Mode Router mode Examples #configure terminal (config)#router bgp 11 (config-router)#bgp dampening 20 800 2500 80 25 © 2015 IP Infusion Inc. Proprietary 45 BGP Commands bgp default ipv4-unicast
BGP Commands bgp default ipv4-unicast Use this command to configure BGP defaults and activate IPv4-unicast for a peer by default. This affects the BGP global configuration. Use the no parameter with this command to disable the default behavior of the BGP routing process of exchanging IPv4 addressing information with BGP neighbor routers. Command Syntax bgp default ipv4-unicast no bgp default ipv4-unicast Parameters None Default IPv4 unicast is the default BGP behavior. Command Mode Router mode
Command Mode Router mode Examples #configure terminal (config)#router bgp 100 (config-router)#bgp default ipv4-unicast 46 © 2015 IP Infusion Inc. Proprietary BGP Commands bgp default local-preference Use this command to change the default local preference value.Local preference indicates the preferred path when there are multiple paths to the same destination. The path having a higher preference is preferred. The preference is
sent to all routers and access servers in the local autonomous system. Use the no parameter with this command to revert to the default value for local preference. Command Syntax bgp default local-preference <0-4294967295> no bgp default local-preference no bgp default local-preference <0-4294967295> Parameter <0-4294967295> Local preference value Default The default local preference value is 100. Command Mode Router mode Examples #configure terminal (config)#router bgp 100
#configure terminal (config)#router bgp 100 (config-router)#bgp default local-preference 2345555 © 2015 IP Infusion Inc. Proprietary 47 BGP Commands bgp deterministic-med Use this command to compare the Multi Exit Discriminator (MED) variable when choosing among routes advertised by different peers in the same autonomous system. MED is compared after BGP attributes weight, local preference, AS- path and origin have been compared and are equal.
path and origin have been compared and are equal. For a correct comparison result, enable this command on all routers in a local AS. After enabling this command, all paths for the same prefix are grouped together and arranged according to their MED value. Based on this comparison, the best path is then chosen. This command compares MED variable when choosing routes advertised by different
peers in the same AS, to compare MED, when choosing routes from neighbors in different ASs use the bgp always- compare-med command. When the bgp deterministic-med command is enabled, routes from the same AS are grouped together, and the best routes of each group are compared. If the BGP table showed: Route1: as-path 200, med 300, internal Route2: as-path 400, med 200, internal Route3: as-path 400, med 250, external
Route3: as-path 400, med 250, external BGP would have a group of Route1 and a second group of Route2 and Route3 (the same ASs). The best of each group is compared. Route1 is the best of its group because it is the only route from AS 200. Route1 is compared to the Route2, the best of group AS 400 (the lower MED). Since the two routes are not from the same AS, the MED is not considered in the comparison. The external BGP route is preferred over the internal BGP route, making Route3 the
best route; the preferred route would be different if always-compare-med command is enabled (See always- compare-med command). Use the no parameter with this command to disallow this setting. Command Syntax bgp deterministic-med no bgp deterministic-med Parameters None Default Disabled Command Mode Router mode Examples #configure terminal (config)#router bgp 100 (config-router)#bgp deterministic-med (config)#router bgp 100 (config-router)#no bgp deterministic-med
(config-router)#no bgp deterministic-med 48 © 2015 IP Infusion Inc. Proprietary BGP Commands bgp enforce-first-as Use this command to enforce the first AS for eBGP routes. This command specifies that any updates received from an external neighbor that do not have the neighbor’s configured Autonomous System (AS) at the beginning of the AS_PATH in the received update must be denied. Enabling this feature adds to the security of the BGP network by not allowing traffic from unauthorized systems.
allowing traffic from unauthorized systems. Using the no parameter with this command to disable this feature. Command Syntax bgp enforce-first-as no bgp enforce-first-as Parameters None Command Mode Router mode Examples #configure terminal (config)#router bgp 100 (config-router)#bgp enforce-first-as (config)#router bgp 100 (config-router)#no bgp enforce-first-as © 2015 IP Infusion Inc. Proprietary 49 BGP Commands bgp extended-asn-cap
BGP Commands bgp extended-asn-cap Use this command to configure a BGP router to send 4-octet ASN capabilities. If attempting to change the AS capability from 2 to 4 or 4 to 2, a prompt occurs to remove the VRF configuration (if it exists), and reconfiguration is required, because the route distinguisher (RD) configuration would have been created with the current (2 octet or 4 octet) capability, and must be reconfigured before attempting to change the capability.
While loading from a saved configuration with AS4 capability and BGP VRF configuration, the capability will not be changed because of the above described reason. Use the no parameter with this command to prevent a BGP router from sending 4-octet ASN capabilities. Command Syntax bgp extended-asn-cap no bgp extended-asn-cap Parameters None Default Disabled Command Mode Configure mode Examples #configure terminal (config)#bgp extended-asn-cap 50 © 2015 IP Infusion Inc. Proprietary BGP Commands
BGP Commands bgp fast-external-failover Use this command to reset a BGP session immediately, if the interface used for BGP connection goes down. Use the no parameter with this command to disable this feature. Command Syntax bgp fast-external-failover no bgp fast-external-failover Parameters None Default Fast-external failover is enabled Command Mode Router mode Example #configure terminal (config)#router bgp 100 (config-router)#bgp fast-external-failover © 2015 IP Infusion Inc. Proprietary 51
© 2015 IP Infusion Inc. Proprietary 51 BGP Commands bgp graceful-restart Use this command to enable BGP graceful-restart capabilities. The restart-time parameter is used for setting the maximum time that a graceful-restart neighbor waits to come back up after a restart. This value is applied to all neighbors unless you explicitly override it by configuring the corresponding value on the neighbor. The stalepath-time
parameter is used to set the maximum time to preserve stale paths from a gracefully restarted neighbor. All stalepaths, unless reinstated by the neighbor after a re-establishment, will be deleted at the expiration of this timer. Use the no parameter with this command to restore the router to its default state. Command Syntax bgp graceful-restart bgp graceful-restart graceful-reset bgp graceful-restart restart-time <1-3600> bgp graceful-restart stalepath-time <1-3600> no bgp graceful-restart
no bgp graceful-restart no bgp graceful-restart graceful-reset no bgp graceful-restart restart-time no bgp graceful-restart stalepath-time Parameters graceful-reset The BGP daemon is not restarted, so that any changes in network configurations that cause BGP reset do not affect packet forwarding. restart-time Maximum time needed for neighbors to restart. Default is 120 seconds. <1-3600> Delay value in seconds.
<1-3600> Delay value in seconds. stalepath-time Maximum time to retain stale paths from restarting neighbors. Default is 360 seconds. <1-3600> Delay value in seconds. Command Mode Router mode Examples #configure terminal (config)#router bgp 10 (config-router)#bgp graceful-restart #configure terminal (config)#router bgp 10 (config-router)#no bgp graceful-restart 52 © 2015 IP Infusion Inc. Proprietary BGP Commands bgp g-shut
BGP Commands bgp g-shut Use this command to gracefully shut down all BGP IPv4 and IPv6 sessions under this router. The BGP graceful shutdown feature reduces packet loss during maintenance activity. Use the no parameter with this command to bring up all the sessions under this router after completion of maintenance activity using the bgp g-shut command. For details about the graceful shutdown feature, see the Border Gateway Protocol Developer Guide. Command Syntax bgp g-shut no bgp g-shut
Command Syntax bgp g-shut no bgp g-shut Parameters None Default Disabled Command Mode Router mode Examples #configure terminal (config)#router bgp 100 (config-router)#bgp g-shut #configure terminal (config)#router bgp 100 (config-router)#no bgp g-shut © 2015 IP Infusion Inc. Proprietary 53 BGP Commands bgp g-shut-capable Use this command to enable the graceful shutdown capability at the router level and make available the graceful-
shutdown related commands at the router and BGP neighbor levels. Use the no parameter with this command to disable the graceful shutdown capability on a router. For details about the graceful shutdown capability, see the Border Gateway Protocol Developer Guide. Note: The graceful shutdown capability cannot be disabled on a router that is in a graceful shutdown state until it comes out this state--after the graceful shutdown has been initiated and the impacted BGP sessions are up again.
Command Syntax bgp g-shut-capable no bgp g-shut-capable Parameters None Default By default, the graceful shutdown capability is disabled at the router level. Command Mode Router mode Examples #configure terminal (config)#router bgp 100 (config-router)#bgp g-shut-capable #configure terminal (config)#router bgp 100 (config-router)#no bgp g-shut-capable 54 © 2015 IP Infusion Inc. Proprietary BGP Commands bgp g-shut-local-preference
BGP Commands bgp g-shut-local-preference Use this command to configure the local preference value of the router to be used during graceful shutdown. The local preference value is used to indicate the preferred path when there are multiple paths to the same destination in a single routing database. The path having a higher preference value is the preferred one. The preferred path is sent to all routers and access servers in the local autonomous system.
Use the no parameter with this command to revert to the default setting. Command Syntax bgp g-shut-local-preference <0-4294967295> no bgp g-shut-local-preference Parameters <0-4294967295> Local preference value Default By default, the local preference value is set to 0. Command Mode Router mode Examples #configure terminal (config)#router bgp 100 (config-router)#bgp g-shut-local-preference 22 © 2015 IP Infusion Inc. Proprietary 55 BGP Commands bgp log-neighbor-changes
BGP Commands bgp log-neighbor-changes Use this command to enable logging of status change messages without turning on debug bgp commands. ZebOS-XP has many logging services for neighbor status, including debug bgp fsm and debug bgp events. However, these commands cause system performance degradation. If you need to log neighbor status changes only, IP Infusion Inc. recommends turning off all debug commands and using the bgp log-neighbor-changes command instead. A sample output of the log is:
sample output of the log is: %Protocol-Severity-Events: Message-text A sample output of the log for an interface down event is: %BGP-5-ADJCHANGE: neighbor 10.10.0.24 Down Interface flap This command logs the following events: • BGP Notification Received • Erroneous BGP Update Received • User reset request • Peer time-out • Peer Closing down the session • Interface flap • Router ID changed • Neighbor deleted • Member added to peer group • Administrative shutdown • Remote AS changed
• Administrative shutdown • Remote AS changed • RR client configuration modification • Soft reconfiguration modification Use the no parameter with this command to disable this feature. Command Syntax bgp log-neighbor-changes no bgp log-neighbor-changes Parameters None Default Disabled Command Mode Router mode Example (config)#router bgp 100 (config-router)#bgp log-neighbor-changes 56 © 2015 IP Infusion Inc. Proprietary BGP Commands bgp multiple-instance
BGP Commands bgp multiple-instance Use this command to enable BGP multiple instance support. Use the no parameter with this command to disable this function. Note: The no bgp multiple-instance command is not valid when any BGP instances are present. Command Syntax bgp multiple-instance (allow-same-peer|) no bgp multiple-instance (allow-same-peer|) Parameters allow-same-peer Allow the same peer in multiple instances Default By default, there is no multiple-instance support in BGP. Command Mode
Command Mode Configure mode Examples The following example shows the use of the bgp multiple-instance command allowing the configuration of two instances. (config)#bgp multiple-instance (config)#quit #show run Current configuration: hostname ZebOS-XP password zebra log stdout ! debug bgp debug bgp events debug bgp updates debug bgp fsm ! bgp multiple-instance ! router bgp 11 bgp router-id 10.10.10.50 neighbor 10.10.10.51 remote-as 11 ! © 2015 IP Infusion Inc. Proprietary 57 BGP Commands
BGP Commands bgp nexthop-trigger delay Use this command to set the delay time for nexthop address tracking. This command configures the delay interval between routing table walks for nexthop delay tracking, after which BGP does a routing table scan on receiving a nexthop change trigger from NSM. The time period determines how long BGP waits before it walks the full BGP table to determine which prefixes are affected by the nexthop changes, after it receives the trigger from NSM about one or
more nexthop changes. Use the no parameter with this command to reset the timer value to the default value. Command Syntax bgp nexthop-trigger delay <1-100> no bgp nexthop-trigger delay Parameter <1-100> Nexthop trigger delay interval in seconds Default The default nexthop-trigger delay time is 5 seconds. Command Mode Configure mode Examples #configure terminal (config)#bgp nexthop-trigger delay 6 #configure terminal (config)#no bgp nexthop-trigger delay 58 © 2015 IP Infusion Inc. Proprietary
58 © 2015 IP Infusion Inc. Proprietary BGP Commands bgp nexthop-trigger enable Use this command to enable nexthop address tracking. Nexthop address tracking is an event-driven notification system that monitors the status of routes installed in the Routing Information Base (RIB) and reports nexthop changes that affect internal BGP (iBGP) or external BGP (eBGP) prefixes directly to the BGP process. This improves the overall
BGP convergence time, by allowing BGP to respond rapidly to nexthop changes for routes installed in the RIB. If nexthop tracking is enabled after certain routes are learned, the registration of all nexthops for selected BGP routes is done after the nexthop tracking feature is enabled. If nexthop tracking is disabled, and if there are still some selected BGP routes, BGP de-registers the nexthops of all selected BGP routes from NSM.
Use the no parameter with this command to disable this feature. If the no command is given when nexthop tracking is in the process of execution, an error appears and nexthop tracking is not disabled. However, if the nexthop tracking timer is running at the time of negation, the nexthop tracking timer is stopped, and nexthop tracking is disabled. Command Syntax bgp nexthop-trigger enable no bgp nexthop-trigger enable Parameters None Default Nexthop address tracking is disabled by default.
Nexthop address tracking is disabled by default. Command Mode Configure mode Examples #configure terminal (config)#bgp nexthop-trigger enable © 2015 IP Infusion Inc. Proprietary 59 BGP Commands bgp rfc1771-path-select Use this command to set RFC 1771 compatible path selection. Use the no parameter with this command to revert this setting. Command Syntax bgp rfc1771-path-select no bgp rfc1771-path-select Parameters None Default Standard compatible path selection mechanism. Command Mode
Command Mode Configure mode Examples #configure terminal (config)#bgp rfc1771-path-select 60 © 2015 IP Infusion Inc. Proprietary BGP Commands bgp rfc1771-strict Use this command to set the origin path attribute to “IGP” when the origin is a protocol such as RIP, OSPF, or ISIS as specified in RFC 1771. Otherwise, the origin is always set to “incomplete” which is the industry standard. Use the no parameter with this command to revert this setting. Command Syntax bgp rfc1771-strict
Command Syntax bgp rfc1771-strict no bgp rfc1771-strict Parameters None Default Disabled Command Mode Configure mode Examples #configure terminal (config)#bgp rfc1771-strict © 2015 IP Infusion Inc. Proprietary 61 BGP Commands bgp router-id Use this command to manually configure a fixed router ID as a BGP router identifier. When this command is used to configure a fixed router ID, the current router identifier is overridden and the peers are reset.
Use the no parameter with this command to remove a manually configured fixed router ID. Command Syntax bgp router-id A.B.C.D no bgp router-id no bgp router-id A.B.C.D Parameter A.B.C.D Router ID in an IPv4 address format Default When a loopback interface is configured, the router ID is set to the IP address of the loopback interface. If no loopback interface is configured, the highest IP address is the router-id. Command Mode Router mode Examples #configure terminal (config)#router bgp 100
#configure terminal (config)#router bgp 100 (config-router)#bgp router-id 10.1.2.7 (config)#router bgp 100 (config-router)#no bgp router-id 10.1.2.7 62 © 2015 IP Infusion Inc. Proprietary BGP Commands bgp scan-time Use this command to configure scanning intervals of BGP routers. This interval is the period after which router checks the validity of the routes in its database. To disable BGP scanning, set the scan-time interval to 0 seconds.
Use the no parameter with this command to disable this function. Command Syntax bgp scan-time <0-60> no bgp scan-time no bgp scan-time <0-60> Parameter <0-60> Scanning interval in seconds Default The default scan-time interval is 60 seconds. Command Mode Router mode Examples #configure terminal (config)#router bgp 100 (config-router)#bgp scan-time 10 © 2015 IP Infusion Inc. Proprietary 63 BGP Commands bgp update-delay
BGP Commands bgp update-delay Use this command to specify the update-delay value for a graceful-restart capable router. The update-delay value is the maximum time a graceful-restart capable router, which is restarting, will defer route-selection and advertisements to all its graceful-restart capable neighbors. This maximum time starts from the instance the first neighbor attains established state after restart. The restarting router prematurely terminates this timer when end-of-rib markers are
received from all its graceful-restart capable neighbors. Use the no parameter with this command to revert to the default update-delay value. Command Syntax bgp update-delay <1-3600> no bgp update-delay no bgp update-delay <1-3600> Parameters <1-3600> Delay interval in seconds Default The default update-delay value is 120 seconds. Command Mode Router mode Example #configure terminal (config)#router bgp 10 (config-router)#bgp update-delay 345 64 © 2015 IP Infusion Inc. Proprietary BGP Commands
BGP Commands clear bgp (A.B.C.D|X:X::X:X) Use this command to reset a BGP neighbor address. Command Syntax clear bgp (A.B.C.D|X:X::X:X) clear bgp (A.B.C.D|X:X::X:X) in clear bgp (A.B.C.D|X:X::X:X) in prefix-filter clear bgp (A.B.C.D|X:X::X:X) out clear bgp (A.B.C.D|X:X::X:X) soft clear bgp (A.B.C.D|X:X::X:X) soft in clear ip bgp (A.B.C.D|X:X::X:X) Parameters A.B.C.D IPv4 neighbor address. X:X::X:X IPv6 neighbor address. in Clear incoming advertised routes. prefix-filter
prefix-filter Push out prefix-list ORF and do inbound soft reconfig. out Clear outgoing advertised routes. soft Clear both incoming and outgoing routes. in Soft reconfig inbound update. Command Mode Privileged Exec mode Example #clear bgp 3.3.3.3 © 2015 IP Infusion Inc. Proprietary 65 BGP Commands clear bgp * Use this command to reset the BGP connection for all peers. Command Syntax clear bgp * clear bgp * in clear bgp * in prefix-filter clear bgp * out clear bgp * soft clear bgp * soft in
clear bgp * soft clear bgp * soft in clear bgp * soft out clear ip bgp * clear ip bgp * in clear ip bgp * in prefix-filter clear ip bgp * out clear ip bgp * soft clear ip bgp * soft in clear ip bgp * soft out clear ip bgp * ipv4 (unicast|multicast) in clear ip bgp * ipv4 (unicast|multicast) in prefix-filter clear ip bgp * ipv4 (unicast|multicast) out clear ip bgp * ipv4 (unicast|multicast) soft clear ip bgp * ipv4 (unicast|multicast) soft in clear ip bgp * ipv4 (unicast|multicast) soft out
clear ip bgp * ipv4 (unicast|multicast) soft out Parameters in Incoming advertised routes should be cleared. prefix-filter Push out prefix-list ORF and do inbound soft reconfig. out Clear outgoing advertised routes. soft Clear both incoming and outgoing routes. in Soft reconfig inbound update. out Soft reconfig outbound update. ipv4 Clear incoming advertised routes. multicast Multicast prefixes. unicast Unicast prefixes. in Clear incoming advertised routes. prefix-filter
prefix-filter 66 © 2015 IP Infusion Inc. Proprietary BGP Commands Push out prefix-list ORF and do inbound soft reconfig. out Clear outgoing advertised routes. soft Clear both incoming and outgoing routes. in Soft reconfig inbound update. out Soft reconfig outbound update. Command Mode Privileged Exec mode Examples #clear bgp * #clear ip bgp * ipv4 unicast in prefix-filter © 2015 IP Infusion Inc. Proprietary 67 BGP Commands clear bgp <1-4294967295>
BGP Commands clear bgp <1-4294967295> Use this command to reset a BGP connection for all peers in a specified Autonomous System. Command Syntax clear bgp <1-4294967295> clear bgp <1-4294967295> in clear bgp <1-4294967295> in prefix-filter clear bgp <1-4294967295> out clear bgp <1-4294967295> soft clear bgp <1-4294967295> soft in clear bgp <1-4294967295> soft out clear ip bgp <1-4294967295> clear ip bgp <1-4294967295> in clear ip bgp <1-4294967295> in prefix-filter
clear ip bgp <1-4294967295> in prefix-filter clear ip bgp <1-4294967295> out clear ip bgp <1-4294967295> soft clear ip bgp <1-4294967295> soft in clear ip bgp <1-4294967295> soft out clear ip bgp <1-4294967295> ipv4 (unicast|multicast) in clear ip bgp <1-4294967295> ipv4 (unicast|multicast) in prefix-filter clear ip bgp <1-4294967295> ipv4 (unicast|multicast) out clear ip bgp <1-4294967295> ipv4 (unicast|multicast) soft clear ip bgp <1-4294967295> ipv4 (unicast|multicast) soft in
clear ip bgp <1-4294967295> ipv4 (unicast|multicast) soft out Parameters in Clear incoming advertised routes. prefix-filter Push out prefix-list ORF and do inbound soft reconfig. out Clear outgoing advertised routes. soft Clear both incoming and outgoing routes. in Soft reconfig inbound update. out Soft reconfig outbound update. ipv4 Clear incoming advertised routes. multicast Multicast prefixes. unicast Unicast prefixes. Clear incoming advertised routes. in Clear incoming advertised routes.
in Clear incoming advertised routes. 68 © 2015 IP Infusion Inc. Proprietary BGP Commands prefix-filter Push out prefix-list ORF and do inbound soft reconfig. out Clear outgoing advertised routes. soft Clear both incoming and outgoing routes. in Soft reconfig inbound update. out Soft reconfig outbound update. Command Mode Privileged Exec mode Examples #clear bgp 4294967277 #clear ip bgp 4294967277 © 2015 IP Infusion Inc. Proprietary 69 BGP Commands clear bgp <1-65535>
BGP Commands clear bgp <1-65535> Use this command to reset a BGP connection for all peers in a specified Autonomous System. Command Syntax clear bgp <1-65535> clear bgp <1-65535> in clear bgp <1-65535> in prefix-filter clear bgp <1-65535> out clear bgp <1-65535> soft clear bgp <1-65535> soft in clear bgp <1-65535> soft out clear ip bgp <1-65535> clear ip bgp <1-65535> in clear ip bgp <1-65535> in prefix-filter clear ip bgp <1-65535> out clear ip bgp <1-65535> soft clear ip bgp <1-65535> soft in
clear ip bgp <1-65535> soft in clear ip bgp <1-65535> soft out clear ip bgp <1-65535> in prefix-filter clear ip bgp <1-65535> ipv4 (unicast|multicast) in clear ip bgp <1-65535> ipv4 (unicast|multicast) in prefix-filter clear ip bgp <1-65535> ipv4 (unicast|multicast) out clear ip bgp <1-65535> ipv4 (unicast|multicast) soft clear ip bgp <1-65535> ipv4 (unicast|multicast) soft in clear ip bgp <1-65535> ipv4 (unicast|multicast) soft out Parameters in Clear incoming advertised routes. prefix-filter
prefix-filter Push out prefix-list ORF and do inbound soft reconfig. out Clear outgoing advertised routes. soft Clear both incoming and outgoing routes. in Soft reconfig inbound update. out Soft reconfig outbound update. ipv4 Clear incoming advertised routes. multicast Multicast prefixes. unicast Unicast prefixes. Clear incoming advertised routes. 70 © 2015 IP Infusion Inc. Proprietary BGP Commands in Clear incoming advertised routes. prefix-filter
prefix-filter Push out prefix-list ORF and do inbound soft reconfig. out Clear outgoing advertised routes. soft Clear both incoming and outgoing routes. in Soft reconfig inbound update. out Soft reconfig outbound update. Command Mode Privileged Exec mode Examples #clear bgp 100 #clear ip bgp 200 © 2015 IP Infusion Inc. Proprietary 71 BGP Commands clear bgp dampening Use this command to reset BGP route flap dampening information. Command Syntax clear bgp ipv4 (unicast|multicast) dampening
clear bgp ipv4 (unicast|multicast) dampening clear bgp ipv4 (unicast|multicast) dampening A.B.C.D clear bgp ipv4 (unicast|multicast) dampening A.B.C.D/M clear ip bgp dampening clear ip bgp dampening A.B.C.D clear ip bgp dampening A.B.C.D/M clear ip bgp ipv4 (unicast|multicast) dampening clear ip bgp ipv4 (unicast|multicast) dampening A.B.C.D clear ip bgp ipv4 (unicast|multicast) dampening A.B.C.D/M Parameters ipv4 IPv4 address family. multicast Multicast prefixes unicast Unicast prefixes
unicast Unicast prefixes A.B.C.D IP prefix (network), for example, 35.0.0.0 A.B.C.D/M IP prefix (network/length), for example, 35.0.0.0/8 Command Mode Privileged Exec mode Examples #clear ip bgp dampening 10.10.0.121 #clear ip bgp ipv4 unicast dampening 72 © 2015 IP Infusion Inc. Proprietary BGP Commands clear bgp external Use this command to reset the BGP connection for all external peers. Command Syntax clear bgp external clear bgp external in clear bgp external in prefix-filter
clear bgp external in prefix-filter clear bgp external out clear bgp external soft clear bgp external soft in clear bgp external soft out clear ip bgp external clear ip bgp external in clear ip bgp external in prefix-filter clear ip bgp external out clear ip bgp external soft clear ip bgp external soft in clear ip bgp external soft out clear ip bgp external ipv4 (unicast|multicast) in clear ip bgp external ipv4 (unicast|multicast) in prefix-filter
clear ip bgp external ipv4 (unicast|multicast) out clear ip bgp external ipv4 (unicast|multicast) soft clear ip bgp external ipv4 (unicast|multicast) soft in clear ip bgp external ipv4 (unicast|multicast) soft out Parameters in Clear incoming advertised routes. prefix-filter Push out prefix-list ORF and do inbound soft reconfig. out Clear outgoing advertised routes. soft Clear both incoming and outgoing routes. in Soft reconfig inbound update. out Soft reconfig outbound update.
out Soft reconfig outbound update. ipv4 Clear incoming advertised routes. multicast Multicast prefixes. unicast Unicast prefixes. in Clear incoming advertised routes. prefix-filter © 2015 IP Infusion Inc. Proprietary 73 BGP Commands Push out prefix-list ORF and do inbound soft reconfig. out Clear outgoing advertised routes. soft Clear both incoming and outgoing routes. in Soft reconfig inbound update. out Soft reconfig outbound update. Command Mode Privileged Exec mode Example
Command Mode Privileged Exec mode Example #clear ip bgp external 74 © 2015 IP Infusion Inc. Proprietary BGP Commands clear bgp flap-statistics Use this command to reset BGP flap statistics. Command Syntax clear bgp ipv4 (unicast|multicast) flap-statistics clear bgp ipv4 (unicast|multicast) flap-statistics A.B.C.D clear bgp ipv4 (unicast|multicast) flap-statistics A.B.C.D/M clear ip bgp flap-statistics clear ip bgp flap statistics A.B.C.D clear ip bgp flap-statistics A.B.C.D/M
clear ip bgp flap-statistics A.B.C.D/M clear ip bgp ipv4 (unicast|multicast) flap-statistics clear ip bgp ipv4 (unicast|multicast) flap-statistics A.B.C.D clear ip bgp ipv4 (unicast|multicast) flap-statistics A.B.C.D/M Parameters ipv4 IPv4 address family. multicast Multicast prefixes. unicast Unicast prefixes. A.B.C.D IP prefix (network) for example, 35.0.0.0 A.B.C.D/M IP prefix (network/length), for example, 35.0.0.0/8 Command Mode Privileged Exec mode Examples
Command Mode Privileged Exec mode Examples #clear ip bgp flap-statistics 10.10.0.121 #clear ip bgp ipv4 unicast flap-statistics © 2015 IP Infusion Inc. Proprietary 75 BGP Commands clear bgp peer-group Use this command to reset the BGP connection for all members of a peer group. Command Syntax clear bgp peer-group WORD clear bgp peer-group WORD in clear bgp peer-group WORD in prefix-filter clear bgp peer-group WORD out clear bgp peer-group WORD soft clear bgp peer-group WORD soft in
clear bgp peer-group WORD soft in clear bgp peer-group WORD soft out clear ip bgp peer-group WORD clear ip bgp peer-group WORD in clear ip bgp peer-group WORD in prefix-filter clear ip bgp peer-group WORD out clear ip bgp peer-group WORD soft clear ip bgp peer-group WORD soft in clear ip bgp peer-group WORD soft out clear ip bgp peer-group WORD ipv4 (unicast|multicast) in clear ip bgp peer-group WORD ipv4 (unicast|multicast) in prefix-filter
clear ip bgp peer-group WORD ipv4 (unicast|multicast) out clear ip bgp peer-group WORD ipv4 (unicast|multicast) soft clear ip bgp peer-group WORD ipv4 (unicast|multicast) soft in clear ip bgp peer-group WORD ipv4 (unicast|multicast) soft out Parameters WORD BGP peer-group name. in Clear incoming advertised routes. prefix-filter Push out prefix-list ORF and do inbound soft reconfig. out Clear outgoing advertised routes. soft Clear both incoming and outgoing routes.
soft Clear both incoming and outgoing routes. in Soft reconfig inbound update. out Soft reconfig outbound update. ipv4 Clear incoming advertised routes. multicast Multicast prefixes. unicast Unicast prefixes. Clear incoming advertised routes. 76 © 2015 IP Infusion Inc. Proprietary BGP Commands in Clear incoming advertised routes. prefix-filter Push out prefix-list ORF and do inbound soft reconfig. out Clear outgoing advertised routes. soft Clear both incoming and outgoing routes.
soft Clear both incoming and outgoing routes. in Soft reconfig inbound update. out Soft reconfig outbound update. Command Mode Privileged Exec mode Examples #clear ip bgp peer-group P1 © 2015 IP Infusion Inc. Proprietary 77 BGP Commands clear bgp view Use this command to reset all peers in a BGP view. Command Syntax clear bgp view WORD * clear bgp view WORD * soft clear bgp view WORD * soft in clear bgp view WORD * soft out clear ip bgp view WORD * clear ip bgp view WORD * in prefix-filter
clear ip bgp view WORD * in prefix-filter clear ip bgp view WORD * soft clear ip bgp view WORD * soft in clear ip bgp view WORD * soft out clear ip bgp view WORD * ipv4 (unicast|multicast) in prefix-filter clear ip bgp view WORD * ipv4 (unicast|multicast) soft clear ip bgp view WORD * ipv4 (unicast|multicast) soft in clear ip bgp view WORD * ipv4 (unicast|multicast) soft out Parameters WORD BGP peer group name. in Clear incoming advertised routes. prefix-filter
prefix-filter Push out prefix-list ORF and do inbound soft reconfig. soft Clear both incoming and outgoing routes. in Soft reconfig inbound update. out Soft reconfig outbound update. ipv4 IPv4 address family. multicast Multicast prefixes. unicast Unicast prefixes. in Clear incoming advertised routes. prefix-filter Push out prefix-list ORF and do inbound soft reconfig. soft Clear both incoming and outgoing routes. in Soft reconfig inbound update. out Soft reconfig outbound update. Command Mode
out Soft reconfig outbound update. Command Mode Privileged Exec mode 78 © 2015 IP Infusion Inc. Proprietary BGP Commands Examples #clear ip bgp view myview * © 2015 IP Infusion Inc. Proprietary 79 BGP Commands clear ip bgp A.B.C.D Use this command to reset an IPv4 BGP neighbor address. Command Syntax clear ip bgp A.B.C.D in clear ip bgp A.B.C.D in prefix-filter clear ip bgp A.B.C.D out clear ip bgp A.B.C.D soft clear ip bgp A.B.C.D soft in clear ip bgp A.B.C.D soft out
clear ip bgp A.B.C.D soft out clear ip bgp A.B.C.D ipv4 (unicast|multicast) in clear ip bgp A.B.C.D ipv4 (unicast|multicast) in prefix-filter clear ip bgp A.B.C.D ipv4 (unicast|multicast) out clear ip bgp A.B.C.D ipv4 (unicast|multicast) soft clear ip bgp A.B.C.D ipv4 (unicast|multicast) soft in clear ip bgp A.B.C.D ipv4 (unicast|multicast) soft out Parameters in Clear incoming advertised routes. prefix-filter Push out prefix-list ORF and do inbound soft reconfig.
out Clear outgoing advertised routes. soft Clear both incoming and outgoing routes. in Soft reconfig inbound update. out Soft reconfig outbound update. ipv4 Clear incoming advertised routes. multicast Multicast prefixes. unicast Unicast prefixes. in Clear incoming advertised routes. prefix-filter Push out prefix-list ORF and do inbound soft reconfig. out Clear outgoing advertised routes. soft Clear both incoming and outgoing routes. in Soft reconfig inbound update.
in Soft reconfig inbound update. out Soft reconfig outbound update. Command Mode Privileged Exec mode 80 © 2015 IP Infusion Inc. Proprietary BGP Commands Examples #clear ip bgp 35.0.0.1 in © 2015 IP Infusion Inc. Proprietary 81 BGP Commands clear ip bgp A.B.C.D vrf Use this command to reset the VPN Routing/Forwarding (VRF) instance for a peer address. Command Syntax clear ip bgp A.B.C.D vrf WORD clear ip bgp A.B.C.D vrf WORD in clear ip bgp A.B.C.D vrf WORD out
clear ip bgp A.B.C.D vrf WORD out clear ip bgp A.B.C.D vrf WORD soft clear ip bgp A.B.C.D vrf WORD soft in clear ip bgp A.B.C.D vrf WORD soft out Parameters A.B.C.D IPv4 address WORD VPN routing/forwarding instance name in Clear incoming advertised routes out Clear outgoing advertised routes soft Clear both incoming and outgoing routes in Soft reconfig inbound update out Soft reconfig outbound update Command Mode Privileged Exec mode Examples #clear ip bgp 35.0.0.1 vrf
Examples #clear ip bgp 35.0.0.1 vrf 82 © 2015 IP Infusion Inc. Proprietary BGP Commands clear ip bgp table-map Use this command to apply the modified table map or route map rules to the BGP routes in the existing IP routing table. Command Syntax clear ip bgp table-map (vrf (VRFNAME|all|default)) clear ip bgp ipv4 (unicast | multicast) table-map(vrf (VRFNAME|all|default)) Parameters vrf Select a VPN Routing/Forwarding Instance. VRFNAME Specify a VPN Routing/Forwarding instance name.
all Select all VRFs. default Select default VRFs. unicast Unicast prefixes. multicast Multicast prefixes. Command Mode Privileged Exec mode Examples #clear ip bgp table-map vrf all © 2015 IP Infusion Inc. Proprietary 83 BGP Commands debug bgp Use this command to enable all BGP troubleshooting functions. Use this command without any parameters to turn on normal bgp debug information. Use the no parameter with this command to disable this function. Command Syntax debug bgp (all|) debug bgp bfd
Command Syntax debug bgp (all|) debug bgp bfd debug bgp dampening debug bgp events debug bgp filters debug bgp fsm debug bgp keepalives debug bgp mpls debug bgp nht debug bgp nsm debug bgp updates debug bgp updates (in|out) debug bgp vpls no debug bgp (all|) no debug bgp bfd no debug bgp dampening no debug bgp events no debug bgp filters no debug bgp fsm no debug bgp keepalives no debug bgp mpls no debug bgp nht no debug bgp nsm no debug bgp updates no debug bgp vpls undebug bgp (all|)
no debug bgp vpls undebug bgp (all|) undebug bgp bfd undebug bgp dampening undebug bgp events undebug bgp filters undebug bgp fsm undebug bgp keepalives 84 © 2015 IP Infusion Inc. Proprietary BGP Commands undebug bgp mpls undebug bgp nht undebug bgp nsm undebug bgp updates undebug bgp vpls Parameters all Used only with the no form; turns off all debugging for BGP bfd Enable debugging for BGP Bidirectional Forwarding Detection dampening Enable debugging for BGP dampening
dampening Enable debugging for BGP dampening events Enable debugging for BGP events filters Enable debugging for BGP filters fsm Enable debugging for BGP Finite State Machine (FSM) keepalives Enable debugging for BGP keepalives mpls Enable debugging for BGP Multiprotocol Label Switching (MPLS) nht Enable debugging for BGP NHT nsm Enable debugging for NSM messages updates Enable debugging for BGP updates in Debug inbound updates out Debug outbound updates
out Debug outbound updates vpls Enable debugging for BGP Virtual Private LAN Service (VPLS) Command Mode Privileged Exec mode and Configure Mode Examples #debug bgp #debug bgp events © 2015 IP Infusion Inc. Proprietary 85 BGP Commands distance bgp Use this command to define an administrative distance. A distance is a rating of trustworthiness of a router. The higher the distance the lower the trust rating. Administrative distances can be set for external, internal and local routes.
External paths are routes learned from a neighbor outside of the AS. Internal routes are routes learned from another router within the same AS. Local routes are for a router that is redistributed from another process. If the administrative distance is changed, it could create inconsistency in the routing table and obstruct routing. Use this command in Router mode to set the administrative distance for all address families. Use this command in Address
Family mode to set the administrative distance per an IPv4 or IPv6 family. Use the no parameter with this command to remove an administrative distance. Command Syntax distance bgp <1-255> <1-255> <1-255> no distance bgp no distance bgp <1-255> <1-255> <1-255> Parameters <1-255> Distance for BGP external routes <1-255> Distance for BGP internal routes <1-255> Distance for BGP local routes Command Mode Router mode, Address Family IPv4 mode, and Address Family IPv6 mode Defaults
Defaults Default distance for external routes is 20. Default distance for internal routes is 200. Default distance for local routes is 200. Examples The following example shows how to set the administrative distance for BGP for all address families. #configure terminal (config)#router bgp 100 (config-router)#distance bgp 34 23 15 The following example shows how to set the administrative distance for BGP for an IPv6 address family. (config)#router bgp 100 (config-router)#address family ipv6
(config-router)#address family ipv6 (config-router-af)#distance bgp 34 23 14 86 © 2015 IP Infusion Inc. Proprietary BGP Commands dump bgp all Use this command to dump all BGP packets. Use the no option with this command to disable this function. Command Syntax dump bgp all PATH dump bgp all PATH INTERVAL no dump bgp all PATH INTERVAL Parameters PATH Output filename INTERVAL Interval for output of BGP packets Command Mode Configure mode Example #configure terminal
Configure mode Example #configure terminal (config)#dump bgp all pathfilename © 2015 IP Infusion Inc. Proprietary 87 BGP Commands dump bgp routes-mrt Use this command to dump the entire BGP routing table. Use the no option with this command to disable this feature. Command Syntax dump bgp routes-mrt PATH dump bgp routes-mrt PATH INTERVAL no dump bgp routes-mrt PATH INTERVAL Parameters PATH Output filename INTERVAL Interval for dumping BGP packets Command Mode Configure mode Example
Command Mode Configure mode Example #configure terminal (config)#dump bgp route-mrt pathfilename 88 © 2015 IP Infusion Inc. Proprietary BGP Commands dump bgp updates Use this command to dump BGP updates only. Use the no option with this command to disable this function. Command Syntax dump bgp updates PATH dump bgp updates PATH INTERVAL no dump bgp updates PATH INTERVAL Parameters PATH Output filename INTERVAL Interval for dumping BGP packets Command Mode Configure mode Example
Command Mode Configure mode Example #configure terminal (config)#dump bgp updates pathfilename © 2015 IP Infusion Inc. Proprietary 89 BGP Commands exit-address-family Use this command to exit Address-Family-vrf, Address-Family-vpnv4, or Address-Family-vpnv6 mode. For information on how to enter the address family mode (IPv4, IPv6, VPNv4, or VPNv6), see address-family. Command Syntax exit-address-family Parameters None Command Mode
exit-address-family Parameters None Command Mode Address Family-vrf, Address Family-vpnv4 and Address Family-vpnv6 mode. Examples The following examples shows the change in the prompt after using this command. #configure terminal (config)#router bgp 100 (config-router)#address-family ipv4 multicast (config-router-af)#exit-address-family (config-router)# (config)#router bgp 100 (config-router)#address-family vpnv6 unicast (config-router-af)#exit-address-family
(config-router-af)#exit-address-family 90 © 2015 IP Infusion Inc. Proprietary BGP Commands ip as-path access-list Use this command to define a BGP Autonomous System (AS) path access list. A named community list is a filter based on regular expressions. If the regular expression matches the specified string representing the AS path of the route, then the permit or deny condition applies. Use this command to define the BGP access list globally; use the neighbor
router configuration command to apply a specific access list. Use the no parameter with this command to disable use of the access list. Command Syntax ip as-path access-list WORD (deny|permit) LINE no ip as-path access-list WORD no ip as-path access-list WORD (deny|permit) LINE Parameters WORD Access list name deny Reject packets permit Forward packets LINE An ordered list as a regular expression Command Mode Configure mode Examples #configure terminal
Configure mode Examples #configure terminal (config)#ip as-path access-list mylist deny ^65535$ © 2015 IP Infusion Inc. Proprietary 91 BGP Commands ip community-list <1-99> Use this command to specify a standard community list (1 to 99) that specifies BGP community attributes. Use the no parameter with this command to delete the community list entry. Command Syntax ip community-list <1-99> (deny|permit) ip community-list <1-99> (deny|permit) [AA:NN|local-AS|no-advertise|no-export]
ip community-list <1-99> (deny|permit) LINE no ip community-list <1-99> (deny|permit) no ip community-list <1-99> (deny|permit) [AA:NN|local-AS|no-advertise|no-export] no ip community-list <1-99> (deny|permit) LINE Parameters deny Reject the community permit Accept the community AA:NN Community number local-AS Do not advertise routes to external BGP peers no-advertise Do not advertise routes to other BGP peers no-export Do not advertise routes outside of Autonomous System boundary
LINE An ordered list as a regular expression Command Mode Configure mode Examples #configure terminal (config)#ip community-list 55 permit 7675:80 7675:90 (config)#no ip community-list 55 permit 7675:80 7675:90 92 © 2015 IP Infusion Inc. Proprietary BGP Commands ip community-list <100-199> Use this command to specify an expanded community list (100 to 199) that specifies BGP community attributes. Use the no parameter with this command to delete the community list entry. Command Syntax
Command Syntax ip community-list <100-199> (deny|permit) ip community-list <100-199> (deny|permit) LINE no ip community-list <100-199> no ip community-list <100-199> (deny|permit) LINE Parameters deny Reject community permit Accept community LINE An ordered list as a regular expression Command Mode Configure mode Examples #configure terminal (config)#ip community-list 125 permit 6789906 (config)#ip community-list expanded CLIST permit .* © 2015 IP Infusion Inc. Proprietary 93 BGP Commands
BGP Commands ip community-list expanded Use the community-lists to specify BGP community attributes. The community attribute is used for implementing policy routing. It is an optional, transitive attribute and facilitates transfer of local policies through different autonomous systems. It includes community values that are 32 bits long. There are two kinds of community-lists: expanded and standard. The standard community-list defines the community
attributes in a specified format and not with regular expressions. The expanded community-list defines the community attributes with regular expressions.Use the no parameter with this command to delete the community list entry. Command Syntax ip community-list expanded WORD (deny|permit) LINE no ip community-list expanded WORD no ip community-list expanded WORD (deny|permit) LINE Parameters WORD Community list name deny Reject community permit Accept community
deny Reject community permit Accept community LINE An ordered list as a regular expression Command Mode Configure mode Examples #configure terminal (config)#ip community-list 125 permit 6789906 (config)#ip community-list expanded CLIST permit .* 94 © 2015 IP Infusion Inc. Proprietary BGP Commands ip community-list standard Use the community-lists to specify BGP community attributes. The community attribute is used for implementing policy
routing. It is an optional, transitive attribute and facilitates transfer of local policies through different autonomous systems. It includes community values that are 32 bits long. There are two kinds of community-lists: expanded and standard. The standard community-list defines the community attributes in a specified format without regular expressions. The expanded community-list defines the community attributes with regular expressions.
Use this command to add a standard community-list entry. The standard community-list is compiled into binary format and is directly compared with the BGP communities attribute in the BGP updates. The comparison is faster than the expanded community-list. Any community value that does not match the standard community value is automatically treated as expanded. Use the no parameter with this command to delete the standard community-list entry. Command Syntax
Command Syntax ip community-list standard WORD (deny|permit) ip community-list standard WORD (deny|permit) [AA:NN|local-AS|no-advertise|no- export] no ip community-list standard WORD (deny|permit) [AA:NN|local-AS|no-advertise|no- export] Parameters WORD Community list name deny Reject the community permit Accept the community AA:NN Community number local-AS Do not advertise routes to external BGP peers no-advertise Do not advertise routes to other BGP peers
no-export Do not advertise routes outside of Autonomous System boundary Command Mode Configure mode Examples #configure terminal (config)#ip community-list standard CLIST permit 7675:80 7675:90 no-export (config)#ip community-list 34 permit 5675:50 no-advertise © 2015 IP Infusion Inc. Proprietary 95 BGP Commands ip community-list WORD Use the community-list commands to specify BGP community attributes. The community attribute is used for
implementing policy routing. It is an optional, transitive attribute and facilitates transfer of local policies through different autonomous systems. There are two kinds of community-lists: the expanded and standard. The standard community-list defines the community attributes in a specified format and not with regular expressions. The expanded community-list defines the community attributes with regular expressions. Use the no parameter with this command to delete the community list entry.
Command Syntax ip community-list WORD (deny|permit) ip community-list WORD (deny|permit) [AA:NN|local-AS|no-advertise|no-export] no ip community-list WORD no ip community-list WORD (deny|permit) [AA:NN|local-AS|no-advertise|no-export] Parameters WORD Community list name deny Reject the community permit Accept the community AA:NN Community number local-AS Do not advertise routes to external BGP peers no-advertise Do not advertise routes to other BGP peers
no-export Do not advertise routes outside of Autonomous System boundary Command Mode Configure mode Examples #configure terminal (config)#ip community-list mylist permit 7675:80 7675:90 (config)#no ip community-list mylist permit 7675:80 7675:90 96 © 2015 IP Infusion Inc. Proprietary BGP Commands ip extcommunity-list <1-99> Use this command to create an entry for a standard extended community list. Use the no parameter with this command to delete the community-list entry. Command Syntax
Command Syntax ip extcommunity-list <1-99> (deny|permit) LINE no ip extcommunity-list <1-99> (deny|permit) LINE Parameters deny Reject community permit Accept community LINE An ordered list as a regular expression Command Mode Configure mode Examples #configure terminal (config)#ip extcommunity-list 3 permit 4567335 © 2015 IP Infusion Inc. Proprietary 97 BGP Commands ip extcommunity-list <100-199> Use this command to create an expanded extended community list.
Use the no parameter with this command to delete the community-list entry. Command Syntax ip extcommunity-list <100-199> (deny|permit) LINE no ip extcommunity-list <100-199> (deny|permit) LINE Parameters <100-199> Extended community list number (expanded) deny Reject the community permit Accept the community LINE An ordered list as a regular expression Command Mode Configure mode Examples #configure terminal (config)#ip extcommunity-list 125 permit 4567335 98 © 2015 IP Infusion Inc. Proprietary
98 © 2015 IP Infusion Inc. Proprietary BGP Commands ip extcommunity-list expanded Use this command to create an expanded extended community list. Use the no parameter with this command to delete the extended community-list entry. Command Syntax ip extcommunity-list expanded WORD ip extcommunity-list expanded WORD (deny|permit) LINE no ip extcommunity-list expanded WORD no ip extcommunity-list expanded WORD (deny|permit) LINE Parameters WORD Extended community list name deny Reject the community
deny Reject the community permit Accept the community LINE An ordered list as a regular-expression Command Mode Configure mode Examples #configure terminal (config)#ip extcommunity-list 125 permit 4567335 (config)#ip extcommunity-list expanded CLIST permit .* © 2015 IP Infusion Inc. Proprietary 99 BGP Commands ip extcommunity-list standard Use this command to create and delete a standard extended-community list. The extended community attribute is 8
bytes in 2 formats. The sub-type can be route target (rt) or site of origin (soo). Thus, the sub-type of each community must be specified when creating the extended community list. Regarding the formats, an extended community is based on the 6 byte value; these 6 bytes are represented in 4btyes:2bytes format: • Format 1, aa.nn: The 16 bit value of the AS number is represented in higher-order 4 bytes. If the extended ASN
capability is enabled, the AS number is represented using higher-order 4 bytes. The NN assigned value is represented in low-order 2 bytes in both cases. • Format 2, IPaddr:nn: In this format, the higher-order 4 bytes are used to represent the IP address, and the low- order 2 bytes are used to represent the assigned value. Use the no parameter with this command to delete the extended-community-list entry. Command Syntax ip extcommunity-list standard WORD (deny|permit) LINE
ip extcommunity-list standard WORD (deny|permit) LINE [rt|soo] no ip extcommunity-list standard WORD no ip extcommunity-list standard WORD (deny|permit) LINE no ip extcommunity-list standard WORD (deny|permit) LINE [rt|soo] Parameters WORD Extended community list name deny Reject the community permit Accept the community LINE An ordered list as a regular-expression. rt Route target extended community in aa:nn or IPaddr:nn format soo Site-of-origin extended community in aa:nn or IPaddr:nn format
Command Mode Configure mode Examples #configure terminal (config)#ip extcommunity-list 36 permit rt 5675:50 (config)#ip extcommunity-list standard CLIST permit soo 7645:70 100 © 2015 IP Infusion Inc. Proprietary BGP Commands match ip peer Use this command to apply policies based on the route source of which the BGP TCP/IP session formed using an IPv4 address in the update message. Use the no parameter with this command to disable this function. Command Syntax
Command Syntax match ip peer (<1-199>|<1300-2699>|WORD) no match ip peer (<1-199>|<1300-2699>|WORD) Parameters <1-199> IP access-list number <1300-2699> IP access-list number (expanded range) WORD Access-list name Command Mode Route-map mode Examples #configure terminal (config)#route-map in-A permit 10 (route-map)#match ip peer 1 © 2015 IP Infusion Inc. Proprietary 101 BGP Commands max-paths
BGP Commands max-paths Use this command to set the number of equal-cost multi-path (ECMP) routes for eBGP or iBGP. You can install multiple BGP paths to the same destination to balance the load on the forwarding path. Use the no parameter with this command to disable this feature. For more information about ECMP for BGP, see the Border Gateway Protocol Developer Guide. Command Syntax max-paths (ebgp|ibgp|) <2-64> no max-paths ebgp (<2-64>|) no max-paths ibgp (<2-64>|) Parameters
no max-paths ibgp (<2-64>|) Parameters ebgp eBGP ECMP session ibgp iBGP ECMP session <2-64> Number of routes Default Available for the default BGP instance and for IPv4 and IPv6 unicast addresses Command Mode Router mode and Address Family mode Examples The following example configures 7 routes for ECMP for iBGP. #configure terminal (config)#router bgp 11 (config-router)#max-paths ibgp 7 102 © 2015 IP Infusion Inc. Proprietary BGP Commands mpls-resolution
BGP Commands mpls-resolution Use this command to allow BGP to query the NSM for preexisting LSPs (from RSVP or LDP), enabling BGP to map prefixes to these LSPs. For example, BGP peer (5.5.5.5/32) advertises a prefix 10.10.10.10/32 to the current BGP daemon. If mpls-resolution is enabled, BGP queries NSM to confirm if there is an LSP from current router to 5.5.5.5/32. If yes, BGP installs this IP route into the NSM, and also creates an FTN entry in the NSM. NSM
subsequently installs this in the MPLS Forwarder and uses the outgoing label, ifindex and nexthop data of the LSP. This allows IP packets destined for 10.10.10.10/32 to be mapped onto a preexisting MPLS LSP. If the LSP is already up, the mapping is done while BGP is installing IP routes to the NSM. If the LSP is removed after BGP has already mapped a prefix to an LSP, the mapping is withdrawn from the NSM.
The no mpls-resolution resets all peer information in BGP, and BGP needs to set up connections with its peers again. Since the mpls-resolution flag is not set, no mapping takes place. Command Syntax mpls-resolution no mpls-resolution Parameters None Command Mode Router mode Example #configure terminal (config)#router bgp 100 (config-router)#mpls-resolution © 2015 IP Infusion Inc. Proprietary 103 BGP Commands neighbor activate
BGP Commands neighbor activate Use this command to enable the exchange of specific AF routes with a neighboring router. After the TCP connection is opened with the neighbor, use this command to enable or disable the exchange of AF information with a neighboring router. To enable the exchange of multicast and VPNv4 address prefix types, neighbors are activated using the neighbor activate command in address family mode.
neighbor activate command in address family mode. Use the no parameter with this command to disable exchange of information with a neighbor. Command Syntax neighbor (A.B.C.D|X:X::X:X|WORD) activate no neighbor (A.B.C.D|X:X::X:X|WORD) activate Parameters A.B.C.D Address of the BGP neighbor in an IPv4 format X:X::X:X Address of the BGP neighbor in an IPv6 format WORD Name of the BGP peer group Note: For information about how to create peer groups, refer to the neighbor peer-group and neighbor
remote-as commands. When this parameter is used with a command, the command applies to all peers in the group. Default A neighbor under address-family IPv4/IPv6 is activated by default. For all other address-families, use this command to enable a neighbor to exchange routing information of a specific address-family with a neighbor. Command Mode Address Family mode and Router mode Examples #configure terminal (config)#router bgp 10 (config-router)#neighbor 1.2.3.4 activate
(config-router)#neighbor 1.2.3.4 activate (config)#router bgp 100 (config-router)#neighbor 10.10.20.1 remote-as 100 (config-router)#address-family vpnv4 unicast (config-router-af)#neighbor 10.10.20.1 activate (config)#router bgp 100 (config)#bgp router-id 13.13.13.13 (config-router)#neighbor 3ffe:15:15:15:15::0 remote-as 100 (config-router)#address-family vpnv6 unicast (config-router-af)#neighbor 3ffe:15:15:15:15::0 activate 104 © 2015 IP Infusion Inc. Proprietary BGP Commands
BGP Commands neighbor advertisement-interval Use this command to set a minimum interval between the sending of BGP routing updates. To reduce the flapping of routes to internet, a minimum advertisement interval is set, so that the BGP routing updates are sent only per interval seconds. BGP dampening can also be used to control the effects of flapping routes. Use the no parameter with this command to set the interval time to default. Command Syntax
Command Syntax neighbor (A.B.C.D|X:X::X:X|WORD) advertisement-interval <0-65535> no neighbor (A.B.C.D|X:X::X:X|WORD) advertisement-interval no neighbor (A.B.C.D|X:X::X:X|WORD) advertisement-interval <0-65535> Parameters A.B.C.D Address of the BGP neighbor in an IPv4 format X:X::X:X Address of the BGP neighbor in an IPv6 format WORD Name of the BGP peer group Note: For information about how to create peer groups, refer to the neighbor peer-group and neighbor
remote-as commands. When this parameter is used with a command, the command applies to all peers in the group. <0-65535> Advertisement-interval value in seconds Command Mode Router mode Example #configure terminal (config)#router bgp 10 (config-router)#neighbor 10.10.0.3 advertisement-interval 45 © 2015 IP Infusion Inc. Proprietary 105 BGP Commands neighbor allowas-in Use this command to advertise prefixes (routes) even when the source of the prefixes is from the same Autonomous
System (AS) number. Use this command in a scenario where two routers at different locations use the same Autonomous System number and are connected via an ISP. Once prefixes arrive from one branch at the ISP, they are tagged with the customer’s AS number. By default, when the ISP passes the prefixes to the other router, the prefixes are dropped if the other router uses the same AS number. Use this command to advertise the prefixes at the other side. Control the number of times
an AS number is advertised by specifying a number. In a hub and spoke configuration in a VPN, a PE (Provider Edge) router advertises all prefixes containing duplicate AS numbers. Use this command to configure two VRFs on each PE router to receive and advertise prefixes. One of the VRFs receives prefixes with AS numbers from all PE routers and then advertises them to neighboring PE routers. The
other VRF receives prefixes with AS numbers from the CE (Customer Edge) router and advertises them to all PE routers in the hub and spoke configuration. Use the no parameter with this command to reset to default. Command Syntax neighbor (A.B.C.D|X:X::X:X|WORD) allowas-in neighbor (A.B.C.D|X:X::X:X|WORD) allowas-in <1-10> no neighbor (A.B.C.D|X:X::X:X|WORD) allowas-in Parameters A.B.C.D IPv4 neighbor address. X:X::X:X IPv6 neighbor address. WORD Name of peer group.
WORD Name of peer group. Note: For information on how to create peer groups, refer to the neighbor peer-group and neighbor remote- as commands. When this parameter is used with a command, the command applies on all peers in the specified group. <1-10> Number of times to allow the advertisement of an AS number Command Mode Router mode and Address Family mode Example #configure terminal (config)#router bgp 10 (config-router)#neighbor 10.10.0.3 allowas-in 4 #configure terminal
#configure terminal (config)#router bgp 7657 (config-router)#address-family ipv4 vrf VRF_A (config-router-af)#neighbor 10.10.0.1 allowas-in 3 #configure terminal (config)#router bgp 7657 (config-router)#address-family ipv6 vrf VRF_A (config-router-af)#neighbor 3ffe:15:15:15:15::0 allowas-in 3 106 © 2015 IP Infusion Inc. Proprietary BGP Commands neighbor as-origination-interval Use this command to adjust the interval of sending AS origination routing updates. This command is used to change
the minimum interval between the sending of AS-origination routing updates. Use the no parameter with this command to disable this function. Command Syntax neighbor (A.B.C.D|X:X::X:X|WORD) as-origination-interval <1-65535> no neighbor (A.B.C.D|X:X::X:X|WORD) as-origination-interval no neighbor (A.B.C.D|X:X::X:X|WORD) as-origination-interval <1-65535> Parameters A.B.C.D Address of the BGP neighbor in an IPv4 format X:X::X:X Address of the BGP neighbor in an IPv6 format
WORD Name of the BGP peer group Note: For information about how to create peer groups, refer to the neighbor peer-group and neighbor remote-as commands. When this parameter is used with a command, the command applies to all peers in the group. <1-65535> AS origination interval in seconds Command Mode Router mode Example #configure terminal (config)#router bgp 10 (config-router)#neighbor 10.10.0.75 as-origination-interval 555 © 2015 IP Infusion Inc. Proprietary 107 BGP Commands
BGP Commands neighbor attribute-unchanged Use this command to advertise unchanged BGP attributes to the specified neighbor. Use the no parameter with this command to disable this function. Command Syntax neighbor (A.B.C.D|X:X::X:X|WORD) attribute-unchanged ({ as-path|next-hop|med }|) no neighbor (A.B.C.D|X:X::X:X|WORD) attribute-unchanged (({ as-path|next-hop| med }|) Parameters A.B.C.D Address of the BGP neighbor in an IPv4 format X:X::X:X Address of the BGP neighbor in an IPv6 format
WORD Name of the BGP peer group Note: For information about how to create peer groups, refer to the neighbor peer-group and neighbor remote-as commands. When this parameter is used with a command, the command applies to all peers in the group. as-path AS path attribute next-hop Nexthop attribute med Multi-exit discriminator attribute Command Mode Router mode and Address Family mode Example #configure terminal (config)#router bgp 10
#configure terminal (config)#router bgp 10 (config-router)#neighbor 10.10.0.75 attribute-unchanged as-path med 108 © 2015 IP Infusion Inc. Proprietary BGP Commands neighbor capability dynamic Use this command to enable the dynamic capability for a specific peer. This command allows a BGP speaker to advertise or withdraw an address family capability to a peer in a non-disruptive manner. Use the no parameter with this command to disable the dynamic capability. Command Syntax
Command Syntax neighbor (A.B.C.D|X:X::X:X|WORD) capability dynamic no neighbor (A.B.C.D|X:X::X:X|WORD) capability dynamic Parameters A.B.C.D Address of the BGP neighbor in an IPv4 format X:X::X:X Address of the BGP neighbor in an IPv6 format WORD Name of the BGP peer group Note: For information about how to create peer groups, refer to the neighbor peer-group and neighbor remote-as commands. When this parameter is used with a command, the command applies to all peers in the group. Default
peers in the group. Default Disabled Command Mode Router mode Examples #configure terminal (config)#router bgp 10 (config-router)#neighbor 10.10.10.1 capability dynamic © 2015 IP Infusion Inc. Proprietary 109 BGP Commands neighbor capability graceful-restart Use this command to configure the router to advertise the Graceful Restart Capability to the neighbors. This configuration indicates that the BGP speaker has the ability to preserve its forwarding state for the address family when
BGP restarts. Use this command to advertise to the neighbor routers the capability of graceful restart. However, users must first specify a neighbor’s remote-as identification number assigned by the neighbor router. Note: The graceful restart capability is advertised only when the graceful restart capability has been enabled using the bgp graceful-restart command. Use the no parameter with this command to configure router so it does not advertise the Graceful Restart Capability to its neighbor.
its neighbor. Command Syntax neighbor (A.B.C.D|X:X::X:X|WORD) capability graceful-restart no neighbor (A.B.C.D|X:X::X:X|WORD) capability graceful-restart Parameters A.B.C.D Address of the BGP neighbor in an IPv4 format X:X::X:X Address of the BGP neighbor in an IPv6 format WORD Name of the BGP peer group Note: For information about how to create peer groups, refer to the neighbor peer-group and neighbor remote-as commands. When this parameter is used with a command, the command applies to all
peers in the group. Command Mode Router mode and Address Family mode Examples #configure terminal (config)#router bgp 10 (config-router)#neighbor 10.10.10.50 capability graceful-restart 110 © 2015 IP Infusion Inc. Proprietary BGP Commands neighbor capability orf prefix-list Use this command to enable Outbound Router Filtering (ORF), and advertise the ORF capability to its neighbors. The ORFs send and receive capabilities to lessen the number of updates exchanged between neighbors. By filtering
updates, this option minimizes generating and processing of updates. The local router advertises the ORF capability in send mode, and the remote router receives the ORF capability in receive mode applying the filter as outbound policy. The two routers exchange updates to maintain the ORF for each router. Only an individual router or a peer group can be configured to be in receive or send mode. A peer-group member cannot be configured to be in receive or send mode.
receive or send mode. Use the no parameter with this command to disable this function. Command Syntax neighbor (A.B.C.D|X:X::X:X|WORD) capability orf prefix-list (both|receive|send) no neighbor (A.B.C.D|X:X::X:X|WORD) capability orf prefix-list (both|receive|send) Parameters A.B.C.D Address of the BGP neighbor in an IPv4 format X:X::X:X Address of the BGP neighbor in an IPv6 format WORD Name of the BGP peer group
WORD Name of the BGP peer group Note: For information about how to create peer groups, refer to the neighbor peer-group and neighbor remote-as commands. When this parameter is used with a command, the command applies to all peers in the group. both The local router can send ORF entries to its peer, as well as receive ORF entries from its peer. receive The local router is willing to receive ORF entries from its peer send The local router is willing to send ORF entries to its peer Command Mode
Command Mode Router mode and Address Family (IPv4 unicast, IPv4 multicast, IPv6) mode Examples #configure terminal (config)#router bgp 10 (config-router)#neighbor 10.10.0.5 capability orf prefix-list both (config-router)#neighbor effe:2897::0003:3ed5 capability orf prefix-list receive © 2015 IP Infusion Inc. Proprietary 111 BGP Commands neighbor capability route-refresh Use this command to advertise to peer about route refresh capability support. If route refresh capability is supported,
then router can dynamically request that the peer re-advertises its Adj-RIB-Out. Use the no parameter with this command to disable this function Command Syntax neighbor (A.B.C.D|X:X::X:X|WORD) capability route-refresh no neighbor (A.B.C.D|X:X::X:X|WORD) capability route-refresh Parameters A.B.C.D Address of the BGP neighbor in an IPv4 format X:X::X:X Address of the BGP neighbor in an IPv6 format WORD Name of the BGP peer group
WORD Name of the BGP peer group Note: For information about how to create peer groups, refer to the neighbor peer-group and neighbor remote-as commands. When this parameter is used with a command, the command applies to all peers in the group. Command Mode Router mode Examples #configure terminal (config)#router bgp 10 (config-router)#neighbor 10.10.10.1 capability route-refresh 112 © 2015 IP Infusion Inc. Proprietary BGP Commands neighbor collide-established
BGP Commands neighbor collide-established Use this command to include a neighbor already in an established state for conflict resolution when a TCP connection collision is detected. This command is not required for most network deployments, so users should only use this command when required. Note: The associated functionality of including an 'established' neighbor into TCP connection collision conflict resolution is automatically enabled when a neighbor is configured for BGP graceful-restart.
Use the no option with this command to turn this feature off. Command Syntax neighbor (A.B.C.D|X:X::X:X|WORD) collide-established no neighbor (A.B.C.D|X:X::X:X|WORD) collide-established Parameters A.B.C.D Address of the BGP neighbor in an IPv4 format X:X::X:X Address of the BGP neighbor in an IPv6 format WORD Name of the BGP peer group Note: For information about how to create peer groups, refer to the neighbor peer-group and neighbor
remote-as commands. When this parameter is used with a command, the command applies to all peers in the group. Command Mode Router mode Example #configure terminal (config)#router bgp 10 (config-router)#neighbor 3.3.3.3 collide-established © 2015 IP Infusion Inc. Proprietary 113 BGP Commands neighbor connection-retry-time Use this command to set the connection retry time for a specific BGP neighbor.
Use the no parameter with this command to clear the connection retry time for a specific BGP neighbor. Command Syntax neighbor (A.B.C.D|X:X::X:X|WORD) connection-retry-time <1-65535> no neighbor (A.B.C.D|X:X::X:X|WORD) connection-retry-time no neighbor (A.B.C.D|X:X::X:X|WORD) connection-retry-time <1-65535> Parameters A.B.C.D Address of the BGP neighbor in an IPv4 format X:X::X:X Address of the BGP neighbor in an IPv6 format WORD Name of the BGP peer group
WORD Name of the BGP peer group Note: For information about how to create peer groups, refer to the neighbor peer-group and neighbor remote-as commands. When this parameter is used with a command, the command applies to all peers in the group. <1-65535> Connection retry time in seconds Default The default connection retry time is 120 seconds. Command Mode Router mode Examples #configure terminal (config)#router bgp 12 (config-router)#neighbor 10.10.10.10 connection-retry-time 125
114 © 2015 IP Infusion Inc. Proprietary BGP Commands neighbor default-originate Use this command to allow a BGP local router to send the default route 0.0.0.0 to a neighbor for use as a default route. This command can be used with standard or extended access lists. Use the no parameter with this command to send no route as a default. Command Syntax neighbor (A.B.C.D|X:X::X:X|WORD) default-originate neighbor (A.B.C.D|X:X::X:X|WORD) default-originate route-map WORD
no neighbor (A.B.C.D|X:X::X:X|WORD) default-originate no neighbor (A.B.C.D|X:X::X:X|WORD) default-originate route-map WORD Parameters A.B.C.D Address of the BGP neighbor in an IPv4 format X:X::X:X Address of the BGP neighbor in an IPv6 format WORD Name of the BGP peer group Note: For information about how to create peer groups, refer to the neighbor peer-group and neighbor remote-as commands. When this parameter is used with a command, the command applies to all peers in the group.
peers in the group. WORD Route map name Command Mode Router mode and Address Family Examples #configure terminal (config)#router bgp 10 (config-router)#neighbor 10.10.10.1 default-originate route-map myroute © 2015 IP Infusion Inc. Proprietary 115 BGP Commands neighbor description Use this command to associate a description with a neighbor. This command helps in identifying a neighbor quickly. It is useful for an ISP that has multiple neighbor relationships.
Use the no parameter with this command to remove the description. Command Syntax neighbor (A.B.C.D|X:X::X:X|WORD) description LINE no neighbor (A.B.C.D|X:X::X:X|WORD) description no neighbor (A.B.C.D|X:X::X:X|WORD) description LINE Parameters A.B.C.D Address of the BGP neighbor in an IPv4 format X:X::X:X Address of the BGP neighbor in an IPv6 format WORD Name of the BGP peer group Note: For information about how to create peer groups, refer to the neighbor peer-group and neighbor
remote-as commands. When this parameter is used with a command, the command applies to all peers in the group. LINE Neighbor description (up to 80 characters) Command Mode Router mode and Address Family Examples #configure terminal (config)#router bgp 10 (config-router)#neighbor 1.2.3.4 description Backup router for sales (config)#router bgp 100 (config-router)#address-family ipv4 vrf VRF_A (config-router-af)#neighbor 10.10.0.1 description Bank of America (config)#router bgp 100
(config)#router bgp 100 (config-router)#address-family ipv6 vrf VRF_A (config-router-af)#neighbor 3ffe:15:15:15:15::0 description Bank of America 116 © 2015 IP Infusion Inc. Proprietary BGP Commands neighbor disallow-infinite-holdtime Use this command to disallow configuration of infinite hold-time. This command enables the local BGP speaker to reject a hold-time of “0” seconds from the peer (during exchange of open messages) or the user (during configuration).
The no form of this command allows the BGP speaker to accept a hold-time of “0” from the peer or during configuration. Command Syntax neighbor (A.B.C.D|X:X::X:X|WORD) disallow-infinite-holdtime no neighbor (A.B.C.D|X:X::X:X|WORD) disallow-infinite-holdtime Parameters A.B.C.D Address of the BGP neighbor in an IPv4 format X:X::X:X Address of the BGP neighbor in an IPv6 format WORD Name of the BGP peer group
WORD Name of the BGP peer group Note: For information about how to create peer groups, refer to the neighbor peer-group and neighbor remote-as commands. When this parameter is used with a command, the command applies to all peers in the group. Command Mode Router mode Examples (config-router)#neighbor 10.11.4.26 disallow-infinite-holdtime (config-router)#neighbor 3ffe::45 disallow-infinite-holdtime © 2015 IP Infusion Inc. Proprietary 117 BGP Commands neighbor distribute-list
BGP Commands neighbor distribute-list Use this command to filter route updates from a particular BGP neighbor. Use only one distribute-list per BGP neighbor. Use the no parameter with this command to remove an entry. Command Syntax neighbor (A.B.C.D|X:X::X:X|WORD) distribute-list (<1-199>|<1300-2699>|WORD) (in|out) no neighbor (A.B.C.D|X:X::X:X|WORD) distribute-list (<1-199>|<1300-2699>|WORD) (in|out) Parameters A.B.C.D Address of the BGP neighbor in an IPv4 format
X:X::X:X Address of the BGP neighbor in an IPv6 format WORD Name of the BGP peer group Note: For information about how to create peer groups, refer to the neighbor peer-group and neighbor remote-as commands. When this parameter is used with a command, the command applies to all peers in the group. <1-199> IP access-list number <1300-2699> IP access-list number (expanded-range) WORD Access-list name in Filter incoming advertised routes out Filter outgoing advertised routes Command Mode
Command Mode Router mode and Address Family mode Examples #configure terminal (config)#router bgp 10 (config-router)#neighbor 1.2.3.4 distribute-list mylist out 118 © 2015 IP Infusion Inc. Proprietary BGP Commands neighbor dont-capability-negotiate Use this command to disable capability negotiation. The capability negotiation is performed by default. This command is used to allow compatibility with older BGP versions that have no capability parameters used in open messages between peers.
between peers. Use the no parameter with this command to enable capability negotiation. Command Syntax neighbor (A.B.C.D|X:X::X:X|WORD) dont-capability-negotiate no neighbor (A.B.C.D|X:X::X:X|WORD) dont-capability-negotiate Parameters A.B.C.D Address of the BGP neighbor in an IPv4 format X:X::X:X Address of the BGP neighbor in an IPv6 format WORD Name of the BGP peer group Note: For information about how to create peer groups, refer to the neighbor peer-group and neighbor
remote-as commands. When this parameter is used with a command, the command applies to all peers in the group. Command Mode Router mode Examples #configure terminal (config)#router bgp 10 (config-router)#neighbor 10.10.0.34 dont-capability-negotiate © 2015 IP Infusion Inc. Proprietary 119 BGP Commands neighbor ebgp-multihop Use this command to accept and attempt BGP connections to external peers on indirectly connected networks.
Multihop is not established if the only route to the multihop peer is a default route. This avoids loop formation. Use the no parameter with this command to return to the default. Command Syntax neighbor (A.B.C.D|X:X::X:X|WORD) ebgp-multihop neighbor (A.B.C.D|X:X::X:X|WORD) ebgp-multihop <1-255> no neighbor (A.B.C.D|X:X::X:X|WORD) ebgp-multihop no neighbor (A.B.C.D|X:X::X:X|WORD) ebgp-multihop <1-255> Parameters A.B.C.D Address of the BGP neighbor in an IPv4 format
X:X::X:X Address of the BGP neighbor in an IPv6 format WORD Name of the BGP peer group Note: For information about how to create peer groups, refer to the neighbor peer-group and neighbor remote-as commands. When this parameter is used with a command, the command applies to all peers in the group. <1-255> Maximum hop count Default If no maximum hop count is set, this is set to 255. Command Mode Router mode Examples #configure terminal (config)#router bgp 10
#configure terminal (config)#router bgp 10 (config-router)#neighbor 10.10.10.34 remote-as 20 (config-router)#neighbor 10.10.10.34 ebgp-multihop 5 120 © 2015 IP Infusion Inc. Proprietary BGP Commands neighbor enforce-multihop Use this command to turn on the enforcement of eBGP neighbors perform multihop. Use the no parameter with this command to turn off this feature. Command Syntax neighbor (A.B.C.D|X:X::X:X|WORD) enforce-multihop no neighbor (A.B.C.D|X:X::X:X|WORD) enforce-multihop Parameters
Parameters A.B.C.D Address of the BGP neighbor in an IPv4 format X:X::X:X Address of the BGP neighbor in an IPv6 format WORD Name of the BGP peer group Note: For information about how to create peer groups, refer to the neighbor peer-group and neighbor remote-as commands. When this parameter is used with a command, the command applies to all peers in the group. Command Mode Router mode Examples #configure terminal (config)#router bgp 10 (config-router)#neighbor 10.10.0.34 remote-as 20
(config-router)#neighbor 10.10.0.34 remote-as 20 (config-router)#neighbor 10.10.0.34 enforce-multihop © 2015 IP Infusion Inc. Proprietary 121 BGP Commands neighbor fall-over bfd Use this command to configure bidirectional forwarding detection (BFD) for BGP. Use the no parameter with this command to disable this function. Command Syntax neighbor (A.B.C.D|X:X::X:X|WORD) fall-over bfd (multihop|) no neighbor (A.B.C.D|X:X::X:X|WORD) fall-over bfd (multihop|) Parameters
Parameters A.B.C.D Address of the BGP neighbor in an IPv4 format X:X::X:X Address of the BGP neighbor in an IPv6 format WORD Name of the BGP peer group Note: For information about how to create peer groups, refer to the neighbor peer-group and neighbor remote-as commands. When this parameter is used with a command, the command applies to all peers in the group. multihop Enable multihop Command Mode Router mode Examples #configure terminal (config)#router bgp 10
#configure terminal (config)#router bgp 10 (config-router)#neighbor 10.10.0.34 remote-as 20 (config-router)#neighbor 10.10.0.34 fall-over bfd multihop 122 © 2015 IP Infusion Inc. Proprietary BGP Commands neighbor filter-list Use this command to set up a BGP filter. This command specifies an access list filter on updates based on the BGP autonomous system paths. Each filter is an access list based on regular expressions. Use the no parameter with this command to disable this function.
Command Syntax neighbor (A.B.C.D|X:X::X:X|WORD) filter-list WORD (in|out) no neighbor (A.B.C.D|X:X::X:X|WORD) filter-list WORD (in|out) Parameters A.B.C.D Address of the BGP neighbor in an IPv4 format X:X::X:X Address of the BGP neighbor in an IPv6 format WORD Name of the BGP peer group Note: For information about how to create peer groups, refer to the neighbor peer-group and neighbor remote-as commands. When this parameter is used with a command, the command applies to all peers in the group.
peers in the group. WORD Name of an autonomous system path access list in Filter incoming advertised routes out Filter outgoing advertised routes Command Mode Router mode and Address Family mode Examples #configure terminal (config)#router bgp 10 (config-router)#neighbor 10.10.0.34 remote-as 20 (config-router)#neighbor 10.10.0.34 filter-list out in © 2015 IP Infusion Inc. Proprietary 123 BGP Commands neighbor g-shut
BGP Commands neighbor g-shut Use this command to start a graceful shutdown for the BGP session of the specified BGP neighbor. The BGP session for this neighbor is shut down after the graceful shutdown timer expires. If there is no alternate path available for traffic to flow prior the actual shutdown of the BGP session, this path is made available for 60 seconds or for configured time after which the path is no longer available and traffic is dropped.
Use the no parameter with this command to bring up the session again for the specified BGP neighbor whose BGP session had been shut down using the neighbor g-shut command. Note: The graceful shutdown capability is not supported on iBGP sessions. Command Syntax neighbor (A.B.C.D|X:X::X:X|WORD) g-shut no neighbor (A.B.C.D|X:X::X:X|WORD) g-shut Parameters A.B.C.D Neighbor IPv4 address X:X::X:X| Neighbor IPv6 address WORD Neighbor tag Default Disabled Command Mode Router mode Examples
Disabled Command Mode Router mode Examples #configure terminal (config)#router bgp 100 (config-router)#neighbor 1.1.1.2 g-shut #configure terminal (config)#router bgp 100 (config-router)#no neighbor 1.1.1.2 g-shut 124 © 2015 IP Infusion Inc. Proprietary BGP Commands neighbor g-shut-timer Use this command to configure the value of the graceful shutdown timer. After the timer expires, the BGP session initiated for graceful shutdown is shut down.
graceful shutdown is shut down. Use the no parameter with this command to revert to the default setting. Command Syntax neighbor (A.B.C.D|X:X::X:X|WORD) g-shut-timer <10-65535> no neighbor (A.B.C.D|X:X::X:X|WORD) g-shut-timer <10-65535> Parameters A.B.C.D Neighbor IPv4 address X:X::X:X| Neighbor IPv6 address WORD Neighbor tag <10-65535> Graceful shutdown timer in seconds Default By default, the timer value is set to 60 seconds. Command Mode Router mode Examples #configure terminal
Router mode Examples #configure terminal (config)#router bgp 100 (config-router)#neighbor 1.1.1.2 g-shut-timer 120 © 2015 IP Infusion Inc. Proprietary 125 BGP Commands neighbor local-as Use this command to specify an AS (autonomous system) number to use with BGP neighbor. Use the no parameter with this command to disable this command. Command Syntax neighbor (A.B.C.D|X:X::X:X|WORD) local-as <1-4294967295> no neighbor (A.B.C.D|X:X::X:X|WORD) local-as <1-4294967295> Parameters
Parameters A.B.C.D Address of the BGP neighbor in an IPv4 format X:X::X:X Address of the BGP neighbor in an IPv6 format WORD Name of the BGP peer group Note: For information about how to create peer groups, refer to the neighbor peer-group and neighbor remote-as commands. When this parameter is used with a command, the command applies on all peers in the specified group. <1-4294967295> Neighbor’s AS number when extended capabilities are configured
Note: The AS number 23456 is a reserved 2-octet AS number. An old BGP speaker (2-byte implementation) should be configured with 23456 as its remote AS number while peering with a non-mappable new BGP speaker (4-byte implementation). Command Mode Router mode Example #configure terminal (config)#router bgp 11 (config-router)#neighbor 10.10.0.34 local-as 12345 126 © 2015 IP Infusion Inc. Proprietary BGP Commands neighbor maximum-prefix
BGP Commands neighbor maximum-prefix Use this command to control the number of prefixes that can be received from a neighbor. This command allows the configuration of a specified number of prefixes that a BGP router is allowed to receive from a neighbor. When the warning-only option is not used and extra prefixes are received, the router ends the peering. A terminated peer stays down until the clear ip bgp command is used. Use the no parameter with this command to disable this function.
Command Syntax neighbor (A.B.C.D|X:X::X:X|WORD) maximum-prefix <1-4294967295> neighbor (A.B.C.D|X:X::X:X|WORD) maximum-prefix <1-4294967295> <1-100> neighbor (A.B.C.D|X:X::X:X|WORD) maximum-prefix <1-4294967295> <1-100> warning-only neighbor (A.B.C.D|X:X::X:X|WORD) maximum-prefix <1-4294967295> warning-only no neighbor (A.B.C.D|X:X::X:X|WORD) maximum-prefix no neighbor (A.B.C.D|X:X::X:X|WORD) maximum-prefix <1-4294967295>
no neighbor (A.B.C.D|X:X::X:X|WORD) maximum-prefix <1-4294967295> warning-only Parameters A.B.C.D Address of the BGP neighbor in an IPv4 format X:X::X:X Address of the BGP neighbor in an IPv6 format WORD Name of the BGP peer group Note: For information about how to create peer groups, refer to the neighbor peer-group and neighbor remote-as commands. When this parameter is used with a command, the command applies on all peers in the specified group.
peers in the specified group. <1-4294967295> Maximum number of prefixes accepted from this peer <1-100> Threshold value percent <1-100> warning-only Only give a warning message when the limit is exceeded Command Mode Router mode and Address Family mode Examples #configure terminal (config)#router bgp 10 (config-router)#neighbor 10.10.0.72 maximum-prefix 1244 warning-only © 2015 IP Infusion Inc. Proprietary 127 BGP Commands neighbor next-hop-self
BGP Commands neighbor next-hop-self Use this command to configure the router as the next hop for a BGP-speaking neighbor or peer group. This command allows a BGP router to change the nexthop information that is sent to the iBGP peer. The nexthop information is set to the IP address of the interface used to communicate with the neighbor. Use the no parameter with this command to disable this feature. Command Syntax neighbor (A.B.C.D|X:X::X:X|WORD) next-hop-self
neighbor (A.B.C.D|X:X::X:X|WORD) next-hop-self no neighbor (A.B.C.D|X:X::X:X|WORD) next-hop-self Parameters A.B.C.D Address of the BGP neighbor in an IPv4 format X:X::X:X Address of the BGP neighbor in an IPv6 format WORD Name of the BGP peer group Note: For information about how to create peer groups, refer to the neighbor peer-group and neighbor remote-as commands. When this parameter is used with a command, the command applies to all peers in the group. Command Mode
peers in the group. Command Mode Router mode and Address Family mode Examples #configure terminal (config)#router bgp 10 (config-router)#neighbor 10.10.0.72 remote-as 100 (config-router)#neighbor 10.10.0.72 next-hop-self 128 © 2015 IP Infusion Inc. Proprietary BGP Commands neighbor override-capability Use this command to override a capability negotiation result. Use the no parameter with this command to disable this function. Command Syntax neighbor (A.B.C.D|X:X::X:X|WORD) override-capability
no neighbor (A.B.C.D|X:X::X:X|WORD) override-capability Parameters A.B.C.D Address of the BGP neighbor in an IPv4 format X:X::X:X Address of the BGP neighbor in an IPv6 format WORD Name of the BGP peer group Note: For information about how to create peer groups, refer to the neighbor peer-group and neighbor remote-as commands. When this parameter is used with a command, the command applies to all peers in the group. Command Mode Router mode Examples #configure terminal (config)#router bgp 12
#configure terminal (config)#router bgp 12 (config-router)#neighbor 10.10.10.10 override-capability © 2015 IP Infusion Inc. Proprietary 129 BGP Commands neighbor passive Use this command to set a BGP neighbor as passive. Use the no parameter with this command to disable this function. Command Syntax neighbor (A.B.C.D|X:X::X:X|WORD) passive no neighbor (A.B.C.D|X:X::X:X|WORD) passive Parameters A.B.C.D Address of the BGP neighbor in an IPv4 format
X:X::X:X Address of the BGP neighbor in an IPv6 format WORD Name of the BGP peer group Note: For information about how to create peer groups, refer to the neighbor peer-group and neighbor remote-as commands. When this parameter is used with a command, the command applies to all peers in the group. Command Mode Router mode Examples #configure terminal (config)#router bgp 12 (config-router)#neighbor 10.10.10.10 passive 130 © 2015 IP Infusion Inc. Proprietary BGP Commands neighbor password
BGP Commands neighbor password Use this command to enable message digest5 (MD5) authentication on a TCP connection between two BGP peers. Configuring MD5 authentication between two BGP peers, means that each segment sent on the TCP connection between the peers is verified. MD5 authentication must be configured with the same password on both BGP peers; otherwise, the connection between them will not be established. Use the no parameter with this command to delete the MD5 authentication
Command Syntax neighbor (A.B.C.D|X:X::X:X|WORD) password <WORD> no neighbor (A.B.C.D|X:X::X:X|WORD) password <WORD> Parameters A.B.C.D Address of the BGP neighbor in an IPv4 format X:X::X:X Address of the BGP neighbor in an IPv6 format WORD Name of the BGP peer group WORD Password (Maximum length is 80 charecters) Command Mode Router mode Example #configure terminal (config)#router bgp 11 (config-router)#neighbor 10.10.0.73 password ipi (config-router)#no neighbor 10.10.0.73 password ipi
© 2015 IP Infusion Inc. Proprietary 131 BGP Commands neighbor peer-group Use this command to add a neighbor to an existing peer group. Neighbors with the same update policies are grouped into peer groups. This facilitates the updates of various policies, such as distribute and filter lists. The peer group is then configured easily with any of the neighbor commands. Any changes made to the peer group affect all members.
To create a peer group, use the neighbor WORD peer-group command, and then use this command to add neighbors to the group. Use the no parameter with this command to remove a neighbor from a named peer group. Command Syntax neighbor (A.B.C.D|X:X::X:X|WORD) peer-group WORD no neighbor (A.B.C.D|X:X::X:X|WORD) peer-group WORD Parameters A.B.C.D Address of the BGP neighbor in an IPv4 format X:X::X:X Address of the BGP neighbor in an IPv6 format WORD Name of the BGP peer group WORD Peer group name
WORD Peer group name Command Mode Router mode Example #configure terminal (config)#router bgp 10 (config-router)#neighbor group1 peer-group 132 © 2015 IP Infusion Inc. Proprietary BGP Commands neighbor port Use this command to specify the BGP port number of a neighbor. Use the no parameter with this command to remove a port number from a BGP neighbor. Command Syntax neighbor (A.B.C.D|X:X::X:X|WORD) port <0-65535> no neighbor (A.B.C.D|X:X::X:X|WORD) port
no neighbor (A.B.C.D|X:X::X:X|WORD) port no neighbor (A.B.C.D|X:X::X:X|WORD) port <0-65535> Parameters A.B.C.D Address of the BGP neighbor in an IPv4 format X:X::X:X Address of the BGP neighbor in an IPv6 format WORD Name of the BGP peer group Note: For information about how to create peer groups, refer to the neighbor peer-group and neighbor remote-as commands. When this parameter is used with a command, the command applies to all peers in the group. <0-65535> Port number Command Mode
<0-65535> Port number Command Mode Router mode Examples #configure terminal (config)#router bgp 12 (config-router)#neighbor 10.10.10.10 port 643 © 2015 IP Infusion Inc. Proprietary 133 BGP Commands neighbor prefix-list Use this command to specify a prefix list for filtering BGP advertisements. Filtering by prefix list matches the prefixes of routes with those listed in the prefix list. If there is a match, the route is used. An empty prefix list permits all prefixes. If
a given prefix does not match any entries of a prefix list, the route is denied access. When multiple entries of a prefix list match a prefix, the entry with the smallest sequence number is considered to be a real match. The router begins the search at the top of the prefix list, with the sequence number 1. Once a match or deny occurs, the router does not need to go through the rest of the prefix list. For efficiency the most common matches or denies are
listed at the top. The neighbor distribute-list command is an alternative to this command and only one of them can be used for filtering to the same neighbor in any direction. Use the no parameter with this command to remove an entry. Command Syntax neighbor (A.B.C.D|X:X::X:X|WORD) prefix-list WORD (in|out) no neighbor (A.B.C.D|X:X::X:X|WORD) prefix-list WORD (in|out) Parameters A.B.C.D Address of the BGP neighbor in an IPv4 format X:X::X:X Address of the BGP neighbor in an IPv6 format
WORD Name of the BGP peer group Note: For information about how to create peer groups, refer to the neighbor peer-group and neighbor remote-as commands. When this parameter is used with a command, the command applies to all peers in the group. WORD Name of an access list in Apply access list to incoming advertisements out Apply access list to outgoing advertisements Command Mode Router mode and Address Family mode Examples #configure terminal (config)#ip prefix-list list1 deny 30.0.0.0/24
(config)#ip prefix-list list1 deny 30.0.0.0/24 (config)#router bgp 12 (config-router)#neighbor 10.10.10.10 prefix-list list1 in 134 © 2015 IP Infusion Inc. Proprietary BGP Commands neighbor remote-as This command establishes BGP peering with a customer edge router. Use this command to specify a neighbor’s autonomous system number. If the specified ASN matches the ASN number specified in the router bgp global configuration, the neighbor is identified as internal. If the ASN does no match, it is
identified as external to the local AS. The specified neighbor only exchanges unicast address prefixes, unless the neighbor is also activated using the neighbor activate command, which allows the exchange of other routing information. Use the no parameter with this command to delete this peering. Command Syntax neighbor (A.B.C.D|X:X::X:X|WORD) remote-as <1-65535> neighbor (A.B.C.D|X:X::X:X|WORD) remote-as <1-4294967295> no neighbor (A.B.C.D|X:X::X:X|WORD) remote-as <1-65535>
no neighbor (A.B.C.D|X:X::X:X|WORD) remote-as <1-4294967295> Parameters A.B.C.D Address of the BGP neighbor in an IPv4 format X:X::X:X Address of the BGP neighbor in an IPv6 format WORD Name of the BGP peer group Note: For information about how to create peer groups, refer to the neighbor peer-group and neighbor remote-as commands. When this parameter is used with a command, the command applies to all peers in the group. <1-4294967295>
peers in the group. <1-4294967295> Neighbor’s AS number when extended capabilities are configured Note: ASNUM 23456 is a reserved 2-octet AS number. An old BGP speaker (2-byte implementation) should be configured with 23456 as its remote AS number while peering with a non-mappable new BGP speaker (4-byte implementation). <1-65535> Neighbor’s AS number Command Mode Router mode and Address Family-vrf mode Example #configure terminal (config)#router bgp 11
#configure terminal (config)#router bgp 11 (config-router)#neighbor 10.10.0.73 remote-as 345 (config-router)#neighbor 11.11.0.74 remote-as 23456 Note: The last command in the example above should be used when the local speaker is OBGP and the neighbor is NBGP with a 4-octet ASN. (config)#router bgp 100 (config-router)#address-family ipv4 vrf VRF_A (config-router-af)#neighbor 10.10.0.1 remote-as 65000 © 2015 IP Infusion Inc. Proprietary 135 BGP Commands (config)#router bgp 100
BGP Commands (config)#router bgp 100 (config-router)#address-family ipv6 vrf VRF_A (config-router-af)#neighbor 3ffe:15:15:15:15::0 remote-as 65000 136 © 2015 IP Infusion Inc. Proprietary BGP Commands neighbor remove-private-AS Use this command to remove the private Autonomous System (AS) number from outbound updates. Private AS numbers are not advertised to the Internet. This command is used with external BGP peers only. The router removes
the AS numbers only if the update includes private AS numbers. If the update includes both private and public AS numbers, the system treats it as an error. Use the no parameter with this command to revert to default. Command Syntax neighbor (A.B.C.D|X:X::X:X|WORD) remove-private-AS no neighbor (A.B.C.D|X:X::X:X|WORD) remove-private-AS Parameters A.B.C.D Address of the BGP neighbor in an IPv4 format X:X::X:X Address of the BGP neighbor in an IPv6 format WORD Name of the BGP peer group
WORD Name of the BGP peer group Note: For information about how to create peer groups, refer to the neighbor peer-group and neighbor remote-as commands. When this parameter is used with a command, the command applies to all peers in the group. Default Disabled Command Mode Router mode and Address Family mode Example #configure terminal (config)#router bgp 10 (config-router)#neighbor 10.10.0.63 remove-private-AS © 2015 IP Infusion Inc. Proprietary 137 BGP Commands neighbor restart-time
BGP Commands neighbor restart-time Use this command to set a different restart-time other than the global restart-time configured using the bgp graceful- restart command. This command takes precedence over the restart-time value specified using the bgp graceful-restart command. The restart-time value is the maximum time that a graceful-restart neighbor waits to come back up after a restart. The default value is 120 seconds. Make sure that the restart time specified using this command does not
exceed the stalepath-time specified in the Router mode. Use the no parameter with this command to restore the router to its default state. Command Syntax neighbor (A.B.C.D|X:X::X:X|WORD) restart-time <1-3600> no neighbor (A.B.C.D|X:X::X:X|WORD) restart-time <1-3600> Parameters A.B.C.D Address of the BGP neighbor in an IPv4 format X:X::X:X Address of the BGP neighbor in an IPv6 format WORD Name of the BGP peer group
WORD Name of the BGP peer group Note: For information about how to create peer groups, refer to the neighbor peer-group and neighbor remote-as commands. When this parameter is used with a command, the command applies to all peers in the group. <1-3600> Delay value Command Mode Router mode Example #configure terminal (config)#router bgp 10 (config-router)#neighbor 3.3.3.3 restart-time 45 138 © 2015 IP Infusion Inc. Proprietary BGP Commands neighbor route-map
BGP Commands neighbor route-map Use this command to apply a route map to incoming or outgoing routes. This command filters updates and modifies attributes. A route map is applied to inbound or outbound updates. Only the routes that pass the route map are sent or accepted in updates. Use the no parameter with this command to a route map. Command Syntax neighbor (A.B.C.D|X:X::X:X|WORD) route-map WORD (in|out) no neighbor (A.B.C.D|X:X::X:X|WORD) route-map WORD (in|out) Parameters
Parameters A.B.C.D Address of the BGP neighbor in an IPv4 format X:X::X:X Address of the BGP neighbor in an IPv6 format WORD Name of the BGP peer group Note: For information about how to create peer groups, refer to the neighbor peer-group and neighbor remote-as commands. When this parameter is used with a command, the command applies to all peers in the group. WORD Name of the route map in Apply access list to incoming advertisements out Apply access list to outgoing advertisements
out Apply access list to outgoing advertisements Command Mode Router mode and Address Family mode Examples The following example shows the configuration of the route map named rmap2 and then the use of this map name in the neighbor route-map command. #configure terminal (config)#route-map rmap2 permit 6 (config-route-map)#match origin incomplete (config-route-map)#set metric 100 (config-route-map)#exit (config)#router bgp 12 (config-router)#neighbor 10.10.10.10 route-map rmap2 in
© 2015 IP Infusion Inc. Proprietary 139 BGP Commands neighbor route-reflector-client Use this command to configure the router as a BGP route reflector and configure the specified neighbor as its client. Route reflectors are a solution for the explosion of iBGP peering within an autonomous system. By route reflection the number of iBGP peers within an AS is reduced. Use this command to configure the local router as the route reflector
and specify neighbors as its client. An AS can have more than one route reflector. One route reflector treats the other route reflector as another iBGP speaker. Use the no parameter with this command to indicate that the neighbor is not a client. Command Syntax neighbor (A.B.C.D|X:X::X:X|WORD) route-reflector-client no neighbor (A.B.C.D|X:X::X:X|WORD) route-reflector-client Parameters A.B.C.D Address of the BGP neighbor in an IPv4 format X:X::X:X Address of the BGP neighbor in an IPv6 format
WORD Name of the BGP peer group Note: For information about how to create peer groups, refer to the neighbor peer-group and neighbor remote-as commands. When this parameter is used with a command, the command applies to all peers in the group. Command Mode Router mode and Address Family mode Examples In the following configuration, Router1 is the route reflector for clients 3.3.3.3 and 2.2.2.2; it also has a non-client peer 6.6.6.6. #configure terminal (config)#router bgp 200
#configure terminal (config)#router bgp 200 (config-router)#neighbor 3.3.3.3 remote-as 200 (config-router)#neighbor 3.3.3.3 route-reflector-client (config-router)#neighbor 2.2.2.2 remote-as 200 (config-router)#neighbor 2.2.2.2 route-reflector-client (config-router)#neighbor 6.6.6.6 remote-as 200 140 © 2015 IP Infusion Inc. Proprietary BGP Commands neighbor route-server-client Use this command to configure a neighbor as the route server client.
Use the no parameter with this command to remove the configuration of a neighbor as route server client. Command Syntax neighbor (A.B.C.D|X:X::X:X|WORD) route-server-client no neighbor (A.B.C.D|X:X::X:X|WORD) route-server-client Parameters A.B.C.D Address of the BGP neighbor in an IPv4 format X:X::X:X Address of the BGP neighbor in an IPv6 format WORD Name of the BGP peer group Note: For information about how to create peer groups, refer to the neighbor peer-group and neighbor
remote-as commands. When this parameter is used with a command, the command applies to all peers in the group. Command Mode Router mode Example #configure terminal (config)#router bgp 10 (config-router)#neighbor 10.10.0.72 route-server-client #configure terminal (config)#router bgp 10 (config-router)#no neighbor 10.10.0.72 route-server-client © 2015 IP Infusion Inc. Proprietary 141 BGP Commands neighbor send-community
BGP Commands neighbor send-community Use this command to specify that a community attribute should be sent to a BGP neighbor. The community attribute groups destinations in a certain community and applies routing decisions according to those communities. On receiving community attributes, the router reannounces them to the neighbor. Only when the no parameter is used with this command the community attributes are not reannounced to the neighbor. By default, both standard and extended
community attributes are sent to a neighbor. To explicitly send only the standard or extended community attribute, run the bgp config-type command with the standard parameter, before running this command. Use the no parameter with this command to remove the entry. Use the extended and no parameters to remove extended communities. Specifying no other parameter with no removes standard communities only. See also neighbor send-community in Chapter4, BGP Virtual Private Network Commands.
Command Syntax neighbor (A.B.C.D|X:X::X:X|WORD) send-community neighbor (A.B.C.D|X:X::X:X|WORD) send-community (both|extended|standard) no neighbor (A.B.C.D|X:X::X:X|WORD) send-community no neighbor (A.B.C.D|X:X::X:X|WORD) send-community (both|extended|standard) Parameters A.B.C.D Address of the BGP neighbor in an IPv4 format X:X::X:X Address of the BGP neighbor in an IPv6 format WORD Name of the BGP peer group
WORD Name of the BGP peer group Note: For information about how to create peer groups, refer to the neighbor peer-group and neighbor remote-as commands. When this parameter is used with a command, the command applies to all peers in the group. both Send Standard and Extended Community attributes extended Send Extended Community attributes standard Send Standard Community attributes Default Both standard and extended community attributes are sent to a neighbor. Command Mode
Command Mode Router mode and Address Family mode Examples #configure terminal (config)#bgp config-type standard (config)#router bgp 10 (config-router)#neighbor 10.10.0.72 send-community extended 142 © 2015 IP Infusion Inc. Proprietary BGP Commands neighbor send-label explicit-null Use this command to exchange explicit –null label for the specific AF routes advertised between the neighbors. The
AFI, SAFI combination of [1, 4] is the associated capability parameter (labelled-unicast) and is enabled by this command. This command is viable only on the ipv4 unicast and ipv4 vrf address families. This command has to be configured on both the neighbors for the capability to be negotiated. Use the no parameter with this command to disable exchange of labels and remove the associated capability parameter. Command Syntax Neighbor x.x.x.x send-label explicit-null
Neighbor x.x.x.x send-label explicit-null No neighbor x.x.x.x send-label explicit-null Parameters x.x.x.x Address of the BGP neighbor in IPv4 format Default By default, only the IPV4 unicast capability is enabled. Only configuration of this command on both neighbors will enable the Labelled Unicast capability. Command mode Address family and router mode Example # configure terminal (config)# router bgp 100 (config-router)#neighbor 192.168.0.1 send-label explicit-null # configure terminal
# configure terminal (config)#router bgp 100 (config-router)#address-family ipv4 vrf VRF-1 (config-router-af)#neighbor 192.168.0.3 send-label explicit-null © 2015 IP Infusion Inc. Proprietary 143 BGP Commands neighbor shutdown This command disables a neighbor administratively. Use this command to terminate any active session for a specified neighbor and clear all related routing information. In
case a peer group is specified for shutdown, a large number of peering sessions could be terminated. The show ip bgp summary command displays the summary of BGP neighbors and their connections. Use the no parameter with this command to re-enable a neighbor. Command Syntax neighbor (A.B.C.D|X:X::X:X|WORD) shutdown no neighbor (A.B.C.D|X:X::X:X|WORD) shutdown Parameters A.B.C.D Address of the BGP neighbor in an IPv4 format X:X::X:X Address of the BGP neighbor in an IPv6 format
WORD Name of the BGP peer group Note: For information about how to create peer groups, refer to the neighbor peer-group and neighbor remote-as commands. When this parameter is used with a command, the command applies to all peers in the group. Command Mode Router mode and Address Family-vrf mode Examples #configure terminal (config)#router bgp 10 (config-router)#neighbor 10.10.0.72 shutdown (config)#router bgp 100 (config-router)#address-family ipv6 vrf VRF_A
(config-router)#address-family ipv6 vrf VRF_A (config-router-af)#neighbor 3ffe:15:15:15:15::0 shutdown 144 © 2015 IP Infusion Inc. Proprietary BGP Commands neighbor soft-reconfiguration inbound Use this command to store updates for inbound soft reconfiguration. Soft-reconfiguration may be used in lieu of BGP route refresh capability. Using this command enables local storage of all the received routes and their attributes. This
requires additional memory. When a soft reset (inbound) is done on this neighbor, the locally stored routes are re- processed according to the inbound policy. The BGP neighbor connection is not affected. Use the no parameter with this command to disable this function. Command Syntax neighbor (A.B.C.D|X:X::X:X|WORD) soft-reconfiguration inbound no neighbor (A.B.C.D|X:X::X:X|WORD) soft-reconfiguration inbound Parameters A.B.C.D Address of the BGP neighbor in an IPv4 format
X:X::X:X Address of the BGP neighbor in an IPv6 format WORD Name of the BGP peer group Note: For information about how to create peer groups, refer to the neighbor peer-group and neighbor remote-as commands. When this parameter is used with a command, the command applies to all peers in the group. Command Mode Router mode and Address Family mode Examples #configure terminal (config)#router bgp 12 (config-router)#neighbor 10.10.10.10 soft-reconfiguration inbound
© 2015 IP Infusion Inc. Proprietary 145 BGP Commands neighbor strict-capability-match Use this command to close the BGP connection if capability value does not match the remote peer. Use the no parameter with this command to disable this function. Command Syntax neighbor (A.B.C.D|X:X::X:X|WORD) strict-capability-match no neighbor (A.B.C.D|X:X::X:X|WORD) strict-capability-match Parameters A.B.C.D Address of the BGP neighbor in an IPv4 format X:X::X:X Address of the BGP neighbor in an IPv6 format
WORD Name of the BGP peer group Note: For information about how to create peer groups, refer to the neighbor peer-group and neighbor remote-as commands. When this parameter is used with a command, the command applies to all peers in the group. Command Mode Router mode Examples #configure terminal (config)#router bgp 12 (config-router)#neighbor 10.10.10.10 strict-capability-match 146 © 2015 IP Infusion Inc. Proprietary BGP Commands neighbor timers
BGP Commands neighbor timers Use this command to set the timers for a specific BGP neighbor. Keepalive messages are sent by a router to inform another router that the BGP connection between the two is still active. The keepalive interval is the period of time between each keepalive message sent by the router. The holdtime interval is the time the router waits to receive a keepalive message and if it does not receive a message for this period it declares the neighbor dead.
Use the no parameter with this command to clear the timers for a BGP neighbor. Command Syntax neighbor (A.B.C.D|X:X::X:X|WORD) timers <0-65535> <0-65535> neighbor (A.B.C.D|X:X::X:X|WORD) timers connect <1-65535> no neighbor (A.B.C.D|X:X::X:X|WORD) timers no neighbor (A.B.C.D|X:X::X:X|WORD) timers connect Parameters A.B.C.D Address of the BGP neighbor in an IPv4 format X:X::X:X Address of the BGP neighbor in an IPv6 format WORD Name of the BGP peer group
WORD Name of the BGP peer group Note: For information about how to create peer groups, refer to the neighbor peer-group and neighbor remote-as commands. When this parameter is used with a command, the command applies to all peers in the group. <0-65535> Keepalive interval value <0-65535> Holdtime value connect BGP connect timer <1-65535> Connect timer Defaults The default keepalive timer value is 180 seconds The configured holdtime value should be atleast 3 times the keepalive time Command Mode
Command Mode Router mode Examples #configure terminal (config)#router bgp 12 (config-router)#neighbor 10.10.10.10 timers 60 230 (config-router)#neighbor 10.10.10.10 timers connect 10 (config-router)#no neighbor 10.10.10.10 timers © 2015 IP Infusion Inc. Proprietary 147 BGP Commands neighbor transparent-as Use this command to specify not to append your AS path number even if the peer is an eBGP peer. Command Syntax neighbor (A.B.C.D|X:X::X:X|WORD) transparent-as Parameters Parameters
Parameters Parameters A.B.C.D Address of the BGP neighbor in an IPv4 format X:X::X:X Address of the BGP neighbor in an IPv6 format WORD Name of the BGP peer group Note: For information about how to create peer groups, refer to the neighbor peer-group and neighbor remote-as commands. When this parameter is used with a command, the command applies to all peers in the group. Command Mode Router mode Examples #configure terminal (config)#router bgp 12
#configure terminal (config)#router bgp 12 (config-router)#neighbor 10.10.7.1 transparent-as 148 © 2015 IP Infusion Inc. Proprietary BGP Commands neighbor transparent-nexthop Use this command to keep the nexthop value of the route even if the peer is an eBGP peer. Command Syntax neighbor (A.B.C.D|X:X::X:X|WORD) transparent-nexthop Parameters A.B.C.D Address of the BGP neighbor in an IPv4 format X:X::X:X Address of the BGP neighbor in an IPv6 format WORD Name of the BGP peer group
WORD Name of the BGP peer group Note: For information about how to create peer groups, refer to the neighbor peer-group and neighbor remote-as commands. When this parameter is used with a command, the command applies to all peers in the group. Command Mode Router mode Examples #configure terminal (config)#router bgp 12 (config-router)#neighbor 10.10.10.10 transparent-nexthop © 2015 IP Infusion Inc. Proprietary 149 BGP Commands neighbor unsuppress-map
BGP Commands neighbor unsuppress-map Use this command to selectively leak more-specific routes to a particular neighbor. When the aggregate-address command is used with the summary-only option, the more-specific routes of the aggregate are suppressed to all neighbors. Use the unsuppress-map command to selectively leak more-specific routes to a particular neighbor. Use the no parameter with this command to restore the setting to the default level. Command Syntax
Command Syntax neighbor (A.B.C.D|X:X::X:X|WORD) unsuppress-map WORD no neighbor (A.B.C.D|X:X::X:X|WORD) unsuppress-map WORD Parameters A.B.C.D Address of the BGP neighbor in an IPv4 format X:X::X:X Address of the BGP neighbor in an IPv6 format WORD Name of the BGP peer group Note: For information about how to create peer groups, refer to the neighbor peer-group and neighbor remote-as commands. When this parameter is used with a command, the command applies to all peers in the group.
peers in the group. WORD Name of the route map used to select routes to unsuppress Command Mode Router mode and Address Family mode Example #configure terminal (config)#router bgp 10 (config-router)#neighbor 10.10.0.73 unsuppress-map mymap #configure terminal (config)#router bgp 10 (config-router)#address-family ipv4 unicast (config-router-af)#neighbor 10.10.0.70 unsuppress-map mymap 150 © 2015 IP Infusion Inc. Proprietary BGP Commands neighbor update-source
BGP Commands neighbor update-source This command allows internal BGP sessions to use any operational interface for TCP connections. Use this command in conjunction with any specified interface on the router. The loopback interface is the interface that is most commonly used with this command. The use of loopback interface eliminates a dependency and BGP does not have to rely on the availability of a particular interface for making TCP connections.
Use the no parameter with this command to restore the interface assignment to the closest interface. Command Syntax neighbor (A.B.C.D|X:X::X:X|WORD) update-source WORD no neighbor (A.B.C.D|X:X::X:X|WORD) update-source Parameters A.B.C.D Address of the BGP neighbor in an IPv4 format X:X::X:X Address of the BGP neighbor in an IPv6 format WORD Name of the BGP peer group Note: For information about how to create peer groups, refer to the neighbor peer-group and neighbor
remote-as commands. When this parameter is used with a command, the command applies to all peers in the group. WORD Loopback interface name Command Mode Router mode Examples #configure terminal (config)#router bgp 10 (config-router)#neighbor 10.10.0.72 update-source myif © 2015 IP Infusion Inc. Proprietary 151 BGP Commands neighbor version Use this command to configure ZebOS-XP to accept only a particular BGP version. By default, the system uses BGP
version 4 and on request dynamically negotiates down to version 2. Using this command disables the router’s version- negotiation capability and forces the router to use only a specified version with the neighbor. Use the no parameter with this command to use the default version level of a neighbor. Command Syntax neighbor (A.B.C.D|X:X::X:X|WORD) version (4) no neighbor (A.B.C.D|X:X::X:X|WORD) version Parameters A.B.C.D Address of the BGP neighbor in an IPv4 format
X:X::X:X Address of the BGP neighbor in an IPv6 format WORD Name of the BGP peer group Note: For information about how to create peer groups, refer to the neighbor peer-group and neighbor remote-as commands. When this parameter is used with a command, the command applies to all peers in the group. 4 BGP version number Command Mode Router mode Examples #configure terminal (config)#router bgp 12 (config-router)#neighbor 10.10.10.10 version 4 (config)#router bgp 12
(config)#router bgp 12 (config-router)#no neighbor 10.10.10.10 version 152 © 2015 IP Infusion Inc. Proprietary BGP Commands neighbor weight Use this command to specify a weight value, per address-family, to all routes learned from a neighbor. The route with the highest weight gets preference when the same prefix is learned from more than one peer. Unlike the local- preference attribute, the weight attribute is relevant only to the local router. The weights assigned using the set
weight command override the weights assigned using this command. Use this command in Router mode to specify a weight value for all address families. Use this command in Address Family mode to specify a weight value per IPv4/IPv6/VPNv4/6PE address family, When the weight is set for a peer group, all members of the peer group get the same weight. This command can also be used to assign a different weight to an individual peer-group member. When an individually-configured weight of a
peer-group member is removed, its weight is reset to its peer group’s weight. Use the no parameter with this command to remove a weight assignment. Command Syntax neighbor (A.B.C.D|X:X::X:X|WORD) weight <0-65535> no neighbor (A.B.C.D|X:X::X:X|WORD) weight no neighbor (A.B.C.D|X:X::X:X|WORD) weight <0-65535> Parameters A.B.C.D Address of the BGP neighbor in an IPv4 format X:X::X:X Address of the BGP neighbor in an IPv6 format WORD Name of the BGP peer group
WORD Name of the BGP peer group Note: For information about how to create peer groups, refer to the neighbor peer-group and neighbor remote-as commands. When this parameter is used with a command, the command applies to all peers in the group. <0-65535> Weight value Command Mode Router mode, Address-Family mode Examples #configure terminal (config)#router bgp 12 (config-router)#neighbor 10.10.10.10 weight 60 (config-router)#no neighbor 10.10.10.10 weight 60
(config-router)#no neighbor 10.10.10.10 weight 60 © 2015 IP Infusion Inc. Proprietary 153 BGP Commands neighbor WORD peer-group Use this command to create a peer group. Use the no parameter with this command to disable this function. Command Syntax neighbor WORD peer-group no neighbor WORD peer-group Parameters WORD Name of BGP peer group Command Mode Router mode Example This example shows how to create a peer group named group1. #configure terminal (config)#router bgp 10
#configure terminal (config)#router bgp 10 (config-router)#neighbor group1 peer-group 154 © 2015 IP Infusion Inc. Proprietary BGP Commands network Use this command to specify the networks to be advertised by the BGP routing process. A unicast network address without a mask is accepted if it falls into the natural boundary of its class. A class-boundary mask is derived if the address matches its natural class-boundary.
address matches its natural class-boundary. Use the backdoor parameter to specify a backdoor route to a BGP border router that will provide better information about the network. For data to be advertised by BGP, its routing table must include a route to the specified network. This command specifies the networks to be advertised. The network command works if the network being advertised is known to the router.
known to the router. The backdoor parameter enables a route to be the preferred route even if it has a greater distance. A network that is specified as a backdoor network is dynamically assigned an administrative distance of 200 ensuring that IGP learned routes are preferred. If a backdoor network is not sourced by the local router, the network is learned from the external routers. If the route is learned from eBGP for a backdoor network, the distance is set to 20 or 200.
Use the no form of this command to remove a network route entry. Command Syntax network A.B.C.D (backdoor|) network A.B.C.D/M (backdoor|) network A.B.C.D mask A.B.C.D (backdoor|) network A.B.C.D mask A.B.C.D route-map WORD (backdoor|) network A.B.C.D route-map WORD (backdoor|) network A.B.C.D/M route-map WORD (backdoor|) no network A.B.C.D (backdoor|) no network A.B.C.D/M (backdoor|) no network A.B.C.D mask A.B.C.D (backdoor|) no network A.B.C.D mask A.B.C.D route-map WORD (backdoor|)
no network A.B.C.D route-map WORD (backdoor|) no network A.B.C.D/M route-map WORD (backdoor|) Parameters A.B.C.D IP prefix <network>, for example, 35.0.0.0 A.B.C.D/M IP prefix <network>/<length>, for example., 35.0.0.0/8 backdoor BGP backdoor route routemap Route map used to modify the attributes WORD Name of the route map mask Network mask, for example, 255.255.0.0 A.B.C.D Network mask, e.g., 255.255.0.0 Command Mode Router mode and Address-family mode © 2015 IP Infusion Inc. Proprietary 155
© 2015 IP Infusion Inc. Proprietary 155 BGP Commands Examples The following example illustrates a Class-A address configured as a network route. The natural Class-A network prefix mask length of 8 is internally derived, that is, 2.0.0.0/8. (config)#router bgp 1 (config-router)#network 2.0.0.0 156 © 2015 IP Infusion Inc. Proprietary BGP Commands network synchronization Use this command to enable IGP synchronization for BGP static network routes.
Use this no parameter with this command to disable synchronization of BGP static routes. Command Syntax network synchronization no network synchronization Parameters None Command Mode Router mode and Address Family mode Examples The following example enables IGP synchronization of BGP static network routes in the router configuration mode. #configure terminal (config)#router bgp 11 (config-router)#network synchronization
(config-router)#network synchronization The following example enables IGP synchronization of BGP static network routes in the IPv6 unicast address-family mode. #configure terminal (config)#router bgp 11 (config)#address-family ipv6 unicast (config-af)#network synchronization © 2015 IP Infusion Inc. Proprietary 157 BGP Commands redistribute Use this command to inject routes from one routing process into another. Redistribution is used by routing protocols to
advertise routes that are learned by some other means, such as by another routing protocol or by static routes. Since all internal routes are dumped into BGP, careful filtering is applied to make sure that only routes to be advertised reach the internet, not everything. This command allows redistribution by injecting prefixes from one routing protocol into another routing protocol. Use the no parameter with this command to disable this function. Command Syntax
Command Syntax redistribute [connected|isis|kernel|ospf6|rip|static] redistribute [connected|isis|kernel|ospf6|rip|static] route-map WORD no redistribute [connected|isis|kernel|ospf6|rip|static] no redistribute [connected|isis|kernel|ospf6|rip|static] route-map no redistribute [connected|isis|kernel|ospf6|rip|static] route-map WORD Parameters connected Redistribute connected routes isis Redistribute connected ISO IS-IS routes kernel Redistribute connected kernel routes
kernel Redistribute connected kernel routes ospf6 Redistribute OSPFv2 or OSPFv3 routes rip Redistribute RIP routes static Redistribute static routes route-map Route map reference WORD Route map entries Command Mode Router mode and Address Family-vrf mode Examples The following example shows the configuration of the route-map name rmap1 and then the use of this map name in the redistribute route-map command. #configure terminal (config)#route-map rmap1 permit 1
(config)#route-map rmap1 permit 1 (config-route-map)#match origin incomplete (config-route-map)#set metric 100 (config-route-map)#exit (config)#router bgp 12 (config-router)#redistribute ospf route-map rmap1 (config)#router bgp 100 (config-router)#address-family ipv4 vrf VRF_A (config-router-af)#redistribute static (config)#router bgp 100 (config-router)#address-family ipv6 vrf VRF_A 158 © 2015 IP Infusion Inc. Proprietary BGP Commands (config-router-af)#redistribute static
(config-router-af)#redistribute static © 2015 IP Infusion Inc. Proprietary 159 BGP Commands restart bgp graceful Use this command to enable a BGP-speaker router for graceful restart. This command stops the whole BGP process and makes ZebOS-XP retain the BGP routes and mark them as stale. Receiving BGP speakers, retain and mark as stale all BGP routes received from the restarting speaker for all address families received in the Graceful Restart Capability exchange. Command Syntax
Capability exchange. Command Syntax restart bgp graceful Parameters None Command Mode Privileged Exec mode Examples #restart bgp graceful 160 © 2015 IP Infusion Inc. Proprietary BGP Commands router bgp Use this command to start a BGP process. Use the no parameter with this command to disable an existing routing process. Command Syntax router bgp <1-65535> router bgp <1-4294967295> no router bgp <1-65535> no router bgp <1-4294967295> Parameters
no router bgp <1-4294967295> Parameters <1-65535> Associate the routing process with this autonomous system number <1-4294967295> Associate the routing process with this autonomous system number Command Mode Configure mode Examples #configure terminal (config)#router bgp 12 (config-router)# © 2015 IP Infusion Inc. Proprietary 161 BGP Commands router bgp view Use this command to configure a BGP routing view. Use the no parameter with this command to disable a routing view. Command Syntax
Command Syntax router bgp <1-65535> view WORD router bgp <1-4294967295> view WORD no router bgp <1-65535> view WORD no router bgp <1-4294967295> view WORD Parameters <1-65535> Autonomous System number <1-4294967295> Autonomous System number WORD BGP view name Command Mode Configure mode Examples #configure terminal (config)#router bgp 12 view 1 (config-router)# 162 © 2015 IP Infusion Inc. Proprietary BGP Commands snmp restart bgp Use this command to restart SNMP in Border Gateway Protocol (BGP)
Command Syntax snmp restart bgp Parameters None Command Mode Configure mode Examples #configure terminal (config)#snmp restart bgp © 2015 IP Infusion Inc. Proprietary 163 BGP Commands synchronization Use this command to enable IGP synchronization of Internal BGP (iBGP) learned routes with the Internal Gateway Protocol (IGP) system in the router configuration mode or in the address-family configuration mode.
Synchronization is used when a BGP router should not advertise routes learned from iBGP neighbors, unless those routes are also present in an IGP (for example, OSPF). Synchronization may be enabled when all the routers in an autonomous system do not speak BGP, and the autonomous system is a transit for other autonomous systems. The no synchronization command is used when BGP router can advertise routes learned from its iBGP neighbors without waiting for the IGP reachability to be present.
Command Syntax synchronization no synchronization Parameters None Default IGP synchronization is disabled. Command Mode Router mode and Address Family modes Examples The following example enables IGP synchronization of iBGP routes in Router mode. #configure terminal (config)#router bgp 11 (config-router)#synchronization The following example enables IGP synchronization of iBGP routes in the IPv6-Unicast address family. #configure terminal (config)#router bgp 11
#configure terminal (config)#router bgp 11 (config-router)#address-family ipv6 unicast (config-af)#synchronization 164 © 2015 IP Infusion Inc. Proprietary BGP Commands table-map Use this command to enable or disable suppression/modification of incoming BGP updates to IP RIB/FIB table installation. In a dedicated route reflector, all the routes it receives may not be required to be stored or only few selected routes need to be stored, as it may not lie in the data path.
Table maps are particularly useful to attain this restriction. Table-map command can be used in two ways: • When a simple table-map command is given, the route map referenced in the table-map command shall be used to set certain properties (such as the traffic index) of the routes for installation into the RIB. The route is always downloaded, regardless of whether it is permitted or denied by the route map.
• When the option ‘filter’ is given in the table map command, the route map referenced is used to control whether a BGP route is to be downloaded to the IP RIB (hence the filter). A BGP route is not downloaded to the RIB if it is denied by the route map. Use this command in Router mode to set the table map rule for all address families. Use this command in Address Family mode to set the table map rule per an IPv4 or IPv6 family.
Use the no parameter with this command to remove the table-map rule. Command Syntax table-map WORD (|filter) Parameter WORD Specify the route-map name to apply. filter Filer the routes. If present, the incoming routes are pruned as per the rule specified in route-map-name. If not, it is used to alter the incoming packet information. Default All BGP routes will be downloaded to IP RIB. Command Mode Router mode, Address Family IPv4 mode, and Address Family IPv6 mode Examples
Examples The following example shows how to set the table-map command without filter for BGP for all address families. #configure terminal (config)#router bgp 100 (config-router)#table-map abc The following example shows how to set the table-map command with filter for BGP for all address families. #configure terminal (config)#router bgp 100 (config-router)#table-map abc filter The following example shows how to set the table-map command without filter for BGP for an IPv6 address family.
(config)#router bgp 100 (config-router)#address family ipv6 (config-router-af)# table-map abc © 2015 IP Infusion Inc. Proprietary 165 BGP Commands The following example shows how to set the table-map command with filter for BGP for an IPv6 address family. (config)#router bgp 100 (config-router)#address family ipv6 (config-router-af)# table-map abc filter 166 © 2015 IP Infusion Inc. Proprietary BGP Commands timers bgp
BGP Commands timers bgp Use this command to globally set or reset the keepalive and holdtime values for all the neighbors. Use the no parameter with this command to reset timers to default value. Command Syntax timers bgp <0-65535> <0-65535> no timers bgp no timers bgp <0-65535> <0-65535> Parameters <0-65535> Frequency with which keepalive messages are sent to the neighbors <0-65535> Interval after which a neighbor is considered dead if keepalive messages are not received Default
Default The default keepalive timer value is 30 seconds. The default holdtime value is 90 seconds. Command Mode Router mode Examples #configure terminal (config)#router bgp 10 (config-router)#timers bgp 40 120 © 2015 IP Infusion Inc. Proprietary 167 BGP Commands undebug bgp Use this command to disable BGP debugging options. Command Syntax undebug bgp (all|bfd|dampening|events|filters|fsm|keepalives|mpls|nht|nsm|updates) Parameters all Disable all debugging for BGP
Parameters all Disable all debugging for BGP bfd Disable debugging for BGP Bidirectional Forwarding Detection (BFD) dampening Disable debugging for BGP dampening events Disable debugging for BGP events filters Disable debugging for BGP filters fsm Disable debugging for BGP Finite State Machine (FSM) keepalives Disable debugging for BGP keepalives mpls Disable debugging for BGP MPLS nht Disable debugging for BGP NHT messages nsm Disable debugging for NSM messages
nsm Disable debugging for NSM messages updates Disable debugging for BGP updates Command Mode Privileged Exec mode Examples #undebug bgp events 168 © 2015 IP Infusion Inc. Proprietary BGP4+ Commands CHAPTER 3 This chapter describes the BGP4+ configuration commands. • address-family ipv6 (see address-family in Chapter2, BGP Commands) • aggregate-address X:X::X:X/M • bgp g-shut (see bgp g-shut in n Chapter2, BGP Commands) • clear bgp * ipv6 • clear bgp ipv6 (A.B.C.D|X:X::X:X)
• clear bgp ipv6 (A.B.C.D|X:X::X:X) • clear bgp ipv6 <1-4294967295> • clear bgp ipv6 external • clear bgp ipv6 peer-group • clear bgp ipv6 unicast dampening • clear bgp ipv6 unicast flap-statistics • clear ip bpg ipv6 unicast table-map • clear ipv6 bgp * vrf • clear ipv6 bgp X:X::X:X vrf • neighbor activate (see neighbor activate in Chapter2, BGP Commands) • neighbor attribute-unchanged (see neighbor attribute-unchanged in Chapter2, BGP Commands)
• neighbor capability dynamic (see neighbor capability dynamic in Chapter2, BGP Commands) • neighbor capability route-refresh (see neighbor capability route-refresh in Chapter2, BGP Commands) • neighbor default-originate (see neighbor default-originate in Chapter2, BGP Commands) • neighbor distribute-list (see neighbor distribute-list in Chapter2, BGP Commands) • neighbor filter-list (see neighbor filter-list in Chapter2, BGP Commands)
• neighbor maximum-prefix (see neighbor maximum-prefix in Chapter2, BGP Commands) • neighbor next-hop-self (see neighbor next-hop-self in Chapter2, BGP Commands) • neighbor peer-group (see neighbor peer-group in Chapter2, BGP Commands) • neighbor prefix-list (see neighbor prefix-list in Chapter2, BGP Commands) • neighbor remove-private-AS (see neighbor remove-private-AS in Chapter2, BGP Commands) • neighbor route-map (see neighbor route-map in Chapter2, BGP Commands)
• neighbor route-reflector-client (see neighbor route-reflector-client in Chapter2, BGP Commands) • neighbor send-community (see neighbor send-community in Chapter2, BGP Commands) • neighbor soft-reconfiguration inbound (see neighbor soft-reconfiguration inbound in Chapter2, BGP Commands) • neighbor unsuppress-map (see neighbor unsuppress-map in Chapter2, BGP Commands) • network X:X::X:X • redistribute (see redistribute in Chapter2, BGP Commands) © 2015 IP Infusion Inc. Proprietary 169
© 2015 IP Infusion Inc. Proprietary 169 BGP4+ Commands aggregate-address X:X::X:X/M Use this command to configure BGP aggregate entries. Aggregates are used to minimize the size of routing tables. Aggregation combines the characteristics of several different routes and advertises a single route. This command creates an aggregate entry in the BGP routing table if any more-specific BGP routes are available in the specified range. Using the summary-only parameter advertises the
prefix only, suppressing more-specific routes to neighbors. The as-set parameter creates an aggregate entry advertising the path for this route, consisting of all elements contained in all paths being summarized. Use the as-set parameter to reduce the size of path information by listing the AS number only once, even if it was included in multiple paths that were aggregated. The as-set parameter is useful when aggregation of information results in an incomplete path information.
Use the no parameter with this command to disable this function. Command Syntax aggregate-address X:X::X:X/M aggregate-address X:X::X:X/M as-set aggregate-address X:X::X:X/M as-set summary-only aggregate-address X:X::X:X/M summary-only aggregate-address X:X::X:X/M summary-only as-set no aggregate-address X:X::X:X/M no aggregate-address X:X::X:X/M as-set no aggregate-address X:X::X:X/M as-set summary-only no aggregate-address X:X::X:X/M summary-only
no aggregate-address X:X::X:X/M summary-only no aggregate-address X:X::X:X/M summary-only as-set Parameters X:X::X:X/M Aggregate IPv6 prefix as-set Generate AS set path information summary-only Filter more specific routes from updates Command Mode Address Family mode Default Disabled Examples #configure terminal (config)#router bgp 100 (config-router)#neighbor 2.2.2.2 remote-as 100 (config-router)#neighbor 3.3.3.3 remote-as 200 (config-router)#address-family ipv6
(config-router)#address-family ipv6 (config-router-af)#aggregate-address 3ffe::/32 as-set summary-only 170 © 2015 IP Infusion Inc. Proprietary BGP4+ Commands clear bgp * ipv6 Use this command to reset the BGP IPv6 connection for all peers. Command Syntax clear bgp ipv6 * clear bgp ipv6 * in clear bgp ipv6 * in prefix-filter clear bgp ipv6 * out clear bgp ipv6 * soft clear bgp ipv6 * soft in clear bgp ipv6 * soft out clear ip bgp * ipv6 unicast in clear ip bgp * ipv6 unicast out
clear ip bgp * ipv6 unicast out clear ip bgp * ipv6 unicast soft clear ip bgp * ipv6 unicast soft in clear ip bgp * ipv6 unicast soft out Parameters in Clear incoming advertised routes. prefix-filter Push out prefix-list ORF and do inbound soft reconfig. out Clear outgoing advertised routes. soft Clear both incoming and outgoing routes. in Soft reconfig inbound update. out Soft reconfig outbound update. unicast Unicast prefixes in Clear incoming advertised routes.
in Clear incoming advertised routes. out Soft reconfig outbound update soft Clear both incoming and outgoing routes in Soft reconfig inbound update out Clear outgoing advertised routes Command Mode Privileged Exec mode Examples #clear ip bgp * ipv6 unicast soft out © 2015 IP Infusion Inc. Proprietary 171 BGP4+ Commands clear bgp ipv6 (A.B.C.D|X:X::X:X) Use this command to reset the BGP neighbor addresses (IPv4 or IPv6) for IPv6 peers. Command Syntax clear bgp ipv6 (A.B.C.D|X:X::X:X)
Command Syntax clear bgp ipv6 (A.B.C.D|X:X::X:X) clear bgp ipv6 (A.B.C.D|X:X::X:X) in clear bgp ipv6 (A.B.C.D|X:X::X:X) in prefix-filter clear bgp ipv6 (A.B.C.D|X:X::X:X) out clear bgp ipv6 (A.B.C.D|X:X::X:X) soft clear bgp ipv6 (A.B.C.D|X:X::X:X) soft in clear bgp ipv6 (A.B.C.D|X:X::X:X) soft out Parameters in Clear incoming advertised routes prefix-filter Push out prefix-list ORF and do inbound soft reconfig out Clear outgoing advertised routes soft Clear both incoming and outgoing routes
soft Clear both incoming and outgoing routes in Soft reconfig inbound update out Soft reconfig outbound update Command Mode Privileged Exec mode Example #clear bgp ipv6 10.5.2.7 172 © 2015 IP Infusion Inc. Proprietary BGP4+ Commands clear bgp ipv6 <1-4294967295> Use this command to reset the BGP connection with a specified AS (Autonomous System) number for IPv6 peers. Command Syntax clear bgp ipv6 <1-4294967295> clear bgp ipv6 <1-4294967295> in clear bgp ipv6 <1-4294967295> in prefix-filter
clear bgp ipv6 <1-4294967295> in prefix-filter clear bgp ipv6 <1-4294967295> out clear bgp ipv6 <1-4294967295> soft clear bgp ipv6 <1-4294967295> soft in clear bgp ipv6 <1-4294967295> soft out Parameters in Clear incoming advertised routes. prefix-filter Push out prefix-list ORF and do inbound soft reconfig. out Clear outgoing advertised routes. soft Clear both incoming and outgoing routes. in Soft reconfig inbound update. out Soft reconfig outbound update. Command Mode Privileged Exec mode
Command Mode Privileged Exec mode Example #clear bgp ipv6 12345 © 2015 IP Infusion Inc. Proprietary 173 BGP4+ Commands clear bgp ipv6 external Use this command to reset the BGP connection for all external IPv6 peers or for a specified external IPv6 peer. Command Syntax clear bgp ipv6 external clear bgp ipv6 external in prefix-filter clear bgp ipv6 external soft clear bgp ipv6 external soft in clear bgp ipv6 external soft out clear bgp ipv6 external WORD in clear bgp ipv6 external WORD out
clear bgp ipv6 external WORD out Parameters in Clear incoming advertised routes prefix-filter Push out prefix-list ORF and do inbound soft reconfig soft Clear both incoming and outgoing routes in Soft reconfig inbound update out Soft reconfig outbound update WORD Name of external IPv6 peer in Soft reconfig inbound update out Soft reconfig outbound update Command Mode Privileged Exec mode Example #clear bgp ipv6 external soft in 174 © 2015 IP Infusion Inc. Proprietary BGP4+ Commands
BGP4+ Commands clear bgp ipv6 peer-group Use this command to reset the BGP connection for all members of a peer group. Command Syntax clear bgp ipv6 peer-group WORD clear bgp ipv6 peer-group WORD in clear bgp ipv6 peer-group WORD in prefix-filter clear bgp ipv6 peer-group WORD out clear bgp ipv6 peer-group WORD soft clear bgp ipv6 peer-group WORD soft in clear bgp ipv6 peer-group WORD soft out Parameters in Clear incoming advertised routes prefix-filter
in Clear incoming advertised routes prefix-filter Push out prefix-list ORF and do inbound soft reconfig out Clear outgoing advertised routes soft Clear both incoming and outgoing routes in Soft reconfig inbound update out Soft reconfig outbound update WORD BGP peer-group name Command Mode Privileged Exec mode Examples #clear ip bgp peer-group P1 © 2015 IP Infusion Inc. Proprietary 175 BGP4+ Commands clear bgp ipv6 unicast dampening Use this command to reset IPv6 BGP dampening information.
Command Syntax clear bgp ipv6 unicast dampening clear bgp ipv6 unicast dampening X:X::X:X clear bgp ipv6 unicast dampening X:X::X:X/M clear ip bgp ipv6 unicast dampening clear ip bgp ipv6 unicast dampening X:X::X:X clear ip bgp ipv6 unicast dampening X:X::X:X/M Parameters unicast Unicast prefixes X:X::X:X IP prefix (network) for example, 2003:: X:X::X:X/M IP prefix (network and length) for example, 2003::/16 Command Mode Privileged Exec mode Examples
Command Mode Privileged Exec mode Examples #clear ip bgp ipv6 unicast dampening 1:2::3:4/7 176 © 2015 IP Infusion Inc. Proprietary BGP4+ Commands clear bgp ipv6 unicast flap-statistics Use this command to reset IPv6 BGP route flap statistics. Command Syntax clear bgp ipv6 unicast flap-statistics clear bgp ipv6 unicast flap-statistics X:X::X:X clear bgp ipv6 unicast flap-statistics X:X::X:X/M clear ip bgp ipv6 unicast flap-statistics clear ip bgp ipv6 unicast flap-statistics X:X::X:X
clear ip bgp ipv6 unicast flap-statistics X:X::X:X/M Parameters X:X::X:X IP prefix (network) for example, 35.0.0.0 X:X::X:X/M IP prefix (network and length) for example, 35.0.0.0/8 Command Mode Privileged Exec mode Examples #clear ip bgp ipv6 unicast flap-statistics 1:2::3:4/7 © 2015 IP Infusion Inc. Proprietary 177 BGP4+ Commands clear ip bpg ipv6 unicast table-map Use this command to apply the modified table map or route map rules to the BGP routes in the existing IP routing table.
Command Syntax clear ip bpg ipv6 unicast table-map (vrf (VRFNAME|all|default)) Parameters vrf Select a VPN Routing/Forwarding Instance. VRFNAME Specify a VPN Routing/Forwarding instance name. all Select all VRFs. default Select default VRFs. Command Mode Privileged Exec mode Examples #clear ip bgp ipv6 unicast table-map vrf all 178 © 2015 IP Infusion Inc. Proprietary BGP4+ Commands clear ipv6 bgp * vrf
BGP4+ Commands clear ipv6 bgp * vrf Use this command to reset an IPv6 BGP connection for all virtual routing forwarding addresses. Command Syntax clear ipv6 bgp * vrf WORD clear ipv6 bgp * vrf WORD in clear ipv6 bgp * vrf WORD out clear ipv6 bgp * vrf WORD soft clear ipv6 bgp * vrf WORD soft in clear ipv6 bgp * vrf WORD soft out Parameters in Clear incoming advertised routes out Clear outgoing advertised routes soft Clear both incoming and outgoing routes in Soft reconfig inbound update
in Soft reconfig inbound update out Soft reconfig outbound update WORD BGP peer-group name Command Mode Privileged Exec mode Examples #clear ipv6 bgp * vrf BGPpeer7 © 2015 IP Infusion Inc. Proprietary 179 BGP4+ Commands clear ipv6 bgp X:X::X:X vrf Use this command to reset the specified VPNv6 Routing/Forwarding (VRF) instance for BGP connections. If the neighbor address is specified with this command, it clears the specified connection. If no address is specified, this
command clears all the BGP routes. Command Syntax clear ipv6 bgp (X:X::X:X) vrf WORD clear ipv6 bgp X:X::X:X vrf WORD in clear ipv6 bgp X:X::X:X vrf WORD out clear ipv6 bgp X:X::X:X vrf WORD soft in clear ipv6 bgp X:X::X:X vrf WORD soft out Parameters vrf Specify a VPN routing/forwarding instance for IPv6 WORD VPN routing/forwarding instance name in Clear incoming advertised routes out Clear outgoing advertised routes soft Clear both incoming and outgoing routes in Soft reconfig inbound update
in Soft reconfig inbound update out Soft reconfig outbound update Command Mode Privileged Exec mode Examples #clear ipv6 bgp vrf 10:10::0:12 vrf vrfname 180 © 2015 IP Infusion Inc. Proprietary BGP4+ Commands network X:X::X:X Use this command to specify the networks to be advertised by the BGP routing process. A unicast network address without a mask is accepted if it falls into the natural boundary of its class. A class-boundary mask is derived if the address matches its natural class-boundary.
address matches its natural class-boundary. Use the backdoor parameter to specify a backdoor route to a BGP border router that will provide better information about the network. For data to be advertised by BGP, its routing table must include a route to the specified network. This command specifies the networks to be advertised. The network command works if the network being advertised is known to the router.
known to the router. The backdoor parameter enables a route to be the preferred route even if it has a greater distance. A network that is specified as a backdoor network is dynamically assigned an administrative distance of 200 ensuring that IGP learned routes are preferred. If a backdoor network is not sourced by the local router, the network is learned from the external routers. If the route is learned from eBGP for a backdoor network, the distance is set to 20 or 200.
Use the no parameter with this command to remove an entry. Command Syntax network X:X::X:X/M network X:X::X:X/M backdoor network X:X::X:X/M route-map WORD (backdoor|) no network X:X::X:X/M no network X:X::X:X/M backdoor no network X:X::X:X/M route-map WORD (backdoor|) Parameters X:X::X:X IPv6 prefix <network>, for example, 3ffe:: backdoor Specify a BGP backdoor route WORD Name of the route map Command Mode Router mode and Address Family mode Examples (config)#router bgp 10
Examples (config)#router bgp 10 (config-router)#network 172.26.0.0/16 If Router1 receives updates from 172.10.0.0 via two routing protocols RIP (distance 120) and eBGP (distance 20), router1 chooses the shorter route. Use the backdoor parameter to allow Router1 to learn about 172.10.0.0 via RIP. (config)#router rip (config)#network 172.10.0.0 (config)#router bgp 200 (config)#neighbor 3.3.3.3 remote-as 500 (config)#network 172.10.0.0 backdoor (config-router)#network 172.16.1.0/24 route-map ipi
© 2015 IP Infusion Inc. Proprietary 181 BGP4+ Commands 182 © 2015 IP Infusion Inc. Proprietary BGP Virtual Private Network Commands CHAPTER 4 This chapter describes the BGP Virtual Private Network (VPN) configuration commands. • address-family (see address-family in Chapter2, BGP Commands) • bgp inbound-route-filter • clear ip bgp * vpnv4 • clear ip bgp * vpnv6 • clear ip bgp <1-4294967295> vpnv4 • clear ip bgp <1-4294967295> vpnv6 • clear ip bgp A.B.C.D vpnv4 • clear ip bgp X:X::X:X vpnv6
• clear ip bgp X:X::X:X vpnv6 • debug bgp mpls • exit-address-family (see exit-address-family in Chapter2, BGP Commands) • import map • ip vrf • neighbor activate (see neighbor activate in Chapter2, BGP Commands) • neighbor allow-ebgp-vpn • neighbor allowas-in (see neighbor allowas-in in Chapter2, BGP Commands) • neighbor as-origination-interval (see neighbor as-origination-interval in Chapter2, BGP Commands) • neighbor as-override
• neighbor as-override • neighbor description (see neighbor description in Chapter2, BGP Commands) • neighbor remote-as (see neighbor remote-as in Chapter2, BGP Commands) • neighbor send-community (see neighbor send-community in Chapter2, BGP Commands) • neighbor shutdown (see neighbor shutdown in Chapter2, BGP Commands) • neighbor send-community • neighbor soo • redistribute (see redistribute in Chapter2, BGP Commands) • rd (route distinguisher) • route-target
• rd (route distinguisher) • route-target © 2015 IP Infusion Inc. Proprietary 183 BGP Virtual Private Network Commands bgp inbound-route-filter Use this command to enable the MPLS (Multiprotocol Label Switching) VPN/BGP inbound route filter. This command is used to control the installation of routing information into the BGP table. When a router runs MPLS VPN/BGP PE, it exchanges routing information with a routing distinguisher. By default,
ZebOS-XP does not install routing information that does not match the configured routing distinguisher value. When the local box has two VRFs where each routing distinguisher value is 10:100 and 20:200, routing information with routing distinguisher 10:200 is not installed into BGP table. When no bgp inbound-route-filter is configured, all of routing information is installed into the BGP table. Command Syntax bgp inbound-route-filter no bgp inbound-route-filter Parameter None Default
Parameter None Default Enabled, the router performs the routing distinguisher value check, by default. Command Mode Router mode Examples #configure terminal (config)#router bgp 100 (config-router)#bgp inbound-route-filter 184 © 2015 IP Infusion Inc. Proprietary BGP Virtual Private Network Commands clear ip bgp * vpnv4 Use this command to reset a VPNv4 BGP connection for all peers. This command clears the BGP connection and
dynamically resets the outbound routing table. This frees up additional memory required for storing updates to generate new updates. Command Syntax clear ip bgp * vpnv4 unicast in clear ip bgp * vpnv4 unicast out clear ip bgp * vpnv4 unicast soft clear ip bgp * vpnv4 unicast soft in clear ip bgp * vpnv4 unicast soft out Parameters in Clear incoming advertised routes out Clear outgoing advertised routes soft Clear both incoming and outgoing routes in Soft reconfig inbound update
in Soft reconfig inbound update out Soft reconfig outbound update Command Mode Privileged Exec mode Examples #clear ip bgp * #clear ip bgp * vpnv4 unicast out © 2015 IP Infusion Inc. Proprietary 185 BGP Virtual Private Network Commands clear ip bgp * vpnv6 Use this command to reset a VPNv6 BGP connection for all peers. This command clears the BGP connection and dynamically resets the outbound routing table. This frees up additional memory required for storing updates to generate new updates.
generate new updates. Command Syntax clear ip bgp * vpnv6 unicast in clear ip bgp * vpnv6 unicast out clear ip bgp * vpnv6 unicast soft clear ip bgp * vpnv6 unicast soft in clear ip bgp * vpnv6 unicast soft out Parameters in Clear incoming advertised routes out Clear outgoing advertised routes soft Clear both incoming and outgoing routes in Soft reconfig inbound update out Soft reconfig outbound update Command Mode Privileged Exec mode Examples #clear ip bgp * #clear ip bgp * vpnv6 unicast out
#clear ip bgp * #clear ip bgp * vpnv6 unicast out 186 © 2015 IP Infusion Inc. Proprietary BGP Virtual Private Network Commands clear ip bgp <1-4294967295> vpnv4 Use this command to reset a BGP connection for all VPN peers in a specified Autonomous System. Command Syntax clear ip bgp <1-4294967295> vpnv4 unicast in clear ip bgp <1-4294967295> vpnv4 unicast out clear ip bgp <1-4294967295> vpnv4 unicast soft clear ip bgp <1-4294967295> vpnv4 unicast soft in
clear ip bgp <1-4294967295> vpnv4 unicast soft in clear ip bgp <1-4294967295> vpnv4 unicast soft out Parameters <1-4294967295> Clear peers with this AS number in Clear incoming advertised routes out Clear outgoing advertised routes soft Clear both incoming and outgoing routes in Soft reconfig inbound update out Soft reconfig outbound update Command Mode Privileged Exec mode Examples #clear ip bgp 500 vpnv4 unicast soft out © 2015 IP Infusion Inc. Proprietary 187
© 2015 IP Infusion Inc. Proprietary 187 BGP Virtual Private Network Commands clear ip bgp <1-4294967295> vpnv6 Use this command to reset a BGP connection for all VPN peers in a specified Autonomous System. Command Syntax clear ip bgp <1-4294967295> vpnv6 unicast in clear ip bgp <1-4294967295> vpnv6 unicast out clear ip bgp <1-4294967295> vpnv6 unicast soft clear ip bgp <1-4294967295> vpnv6 unicast soft in clear ip bgp <1-4294967295> vpnv6 unicast soft out Parameters
Parameters <1-4294967295> Clear peers with this AS number in Clear incoming advertised routes out Clear outgoing advertised routes soft Clear both incoming and outgoing routes in Soft reconfig inbound update out Soft reconfig outbound update Command Mode Privileged Exec mode Examples #clear ip bgp 500 vpnv6 unicast soft out #clear ip bgp 500 vpnv6 unicast out 188 © 2015 IP Infusion Inc. Proprietary BGP Virtual Private Network Commands clear ip bgp A.B.C.D vpnv4
clear ip bgp A.B.C.D vpnv4 Use this command to reset an VPNv4 BGP connection for a specific IPv4 address. Command Syntax clear ip bgp A.B.C.D vpnv4 unicast in clear ip bgp A.B.C.D vpnv4 unicast out clear ip bgp A.B.C.D vpnv4 unicast soft clear ip bgp A.B.C.D vpnv4 unicast soft in clear ip bgp A.B.C.D vpnv4 unicast soft out Parameters in Clear incoming advertised routes out Clear outgoing advertised routes soft Clear both incoming and outgoing routes in Soft reconfig inbound update
in Soft reconfig inbound update out Soft reconfig outbound update Command Mode Privileged Exec mode Examples #clear ip bgp 10.10.0.12 soft #clear ip bgp 10.10.0.10 vpnv4 unicast out #clear ip bgp 3.3.3.3 vrf VRF1 soft in © 2015 IP Infusion Inc. Proprietary 189 BGP Virtual Private Network Commands clear ip bgp X:X::X:X vpnv6 Use this command to reset a VPNv6 BGP connection for a specific IPv6 address. Command Syntax clear ip bgp X:X::X:X vpnv6 unicast in clear ip bgp X:X::X:X vpnv6 unicast out
clear ip bgp X:X::X:X vpnv6 unicast out clear ip bgp X:X::X:X vpnv6 unicast soft clear ip bgp X:X::X:X vpnv6 unicast soft in clear ip bgp X:X::X:X vpnv6 unicast soft out Parameters in Clear incoming advertised routes out Clear outgoing advertised routes soft Clear both incoming and outgoing routes in Soft reconfig inbound update out Soft reconfig outbound update Command Mode Privileged Exec mode Examples #clear ip bgp 3ffe::8 vpnv6 unicast soft in 190 © 2015 IP Infusion Inc. Proprietary
190 © 2015 IP Infusion Inc. Proprietary BGP Virtual Private Network Commands debug bgp mpls Use this command to enable the display of MPLS related information. Use the no parameter with this command to disable this function. Note: This command is available only when vrf option is enabled. Command Syntax debug bgp mpls no debug bgp mpls Parameters None Default Disabled Command Mode Privileged Exec mode Examples debug bgp mpls © 2015 IP Infusion Inc. Proprietary 191
© 2015 IP Infusion Inc. Proprietary 191 BGP Virtual Private Network Commands import map This command assigns a route map to the VRF. This map is applied for routing information imported from another PE or VRF. Use this command when an application requires finer control over the routes imported into a VRF than provided by the import and export extended communities. You can filter routes that are eligible for import into a VRF through the use of
a route map.The route map can deny access to selected routes from a community that is on the import list. Use the no option with this command to remove the map. Command Syntax import map WORD no import map Parameter WORD Route map Command Mode VRF mode Examples (config)#ip vrf IPI (config-vrf)#import map set-pref (config-vrf)# 192 © 2015 IP Infusion Inc. Proprietary BGP Virtual Private Network Commands ip vrf Use this command to assign a VPN Routing Forwarding (VRF) instance.
Use the no option with this command to remove the VRF from the instance. Command Syntax ip vrf WORD no ip vrf WORD Parameter WORD Name of the VRF instance Command Mode Configure mode Command Example (config)#ip vrf IPI (config-vrf)# © 2015 IP Infusion Inc. Proprietary 193 BGP Virtual Private Network Commands neighbor allow-ebgp-vpn Use this command to allow an eBGP neighbor to be a VPN peer. By default, BGP VPN functionality is allowed only for
iBGP peers. Using the neighbor allow-ebgp-vpn command allows the VPN connection to be established to an eBGP peer. Use the no parameter with this command to remove the configuration. Command Syntax neighbor (A.B.C.D|X:X::X:X|WORD) allow-ebgp-vpn no neighbor (A.B.C.D|X:X::X:X|WORD) allow-ebgp-vpn Parameters A.B.C.D Address of the BGP neighbor in IPv4 format X:X::X:X Address of the BGP neighbor in IPv6 format WORD Name of an existing peer group
WORD Name of an existing peer group Note: For information about how to create peer groups, refer to the neighbor peer-group and neighbor remote-as commands. When this parameter is used with a command, the command applies to all peers in the group. Command Mode Address Family-vpnv4 mode and Address Family-vpnv6 mode Examples (config)#router bgp 200 (config-router)#neighbor 66.66.66.66 remote-as 100 (config-router)#neighbor 66.66.66.66 update-source lo (config-router)#address-family vpnv4 unicast
(config-router)#address-family vpnv4 unicast (config-router-af)#neighbor 66.66.66.66 allow-ebgp-vpn (config-router-af)#neighbor 66.66.66.66 activate (config-router-af)#exit-address-family 194 © 2015 IP Infusion Inc. Proprietary BGP Virtual Private Network Commands neighbor as-override Use this command to configure a PE router to override the Autonomous System Number (ASN) of a site with the ASN
of a provider. BGP normally ignores the routes from the same AS. However, this command is used to override the customer‘s ASN in BGP, so that the customer CE accepts and installs routes from the same AS. Typically, this command is used when Customer Edge (CE) routers have the same ASN in some or all sites. As per BGP requirement, a BGP speaker rejects a route that has the same ASN as itself, in the AS_PATH attribute. Thus the
CE routers having the same ASN do not accept routes from each other. Configuring the neighbor as-override command on the PE router removes the CE neighbor’s ASN from the AS_PATH attribute allowing CE routers with the same ASN to accept routes from each other. Use the no parameter with this command to remove VPN IPv4 or VPN IPv6 prefixes from a specified router. Command Syntax neighbor (A.B.C.D|X:X::X:X|WORD) as-override no neighbor (A.B.C.D|X:X::X:X|WORD) as-override Parameters
Parameters A.B.C.D Address of the BGP neighbor in IPv4 format X:X::X:X Address of the BGP neighbor in IPv6 format WORD Name of an existing peer group Note: For information about how to create peer groups, refer to the neighbor peer-group and neighbor remote-as commands. When this parameter is used with a command, the command applies to all peers in the group. Default Disabled Command Mode Address Family-vrf mode Examples #configure terminal (config)#router bgp 7657
#configure terminal (config)#router bgp 7657 (config-router)#address-family ipv4 vrf VRF_A (config-router-af)#neighbor 10.10.0.1 as-override #configure terminal (config)#router bgp 7657 (config-router)#address-family ipv6 vrf VRF_A (config-router-af)#neighbor 3ffe:15:15:15:15::0 as-override © 2015 IP Infusion Inc. Proprietary 195 BGP Virtual Private Network Commands neighbor send-community
neighbor send-community Use this command to send the extended-community attribute to a customer edge router. In VPN, route-distinguisher and route-target are encoded in BGP extended-community. This command enables sending of BGP routes with extended community to a neighbor. See also neighbor send-community in Chapter2, BGP Commands. Command Syntax neighbor (A.B.C.D|X:X::X:X|WORD) send-community neighbor (A.B.C.D|X:X::X:X|WORD) send-community (both|extended|standard)
no neighbor (A.B.C.D|X:X::X:X|WORD) send-community no neighbor (A.B.C.D|X:X::X:X|WORD) send-community (both|extended|standard) Parameters A.B.C.D Address of the BGP neighbor in an IPv4 format X:X::X:X Address of the BGP neighbor in an IPv6 format WORD Name of the BGP peer group Note: For information about how to create peer groups, refer to the neighbor peer-group and neighbor remote-as commands. When this parameter is used with a command, the command applies to all peers in the group.
peers in the group. both Send Standard and Extended Community attributes extended Send Extended Community attributes standard Send Standard Community attributes Default Disabled. No extended-community attribute is sent to a customer router. Command Mode Router mode and Address Family mode Examples (config)#router bgp 100 (config-router)#address-family ipv4 vrf VRF_A (config-router-af)#neighbor 10.10.0.1 send-community extended (config)#router bgp 100
(config)#router bgp 100 (config-router)#address-family ipv6 vrf VRF_A (config-router-af)#neighbor 3ffe:15:15:15:15::0 send-community extended 196 © 2015 IP Infusion Inc. Proprietary BGP Virtual Private Network Commands neighbor soo Use this command to enable the site-of-origin (SOO) feature. If the customer AS is multi-homed to the ISP, this command ensures that the PE does not advertise the routes back to the same AS. Use the no parameter with this command to disable this feature.
Command Syntax neighbor (A.B.C.D|X:X::X:X|WORD) soo AS:nn_or_IP:nn no neighbor (A.B.C.D|X:X::X:X|WORD) soo Parameters A.B.C.D Address of the BGP neighbor in IPv4 format X:X::X:X Address of the BGP neighbor in IPv6 format WORD Name of an existing peer group Note: For information about how to create peer groups, refer to the neighbor peer-group and neighbor remote-as commands. When this parameter is used with a command, the command applies to all peers in the group. ASN:nn_or_IP-address:nn
peers in the group. ASN:nn_or_IP-address:nn Specify an AS number and an arbitrary number (for example, 100:1). Otherwise, specify a 32-bit IP address and an arbitrary number (for example, 192.16.10.1:1). Command Mode Address Family VRF mode Examples (config)#router bgp 100 (config-router)#address-family ipv4 vrf VRF_A (config-router-af)#neighbor 10.10.0.1 soo 100:1 © 2015 IP Infusion Inc. Proprietary 197 BGP Virtual Private Network Commands rd (route distinguisher)
rd (route distinguisher) Use this command to assign a route distinguisher (RD) for the VRF. The route distinguisher value must be a unique value on the router. This command creates routing and forwarding tables and specifies the default RD for a VPN. The RD is added to the customer's IPv4 prefixes, changing them into globally unique VPN-IPv4 prefixes. Command Syntax rd ASN:nn_or_IP-address:nn Parameters ASN:nn_or_IP-address:nn
Parameters ASN:nn_or_IP-address:nn AS number and an arbitrary number (for example, 100:1). Otherwise, specify a 32-bit IP address and an arbitrary number (for example, 192.16.10.1:1). Command Mode VRF mode Examples (config)#ip vrf VRF_A (config-vrf)#rd 100:1 198 © 2015 IP Infusion Inc. Proprietary BGP Virtual Private Network Commands route-target Use this command to add a list of import and export route-target extended communities to the VRF.
This command creates lists of import and export route-target extended communities for the VRF. It specifies a target VPN extended community. Execute the command once for each community. All routes with the specific route-target extended community are imported into all VRFs with the same extended community as an import route-target. Use the no parameter with this command to delete a route target. Command Syntax route-target (import|export|both) ASN:nn_or_IP-address:nn
no route-target (import|export|both) ASN:nn_or_IP-address:nn Parameters import Import routing information export Export routing information both Import and export routing information ASN:nn_or_IP-address:nn AS number and an arbitrary number (for example, 100:1). Otherwise, specify a 32-bit IP address and an arbitrary number (for example, 192.16.10.1:1). Command Mode VRF mode Examples (config)#ip vrf VRF_A (config-vrf)#route-target both 100:10 (config)#ip vrf VRF_A
(config)#ip vrf VRF_A (config-vrf)#route-target import 100:20 © 2015 IP Infusion Inc. Proprietary 199 BGP Virtual Private Network Commands 200 © 2015 IP Infusion Inc. Proprietary BGP Show Commands CHAPTER 5 This chapter describes the BGP show commands. • show bgp • show bgp A.B.C.D • show bgp A.B.C.D/M • show bgp community • show bgp community-list • show bgp dampening dampened-paths • show bgp dampening flap-statistics • show bgp dampening parameters • show bgp filter-list
• show bgp filter-list • show bgp inconsistent-as • show bgp ipv6 • show bgp neighbors • show bgp neighbors advertised-routes • show bgp neighbors received prefix-filter • show bgp neighbors received-routes • show bgp neighbors routes • show bgp nexthop-tracking • show bgp nexthop-tree-details • show bgp paths • show bgp prefix-list • show bgp quote-regexp • show bgp regexp • show bgp route-map • show bgp summary • show bgp view • show bgp X:X::X:X • show bgp X:X::X:X/M longer prefixes
• show bgp X:X::X:X/M longer prefixes • show debugging bgp • show ip bgp • show ip bgp attribute-info • show ip bgp cidr-only • show ip bgp community-info • show ip bgp scan © 2015 IP Infusion Inc. Proprietary 201 BGP Show Commands • show ip bgp vpnv4 • show ip bgp vpnv6 • show ip extcommunity-list • show ip protocols • show ip vrf 202 © 2015 IP Infusion Inc. Proprietary BGP Show Commands show bgp Use this command to display the status of BGP routes. Command Syntax show bgp show bgp (ipv6)
Command Syntax show bgp show bgp (ipv6) show bgp (ipv4|ipv6) (unicast|multicast) show ip bgp show ip bgp ipv4 (unicast|multicast) Parameters ipv4 IPv4 routes ipv6 IPv6 routes unicast Unicast prefixes multicast Multicast prefixes Command Mode Privileged Exec mode and Exec mode Examples #show bgp © 2015 IP Infusion Inc. Proprietary 203 BGP Show Commands show bgp A.B.C.D Use this command to display BGP route information for a network. Command Syntax show bgp (ipv4) (unicast|multicast) A.B.C.D
show bgp (ipv4) (unicast|multicast) A.B.C.D show ip bgp A.B.C.D show ip bgp ipv4 (unicast|multicast) A.B.C.D Parameters ipv4 IPv4 routes unicast Unicast prefixes multicast Multicast prefixes A.B.C.D IP prefix (network), for example, 35.0.0.0 Command Mode Privileged Exec and Exec mode Examples #show ip bgp 192.10.23.67 BGP table version is 7, local router ID is 80.80.80.80 Status codes: s suppressed, d damped, h history, * valid, > best, i - internal, S Stale
internal, S Stale Origin codes: i - IGP, e - EGP,? - incomplete Network Next Hop Metric LocPrf Weight Path S>i10.70.0.0/24 192.10.23.67 0 100 0 ? S>i30.30.30.30/32 192.10.23.67 0 100 0 ? S>i63.63.63.1/32 192.10.23.67 0 100 0 ? S>i67.67.67.67/32 192.10.23.67 0 100 0 ? S>i172.22.10.0/24 192.10.23.67 0 100 0 ? S>i192.10.21.0 192.10.23.67 0 100 0 ? S>i192.10.23.0 192.10.23.67 0 100 0 ? Total number of prefixes 7 204 © 2015 IP Infusion Inc. Proprietary BGP Show Commands show bgp A.B.C.D/M
BGP Show Commands show bgp A.B.C.D/M Use this command to display BGP route information for a network prefix. Command Syntax show bgp ipv4 (unicast|multicast) A.B.C.D/M show ip bgp A.B.C.D/M show ip bgp ipv4 (unicast|multicast) A.B.C.D/M Parameters ipv4 IPv4 routes unicast Unicast prefixes multicast Multicast prefixes A.B.C.D/M IP prefix (network/length), for example, 35.0.0.0/8 Command Mode Privileged Exec and Exec mode Examples #show bgp ipv4 unicast 35.0.0.1/8
Examples #show bgp ipv4 unicast 35.0.0.1/8 © 2015 IP Infusion Inc. Proprietary 205 BGP Show Commands show bgp community Use this command to display BGP routes that match a community. Command Syntax show bgp community show bgp community [AA:NN|local-AS|no-advertise|no-export] (exact-match|) show bgp (ipv4|ipv6) (unicast|multicast) community [AA:NN|local-AS|no-advertise|no- export] (exact-match|) show bgp (ipv6) community [AA:NN|local-AS|no-advertise|no-export] (exact-match|)
show ip bgp community show ip bgp community [AA:NN|local-AS|no-advertise|no-export] (exact-match|) show ip bgp ipv4 (unicast|multicast) community [AA:NN|local-AS|no-advertise|no- export] (exact-match|) Parameters ipv4 IPv4 routes ipv6 IPv6 routes unicast Unicast prefixes multicast Multicast prefixes AA:NN Community number local-AS Do not send outside local AS (well-known community) no-advertise Do not advertise to any peer (well-known community)
no-export Do not export to next AS (well-known community) exact-match Exact match of the communities Command Mode Privileged Exec mode and Exec mode Example #show bgp community local-as no-export #show bgp community local-AS exact-match #show ip bgp ipv4 multicast community 12:34 exact-match 206 © 2015 IP Infusion Inc. Proprietary BGP Show Commands show bgp community-list Use this command to display BGP routes that match a community list. Command Syntax
Command Syntax show bgp community-list WORD (exact-match|) show bgp (ipv4|ipv6) (unicast|multicast) community-list WORD (exact-match|) show bgp (ipv6) community-list WORD (exact-match|) show ip bgp community-list WORD (exact-match|) show ip bgp ipv4 (unicast|multicast) community-list WORD (exact-match|) Parameters WORD Community list name ipv4 IPv4 routes ipv6 IPv6 routes unicast Unicast prefixes multicast Multicast prefixes exact-match Only routes that exactly match the community Command Mode
Command Mode Privileged Exec mode and Exec mode Example #show ip bgp community-list mylist exact-match #show ip bgp ipv4 multicast community-list mylist exact-match © 2015 IP Infusion Inc. Proprietary 207 BGP Show Commands show bgp dampening dampened-paths Use this command to display detailed information about paths suppressed due to dampening. Command Syntax show bgp dampening dampened-paths show bgp (ipv4|ipv6) (unicast|multicast) dampening dampened-paths
show bgp (ipv6) dampening dampened-paths show ip bgp dampening dampened-paths show ip bgp ipv4 (unicast|multicast) dampening dampened-paths Parameters ipv4 IPv4 routes ipv6 IPv6 routes unicast Unicast prefixes multicast Multicast prefixes Command Mode Privileged Exec mode and Exec mode Example #show bgp dampening dampened-paths 208 © 2015 IP Infusion Inc. Proprietary BGP Show Commands show bgp dampening flap-statistics Use this command to display BGP dampening flap statistics. Command Syntax
Command Syntax show bgp dampening flap-statistics show bgp (ipv4|ipv6) (unicast|multicast) dampening flap-statistics show bgp (ipv6) dampening flap-statistics show ip bgp dampening flap-statistics show ip bgp ipv4 (unicast|multicast) dampening flap-statistics Parameters ipv4 IPv4 routes ipv6 IPv6 routes unicast Unicast prefixes multicast Multicast prefixes Command Mode Privileged Exec mode and Exec mode Examples
Privileged Exec mode and Exec mode Examples This sample output shows that the internal route (i), has flapped 3 times and is now categorized as history (h). #show ip bgp dampening flap-statistics BGP table version is 1, local router ID is 30.30.30.77 Status codes: s suppressed, d damped, h history, * valid, > best, i - internal, S Stale Origin codes: i - IGP, e - EGP, ? - incomplete Network From Flaps Duration Reuse Path hi1.1.1.0/24 10.100.0.62 3 00:01:20 i
hi1.1.1.0/24 10.100.0.62 3 00:01:20 i © 2015 IP Infusion Inc. Proprietary 209 BGP Show Commands show bgp dampening parameters Use this command to display the BGP dampening parameters. Command Syntax show bgp dampening parameters show bgp (ipv4|ipv6) (unicast|multicast) dampening parameters show bgp (ipv6) dampening parameters show ip bgp dampening parameters show ip bgp ipv4 (unicast|multicast) dampening parameters Parameters ipv4 IPv4 routes ipv6 IPv6 routes unicast Unicast prefixes
ipv6 IPv6 routes unicast Unicast prefixes multicast Multicast prefixes Command Mode Privileged Exec mode and Exec mode Examples #show ip bgp dampening parameters 210 © 2015 IP Infusion Inc. Proprietary BGP Show Commands show bgp filter-list Use this command to display routes that match a regular expression filter list. Command Syntax show bgp filter-list WORD show bgp (ipv4|ipv6) (unicast|multicast) filter-list WORD show bgp (ipv6) filter-list WORD show ip bgp filter-list WORD
show ip bgp filter-list WORD show ip bgp ipv4 (unicast|multicast) filter-list WORD Parameters WORD Regular-expression filter list ipv4 IPv4 routes ipv6 IPv6 routes unicast Unicast prefixes multicast Multicast prefixes Command Mode Privileged Exec mode and Exec mode Example #show ip bgp filter-list mylist © 2015 IP Infusion Inc. Proprietary 211 BGP Show Commands show bgp inconsistent-as Use this command to display routes with inconsistent AS paths. Command Syntax show bgp inconsistent-as
Command Syntax show bgp inconsistent-as show bgp (ipv4|ipv6) (unicast|multicast) inconsistent-as show bgp (ipv6) inconsistent-as show ip bgp inconsistent-as show ip bgp ipv4 inconsistent-as show ip bgp ipv4 (unicast|multicast) inconsistent-as Parameters ipv4 IPv4 routes ipv6 IPv6 routes unicast Unicast prefixes multicast Multicast prefixes Command Mode Privileged Exec mode and Exec mode Examples #show bgp inconsistent-as 212 © 2015 IP Infusion Inc. Proprietary BGP Show Commands show bgp ipv6
BGP Show Commands show bgp ipv6 Use this command to display the status of IPv6 BGP connections. Command Syntax show bgp (ipv6) (unicast|multicast|labeled|) show bgp (ipv6) (unicast|multicast|labeled|) X:X::X:X/M Parameters X:X::X:X/M IPv6 prefix <network>/<length>, for example, 3ffe:a::/64 multicast IPv6 multicast address prefixes unicast IPv6 unicast address prefixes labeled Labeled IPv6 routes Command Mode Privileged Exec mode and Exec mode Example #show bgp ipv6 labeled 3ffe:a::/64
Example #show bgp ipv6 labeled 3ffe:a::/64 BGP routing table entry for 3ffe:a::/64 Paths: (1 available, best #1, table Default-IP-Routing-Table) Not advertised to any peer Local ::ffff:114:1414 from 20.20.20.1 (92.92.92.92) Origin incomplete metric 0, localpref 100, label 5420, valid, internal, best Last update: Mon May 26 17:48:18 2008 © 2015 IP Infusion Inc. Proprietary 213 BGP Show Commands show bgp neighbors Use this command to display information about TCP and BGP neighbor connections.
Command Syntax show bgp neighbors show bgp (ipv4|ipv6) (unicast|multicast|) neighbors show bgp (ipv6) neighbors show ip bgp ipv4 (unicast|multicast) neighbors show ip bgp neighbors show ip bgp neighbors (A.B.C.D|X:X::X:X) show ip bgp ipv4 (unicast|multicast) neighbors (A.B.C.D|X:X::X:X) Parameters ipv4 IPv4 neighbor connection information ipv6 IPv6 neighbor connection information unicast Unicast prefixes multicast Multicast prefixes A.B.C.D IPv4 neighbor X:X::X:X IPv6 neighbor Command Mode
X:X::X:X IPv6 neighbor Command Mode Privileged Exec and Exec modes Examples #show ip bgp neighbors 214 © 2015 IP Infusion Inc. Proprietary BGP Show Commands show bgp neighbors advertised-routes Use this command to display the routes advertised to a BGP neighbor. Command Syntax show bgp neighbors (A.B.C.D|X:X::X:X) advertised-routes show bgp (ipv4|ipv6) (unicast|multicast|) neighbors (A.B.C.D|X:X::X:X) advertised- routes show ip bgp neighbors (A.B.C.D|X:X::X:X) advertised-routes
show ip bgp ipv4 (unicast|multicast) neighbors (A.B.C.D|X:X::X:X) advertised-routes Parameters A.B.C.D IPv4 neighbor X:X::X:X IPv6 neighbor ipv4 IPv4 addresses ipv6 IPv6 addresses multicast Multicast prefixes unicast Unicast prefixes Command Mode Privileged Exec mode and Exec mode Example #show ip bgp ipv4 multicast neighbors 1.2.3.4 advertised-routes © 2015 IP Infusion Inc. Proprietary 215 BGP Show Commands show bgp neighbors received prefix-filter
show bgp neighbors received prefix-filter Use this command to display the prefix list filter. Command Syntax show bgp neighbors (A.B.C.D|X:X::X:X) received prefix-filter show bgp (ipv4|ipv6) (unicast|multicast|) neighbors (A.B.C.D|X:X::X:X) received prefix-filter show ip bgp neighbors (A.B.C.D|X:X::X:X) received prefix-filter show ip bgp ipv4 (unicast|multicast) neighbors (A.B.C.D|X:X::X:X) received prefix- filter Parameters A.B.C.D IPv4 address X:X::X:X IPv6 address ipv4 IPv4 addresses
X:X::X:X IPv6 address ipv4 IPv4 addresses ipv6 IPv6 addresses unicast Unicast prefixes multicast Multicast prefixes Command Mode Privileged Exec mode and Exec mode Example #show bgp neighbors received prefix-filter 216 © 2015 IP Infusion Inc. Proprietary BGP Show Commands show bgp neighbors received-routes Use this command to display the received routes from a neighbor. To display all the received routes from a neighbor, perform a BGP soft reconfigure first. Command Syntax
Command Syntax show bgp neighbors (A.B.C.D|X:X::X:X) received-routes show bgp (ipv4|ipv6) (unicast|multicast|) neighbors (A.B.C.D|X:X::X:X) received- routes show ip bgp ipv4 (unicast|multicast) neighbors (A.B.C.D|X:X::X:X) received-routes show ip bgp neighbors (A.B.C.D|X:X::X:X) received-routes Parameters A.B.C.D IPv4 address X:X::X:X IPv6 address ipv4 IPv4 addresses ipv6 IPv6 addresses unicast Unicast prefixes multicast Multicast prefixes Command Mode Privileged Exec mode and Exec mode Example
Privileged Exec mode and Exec mode Example #show bgp neighbors 10.10.10.2 received-routes © 2015 IP Infusion Inc. Proprietary 217 BGP Show Commands show bgp neighbors routes Use this command to display all accepted routes learned from neighbors. Command Syntax show bgp neighbors (A.B.C.D|X:X::X:X) routes show bgp (ipv4|ipv6) (unicast|multicast|) neighbors (A.B.C.D|X:X::X:X) routes show ip bgp neighbors (A.B.C.D|X:X::X:X) routes
show ip bgp neighbors (A.B.C.D|X:X::X:X) routes show ip bgp ipv4 (unicast|multicast) neighbors (A.B.C.D|X:X::X:X) routes Parameters A.B.C.D IPv4 address X:X::X:X IPv6 address ipv4 IPv4 addresses ipv6 IPv6 addresses unicast Unicast prefixes multicast Multicast prefixes Command Mode Privileged Exec mode and Exec mode Example The following output displays detailed information about the neighbor. #show bgp neighbors 10.10.10.2 routes
#show bgp neighbors 10.10.10.2 routes BGP neighbor is fe80::203:47ff:feb0:d72b, remote AS 10, local AS 10, internal link BGP version 4, remote router ID 10.10.10.50 BGP state = Established, up for 00:02:01 Last read 00:00:01, hold time is 180, keepalive interval is 60 seconds Neighbor capabilities: Route refresh: advertised and received (old and new) Address family IPv4 Unicast: advertised and received Address family IPv6 Unicast: advertised and received
Received 3 messages, 0 notifications, 0 in queue Sent 5 messages, 0 notifications, 0 in queue Route refresh request: received 0, sent 0 Minimum time between advertisement runs is 5 seconds For address family: IPv4 Unicast Community attribute sent to this neighbor (both) 0 accepted prefixes 0 announced prefixes 218 © 2015 IP Infusion Inc. Proprietary BGP Show Commands show bgp nexthop-tracking Use this command to display BGP nexthop-tracking status. Command Syntax show bgp nexthop-tracking
Command Syntax show bgp nexthop-tracking Parameters None Command Mode Privileged Exec mode and Exec mode Example #show bgp nexthop-tracking Configured NHT: ENABLED NHT Delay time-interval : 6 BGP VRF: (Default) VRF_ID 0 BGP Instance: (Default), AS: 100, router-id 4.4.4.40 NHT is Enabled Recvd Msg count from NSM: 0 NHT delay-timer remaining seconds: 0 BGP nexthop(s): Total number of IPV4 nexthops : 0 Total number of IPV6 nexthops : 0 BGP VRF: VRF_A VRF_ID 2
BGP VRF: VRF_A VRF_ID 2 BGP Instance: (Default), AS: 100, router-id 4.4.4.40 NHT is Enabled Recvd Msg count from NSM: 0 NHT delay-timer remaining seconds: 0 BGP nexthop(s): Total number of IPV4 nexthops : 0 Total number of IPV6 nexthops : 0 © 2015 IP Infusion Inc. Proprietary 219 BGP Show Commands show bgp nexthop-tree-details Use this command to display BGP nexthop-tree details. Command Syntax show bgp nexthop-tree-details Parameters None Command Mode Privileged Exec mode and Exec mode Example
Privileged Exec mode and Exec mode Example #show bgp nexthop-tree-details Configured NHT: ENABLED NHT Delay time-interval : 6 BGP VRF: (Default) VRF_ID 0 BGP Instance: (Default), AS: 100, router-id 4.4.4.40 NHT is Enabled Recvd Msg count from NSM: 0 NHT delay-timer remaining seconds: 0 BGP nexthop(s): Total number of IPV4 nexthops : 0 Total number of IPV6 nexthops : 0 BGP VRF: VRF_A VRF_ID 2 BGP Instance: (Default), AS: 100, router-id 4.4.4.40 NHT is Enabled Recvd Msg count from NSM: 0
NHT is Enabled Recvd Msg count from NSM: 0 NHT delay-timer remaining seconds: 0 BGP nexthop(s): Total number of IPV4 nexthops : 0 Total number of IPV6 nexthops : 0 TSUP40# TSUP40#show bgp nexthop-tree-details BGP Instance: (Default), AS: 100, router-id 4.4.4.40 AFI_IP Nexthop count : 0 AFI_IP6 Nexthop count : 0 BGP Instance: (Default), AS: 0, router-id 0.0.0.0 AFI_IP Nexthop count : 0 AFI_IP6 Nexthop count : 0 BGP Instance: (Default), AS: 100, router-id 4.4.4.40
220 © 2015 IP Infusion Inc. Proprietary BGP Show Commands show bgp paths Use this command to display BGP path information. Command Syntax show bgp paths show bgp (ipv4|ipv6) (unicast|multicast|) paths show bgp (ipv6) paths show ip bgp paths show ip bgp ipv4 (unicast|multicast) paths Parameters ipv4 IPv4 routes ipv6 IPv6 routes unicast Unicast prefixes multicast Multicast prefixes Command Mode Privileged Exec mode and Exec mode Example #show ip bgp ipv4 unicast paths Address Refcnt Path
Address Refcnt Path [0x81fa578:0] (239) © 2015 IP Infusion Inc. Proprietary 221 BGP Show Commands show bgp prefix-list Use this command to display routes matching the prefix-list. Command Syntax show bgp prefix-list WORD show bgp (ipv4|ipv6) (unicast|multicast|) prefix-list WORD show ip bgp prefix-list WORD show ip bgp ipv4 (unicast|multicast) prefix-list WORD Parameters WORD Name of the IP prefix list ipv4 IPv4 routes ipv6 IPv6 routes unicast Unicast prefixes multicast Multicast prefixes
multicast Multicast prefixes Command Mode Privileged Exec mode and Exec mode Example #show bgp prefix-list mylist 222 © 2015 IP Infusion Inc. Proprietary BGP Show Commands show bgp quote-regexp Use this command to display route matching an AS path quoted regular expression. Command Syntax show bgp quote-regexp WORD show bgp (ipv4|ipv6) (unicast|multicast|) quote-regexp WORD show ip bgp quote-regexp WORD show ip bgp ipv4 (unicast|multicast) quote-regexp WORD Parameters
Parameters WORD A regular expression to match the AS paths. Use quotes to enclose the regular expression. ipv4 IPv4 route information ipv6 IPv6 route information unicast Unicast prefixes multicast Multicast prefixes Command Mode Privileged Exec mode and Exec mode Example #show bgp quote-regexp "IPI" © 2015 IP Infusion Inc. Proprietary 223 BGP Show Commands show bgp regexp Use this command to display routes matching the AS path regular expression. Command Syntax show bgp regexp LINE
Command Syntax show bgp regexp LINE show bgp (ipv4|ipv6) (unicast|multicast) regexp LINE show bgp (ipv6) regexp LINE show ip bgp regexp LINE show ip bgp ipv4 (unicast|multicast) regexp LINE Parameters ipv4 IPv4 routes ipv6 IPv6 routes unicast Unicast prefixes multicast Multicast prefixes LINE A regular expression to match the AS paths Command Mode Privileged Exec mode and Exec mode Example #show bgp regexp IPI 224 © 2015 IP Infusion Inc. Proprietary BGP Show Commands show bgp route-map
BGP Show Commands show bgp route-map Use this command to display routes that match the specified route map. Command Syntax show bgp route-map WORD show bgp (ipv4|ipv6) (unicast|multicast) route-map WORD show bgp (ipv6) route-map WORD show ip bgp route-map WORD show ip bgp ipv4 (unicast|multicast) route-map WORD Parameters WORD Routes matching the route-map ipv4 IPv4 routes ipv6 IPv6 routes unicast Unicast prefixes multicast Multicast prefixes Command Mode Privileged Exec mode and Exec mode
Command Mode Privileged Exec mode and Exec mode Example #show bgp route-map IPI © 2015 IP Infusion Inc. Proprietary 225 BGP Show Commands show bgp summary Use this command to display a summary of BGP neighbor status. Command Syntax show bgp summary show bgp (ipv4|ipv6) (unicast|multicast|) summary show ip bgp summary show ip bgp ipv4 (unicast|multicast) summary Parameters ipv4 IPv4 routes ipv6 IPv6 routes unicast Unicast prefixes multicast Multicast prefixes Command Mode
multicast Multicast prefixes Command Mode Privileged Exec mode and Exec mode Example This is a sample output from the show ip bgp summary command displaying a summary of BGP neighbor status. #show ip bgp summary BGP router identifier 10.10.15.50, local AS number 65000 1 BGP AS-PATH entries 0 BGP community entries Neighbor V AS MsgRcvd MsgSent TblVer InQ OutQ Up/Down State/PfxRcd 10.10.9.50 4 65000 460 595 0 0 00:17:48 3 10.10.14.51 4 100 93 120 0 0 0 00:42:16 0 Total number of neighbors 2
0 Total number of neighbors 2 226 © 2015 IP Infusion Inc. Proprietary BGP Show Commands show bgp view Use this command to display information for a BGP view. Command Syntax show bgp ipv6 view WORD show ip bgp view WORD show ip bgp view WORD A.B.C.D show ip bgp view WORD A.B.C.D/M show ip bgp view WORD ipv4 (unicast|multicast) summary show ip bgp view WORD neighbors show ip bgp view WORD neighbors (A.B.C.D|X:X::X:X) show ip bgp view WORD summary Parameters ipv6 IPv6 addresses WORD BGP view name
Parameters ipv6 IPv6 addresses WORD BGP view name A.B.C.D Network in the BGP routing table A.B.C.D/M IP prefix <network>/<length>, e.g., 35.0.0.0/8, in the BGP routing table ipv4 IPv4 addresses multicast Multicast prefixes unicast Unicast prefixes summary Summary of BGP neighbor status neighbors Detailed information on TCP and BGP neighbor connections A.B.C.D IPv4 neighbor X:X::X:X IPv6 neighbor summary Summary of BGP neighbor status Command Mode Privileged Exec mode and Exec mode Example
Privileged Exec mode and Exec mode Example #show ip bgp view I2 BGP table version is 0, local router ID is 10.10.10.50 Status codes: s suppressed, d damped, h history, p stale, * valid, > best, i - internal Origin codes: i - IGP, e - EGP, ? - incomplete Network Next Hop Metric LocPrf Weight Path *>i100.156.70.0/24 10.10.10.52 0 0 i *>i100.156.71.0/24 10.10.10.52 0 0 i *>i100.156.72.0/24 10.10.10.52 0 0 i *>i100.156.73.0/24 10.10.10.52 0 0 i *>i100.156.74.0/24 10.10.10.52 0 0 i
*>i100.156.74.0/24 10.10.10.52 0 0 i © 2015 IP Infusion Inc. Proprietary 227 BGP Show Commands Total number of prefixes 5 228 © 2015 IP Infusion Inc. Proprietary BGP Show Commands show bgp X:X::X:X Use this command to display BGP network information in an IPv6 environment. Command Syntax show bgp X:X::X:X show bgp (ipv6) X:X::X:X show bgp (ipv6) (unicast|multicast) X:X::X:X Parameters ipv6 IPv6 routes unicast Unicast prefixes multicast Multicast prefixes
multicast Multicast prefixes X:X::X:X IPv6 prefix (network), for example, 2003:: Command Mode Privileged Exec mode and Exec mode Example #show bgp ipv6 3ffe::8 © 2015 IP Infusion Inc. Proprietary 229 BGP Show Commands show bgp X:X::X:X/M longer prefixes Use this command to display BGP network information along with mask information. Command Syntax show bgp X:X::X:X/M longer-prefixes Parameters X:X::X:X/M IPv6 prefix (network/length), for example, 2003::/16 Command Mode
Command Mode Privileged Exec mode and Exec mode Examples #show bgp 3ffe::8/8 longer-prefixes 230 © 2015 IP Infusion Inc. Proprietary BGP Show Commands show debugging bgp Use this command to display BGP debugging options. Command Syntax show debugging bgp Parameters None Command Mode Privileged Exec mode and Exec mode Example This is a sample output from the show debugging bgp command. #show debugging bgp BGP debugging status: BGP debugging is on BGP events debugging is on
BGP debugging is on BGP events debugging is on BGP updates debugging is on BGP fsm debugging is on © 2015 IP Infusion Inc. Proprietary 231 BGP Show Commands show ip bgp Use this command to display BGP process information. Command Syntax show ip bgp show ip bgp ipv4 (unicast|multicast) Parameters ipv4 IPv4 routes unicast Unicast prefixes multicast Multicast prefixes Command Mode Privileged Exec mode and Exec mode Examples #show ip bgp 232 © 2015 IP Infusion Inc. Proprietary BGP Show Commands
BGP Show Commands show ip bgp attribute-info Use this command to show internal attribute hash information. Command Syntax show ip bgp attribute-info Parameters None Command Mode Privileged Exec mode and Exec mode Example This is a sample output from the show ip bgp attribute-info command displaying internal attribute information. #show ip bgp attribute-info attr[1] nexthop 0.0.0.0 attr[1] nexthop 10.10.10.10 © 2015 IP Infusion Inc. Proprietary 233 BGP Show Commands show ip bgp cidr-only
BGP Show Commands show ip bgp cidr-only Use this command to display routes with non-natural network masks. Command Syntax show ip bgp cidr-only show ip bgp ipv4 (unicast|multicast) cidr-only Parameters ipv4 IPv4 routes unicast Unicast prefixes multicast Multicast prefixes Command Mode Privileged Exec mode and Exec mode Example This is a sample output from the show ip bgp cidr-only command. #show ip bgp cidr-only BGP table version is 0, local router ID is 10.10.10.50
Status codes: s suppressed, d damped, h history, p stale, * valid, > best, i - internal Origin codes: i - IGP, e - EGP, ? - incomplete Network Next Hop Metric LocPrf Weight Path *> 3.3.3.0/24 10.10.10.10 0 11 i Total number of prefixes 2 234 © 2015 IP Infusion Inc. Proprietary BGP Show Commands show ip bgp community-info Use this command to list all BGP community information. Command Syntax show ip bgp community-info Parameters None Command Mode Privileged Exec mode and Exec mode Example
Privileged Exec mode and Exec mode Example #show ip bgp community-info Address Refcnt Community © 2015 IP Infusion Inc. Proprietary 235 BGP Show Commands show ip bgp scan Use this command to display BGP scan status. Command Syntax show ip bgp scan Parameters None Command Mode Privileged Exec mode and Exec mode Example #show ip bgp scan BGP scan is running BGP scan interval is 60 BGP instance: AS is 11,DEFAULT Current BGP nexthop cache: BGP connected route: 10.10.10.0/24 10.10.11.0/24
BGP connected route: 10.10.10.0/24 10.10.11.0/24 236 © 2015 IP Infusion Inc. Proprietary BGP Show Commands show ip bgp vpnv4 Use this command to display information relating to VPNv4. Command Syntax show ip bgp vpnv4 all show ip bgp vpnv4 all A.B.C.D show ip bgp vpnv4 all neighbors show ip bgp vpnv4 all neighbors A.B.C.D show ip bgp vpnv4 all summary show ip bgp vpnv4 all tags show ip bgp vpnv4 rd WORD show ip bgp vpnv4 rd WORD A.B.C.D show ip bgp vpnv4 rd WORD label
show ip bgp vpnv4 rd WORD label show ip bgp vpnv4 rd WORD neighbors show ip bgp vpnv4 rd WORD neighbors A.B.C.D show ip bgp vpnv4 rd WORD summary show ip bgp vpnv4 view WORD all show ip bgp vpnv4 vrf NAME show ip bgp vpnv4 vrf NAME A.B.C.D show ip bgp vpnv4 vrf NAME label show ip bgp vpnv4 vrf NAME summary Parameters all Displays information about all VPNv4 NLRIs A.B.C.D Network neighbors TCP and BGP neighbor connections A.B.C.D Network summary Summary display tags BGP tags for prefixes
tags BGP tags for prefixes rd Route distinguisher WORD BGP view name A.B.C.D Network label MPLS Labels for prefixes neighbors TCP and BGP neighbor connections A.B.C.D Network summary Summary display view VPNv4 NLRI-specific information WORD BGP view name © 2015 IP Infusion Inc. Proprietary 237 BGP Show Commands vrf VRF VPNv4 NLRIs NAME VPN Routing/Forwarding instance name A.B.C.D Network label MPLS Labels for prefixes summary Summary display Command Mode Privileged Exec mode and Exec mode
Command Mode Privileged Exec mode and Exec mode Example This is a sample output from the show ip bgp vpnv4 all command displaying VPNv4 specific information #show ip bgp vpnv4 all Network Next Hop Metric LocPrf Weight Path Route Distinguisher: 100:1 (VRF1) * i 10.10.9.0/24 10.10.0.1 0 141 0 65000 ? *> 10.10.9.0/24 10.10.14.50 0 0 65000 ? *> 10.10.10.0/24 10.10.14.50 0 65000 ? * i 10.10.15.0/24 10.10.0.1 141 0 65000 ? *> 10.10.15.0/24 10.10.14.50 0 0 65000 ?
*> 10.10.15.0/24 10.10.14.50 0 0 65000 ? 238 © 2015 IP Infusion Inc. Proprietary BGP Show Commands show ip bgp vpnv6 Use this command to display information relating to VPNv6 Network Layer Reachability Information (NLRI). Command Syntax show ip bgp vpnv6 all show ip bgp vpnv6 all A:B::C:D show ip bgp vpnv6 all neighbors show ip bgp vpnv6 all neighbors (A.B.C.D|X:X::X:X) show ip bgp vpnv6 all summary show ip bgp vpnv6 all tags show ip bgp vpnv6 rd WORD show ip bgp vpnv6 rd WORD label
show ip bgp vpnv6 rd WORD label show ip bgp vpnv6 rd WORD neighbors show ip bgp vpnv6 rd WORD neighbors (A.B.C.D|X:X::X:X) show ip bgp vpnv6 rd WORD summary show ip bgp vpnv6 rd WORD X:X::X:X show ip bgp vpnv6 view WORD all show ip bgp vpnv6 vrf NAME show ip bgp vpnv6 vrf NAME label show ip bgp vpnv6 vrf NAME summary show ip bgp vpnv6 vrf NAME X:X::X:X Parameters all Displays information about all VPNv4 NLRIs A:B::C:D IPv4 network neighbors TCP and BGP neighbor connections A:B::C:D IPv4 network
A:B::C:D IPv4 network X:X::X:X IPv6 network summary Summary display tags BGP tags for prefixes rd Route distinguisher WORD Route distinguisher name label MPLS labels for prefixes neighbors TCP and BGP neighbor connections A:B::C:D IPv4 network X:X::X:X IPv6 network summary Summary display X:X::X:X IPv6 network © 2015 IP Infusion Inc. Proprietary 239 BGP Show Commands view VPNv4 NLRI-specific information WORD View name all All VPNv4 NLRIs vrf VRF VPNv4 NLRIs
all All VPNv4 NLRIs vrf VRF VPNv4 NLRIs NAME VPN Routing/Forwarding instance name label MPLS labels for prefixes summary Summary display X:X::X:X IPv6 network Command Mode Privileged Exec mode and Exec mode Example #show ip bgp vpnv6 all 240 © 2015 IP Infusion Inc. Proprietary BGP Show Commands show ip extcommunity-list Use this command to display BGP routes that match an extended community list. Command Syntax show ip extcommunity-list show ip extcommunity-list (<1-199>|WORD) Parameters
Parameters <1-199> Number of extended community list WORD Name of extended community list Command Mode Privileged Exec mode and Exec mode Example #show ip extcommunity-list 33 © 2015 IP Infusion Inc. Proprietary 241 BGP Show Commands show ip protocols Use this command to display information about the IP protocols such as IP routing process parameters and statistics. Command Syntax show ip protocols show ip protocols bgp Parameters bgp BGP information Command Mode
Parameters bgp BGP information Command Mode Privileged Exec mode and Exec mode Example #show ip protocols bgp Routing Protocol is "bgp 100" Sending updates every 30 seconds with +/-50%, next due in 12 seconds Timeout after 180 seconds, garbage collect after 120 seconds Outgoing update filter list for all interface is not set Incoming update filter list for all interface is not set Default redistribution metric is 1 Redistributing: connected static
Redistributing: connected static Default version control: send version 2, receive version 2 Interface Send Recv Key-chain eth0 2 2 Routing for Networks: 10.10.0.0/24 Routing Information Sources: Gateway BadPackets BadRoutes Distance Last Update Distance: (default is 120 242 © 2015 IP Infusion Inc. Proprietary BGP Show Commands show ip vrf Use this command to display the routing information of the VRF, such as interface, route distinguisher, route-target, and so on. Command Syntax show ip vrf
so on. Command Syntax show ip vrf show ip vrf WORD Parameter WORD VRF name Command Mode Privileged Exec mode and Exec mode Example #show ip vrf VRF_A VRF VRF_A; (table=1) © 2015 IP Infusion Inc. Proprietary 243 BGP Show Commands 244 © 2015 IP Infusion Inc. Proprietary Regular Expressions Appendix A TableA-1 shows the regular expression special characters used in BGP commands. You can use these characters in combination to build complex regular expressions.
combination to build complex regular expressions. Table A-1: Regular expression characters Symbol Character Meaning ^ Caret Matches the beginning of the input string. When used at the beginning of a string of characters, it negates a pattern match. $ Dollar sign Matches the end of the input string. . Period Matches a single character (including white spaces). * Asterisk Matches none or more sequences of a pattern. + Plus sign Matches one or more sequences of a pattern.
? Question Matches none or one occurrence of a pattern. mark _ Underscore Matches spaces, commas, braces, parenthesis, or the beginning and end of an input string. [] Brackets A range of single-characters. - Hyphen Separates the end points of a range. © 2015 IP Infusion Inc. Proprietary 245 Regular Expressions 246 © 2015 IP Infusion Inc. Proprietary Index A distance 86 dump bgp all 87 aggregate-address command 170 dump bgp routes-mrt 88 aggregate-nexthop-check 29 dump bgp updates 89
aggregate-nexthop-check 29 dump bgp updates 89 auto-summary 28 exit address family mode 90 ip as-path access-list 91 B ip community-list 92, 96 ip community-list expanded 93, 94 begin modifier 17 ip community-list standard 95 BGP Commands ip extcommunity-list address-family 25 expanded 97, 98, 99 aggregate-address 27 standard 100 auto-summary 28 ip prefix-list 101, 103 bgp aggregate-nexthop-check 29 match bgp always-compare-med 30 as-path 101, 103
bgp always-compare-med 30 as-path 101, 103 bgp bestpath as-path ignore 31, 32 mpls-resolution 101, 103 bgp bestpath compare-confed-aspath 33 neighbor bgp bestpath compare-routerid 34 activate 104 bgp bestpath med 36 advertisement-interval 105 bgp client-to-client reflection 39 capability dynamic 109 bgp cluster-id 40 capability graceful-restart 110 bgp confederation identifier 41 capability orf prefix-list 111 bgp confederation peer 42 capability route-refresh 112 bgp config-type 43
capability route-refresh 112 bgp config-type 43 bgp dampening 44 collide-established 113 bgp default ipv4-unicast 46 default-originate 115 bgp default local-preference 47 distribute-list 118 bgp deterministic med 48 dont-capability-negotiate 119 bgp enforce-first-as 49 ebgp-multihop 120 bgp extended-asn-cap 50 enforce-multihop 121 bgp fast-external-failover 51 fall-over bfd 122 bgp g-shut 53 filter-list 123 bgp g-shut-capable 54 maximum-prefix 127 bgp g-shut-local-preference 55
maximum-prefix 127 bgp g-shut-local-preference 55 next-hop-self 128 bgp log-neighbor-changes 56 override-capability 129 bgp multiple-instance 57 bgp nexthop delay 58 peer-group add 132 bgp nexthop enable 59 port 133 bgp rfc1771-path-select 60 remote-as 131, 135 bgp rfc1771-strict 61 remove private-as 137 bgp router-id 62 restart-time 138 bgp scan-time 63 route-map 139 bgp update-delay 64 route-reflector-client 140 clear bgp * 66 route-server-client 142, 196
clear bgp * 66 route-server-client 142, 196 clear bgp A.B.C.D| X:X::X:X 65, 73, 171, 172 send-community 142, 196 clear bgp external 73, 177 shutdown 144 clear bgp peer-group 76, 175 soft-reconfiguration 145 clear ip bgp A.B.C.D|X:X::X:X 80, 82, 179, 189 clear ip bgp ASN 68, 70 strict-capability-match 146 clear ip bgp dampening 72 timers 147 clear ip bgp flap-statistics 75 transparent-as 148 clear ip bgp view 78 transparent-nexthop 149 debug bgp 84 unsuppress-map 150
debug bgp 84 unsuppress-map 150 © 2015 IP Infusion Inc. Proprietary 247 Index update-source 151 show bgp neighbors 216, 217, 218 version 152 show bgp paths 221 weight 153 show bgp prefix-list 222 neighbor attribute-unchanged 108 show bgp quote-regexp 223 neighbor connection-retry-time 114 show bgp regexp 223 neighbor disallow-infinite-holdtime 117 show bgp route-map 225 neighbor g-shut 124 show bgp summary 226 neighbor g-shut-timer 125 show ip bgp vpnv6 239 neighbor passive 130 braces
neighbor passive 130 braces neighbor prefix-list 134 command syntax 14 network 155 network and network backdoor 181 C redistribute 158 restart bgp graceful 160 clear bgp router bgp 161 * 66 router bgp view 162 A.B.C.D|X:X::X:X 65, 73, 171, 172 show external 73, 177 ip bgp attribute-info 233 peer-group 76, 175 ip bgp cidr-only 234 clear bgp ipv6 ip bgp community 206 A.B.C.D| X:X::X:X 65, 73, 171, 172 external 73, 177 ip bgp community-info 235 peer-group 76, 175 ip bgp community-list 207
peer-group 76, 175 ip bgp community-list 207 clear ip bgp ip bgp filter-list 211 A.B.C.D|X:X::X:X 80, 82, 179, 189 ip bgp scan 223 ASN 68, 70 ip bgp view 227 view 78 ip protocols 242 X:X::X:X vpnv6 unicast 190 show ip bgp inconsistent-as 212 collide-established 113 show ip extcommunity-list 241 command abbreviations 13 synchronization 164 command completion 12 timers 167 command line BGP Commandsbgp g-shut-local-preference 55 errors 13 BGP community value help 11
BGP community value help 11 command syntax 15 keyboard operations 16 bgp dampening 44 starting 11 bgp g-shut 53 command modes 19 bgp g-shut-capable 54 configure 19 bgp g-shut-local-preference 55 exec 19 BGP VPN Commands interface 19 bgp inbound-route-filter 184 privileged exec 19 clear ip bgp * vpnv6 unicast 185, 186 router 19 clear ip bgp X:X::X:X vpnv6 unicast 190 command negation 13 debug bgp mpls 191 command syntax import map 192 () 14 ip vrf 193 {} 14 neighbor allow-egbp-vpn 194 | 14
ip vrf 193 {} 14 neighbor allow-egbp-vpn 194 | 14 neighbor as-override 195 A.B.C.D 15 neighbor send-community 196 A.B.C.D/M 15 neighbor soo 196 AA:NN 15 route-target 199 BGP community value 15 show ip vrf 243 braces 14 BGP4+ Commands conventions 14 aggregate-address 170 curly brackets 14 match ipv6 peer 103 HH:MM:SS 15 neighbor peer-group 154 IFNAME 15 network and network backdoor 181 interface name 15 show bgp 229, 230 IPv4 address 15 show bgp dampening 206 IPv6 address 15
show bgp dampening 206 IPv6 address 15 show bgp ipv6 labeled 209 LINE 15 248 © 2015 IP Infusion Inc. Proprietary Index lowercase 14 L MAC address 15 monospaced font 14 LINE 15 numeric range 15 log-neighbor-changes command 56 parentheses 14 period 14 M square brackets 14 time 15 MAC address uppercase 14 command syntax 15 variable placeholders 15 MED 30 vertical bars 14 mpls-resolution command 101, 103 WORD 15 Multi Exit Discriminator 30 X:X::X:X 15 multiple-instance 57 X:X::X:X/M 15
X:X::X:X 15 multiple-instance 57 X:X::X:X/M 15 XX:XX:XX:XX:XX:XX 15 N configure mode 19 curly brackets neighbor command syntax 14 passive 130 peer-group add 132 D remove-private-AS 137 unsuppress-map 150 debug bgp events 84 neighbor attribute-unchanged 108 debug bgp filters 84 neighbor command debug bgp fsm 84 advertisement-interval 105 debug bgp keepalives 84 capability dynamic 109 debug bgp updates 84 capability graceful-restart 110 distance 86 capability orf prefix-list 111
distance 86 capability orf prefix-list 111 enforce-multihop 121 E route-server-client 142, 196 neighbor connection-retry-time 114 exec command mode 19 neighbor disallow-infinite-holdtime 117 exit-address-family command 90 neighbor g-shut 124 neighbor g-shut-timer 125 F network backdoor 181 network command 155 fast-external-failover 51 P G parentheses graceful restart commands command syntax 14 neighbor capability graceful-restart 110 peer-group 154 restart bgp graceful 160 period
restart bgp graceful 160 period command syntax 14 privileged exec mode 19 I IFNAME 15 R interface mode 19 ip extcommunity-list restart bgp graceful 160 standard 100 restart-time 138 ip extcommunity-list command rfc1771-path-select 60 expanded 97, 98, 99 rfc1771-strict 61 IPv4 address router mode 19 command syntax 15 IPv6 address S command syntax 15 IS-IS commands scan-time 63 set-overload-bit 164 set-overload-bit 164 show bgp command 229, 230 show bgp ipv6 labeled 209
show bgp ipv6 labeled 209 © 2015 IP Infusion Inc. Proprietary 249 Index show bgp neighbors 216, 217, 218 command syntax 15 show bgp neighbors command 216, 217, 218 show bgp paths command 221 U show bgp prefix-list command 222 show bgp quote-regexp command 223 update-delay 64 show bgp regexp command 223 show bgp route-map command 225 V show commands 17 exclude modifier 18 vertical bars include modifier 18 command syntax 14 ip extcommunity-list 241 VPN command redirect modifier 19
VPN command redirect modifier 19 bgp inbound-route-filter 184 site-of-origin 197 debug bgp mpls 191 soft-reconfiguration 145 import map 192 soo 197 neighbor as-override 195 square brackets command syntax 14 W synchronization command 164 WORD 15 T time 250 © 2015 IP Infusion Inc. Proprietary
ZebOS-XP® Network Platform Version 1.4 Extended Performance Common Data Structures Developer Guide December 2015 IP Infusion Inc. Proprietary © 2015 IP Infusion Inc. All Rights Reserved. This documentation is subject to change without notice. The software described in this document and this documentation are furnished under a license agreement or nondisclosure agreement. The software and documentation may be used or
copied only in accordance with the terms of the applicable agreement. No part of this publication may be reproduced, stored in a retrieval system, or transmitted in any form or any means electronic or mechanical, including photocopying and recording for any purpose other than the purchaser's internal use without the written permission of IP Infusion Inc. IP Infusion Inc. 3965 Freedom Circle, Suite 200 Santa Clara, CA 95054 +1 408-400-1900 http://www.ipinfusion.com/
+1 408-400-1900 http://www.ipinfusion.com/ For support, questions, or comments via E-mail, contact: support@ipinfusion.com Trademarks: IP Infusion, OcNOS, VirNOS, ZebM, ZebOS, and ZebOS-XP are trademarks or registered trademarks of IP Infusion. All other trademarks, service marks, registered trademarks, or registered service marks are the property of their respective owners. ii IP Infusion Inc. Proprietary Contents
owners. ii IP Infusion Inc. Proprietary Contents Preface . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . v Audience . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .v Conventions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .v
Contents . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .v Related Documents. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .v Support . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .v
Comments. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . vi CHAPTER 1 Common Data Structures . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 7 bridge_id . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .8
cli . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .9 connected . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .13 interface. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .15
lib_globals . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .25 nsm_bridge . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .32 nsm_bridge_master. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .37
nsm_master . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .39 pal_in4_addr. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .46 pal_in6_addr. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .46
prefix. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .47 prefix_ipv4. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .48 prefix_ipv6. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .49
rib . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .50 stream . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .53 thread. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .54
variable . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .56 © 2015 IP Infusion Inc. Proprietary iii Contents iv © 2015 IP Infusion Inc. Proprietary Preface Each ZebOS-XP developer guide describes data structures that are unique to that protocol or module. This guide describes data structures that are used by multiple ZebOS-XP protocols or modules. Audience
Audience This guide is intended for developers who write code to customize and extend ZebOS-XP. Conventions TableP-1 shows the conventions used in this guide. Table P-1: Conventions Convention Description Italics Emphasized terms; titles of books Note: Special instructions, suggestions, or warnings monospaced type Code elements such as commands, functions, parameters, files, and directories Contents This guide contains this chapter: • Chapter1, Common Data Structures Related Documents
Related Documents Use this guide along with the ZebOS-XP developer guide for the protocol or module you are extending or customizing. Note: All ZebOS-XP technical manuals are available to licensed customers at http://www.ipinfusion.com/support/ document_list. Support For support-related questions, contact support@ipinfusion.com. © 2015 IP Infusion Inc. Proprietary v Preface Comments If you have comments, or need to report a problem with the content, contact techpubs@ipinfusion.com.
vi © 2015 IP Infusion Inc. Proprietary Common Data Structures CHAPTER 1 This chapter describes the data structures that are used by multiple ZebOS-XP modules: • bridge_id • cli • connected • interface • lib_globals • nsm_bridge • nsm_bridge_master • nsm_master • pal_in4_addr • pal_in6_addr • prefix • prefix_ipv4 • prefix_ipv6 • rib • stream • thread • variable © 2015 IP Infusion Inc. Proprietary 7 Common Data Structures bridge_id
Common Data Structures bridge_id This data structure represents a bridge priority and bridge MAC address of a connected node. This data structure is defined in the lib/L2/l2lib.h file. Member Description prio Bridge priority addr Bridge MAC address Definition struct bridge_id { unsigned char prio[2]; unsigned char addr[ETHER_ADDR_LEN]; }; 8 © 2015 IP Infusion Inc. Proprietary Common Data Structures cli
Common Data Structures cli This data structure represents a command that a user has given. This data structure is defined in the lib/cli.h file. Member Description cel CLI element str User input string out_func Output function used by cli_out out_val Output function's first argument line Arbitrary information for line auth Authorization required source Input source line_type For line min Line minimum max Line maximum index Real CLI index_sub Real CLI mode Real CLI status Current CLI status
mode Real CLI status Current CLI status flags Flags self Arbitrary information for self privilege Privilege level ctree CLI tree zg Daemon-spefic library globals vr Global variable lines Terminal length callback Call back function cleanup Call back function show_func Call back function type Type of CLI © 2015 IP Infusion Inc. Proprietary 9 Common Data Structures Member Description count Total count current Arbitrary information about current node arg Look up argument
arg Look up argument afi Address family information safi Specific address family information port_range Layer 2 handling cv Vector used by IMI to encode a single command string Definition struct cli { /* CLI element. */ struct cli_element *cel; /* User input string. */ char *str; /* Output function to be used by cli_out(). */ CLI_OUT_FUNC out_func; /* Output function's first argument. */ void *out_val; /* Alternate storage for cli_out() message */ char *out_snoop_buf;
char *out_snoop_buf; /* Arbitrary information for line. */ void *line; int min; int max; /* Auth required. */ int auth; /* Input source. */ int source; #define CLI_SOURCE_USER 0 #define CLI_SOURCE_FILE 1 /* For "line". */ int line_type; int min; 10 © 2015 IP Infusion Inc. Proprietary Common Data Structures int max; /* Real CLI. */ void *index; void *index_sub; int mode; /* Current CLI status. */ enum { CLI_NORMAL, CLI_CLOSE, CLI_MORE, CLI_CONTINUE, CLI_MORE_CONTINUE, CLI_WAIT } status;
CLI_MORE_CONTINUE, CLI_WAIT } status; /* Flags. */ u_char flags; #define CLI_FROM_PVR (1 << 0) void *self; u_char privilege; struct cli_tree *ctree; /* Global variable. */ struct lib_globals *zg; struct ipi_vr *vr; /* Terminal length. */ int lines; /* Call back function. */ int (*callback) (struct cli *); int (*cleanup) (struct cli *); s_int32_t (*show_func) (struct cli *); int type; u_int32_t count; void *current; void *arg; afi_t afi; safi_t safi; #ifdef HAVE_CUSTOM1 /* L2 handling. */
#ifdef HAVE_CUSTOM1 /* L2 handling. */ u_int64_t port_range; #endif /* HAVE_CUSTOM1 */ /* Vector used by IMI to encode a single CLI command string. */ cfg_vect_t *cv; © 2015 IP Infusion Inc. Proprietary 11 Common Data Structures /* Parse result saved for non-interactive shells */ unsigned parse_result; }; 12 © 2015 IP Infusion Inc. Proprietary Common Data Structures connected This data structure represents all connected addresses. This data structure is defined in the lib/if.h file.
Member Description next Pointer to the next connected network prev Pointer to the previous connected network ifp Attached interface family Address family for prefix conf Flags for configuration storageType Storage type flags Flags for connected address address Address of connected network destination Address of destination connected network label Label for Linux 2.2.X and upper lib_connected_cdr_ref Lib connected checkpoint database record reference ip_last_changed IP MIB timestamp
ip_last_changed IP MIB timestamp ip_created IP MIB timestamps ip_enabled IPv4 capability is enabled Definition struct connected { struct connected *next; struct connected *prev; /* Attached interface. */ struct interface *ifp; /* Address family for prefix. */ u_int8_t family; /* Flags for configuration. */ u_int8_t conf; #define NSM_IFC_REAL (1 << 0) #define NSM_IFC_CONFIGURED (1 << 1) #define NSM_IFC_ARBITER (1 << 2) © 2015 IP Infusion Inc. Proprietary 13 Common Data Structures
Common Data Structures #define NSM_IFC_ACTIVE (1 << 3) #define NSM_IFC_MARKED (1 << 4) u_int8_t storageType; #define NSM_IFC_STORAGETYPE_OTHER 1 #define NSM_IFC_STORAGETYPE_VOLATILE 2 #define NSM_IFC_STORAGETYPE_NONVOLATILE 3 #define NSM_IFC_STORAGETYPE_PERMANENT 4 #define NSM_IFC_STORAGETYPE_READONLY 5 /* Flags for connected address. */ /* XXX-VR */ u_int8_t flags; #define NSM_IFA_SECONDARY (1 << 0) #define NSM_IFA_ANYCAST (1 << 1) #define NSM_IFA_VIRTUAL (1 << 2) #ifdef HAVE_VRX
#define NSM_IFA_VIRTUAL (1 << 2) #ifdef HAVE_VRX #define NSM_IFA_VRX_WRP (1 << 3) #endif /* HAVE_VRX */ #ifdef HAVE_HA #define NSM_IFA_HA_DELETE (1 << 4) #endif /* HAVE_HA */ #ifdef HAVE_VRRP_V3 #define NSM_IFA_VRRP (1 << 5) #endif /* HAVE_VRRP_V3 */ /* Address of connected network. */ struct prefix *address; struct prefix *destination; /* Label for Linux 2.2.X and upper. XXX-VR */ char *label; #ifdef HAVE_HA HA_CDR_REF lib_connected_cdr_ref; #endif /* HAVE_HA */ /*IP MIB timestamps*/
#endif /* HAVE_HA */ /*IP MIB timestamps*/ pal_time_t ip_last_changed; pal_time_t ip_created; #ifdef HAVE_L3 /* IPv4 capability is enabled */ bool_t ip_enabled; #endif /* HAVE_L3 */ }; 14 © 2015 IP Infusion Inc. Proprietary Common Data Structures interface This data structure represents an interface. This data structure is defined in the lib/if.h file. Member Description name Interface name orig Interface name mapping ifindex Interface index cindex Interface attribute update flags
cindex Interface attribute update flags flags Interface flags status ZebOS-XP internal interface status storm_control_properties Storm control featrues metric Interface metric mtu Interface MTU duplex Interface duplex status autonego Interface auto-negotiation flowcontrol Flow control autoneg_bits_advt Interface auto-negotiation bits (IANA notation) for advertisement autoneg_fault_advt Interface auto-negotiation fault for advertisement mdix Medium Dependent Interface with crossover
mdix Medium Dependent Interface with crossover arp_ageing_timeout Interface ARP aging timeout arp_p Neighbor discovery slot_id Slot identifier hw_type Hardware address (type) hw_addr Hardware address hw_addr_len Hardware address length bandwidth Interface bandwidth, bytes per second if_linktrap Interface link up or link down traps trap_linkup SNMP server link trap trap_linkdown SNMP server link trap © 2015 IP Infusion Inc. Proprietary 15 Common Data Structures Member Description
Common Data Structures Member Description if_alias Interface alias name conf_flags Whether the bandwidth has been configured or read from the kernel desc Description of the interface mau_default_type ifMauDefaultType object support (MAU MIB); should be assigned with a valu from enum nsm_iana_if_mau_type_list_bits default_duplex ifMauDefaultType object support (MAU MIB) default_bandwidth ifMauDefaultType object support (MAU MIB) ifc_ipv4 Connected address list
ifc_ipv4 Connected address list ifc_ipv6 Connected IPv6 address list unnumbered_ipv4 Unnumbered interface list unnumbered_ipv6 Unnumbered IPv6 interface list info Daemon specific interface data pointer vr Pointer to virtual router context vrf Pointer to VRF context stats Statistics fields tunnel_if Tunnel interface ls_data Label space admin_group Administrative group to which this interface belongs to max_resv_bw Maximum amount of bandwidth that can be reserved (bytes)
bw_constraint Bandwidth constraint per class type (bytes) tecl_priority_bw Available bandwidth at priority “P” (range 0 to 8) bind Bind information num_dl Number of data links. Based on this information, the system either uses the tree interface (datalink less than 1) or uses the pointer to the datalink structure. This is GMPLS information. gmpls_type Type, which may include unknown, data, control, and data-control gifindex GMPLS interface index phy_prop GMPLS interface common properties
phy_prop GMPLS interface common properties dlink Pointer to datalink port Port information 16 © 2015 IP Infusion Inc. Proprietary Common Data Structures Member Description bridge_name Bridge name lacp_admin_key LACP administration key agg_param_update LACP aggregator update flag lacp_agg_key LACP aggregator key bc_mode Bandwidth constrain mode for each interface vrx_flag Flag for virtual router for CheckPoint VSX type local_flag Local source vrx_if_info Related VRX information
vrx_if_info Related VRX information ifLastChange Time for last status change pid Process ID type Interface type L2/L3 config_duplex Stores the configured duplex value trust_state QoS set trust state for port vlan_classifier_group_id VLAN classifier group ID clean_pend_resp_list List of NSM clients pending response on interface delete message interface_cdr_ref High Availability (HA) interface Checkpoint Abstraction Layer (CAL) created record reference value chkpt_info MPLS HA
record reference value chkpt_info MPLS HA nsm_mpls_if_cdr_ref MPLS HA rmap_if_match_cmd_list Route map match interface set list sync_params LDP-IGP synchronization parameters nsm_band_width_profile Interface BW- Configured CIR/EIR sync rmap_name PBR: route map tag rmap_type PBR: route map type rmap_status PBR: route map status ipv6_enabled IPv6 capability is enabled ipv6_forwarding IPv6 capability is enabled ip_enabled IPv4 capability is enabled © 2015 IP Infusion Inc. Proprietary 17
© 2015 IP Infusion Inc. Proprietary 17 Common Data Structures Definition struct interface { /* Interface name. */ char name[INTERFACE_NAMSIZ + 1]; #ifdef HAVE_INTERFACE_NAME_MAPPING char orig[INTERFACE_NAMSIZ + 1]; #endif /* HAVE_INTERFACE_NAME_MAPPING */ /* Interface index. */ s_int32_t ifindex; /* Interface attribute update flags. */ u_int32_t cindex; /* Interface flags. */ u_int32_t flags; /* ZebOS internal interface status */ u_int32_t status; /* Storm Control Features */
u_int32_t status; /* Storm Control Features */ struct storm_control storm_control_properties; #define NSM_INTERFACE_ACTIVE (1 << 0) #define NSM_INTERFACE_ARBITER (1 << 1) #define NSM_INTERFACE_MAPPED (1 << 2) #define NSM_INTERFACE_MANAGE (1 << 3) #define NSM_INTERFACE_DELETE (1 << 4) #define NSM_INTERFACE_IPV4_UNNUMBERED (1 << 5) #define NSM_INTERFACE_IPV6_UNNUMBERED (1 << 6) #ifdef HAVE_HA #define HA_IF_STALE_FLAG (1 << 7) #endif /* HAVE_HA */ #define IF_HIDDEN_FLAG (1 << 8)
#define IF_HIDDEN_FLAG (1 << 8) #define IF_NON_CONFIGURABLE_FLAG (1 << 9) #define IF_NON_LEARNING_FLAG (1 << 10) /*in running config this should be display only after the phy Intf*/ #define IF_DEPENDS_ON_PHY_INTF (1 << 11) #define NSM_IF_NO_NOTIFICATION_IMI (1 << 12) #ifdef HAVE_MT #define NSM_INTERFACE_NS_CHANGE (1 << 13) #endif /* HAVE_MT && ENABLE_PAL_PATH*/ #define IF_ARP_REFRESH_DISABLED (1 << 15) #ifdef HAVE_DHCP_CLIENT #define IF_ADDRESS_DHCP (1 << 16) #define IF_ADDRESS_DHCP6 (1 << 17)
#define IF_ADDRESS_DHCP6 (1 << 17) #endif 18 © 2015 IP Infusion Inc. Proprietary Common Data Structures /* Interface metric */ s_int32_t metric; /* Interface MTU. */ s_int32_t mtu; /* Interface DUPLEX status. */ u_int32_t duplex; /* Interface AUTONEGO. */ u_int32_t autonego; /* Flowcontrol */ u_int8_t flowcontrol; #define FLOW_SEND_ON (1 << 0) #define FLOW_RECEIVE_ON (1 << 1) /* Interface Auto-Negotiation bits (IANA notation) for advertisement */ u_int32_t autoneg_bits_advt;
u_int32_t autoneg_bits_advt; /* Interface Auto-Negotiation fault for advertisement */ u_int8_t autoneg_fault_advt; /* Interface MDIX crossover. */ u_int32_t mdix; /* Interface ARP AGEING TIMEOUT. */ u_int32_t arp_ageing_timeout; #ifdef HAVE_NDD struct arp_params arp_p; #endif /* HAVE_NDD */ /* Slot Id. */ u_int32_t slot_id; /* Hardware address. */ u_int16_t hw_type; u_int8_t hw_addr[INTERFACE_HWADDR_MAX]; s_int32_t hw_addr_len; #define LIB_UNIT_KBPS 1000 /* interface bandwidth, bytes/s */
/* interface bandwidth, bytes/s */ float64_t bandwidth; /*Interface link up or link down traps */ s_int32_t if_linktrap; #ifdef HAVE_SNMP_AGENT © 2015 IP Infusion Inc. Proprietary 19 Common Data Structures /*snmp-server enable link trap*/ s_int32_t trap_linkup; s_int32_t trap_linkdown; #endif /* HAVE_SNMP_AGENT */ /* Interface alias name */ char if_alias[INTERFACE_NAMSIZ + 1]; /* Has the bandwidth been configured/read from kernel. */ char conf_flags; #define NSM_BANDWIDTH_CONFIGURED (1 << 0)
#define NSM_BANDWIDTH_CONFIGURED (1 << 0) #define NSM_MAX_RESV_BW_CONFIGURED (1 << 1) //#define NSM_SWITCH_CAP_CONFIGURED (1 << 2) #define NSM_DUPLEX_CONFIGURED (1 << 2) #define NSM_MIN_LSP_BW_CONFIGURED (1 << 3) #define NSM_MAX_LSP_SIZE_CONFIGURED (1 << 4) /* description of the interface. */ char *desc; #ifdef HAVE_L2 /* ifMauDefaultType object support (MAU MIB). Should be assigned with a value * from enum nsm_iana_if_mau_type_list_bits */ u_int8_t mau_default_type; u_int32_t default_duplex;
u_int32_t default_duplex; float default_bandwidth; #endif /* HAVE_L2 */ /* Connected address list. */ struct connected *ifc_ipv4; #ifdef HAVE_IPV6 struct connected *ifc_ipv6; #endif /* HAVE_IPV6 */ /* Unnumbered interface list. */ struct list *unnumbered_ipv4; #ifdef HAVE_IPV6 struct list *unnumbered_ipv6; #endif /* HAVE_IPV6 */ /* Daemon specific interface data pointer. */ void *info; /* Pointer to VR/VRF context. */ struct ipi_vr *vr; struct ipi_vrf *vrf; /* Statistics fileds. */
struct ipi_vrf *vrf; /* Statistics fileds. */ struct pal_if_stats stats; #ifdef HAVE_TUNNEL 20 © 2015 IP Infusion Inc. Proprietary Common Data Structures /* Tunnel interface. */ struct tunnel_if *tunnel_if; #endif /* HAVE_TUNNEL */ #ifdef HAVE_MPLS /* Label space */ struct label_space_data ls_data; #endif /* HAVE_MPLS */ #ifdef HAVE_TE /* Administrative group that this if belongs to */ u_int32_t admin_group; /* Maximum reservable bandwidth (bytes/s) */ float32_t max_resv_bw; #ifdef HAVE_DSTE
float32_t max_resv_bw; #ifdef HAVE_DSTE /* Bandwidth constraint per class types (bytes/s) */ float32_t bw_constraint[MAX_BW_CONST]; #endif /* HAVE_DSTE */ /* Available bandwidth at priority p, 0 <= p < 8 */ float32_t tecl_priority_bw [MAX_PRIORITIES]; #endif /* HAVE_TE */ /* Bind information. */ u_char bind; #define NSM_IF_BIND_VRF (1 << 0) #define NSM_IF_BIND_MPLS_VC (1 << 1) #define NSM_IF_BIND_MPLS_VC_VLAN (1 << 2) #define NSM_IF_BIND_VPLS (1 << 3) #define NSM_IF_BIND_VPLS_VLAN (1 << 4)
#define NSM_IF_BIND_VPLS_VLAN (1 << 4) #ifdef HAVE_GMPLS /* GMPLS information */ /* Number of data links. Based on this information we will either use the tree if dl > 1 or use the pointer to the datalink structure */ u_char num_dl; /* Type includes unknow/data/control/data-control */ u_char gmpls_type; u_int32_t gifindex; /* GMPLS interface common properties */ struct phy_properties phy_prop; /* Pointer to datalink */ union © 2015 IP Infusion Inc. Proprietary 21 Common Data Structures {
Common Data Structures { struct avl_tree *dltree; struct datalink *datalink; }dlink; #endif /* HAVE_GMPLS */ #ifdef HAVE_L2 void *port; char bridge_name[INTERFACE_NAMSIZ + 1 ]; #endif /* HAVE_L2 */ #ifdef HAVE_LACPD u_int16_t lacp_admin_key; u_int16_t agg_param_update; u_int32_t lacp_agg_key; #endif /* HAVE_LACPD */ #ifdef HAVE_DSTE /* Bandwdith constrain mode for every interface. */ bc_mode_t bc_mode; #endif /* HAVE_DSTE */ #ifdef HAVE_VRX u_char vrx_flag; #define IF_VRX_FLAG_NORMAL 0
u_char vrx_flag; #define IF_VRX_FLAG_NORMAL 0 #define IF_VRX_FLAG_WRPJ 1 #define IF_VRX_FLAG_WRP 2 /* Local src. */ u_char local_flag; #define IF_VRX_FLAG_LOCALSRC 1 /* Related VRX information. */ struct vrx_if_info *vrxif; #endif /* HAVE_VRX */ pal_time_t ifLastChange; #ifdef HAVE_CUSTOM1 int pid; #endif /* HAVE_CUSTOM1 */ u_char type; /* Interface type L2/L3 */ #define IF_TYPE_L3 0 #define IF_TYPE_L2 1 #ifdef HAVE_TDM_VC #define IF_TYPE_TDM 2 #endif /* Maximum L2 MTUs */
#endif /* Maximum L2 MTUs */ 22 © 2015 IP Infusion Inc. Proprietary Common Data Structures #if defined (HAVE_VLAN_STACK) || defined (HAVE_PROVIDER_BRIDGE) #define IF_ETHER_L2_DEFAULT_MTU 1526 #elif defined (HAVE_VLAN) #define IF_ETHER_L2_DEFAULT_MTU 1522 #else #define IF_ETHER_L2_DEFAULT_MTU 1518 #endif /* To store the configured duplex value */ u_char config_duplex; #ifdef HAVE_QOS int trust_state; #endif /* HAVE_QOS */ #ifdef HAVE_VLAN_CLASS u_int32_t vlan_classifier_group_id;
u_int32_t vlan_classifier_group_id; #endif /* HAVE_VLAN_CLASS */ struct list *clean_pend_resp_list; #ifdef HAVE_HA HA_CDR_REF interface_cdr_ref; #ifdef HAVE_MPLS s_int32_t chkpt_info; HA_CDR_REF nsm_mpls_if_cdr_ref; #endif /* HAVE_MPLS */ #endif /* HAVE_HA */ struct list *rmap_if_match_cmd_list; /*LDP-IGP Sync */ void *sync_params; /*Interface BW- Configured CIR/EIR sync*/ struct nsm_band_width_profile *bw_profile; #ifdef HAVE_PBR #define NSM_NO_RMAP 0 #define NSM_IP_RMAP 1
#define NSM_NO_RMAP 0 #define NSM_IP_RMAP 1 #define NSM_IPV6_RMAP 2 char *rmap_name; u_int8_t rmap_type; /*ip/ipv6*/ #define NSM_RMAP_INACTIVE 0 #define NSM_RMAP_ACTIVE 1 u_int8_t rmap_status; #endif /*HAVE_PBR*/ #ifdef HAVE_IPV6 /* IPv6 capability is enabled */ bool_t ipv6_enabled; © 2015 IP Infusion Inc. Proprietary 23 Common Data Structures bool_t ipv6_forwarding; #endif /* HAVE_IPV6 */ #ifdef HAVE_L3 /* IPv4 capability is enabled */ bool_t ip_enabled; #endif /* HAVE_L3 */ };
bool_t ip_enabled; #endif /* HAVE_L3 */ }; 24 © 2015 IP Infusion Inc. Proprietary Common Data Structures lib_globals This data structure represents daemon-specific library globals. Each instance of a daemon maintains an instance of this structure. This data structure is defined in the lib/lib.h file. Member Description progname Daemon name hostname Host name protocol Module ID defined in pal/api/pal_modules.def flags Flags stop_cause Module stop callbacks motd Banner configuration
motd Banner configuration logging_level_list Show logging level module_severity Module (process) severity cwd Current working directory master Thread master pend_read_thread Pending read threads ifg Interface masters vr_vec Virtual router vector vr_deleted_vec Virtual router vector fib2vrf VRF vector for Kernel Table ID mapping log Logging information log_default Default log disable_log HAdisable log snmp SNMP: agentx or SMUX gifindex GMPS interface index vr_callback Callback function
vr_callback Callback function vrf_callback Callback function user_callback Callback function host_user Callback function © 2015 IP Infusion Inc. Proprietary 25 Common Data Structures Member Description nc NSM client rc ribd client mcast Multicast globals bs BFD server bc BFD client vlog_clt VLOG client vlog_file_set_cb Callback installed by both IMI and VLOGD vlog_file_unset_cb Callback installed by both IMI and VLOGD vlog_file_get_cb Callback installed by both IMI and VLOGD os ONM server
os ONM server oc ONM client ms MSTP server mc MSTP client vs VPORT server vc VPORT client ping_flag Ping flag ping_fib Ping FIB vr_instance Virtual router instance pal_debug PAL debug pal_kernel PAL kernel pal_log PAL log pal_np PAL pal_np PAL pal_socket PAL socket pal_stdlib PAL standard library pal_string PAL string pal_time PAL time vty_master VTY master structure 26 © 2015 IP Infusion Inc. Proprietary Common Data Structures Member Description ctree CLI tree imh IMI message handler
ctree CLI tree imh IMI message handler ss Show server alarm_smi_server SMI server alarm config_smi_server SMI server configuraiton pal_vrrp VRRPv2 PAL data structure pointer handle License manager handle t_check_expiration Timer thread to check the license expiration lib_ha High Availability structure am_ptr Availability Management pointer lib_fm Fault management - fault recording proto Protocol globals vr_in_cxt Virtual router currently in context vr_global Global virtual router
vr_global Global virtual router ssock_cb_zombie_list Stream socket-CB zombies list cqueue_buf_free_list Circular queue buffers free list commsg Instance of COMMSG transport for this daemon lib_acl_ntf_cb Access-list add/delete notification callback gmif GMPLS interface should be allocated when needed mt_cxt Multitenancy context Definition struct lib_globals { char progname[LIB_MAX_PROG_NAME+1]; /* for hostname */ char hostname[LIB_MAX_HOSTNAME+1];
char hostname[LIB_MAX_HOSTNAME+1]; /* Module ID defined in pal/api/pal_modules.def. */ module_id_t protocol; © 2015 IP Infusion Inc. Proprietary 27 Common Data Structures /* Flags */ u_int8_t flags; #define LIB_FLAG_SHUTDOWN_IN_PROGRESS (1 << 0) #if defined HAVE_RESTART || defined HAVE_RSVP_GRST #define LIB_FLAG_GRACEFUL_SHUTDOWN_IN_PROGRESS (1 << 1) #endif /* HAVE_RESTART || HAVE_RSVP_GRST */ mod_stop_cause_t stop_cause; /* Banner configuration. */ char *motd; /* for show logging level */
char *motd; /* for show logging level */ struct list *logging_level_list; /* module(process) severity */ s_int32_t module_severity; /* Current working directory. */ char *cwd; /* Thread master. */ struct thread_master *master; struct thread *pend_read_thread; /* Interface Master. */ struct if_master ifg; /* VR vector. */ vector vr_vec; /* VR vector. */ vector vr_deleted_vec; /* VRF vector for Kernel Table ID mapping. */ vector fib2vrf; /* Host */ struct host *host; /* Log. */ struct zlog *log;
struct host *host; /* Log. */ struct zlog *log; struct zlog *log_default; #ifdef HAVE_HA bool_t disable_log; #endif /* HAVE_HA */ #ifdef HAVE_SNMP /* snmp : agentx or smux */ struct snmp_master snmp; #endif /* HAVE_SNMP */ 28 © 2015 IP Infusion Inc. Proprietary Common Data Structures #ifdef HAVE_GMPLS s_int32_t gifindex; #endif /* HAVE_GMPLS */ /* Callback functions. */ int (*vr_callback[VR_CALLBACK_MAX]) (struct ipi_vr *); int (*vrf_callback[VRF_CALLBACK_MAX]) (struct ipi_vrf *);
int (*user_callback[USER_CALLBACK_MAX]) (struct ipi_vr *, struct host_user *); /* NSM client. */ struct nsm_client *nc; #ifdef HAVE_RIBD struct rib_client *rc; #endif /* HAVE_RIBD */ #ifdef HAVE_MCAST struct mcast_globals *mcast; #endif /* HAVE_MCAST */ #if defined (HAVE_BFD) || defined (HAVE_MPLS_OAM) /* BFD server. This will be moved to bfd_globals later. */ struct bfd_server *bs; /* BFD client. */ struct bfd_client *bc; #endif /* defined (HAVE_BFD) || defined (HAVE_MPLS_OAM) */
#ifdef HAVE_VLOGD /* VLOG client. */ struct vlog_client *vlog_clt; /* Callbacks to be installed by IMI and VLOGD. */ VLOG_SET_LOG_FILE_CB vlog_file_set_cb; VLOG_UNSET_LOG_FILE_CB vlog_file_unset_cb; VLOG_GET_LOG_FILE_CB vlog_file_get_cb; #endif /* HAVE_VLOGD */ /* ONM client. */ struct onm_server *os; struct onm_client *oc; struct mstp_server *ms; struct mstp_client *mc; #ifdef HAVE_VPORT struct vport_server *vs; struct vport_client *vc; #endif /* HAVE_VPORT */
struct vport_client *vc; #endif /* HAVE_VPORT */ © 2015 IP Infusion Inc. Proprietary 29 Common Data Structures /* VR. */ #ifdef HAVE_VRF #ifdef HAVE_VRF_NS bool_t ping_flag; fib_id_t ping_fib; #endif /*HAVE_VRF_NS*/ #endif /*HAVE_VRF*/ u_int32_t vr_instance; /* PAL. */ pal_handle_t pal_debug; pal_handle_t pal_kernel; pal_handle_t pal_log; pal_handle_t pal_np; pal_handle_t pal_socket; pal_handle_t pal_stdlib; pal_handle_t pal_string; pal_handle_t pal_time; /* Vty master structure. */
/* Vty master structure. */ struct vty_server *vty_master; /* CLI tree. */ struct cli_tree *ctree; /* IMI message handler. */ struct message_handler *imh; /* Show server. */ struct show_server *ss; #ifdef HAVE_SMI struct smi_server *alarm_smi_server; struct smi_server *config_smi_server; #endif /*HAVE_SMI */ #ifdef HAVE_VRRPD /* VRRPv2 PAL data structure pointer. */ pal_handle_t pal_vrrp; #endif /* HAVE_VRRPD */ #ifdef HAVE_LICENSE_MGR lic_mgr_handle_t handle; struct thread *t_check_expiration;
struct thread *t_check_expiration; #endif /* HAVE_LICENSE_MGR */ #ifdef HAVE_HA LIB_HA lib_ha; AM_PTR am_ptr; 30 © 2015 IP Infusion Inc. Proprietary Common Data Structures #endif /* HAVE_HA */ /* Fault Management - Fault Recording. */ void *lib_fm; /* Protocol Globals. */ void *proto; /* VR currently in context */ struct ipi_vr *vr_in_cxt; /* Stream Socket-CB Zombies List */ struct list *ssock_cb_zombie_list; /* Circular Queue Buffers Free List */ struct cqueue_buf_list *cqueue_buf_free_list;
struct cqueue_buf_list *cqueue_buf_free_list; /* Instance of COMMSG transport for this daemon. */ COMMSG *commsg; /* Access-list add/delete notification callback. */ filter_ntf_cb_t lib_acl_ntf_cb; #ifdef HAVE_GMPLS /* gmpls_if should be allocated when needed */ struct gmpls_if *gmif; #endif /* HAVE_GMPLS */ #ifdef HAVE_MT /* MT currently in context */ struct imish_mt *mt_cxt; #endif /* HAVE_MT */ }; © 2015 IP Infusion Inc. Proprietary 31 Common Data Structures nsm_bridge
Common Data Structures nsm_bridge This data structure represents a NSM bridge (switch). This data structure is defined in the nsm/L2/nsm_bridge.h file. Member Description next nsm_bridge Next node pprev nsm_bridge previous node name Name type Type is_default Default bridge ageing_time Aging Time for FDB entries enable Spanning tree enable provider_edge Provider edge enable backbone_edge Back none edge enable bridge_id Bridge Identifier bridge_mac Bridge mac
bridge_id Bridge Identifier bridge_mac Bridge mac pbb_te_group_tree PBB TE group avl tree vip_port_map VIP port map learning Indicates whether the bridge is learning bridge avl_tree port_tree Port list port_id_mgr SNPM port ID manager static_fdb_list Static FDB list bridge_listener_list Bridge listener list vlan_table VLAN table stp_decoupled_vlan_tabl VLAN table svlan_table SVLAN table stp_decoupled_svlan_table Decoupled SVLAN table pro_edge_swctx_table Pro edge Switching Context table
cvlan_reg_tab_list CVLAN list 32 © 2015 IP Infusion Inc. Proprietary Common Data Structures Member Description vlan_listener_list VLAN listener list bvlan_table bridged VLAN list stp_decoupled_bvlan_table Stp bridged VLAN decoupled list event Thread event master Back pointer to bridge master gvrp GVRP structure for the bridge gmrp_list GMRP structure for the bridge gmrp_bridge GMRP bridge gmrp_ext_filter:1 Enable Extended filtering option vlan_num_deletes VLAN num deletes
vlan_num_deletes VLAN num deletes br_conf Pointer to configuration store traffic_class_enabled L2 traffic class status topology_type Topology type - none/ring - currently used to support RSTP num_cosq Number of Class of Service queues eps_tree eps tree raps_tree raps tree dcbg nsm dcb bridge evc_tree evc avl tree routed_vlan_tree AVL tree for Routed VLANs max_mst_instances Maximum number of mst instances uni_type_mode UNI type; enabled, disabled or not the bridge Definition struct nsm_bridge {
Definition struct nsm_bridge { struct nsm_bridge *next; struct nsm_bridge **pprev; /* Name. */ char name[NSM_BRIDGE_NAMSIZ + 1]; /* Type. */ © 2015 IP Infusion Inc. Proprietary 33 Common Data Structures u_int8_t type; u_int8_t is_default; /* Ageing Time for fdb entries */ u_int32_t ageing_time; /* Spanning tree Enable */ u_int16_t enable; #ifdef HAVE_PROVIDER_BRIDGE u_int8_t provider_edge:1; #endif /* HAVE_PROVIDER_BRIDGE */ #if defined (HAVE_I_BEB) || defined (HAVE_B_BEB)
#if defined (HAVE_I_BEB) || defined (HAVE_B_BEB) u_int8_t backbone_edge:1; u_int32_t bridge_id; u_int8_t bridge_mac[ETHER_ADDR_LEN]; #endif /* HAVE_I_BEB || HAVE_B_BEB */ #if defined (HAVE_PBB_TE) struct avl_tree *pbb_te_group_tree; #endif /* HAVE_I_BEB && HAVE_B_BEB && HAVE_PBB_TE */ #if defined (HAVE_I_BEB) u_int8_t vip_port_map[512]; #endif /* HAVE_I_BEB */ #define NSM_BRIDGE_AGEING_DEFAULT 300 /* learning. Whether the bridge is learning bridge or not */ int learning;
int learning; #define NSM_LEARNING_BRIDGE_SET 1 #define NSM_LEARNING_BRIDGE_UNSET 0 /* Port list. */ struct avl_tree *port_tree; #ifdef HAVE_SNMP struct bitmap *port_id_mgr; #endif /* HAVE_SNMP */ /* Static FDB List */ struct ptree *static_fdb_list; struct list *bridge_listener_list; #ifdef HAVE_VLAN /* VLAN table. */ struct avl_tree *vlan_table; struct avl_tree *stp_decoupled_vlan_table; 34 © 2015 IP Infusion Inc. Proprietary Common Data Structures struct avl_tree *svlan_table;
struct avl_tree *svlan_table; struct avl_tree *stp_decoupled_svlan_table; struct avl_tree *pro_edge_swctx_table; struct list *cvlan_reg_tab_list; struct list *vlan_listener_list; #ifdef HAVE_B_BEB struct avl_tree *bvlan_table; struct avl_tree *stp_decoupled_bvlan_table; #endif /* HAVE_B_BEB */ #endif /* HAVE_VLAN */ /* Thread event. */ struct thread *event; /* Back pointer to bridge master. */ struct nsm_bridge_master *master; #ifdef HAVE_GVRP /* Gvrp structure for the bridge */
/* Gvrp structure for the bridge */ struct gvrp *gvrp; #endif /* HAVE_GMRP */ #ifdef HAVE_GMRP /* Gmrp structure for the bridge */ struct avl_tree *gmrp_list; struct gmrp_bridge *gmrp_bridge; unsigned char gmrp_ext_filter:1; #endif /* HAVE_GVRP */ u_int32_t vlan_num_deletes ; /* Pointer to configuration store */ struct nsm_bridge_config *br_conf; u_int8_t traffic_class_enabled; /* Topology type - none/ring - currently used to support RRSTP */ enum nsm_topology topology_type; #ifdef HAVE_HA
enum nsm_topology topology_type; #ifdef HAVE_HA HA_CDR_REF nsm_bridge_cdr_ref; #endif /* HAVE_HA */ #ifdef HAVE_QOS /* Num of Class of service queues */ s_int32_t num_cosq; #endif /* HAVE_QOS */ #ifdef HAVE_G8031 struct avl_tree * eps_tree; #endif /* HAVE_G8031 */ #ifdef HAVE_G8032 © 2015 IP Infusion Inc. Proprietary 35 Common Data Structures struct avl_tree *raps_tree; #endif /*HAVE_G8032*/ #ifdef HAVE_DCB struct nsm_dcb_bridge *dcbg; #endif /* HAVE_DCB */ #ifdef HAVE_EVC
#endif /* HAVE_DCB */ #ifdef HAVE_EVC struct avl_tree *evc_tree; #endif /* HAVE_EVC */ /* AVL tree for Routed Vlans */ struct avl_tree *routed_vlan_tree; u_int16_t max_mst_instances; u_int8_t uni_type_mode; ///< UNI Type enabled or disabled or not the bridge }; 36 © 2015 IP Infusion Inc. Proprietary Common Data Structures nsm_bridge_master This data structure represents the NSM bridge master. This data structure is defined in the nsm/L2/nsm_bridge.h file. Member Description
file. Member Description bridge_list Bridge list flags Flags beb Backbone edge bridge nsm_instance_bmp NSM instance bitmap instance_map Instance map b_bridge Backbone bridge nm Back pointer to nsm_master group_tree AVL group tree rule_tree AVL rule tree event Thread event Definition struct nsm_bridge_master { struct nsm_bridge *bridge_list; u_char flags; #define CUSTOM_B_BEB (1 << 0) #define CUSTOM_I_BEB (1 << 1) #if defined(HAVE_I_BEB) || defined(HAVE_B_BEB) struct nsm_beb_bridge *beb; #endif
struct nsm_beb_bridge *beb; #endif #if defined HAVE_PBB_TE || defined HAVE_G8031 || \ defined HAVE_G8032 || defined HAVE_G8032V2 struct nsm_instance_bmp instanceBmp; #endif /*HAVE_PBB_TE || defined HAVE_G8031 || defined HAVE_G8032 */ #if defined HAVE_PBB_TE || defined HAVE_G8031 || defined HAVE_G8032 u_int8_t instance_map[NSM_INSTANCE_MAP_LEN]; #endif /*HAVE_PBB_TE*/ #ifdef HAVE_B_BEB © 2015 IP Infusion Inc. Proprietary 37 Common Data Structures struct nsm_bridge *b_bridge; #endif
struct nsm_bridge *b_bridge; #endif /* Back pointer to nsm_master. */ struct nsm_master *nm; #ifdef HAVE_VLAN_CLASS struct avl_tree *group_tree; struct avl_tree *rule_tree; #endif /* HAVE_VLAN_CLASS */ /* Thread event. */ struct thread *event; }; 38 © 2015 IP Infusion Inc. Proprietary Common Data Structures nsm_master This data structure contains NSM system-wide settings. This data structure is defined in nsm/nsmd.h file. Member Description vr Pointer to the virtual router
vr Pointer to the virtual router zg NSM pointer to the library globals desc Description module_bits Control virtual router support per PM start_time NSM master start time multipath_num Maximum path configuration mp_size Maximum ECMP path limit max_static_routes Maximum static routes max_fib_routes Maximum FIB routes excluding kernel, connect and static max_frame_size Maximum frame size permissible fib_retain_time Time of retaining stale FIB routes when NSM start t_sweep Sweep stale FIB routes
t_sweep Sweep stale FIB routes t_rib_kernel_sync RIB kernel sync label_pool_table Table of label pool managers label_pool_table Label pool table nmpls NSM MPLS top structure resource_counter QoS resource ID counter admin_group_array Admin group array rtadv Router Advertisement structure vrrp VRRP global data t_kernel_msg_stagger Hold timer to stagger writes to the kernel kernel_msg_stagger_list List for storing messages that need to be sent to the kernel bridge New bridge master
bridge New bridge master l2_oam_master L2 OAM master nsm_layer2_master l2 Layer 2 related information © 2015 IP Infusion Inc. Proprietary 39 Common Data Structures Member Description vmap VLAN access master class_rule_type VLAN classifier type global if_params Interface parameter list lacp_admin_key_mgr LACP administrator key manager ake_list LACP administrator key element psc Port selection criteria phyEntityList Physical Entity list last_change_time Disconnect time
last_change_time Disconnect time qos_state QoS state per virtual router nsm_qos_acl_master MAC and IP acl list acl MAC and IP ACL list cmap CMAP list cmap PMAP list mac_acl MAC access list master arp NSM arp master ipsec_master IPSEC NSM master firewall_master Firewall master nsm_master_cdr_ref NSM master Checkpoint Abstraction Layer (CAL) created record reference nsm_master_rib_sweep_tmr_cdr_ref NSM master rib sweep timer for Checkpoint Abstraction Layer (CAL) created record reference
created record reference access_group_if List of access-list interface structure which keeps track of acl names configured on interfaces nmd_conf NSM configured and terminal debug flags nmd_term NSM configured and terminal debug flags route_map_if List of route map interface structure that keeps track of route maps configured on interfaces apbf_invalid_nh IPV4 invalid nexthop list apbf_invalid_nh6 IPV6 invalid nexthop list nsm_apbf_nh4_tbr To Be Resolved list
nsm_apbf_nh4_tbr To Be Resolved list 40 © 2015 IP Infusion Inc. Proprietary Common Data Structures Member Description nsm_apbf_nh4_res Resolved list nsm_apbf_nh4_nr Not Resolved list nsm_apbf_nh6_tbr To Be Resolved list nsm_apbf_nh6_res Resolved list nsm_apbf_nh6_nr Not Resolved list Definition struct nsm_master { /* Pointer to VR. */ struct ipi_vr *vr; /* NSM pointer to lib_globals */ struct lib_globals *zg; #define NSM_ZG (nzg) /* Description. */ char *desc; /* Control VR support per PM. */
char *desc; /* Control VR support per PM. */ modbmap_t module_bits; /* NSM master start time. */ pal_time_t start_time; u_char flags; #define NSM_MULTIPATH_REFRESH (1 << 0) #define NSM_FIB_RETAIN_RESTART (1 << 1) #define NSM_IPV4_FORWARDING (1 << 2) #define NSM_IPV6_FORWARDING (1 << 3) /* Maximum path config. */ u_char multipath_num; /* Maximum static routes */ u_int32_t max_static_routes; /* Maximum FIB routes excluding Kernel, Connect and Static*/ u_int32_t max_fib_routes;
u_int32_t max_fib_routes; /* Maximum Frame Size permissible */ u_int32_t max_frame_size; /* The time of retaining stale FIB routes when NSM start. */ © 2015 IP Infusion Inc. Proprietary 41 Common Data Structures u_int16_t fib_retain_time; #define NSM_FIB_RETAIN_TIME_MIN 1 #define NSM_FIB_RETAIN_TIME_MAX 65535 #define NSM_FIB_RETAIN_TIME_DEFAULT 60 #define NSM_FIB_RETAIN_TIME_FOREVER 0 /* Threads. */ struct thread *t_sweep; /* Sweep stale FIB routes. */ #ifdef HAVE_KERNEL_ROUTE_SYNC
#ifdef HAVE_KERNEL_ROUTE_SYNC struct thread *t_rib_kernel_sync; /* RIB kernel sync. */ #endif /* HAVE_KERNEL_ROUTE_SYNC */ /* The following is the table of label pool managers that are handled by ZebOS-XP */ #if defined HAVE_GMPLS struct route_table *label_pool_table[GMPLS_LABEL_TYPE_MAX]; #elif defined HAVE_MPLS struct route_table *label_pool_table[1]; #endif /* HAVE_GMPLS */ #ifdef HAVE_MPLS /* NSM MPLS top structure. */ struct nsm_mpls *nmpls; #define NSM_MPLS (nm->nmpls)
#define NSM_MPLS (nm->nmpls) #endif /* HAVE_MPLS */ #ifdef HAVE_TE /* QOS resource id counter */ u_int32_t resource_counter; struct admin_group admin_group_array [ADMIN_GROUP_MAX]; #endif /* HAVE_TE */ #ifdef HAVE_RTADV struct rtadv *rtadv; #endif /* HAVE_RTADV */ #ifdef HAVE_VRRP struct vrrp_global *vrrp; #endif /* HAVE_VRRP */ #ifdef HAVE_STAGGER_KERNEL_MSGS /* Hold timer to stagger writes to the kernel. */ struct thread *t_kernel_msg_stagger;
struct thread *t_kernel_msg_stagger; /* List for storing messages that need to be sent to the kernel. */ struct list *kernel_msg_stagger_list; #endif /* HAVE_STAGGER_KERNEL_MSGS */ 42 © 2015 IP Infusion Inc. Proprietary Common Data Structures #ifdef HAVE_L2 struct nsm_bridge_master *bridge; #endif /* HAVE_L2 */ #ifdef HAVE_ONMD struct nsm_l2_oam_master *l2_oam_master; #endif #ifdef HAVE_CUSTOM1 #ifdef HAVE_VLAN /* Layer 2 related information. */ struct nsm_layer2_master l2;
struct nsm_layer2_master l2; #endif /* HAVE_VLAN */ #endif /* HAVE_CUSTOM1 */ #ifdef HAVE_VLAN struct nsm_vlan_access_master *vmap; #endif /* HAVE_VLAN */ /**@brief vlan classifier type global or per-port got from hsl */ #ifdef HAVE_VLAN_CLASS struct hal_vlan_classifier_type *class_rule_type; #endif /*HAVE_VLAN_CLASS*/ #ifdef HAVE_NSM_IF_PARAMS /* Interface parameter list. */ struct list *if_params; #endif /* HAVE_NSM_IF_PARAMS */ #ifdef HAVE_LACPD struct bitmap *lacp_admin_key_mgr;
struct bitmap *lacp_admin_key_mgr; struct nsm_lacp_admin_key_element *ake_list; /* Port Selection Criteria */ int psc; #endif /* HAVE_LACPD */ struct list *phyEntityList; /* Disconnect time. */ pal_time_t last_change_time; #ifdef HAVE_QOS /* QoS parameter list */ /* QoS state per VR */ u_int8_t qos_state; /* MAC and IP acl list */ struct nsm_qos_acl_master *acl; © 2015 IP Infusion Inc. Proprietary 43 Common Data Structures /* CMAP list */ struct nsm_qos_cmap_master *cmap; /* PMAP list */
struct nsm_qos_cmap_master *cmap; /* PMAP list */ struct nsm_qos_pmap_master *pmap; #endif /* HAVE_QOS */ #ifdef HAVE_L2LERN struct nsm_mac_acl_master *mac_acl; #endif /* HAVE_L2LERN */ #ifdef HAVE_L3 struct nsm_arp_master *arp; #endif /* HAVE_L3 */ #ifdef HAVE_IPSEC /* IPSEC NSM Master */ struct nsm_ipsec_master *ipsec_master; #endif /* HAVE_IPSEC */ #ifdef HAVE_FIREWALL struct nsm_firewall_master *firewall_master; #endif /* HAVE_FIREWALL */ #ifdef HAVE_HA HA_CDR_REF nsm_master_cdr_ref;
#ifdef HAVE_HA HA_CDR_REF nsm_master_cdr_ref; HA_CDR_REF nsm_master_rib_sweep_tmr_cdr_ref; #endif /* HAVE_HA */ #ifdef HAVE_ACL /* list of access-list interface structure which keeps track of acl names configured on interfaces */ struct list *access_group_if; #endif /* HAVE_ACL */ /* NSM configured and terminal debug flags. */ struct { struct nsm_debug_flags nmd_conf; struct nsm_debug_flags nmd_term; } nm_debug; #ifdef HAVE_L3 #ifdef HAVE_PBR
} nm_debug; #ifdef HAVE_L3 #ifdef HAVE_PBR /* list of route map interface structure which keeps track of route maps configured on interfaces */ struct list * route_map_if; #endif /* HAVE_PBR */ 44 © 2015 IP Infusion Inc. Proprietary Common Data Structures #endif /* HAVE_L3 */ #ifdef HAVE_APBF struct list *apbf_invalid_nh; /* IPV4 invalid NH list */ #ifdef HAVE_IPV6 struct list *apbf_invalid_nh6; /* IPV6 invalid NH list */ #endif /* HAVE_IPV6 */ #ifdef HAVE_APBF_NEXTHOP_PREBUILD
#ifdef HAVE_APBF_NEXTHOP_PREBUILD struct list *nsm_apbf_nh4_tbr; /* To Be Resolved list*/ struct list *nsm_apbf_nh4_res; /* Resolved list */ struct list *nsm_apbf_nh4_nr; /* Not Resolved list */ #ifdef HAVE_IPV6 struct list *nsm_apbf_nh6_tbr; /* To Be Resolved list*/ struct list *nsm_apbf_nh6_res; /* Resolved list */ struct list *nsm_apbf_nh6_nr; /* Not Resolved list */ #endif /* HAVE_IPV6 */ #endif /* HAVE_APBF_NEXTHOP_PREBUILD */ #endif /* HAVE_APBF */ };
#endif /* HAVE_APBF */ }; © 2015 IP Infusion Inc. Proprietary 45 Common Data Structures pal_in4_addr This data structure represents an IPv4 address. This data structure is defined in the pal/dummy/pal_types.h file. Member Description s_addr IPv4 address in 32-byte format Definition struct pal_in4_addr { u_int32_t s_addr; }; pal_in6_addr This data structure represents an IPv6 address. This data structure is defined in the pal/dummy/pal_types.h file. Type Definition
Type Definition u6_addr8 IPv6 address in 16-byte format u6_addr16 IPv6 address in 8-byte-format u6_addr32 IPv6 address in 4-byte-format Definition struct pal_in6_addr { union { u_int8_t u6_addr8[16]; u_int16_t u6_addr16[8]; u_int32_t u6_addr32[4]; } in6_u; }; 46 © 2015 IP Infusion Inc. Proprietary Common Data Structures prefix This data structure represents an IPv4 and IPv6 unified prefix. This data structure is defined in the lib/prefix.h file. Member Description family Prefix family
Member Description family Prefix family prefixlen Prefix length prefix_style Prefix style pad1 Padding prefix Prefix prefix4 IPv4 prefix prefix6 IPv6 prefix id Unspecified address family adv_router Unspecified address family val Unix domain socket address Definition struct prefix { u_int8_t family; u_int8_t prefixlen; u_int8_t prefix_style; u_int8_t pad1; union { u_int8_t prefix; struct pal_in4_addr prefix4; #ifdef HAVE_IPV6 struct pal_in6_addr prefix6; #endif /* HAVE_IPV6 */ struct {
#endif /* HAVE_IPV6 */ struct { struct pal_in4_addr id; struct pal_in4_addr adv_router; } lp; u_int8_t val[9]; } u; }; © 2015 IP Infusion Inc. Proprietary 47 Common Data Structures prefix_ipv4 This data structure represents an IPv4 address prefix. This data structure is defined in the lib\prefix.h file Type Definition family Address family prefixlen Prefix length pad1 Padding pad2 Padding prefix Address prefix Definition struct prefix_ipv4 { u_int8_t family; u_int8_t prefixlen; u_int8_t pad1;
u_int8_t prefixlen; u_int8_t pad1; u_int8_t pad2; struct pal_in4_addr prefix; } 48 © 2015 IP Infusion Inc. Proprietary Common Data Structures prefix_ipv6 This data structure represents an IPv6 address prefix. This data structure is defined in the lib\prefix.h file Type Definition family Address family prefixlen Prefix length pad1 Padding pad2 Padding prefix Address prefix Definition struct prefix_ipv6 { u_int8_t family; u_int8_t prefixlen; u_int8_t pad1; u_int8_t pad2;
u_int8_t prefixlen; u_int8_t pad1; u_int8_t pad2; struct pal_in6_addr prefix; }; © 2015 IP Infusion Inc. Proprietary 49 Common Data Structures rib This data structure represents the RIB (routing information base). This data structure is defined in the nsm/rib/ rib.h file. Member Description next Next node in linked list prev Previous node in linked list type Type of this route sub_type Sub type of this route distance Distance flags Flags of this route metric Metric uptime Uptime
metric Metric uptime Uptime ext_flags Extended flags of this route client_id NSM provides a four-octet client ID. To reduce memory consumption in RIB, this is defined as one octet. You can extend this member by changing its definition. The client_id is local to a system and therefore cannot be checkpointed. It is used for the graceful restart mechanism to mark the routes that are stale based on the client id. Therefore, for HA the client id will be the protocol id.
protocol id. nexthop_num Nexthop information nexthop_active_num Nexthop information nexthop Nexthop information rmm_flags RMM module flag vrf VRF pointer kernel_ms_lnode Kernel Msg Stagger Link-List node pointer nsm_rib_cdr_ref Checkpoint database record reference pid Process ID tag Tag pflags Inform nexthop change domain_conf OSPF Domain info Definition struct rib 50 © 2015 IP Infusion Inc. Proprietary Common Data Structures { /* Link list. */ struct rib *next; struct rib *prev;
struct rib *next; struct rib *prev; /* Type of this route. */ u_char type; /* Sub type of this route. */ u_char sub_type; /* Distance. */ u_char distance; /* Flags of this route. */ u_char flags; /* Metric */ u_int32_t metric; /* Uptime. */ pal_time_t uptime; /* Extended flags of this route */ u_char ext_flags; #define RIB_EXT_FLAG_MROUTE 0x01 #ifdef HAVE_HA #define RIB_EXT_FLAG_HA_RIB_CHANGED 0x02 #define RIB_EXT_FLAG_HA_RIB_DELETED 0x04 #endif /* HAVE_HA */
#endif /* HAVE_HA */ #define RIB_EXT_FLAG_BLACKHOLE_RECURSIVE 0x08 #define RIB_FLAG_FIB_ECMP 0x10 /* Client ID. NSM protocol provide four octet client ID. But to reduce memory consumption in RIB, this client_id is defined as one octet. You can extend this restriction by changing this definition. */ /* XXX: Client_id is local to a system and therefore cannot be * checkpointed. But it is used for Graceful Restart mechanism to * mark the routes STALE based on client id.
* mark the routes STALE based on client id. * Therefore, for HA the client id will be the protocol id. This will * be ensured by assigning the client_id as the protocol_id at time * of NSM client connect (in nsm_server_recv_service() ). */ u_char client_id; /* Nexthop information. */ u_char nexthop_num; u_char nexthop_active_num; struct nexthop *nexthop; © 2015 IP Infusion Inc. Proprietary 51 Common Data Structures #ifdef HAVE_RMM /* RMM module flag. */ u_char rmm_flags; #endif /* HAVE_RMM */
u_char rmm_flags; #endif /* HAVE_RMM */ /* VRF pointer. */ struct nsm_vrf *vrf; #ifdef HAVE_STAGGER_KERNEL_MSGS /* Kernel Msg Stagger Link-List node pointer. */ struct listnode *kernel_ms_lnode; #endif /* HAVE_STAGGER_KERNEL_MSGS */ #ifdef HAVE_HA HA_CDR_REF nsm_rib_cdr_ref; #endif /* HAVE_HA */ /*Process ID */ u_int32_t pid; /* Tag */ u_int32_t tag; /* inform nexthop change */ u_int32_t pflags; #define NSM_ROUTE_CHG_INFORM_BGP (1 << 0) #ifdef HAVE_BFD #define NSM_ROUTE_CHG_BFD (1 << 1)
#define NSM_ROUTE_CHG_BFD (1 << 1) #define NSM_BFD_CONFIG_CHG (1 << 2) #endif /* HAVE_BFD */ #ifdef HAVE_MPLS #define NSM_ROUTE_HAVE_IGP_SHORTCUT (1 << 3) #endif/* HAVE_MPLS */ #ifdef HAVE_VRF /*OSPF Domain info */ struct nsm_ospf_domain_conf *domain_conf; #endif /*HAVE_VRF*/ }; 52 © 2015 IP Infusion Inc. Proprietary Common Data Structures stream This data structure represents a fixed-length buffer for network output/input. This data structure is defined in the lib/ stream.h file.
stream.h file. Member Description next Next node in linked list data Previous node in linked list putp Put pointer getp Get pointer endp End of pointer size Data size Definition struct stream { struct stream *next; u_char *data; /* Put pointer. */ u_int32_t putp; /* Get pointer. */ u_int32_t getp; /* End of pointer. */ u_int32_t endp; /* Data size. */ u_int32_t size; }; © 2015 IP Infusion Inc. Proprietary 53 Common Data Structures thread
Common Data Structures thread This data structure represents a thread. This data structure is defined in the lib/thread.h file. Member Description next Linked list prev Linked list master Pointer to the struct thread_master zg Pointer to the struct lib_globals func Event function arg Event argument type Thread type priority Priority index Thread timer index u Arguments stime HA timer checkpoint: Timer absolute starting time period HA timer checkpoint: Timer period Definition struct thread {
Definition struct thread { /* Linked list. */ struct thread *next; struct thread *prev; /* Pointer to the struct thread_master. */ struct thread_master *master; /* Pointer to the struct lib_globals. */ struct lib_globals *zg; /* Event function. */ int (*func) (struct thread *); /* Event argument. */ void *arg; /* Thread type. */ char type; 54 © 2015 IP Infusion Inc. Proprietary Common Data Structures /* Priority. */ char priority; #define THREAD_PRIORITY_HIGH 0 #define THREAD_PRIORITY_MIDDLE 1
#define THREAD_PRIORITY_MIDDLE 1 #define THREAD_PRIORITY_LOW 2 /* Thread timer index. */ char index; /* Arguments. */ union { /* Second argument of the event. */ int val; /* File descriptor in case of read/write. */ int fd; /* Rest of time sands value. */ struct pal_timeval sands; } u; #ifdef HAVE_HA /* Additions for the HA dependent processing. */ /* This values will go with the timer checkpoint. */ struct pal_timeval stime; /* Timer's absolute starting time. */
struct pal_timeval period; /* Timer's period. */ #endif /* HAVE_HA */ }; © 2015 IP Infusion Inc. Proprietary 55 Common Data Structures variable This data structure represents an SNMP variable. This data structure is defined in the lib/snmp.h file. Member Description magic Index of the MIB type Type of variable acl Access control list findVar Callback function namelen Suffix of the MIB lg Library globals Definition struct variable { /* Index of the MIB.*/ u_int8_t magic; /* Type of variable. */
u_int8_t magic; /* Type of variable. */ char type; /* Access control list. */ u_int8_t acl; /* Callback function. */ FindVarMethod *findVar; /* Suffix of the MIB. */ u_int8_t namelen; oid name[MAX_OID_LEN]; /* Lib globals */ struct lib_globals *lg; }; 56 © 2015 IP Infusion Inc. Proprietary
ZebOS-XP® Network Platform Version 1.4 Extended Performance Carrier Ethernet Configuration Guide December 2015 IP Infusion Inc. Proprietary © 2015 IP Infusion Inc. All Rights Reserved. This documentation is subject to change without notice. The software described in this document and this documentation are furnished under a license agreement or nondisclosure agreement. The software and documentation may be used or
copied only in accordance with the terms of the applicable agreement. No part of this publication may be reproduced, stored in a retrieval system, or transmitted in any form or any means electronic or mechanical, including photocopying and recording for any purpose other than the purchaser's internal use without the written permission of IP Infusion Inc. IP Infusion Inc. 3965 Freedom Circle, Suite 200 Santa Clara, CA 95054 +1 408-400-1900 http://www.ipinfusion.com/
+1 408-400-1900 http://www.ipinfusion.com/ For support, questions, or comments via E-mail, contact: support@ipinfusion.com Trademarks: IP Infusion, OcNOS, VirNOS, ZebM, ZebOS, and ZebOS-XP are trademarks or registered trademarks of IP Infusion. All other trademarks, service marks, registered trademarks, or registered service marks are the property of their respective owners. ii IP Infusion Inc. Proprietary Contents
owners. ii IP Infusion Inc. Proprietary Contents Preface . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .ix Audience . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ix Conventions . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ix
Contents . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . ix Related Documents. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .x Chapter Organization. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .x
Support . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .x Comments. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .x CHAPTER 1 Ethernet CFM Configurations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 11
Topology . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .11 Down MEP . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .11 SW1. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .11
SW2. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .12 SW3. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .13 SW4. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .13
Validation. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .14 Up MEP. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .15 SW1. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .15
SW2. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .16 SW3. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .16 SW4. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .17
Validation. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .18 CHAPTER 2 CFM Over PBB Configurations. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 19 CFM-PBB Components. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .19 Topology . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .19
I-BEB (DUT-1). . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .20 B-BEB (DUT-2). . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .21 BCB (DUT-3). . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .22
B-BEB (DUT-4). . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .23 I-BEB (DUT-5). . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .23 Validation. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .24
CHAPTER 3 Ethernet to the First Mile OAM Configuration . . . . . . . . . . . . . . . . . . 27 Topology . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .27 ZebOS1. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .28
ZebOS2. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .28 Validation. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .28 Validation. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .29
Remote Loopback . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .31 Validation. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .31 Link Monitoring Event . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .31 © 2015 IP Infusion Inc. Proprietary iii Contents
© 2015 IP Infusion Inc. Proprietary iii Contents Validation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 32 Remote Failure Detection Configuration. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 33 Validation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 33
CHAPTER 4 Link Layer Discovery Protocol Configuration . . . . . . . . . . . . . . . . . . 35 Topology . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 35 LLDPv1. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 35
Validation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 36 LLDPv2. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 37 Default Agent . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 37
Customer Bridge . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 40 Non-Tpmr-Bridge . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 42 Validation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 43
LLDP-MED. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 44 LLDP-MED Network Connectivity Device. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 45 LLDP-MED Generic Endpoint (Class I) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 45 LLDP-MED Generic Endpoint (Class 2). . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 45
LLDP-MED Generic Endpoint (Class 3). . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 45 Machine A. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 46 Machine B . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 46
Validation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 47 Configuring LLDPv2 through SNMP . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 50 CHAPTER 5 Provider Bridging Configuration . . . . . . . . . . . . . . . . . . . . . . . . . . . . 59 Provider Bridging with Customer Hosts. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 59
Topology. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 59 PB1. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 60 PB2. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 61
Validation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 62 Provider Bridging with Customer Equipment . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 63 Topology. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 63
PB1. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 64 PB2. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 65 CE-A-1 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 67
CE-A-2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 67 CE-B-1 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 68 CE-B-2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 68
Validation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 69 CHAPTER 6 MEF UNI Configuration. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 71 LACP Peering . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 71
PB1. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 71 PB2. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 72 Host Machines . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 73
Validation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 74 Verification . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 77 DOT1.X Tunneling in UNI . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 77
PB1. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 78 iv © 2015 IP Infusion Inc. Proprietary Contents PB2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .78 DUT . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .79
HOST-2 Radius Server . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .80 HOST-1 Xsupplicant . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .80 Validation. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .80
Bundling in UNI. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .81 PB1 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .81 PB2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .82
HOST-1 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .83 HOST-2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .84 Validation. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .84
CHAPTER 7 MEF ENNI Configuration. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 87 Operator Services Attributes. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .87 ENNI Service Attributes. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .87 OVC Service Attributes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .88
PEB1 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .88 PCB1 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .89 PCB2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .89
PEB2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .90 Validation. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .91 Layer 2 Control Protocol . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .92
EPL, EP-LAN, and EP-TREE Services . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .93 EVPL, EVP-LAN, and EVP-TREE Services. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .93 L2CP action for Services. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .94 STP Tunneling Configuration. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .94
Topology. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .94 STP Tunneling . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .101 Topology. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .101
PEB1 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .101 Host Machines (CB1). . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .103 Validation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .103
STP Discarding. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .106 Topology. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .106 PEB1 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .106
Configurations for HOST Machines (CB1). . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .107 Validation. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .108 CHAPTER 8 User Network Interface Configuration. . . . . . . . . . . . . . . . . . . . . . . 111 Topology . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .111
CFM Convergence on UNI-MEG. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .111 CE . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .111 PEB . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .112
Validation. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .113 Provider Edge Bridge. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .113 Provider Edge Bridge. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .114
Provider Edge Bridge. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .115 EVC ID, UNI EVC ID, UNI ID and UNI List service attributes . . . . . . . . . . . . . . . . . . .116 © 2015 IP Infusion Inc. Proprietary v Contents PEB . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 116
Validation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 117 MEF 10.2 Configuration. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 118 Topology. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 118
Ethernet Service Attributes Configuration . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 119 MEF 10.2 Configuration. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 121 Topology. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 121 Ethernet Service Attributes Configuration . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 122
Frame Delay Measurement . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 122 One Way ETH-DM Configurations. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 122 Two Way ETH-DM Configurations . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 123 DVM Configurations. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 124
CHAPTER 9 Provider Backbone Bridging Configuration. . . . . . . . . . . . . . . . . . . 125 Topology . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 125 I_BEB1. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 125
Validation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 126 B_BEB1 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 128 Validation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 128
BCB. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 129 B_BEB2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 130 Validation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 131
I_BEB2. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 131 Validation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 132 CHAPTER 10 Ethernet Protection Switching Configuration. . . . . . . . . . . . . . . . . . 135
Topology . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 135 Bridge 1 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 135 Bridge 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 136
Removing Ethernet Protection Switching . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 138 Bridge 1 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 138 Bridge 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 138 CHAPTER 11 PBB-TE Configurations. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 139
Ethernet Switched Path. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 139 Validation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 143 Automatic Protection Switching . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 144
Verification and Validation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 152 Unicast Connectivity Fault Management. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 154 Validation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 158 Multicast Connectivity Fault Management . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 159
Validation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 167 CHAPTER 12 PBB-TE Ethernet Switched Path Configuration . . . . . . . . . . . . . . . 169 Topology . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 169 IB-BEB-1 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 169
IB-BEB-2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 170 BCB. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 172 Validation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 173 vi © 2015 IP Infusion Inc. Proprietary Contents
vi © 2015 IP Infusion Inc. Proprietary Contents CHAPTER 13 PBB-TE APS Configuration. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 175 Topology . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .175 IB-BEB-1 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .175
IB-BEB-2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .179 Validation. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .183 CHAPTER 14 Service OAM Configuration. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 187
Topology . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .187 Customer Edge 1. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .187 PEB1 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .188
PB1. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .189 Validation. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .190 CHAPTER 15 G.8032 ERPS Version 1 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 191
Topology . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .191 Bridge 2. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .191 Bridge 1. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .193
Bridge 3. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .194 Bridge 4. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .195 Validation. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .196
Adding G.8032 Ring Protection Switching . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .197 Bridge 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .197 Bridge 1 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .197
Bridge 3 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .198 Bridge 4 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .198 Setting Ring Protection Switching Timers. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .199
Removing G.8032 Ring Configurations. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .199 G8032v1 Configuration with Sub Ring . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .200 Topology. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .200
Bridge 1 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .201 Bridge 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .202 Bridge 3 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .205
Bridge 4 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .207 Validation. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .209 CHAPTER 16 G.8032 ERPS Version 2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 213
Topology . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .213 RPL Owner . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .213 RPL Neighbor. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .214
RPL Non-Owner. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .215 Validation. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .216 show erp-instance . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .216
show profile . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .217 show physical-ring. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .217 Force Switch/Manual Switch. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .217
Force Switch . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .217 Manual Switch . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .218 Clearing the Force Switch /Manual Switch . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .218
Miscellaneous Commands . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .219 © 2015 IP Infusion Inc. Proprietary vii Contents G8032v2 Configuration with Sub Ring. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 220 Topology with a Virtual Channel. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 220
Topology without a Virtual Channel . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 220 CFM Configuration with a Virual Channel . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 222 CCM Convergence Verification . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 230 Configuration with a Virtual Channel . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 231
CFM Configuration without a Virtual Channel . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 236 CCM Convergence Verification . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 243 Configuration without a Virutal Channel. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 245 CHAPTER 17 Dual-Ended LMM Configurations . . . . . . . . . . . . . . . . . . . . . . . . . . 251
SW1 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 251 SW2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 252 SW3 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 253
Validation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 254 CHAPTER 18 CFM Support on PEB Configuration. . . . . . . . . . . . . . . . . . . . . . . . 255 Topology . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 255
CE1. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 255 PEB1. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 256 PB. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 257
PEB2. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 257 CE2. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 258 Validation. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 259
CFM Convergence between two Provider Edge Bridges . . . . . . . . . . . . . . . . . . . . . . 259 PEB1 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 259 Provider Bridge. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 260
PEB2 . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 261 Validation . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 262 Index . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 263 viii © 2015 IP Infusion Inc. Proprietary Preface
viii © 2015 IP Infusion Inc. Proprietary Preface This guide describes how to configure Carrier Ethernet in ZebOS-XP. Audience This guide is intended for network administrators and other engineering professionals who configure Carrier Ethernet. Conventions Table P-1 shows the conventions used in this guide. Table P-1: Conventions Convention Description Italics Emphasized terms; titles of books Note: Special instructions, suggestions, or warnings
monospaced type Code elements such as commands, functions, parameters, files, and directories Contents This document contains these chapters and appendices: • Chapter 1, Ethernet CFM Configurations • Chapter 2, CFM Over PBB Configurations • Chapter 3, Ethernet to the First Mile OAM Configuration • Chapter 4, Link Layer Discovery Protocol Configuration • Chapter 5, Provider Bridging Configuration • Chapter 6, MEF UNI Configuration • Chapter 7, MEF ENNI Configuration
• Chapter 7, MEF ENNI Configuration • Chapter 8, User Network Interface Configuration • Chapter 9, Provider Backbone Bridging Configuration • Chapter 10, Ethernet Protection Switching Configuration • Chapter 11, PBB-TE Configurations • Chapter 12, PBB-TE Ethernet Switched Path Configuration • Chapter 13, PBB-TE APS Configuration • Chapter 14, Service OAM Configuration © 2015 IP Infusion Inc. Proprietary ix Preface • Chapter 15, G.8032 ERPS Version 1 • Chapter 16, G.8032 ERPS Version 2
• Chapter 16, G.8032 ERPS Version 2 • Chapter 17, Dual-Ended LMM Configurations • Chapter 18, CFM Support on PEB Configuration Related Documents Use this guide with these documents for details about the commands used in the configurations: • Carrier Ethernet Command Reference • Network Services Module Command Reference Note: All ZebOS-XP technical manuals are available to licensed customers at http://www.ipinfusion.com/support/ document_list. Chapter Organization
document_list. Chapter Organization The chapters in this guide are organized into these major sections: • An overview that explains a configuration in words • Topology with a diagram that shows the devices and connections used in the configuration • Configuration steps in a table for each device where the left-hand side shows the commands you enter and the right-hand side explains the actions that the commands perform
• Validation which shows commands and their output that verify the configuration Support For support-related questions, contact support@ipinfusion.com. Comments If you have comments, or need to report a problem with the content, contact techpubs@ipinfusion.com. x © 2015 IP Infusion Inc. Proprietary Ethernet CFM Configurations CHAPTER 1 This chapter contains examples of Ethernet Operations and Management (OAM) configurations using the Connectivity Fault Management (CFM) protocol.
Fault Management (CFM) protocol. Connectivity Fault Management detects, verifies, isolates and notifies connectivity failures on a Virtual Bridged LAN (B- VLAN) based on the protocol standard specified in IEEE 802.1ag 2007. It provides discovery and verification of paths through 802.1 bridges and LANs and is part of the Operation, Administration and Management (OAM) module in ZebOS-XP. CFM is transparent to customer data being transported by a network and is capable of providing maximum
fault management. CFM extensions also support enhanced fault management, fault monitoring and performance measurement and supports the requirements of the ITU Y.1731 standard. Topology Figure 1-1 displays a sample CFM topology. Figure 1-1: CFM Topology Legend The following table is the legend for Figure 1-1: IP1 eth1 IP2 eth2 Down MEP SW1 SW1#configure terminal Enter configure mode. SW1(config)#bridge 1 protocol rstp vlan- Create bridge 1 as an RSTP VLAN-aware bridge. bridge
bridge SW1(config)#vlan database Enter VLAN configure mode. SW1(config-vlan)#vlan 2 bridge 1 Create VLAN 2 on bridge 1. SW1(config-vlan)#vlan 3 bridge 1 Create VLAN 3 on bridge 1. SW1(config-vlan)#vlan 4 bridge 1 Create VLAN 4 on bridge 1. SW1(config-vlan)#exit Exit VLAN configure mode. © 2015 IP Infusion Inc. Proprietary 11 Ethernet CFM Configurations SW1(config)#ethernet cfm configure vlan 2 Configure VLAN 2 as primary VLAN. bridge 1
bridge 1 SW1(config-cfm-vlan)#add vid 3 bridge 1 Add secondary VLAN ID (VID) 3. SW1(config-cfm-vlan)#add vid 4 bridge 1 Add secondary VLAN ID (VID) 4. SW1(config-cfm-vlan)#exit Exit CFM VLAN mode. SW1(config)#ethernet cfm domain-name type Enter CFM mode and create domain domain1 at level 7, character-string name domain1 level 7 mip- setting MIP creation permissions to the default. creation default bridge 1
creation default bridge 1 SW1(config-ether-cfm)#service ma-type Create an MA with type as integer and set MIP creation integer ma-name 200 vlan 2 mip-creation permissions to the default. default SW1(config-ether-cfm)#mep crosscheck mpid Enable crosscheck to remote MEP on VLAN 2. 151 vlan 2 SW1(config-ether-cfm)#exit Exit Ethernet CFM mode. SW1(config)#interface eth2 Configure interface eth2. SW1(config-if)#switchport Configure eth2 as switch port.
SW1(config-if)#bridge-group 1 Configure eth2 in bridge group 1. SW1(config-if)#switchport mode trunk Make the interface a trunk. SW1(config-if)#switchport trunk allowed vlan Allow all VLANs on interface eth2. all SW1(config-if)#ethernet cfm mep down mpid Enter CFM MEP mode and create a down MEP, assign an 152 active true domain domain1 vlan 2 local- MPID, associate it with domain1 in VLAN 2, local VID 3, and vid 3 bridge 1 bridge 1.
vid 3 bridge 1 bridge 1. SW1(config-if-eth-cfm-mep)#cc multicast Enable multicast continuity checking (CC) on the interface. state enable SW1(config-if-eth-cfm-mep)#exit Exit CFM MEP mode. SW1(config-if)#exit Exit Interface mode. SW1(config)#ethernet cfm domain-name type Enter CFM mode. character-string name domain1 level 7 mipcreation default bridge 1 SW1(config-ether-cfm)#cc vlan 2 interval 5 Configure CC time interval. SW2 SW2#configure terminal Enter configure mode.
SW2 SW2#configure terminal Enter configure mode. SW2(config)#bridge 1 protocol rstp vlan- Create bridge 1 as an RSTP VLAN-aware bridge. bridge SW2(config)#vlan database Enter VLAN configure mode. SW2(config-vlan)#vlan 2 bridge 1 Create VLAN 2 on bridge 1. SW2(config-vlan)#vlan 3 bridge 1 Create VLAN 3 on bridge 1. SW2(config-vlan)#vlan 4 bridge 1 Create VLAN 4 on bridge 1. SW2(config-vlan)#exit Exit configure VLAN mode. SW2(config)#interface eth1 Configure interface eth1.
SW2(config-if)#switchport Configure eth1 as switch port. SW2(config-if)#bridge-group 1 Configure eth1 in bridge group 1. 12 © 2015 IP Infusion Inc. Proprietary Ethernet CFM Configurations SW2(config-if)#switchport mode trunk Configure interface mode as trunk. SW2(config-if)#switchport trunk allowed vlan Allow all VLANs on interface eth1. all SW2(config)#interface eth2 Configure interface eth2. SW2(config-if)#switchport Configure eth2 as switch port.
SW2(config-if)#bridge-group 1 Configure eth2 in bridge group 1. SW2(config-if)#switchport mode trunk Configure interface mode as trunk. SW2(config-if)#switchport trunk allowed vlan Allow all VLANs on interface eth2. all SW2(config)#ethernet cfm default-md-level Create default MD level table to control MIP creation entry vid 2 level 7 mip-creation default permissions. bridge 1 SW3 SW3#configure terminal Enter configure mode.
SW3 SW3#configure terminal Enter configure mode. SW3(config)#bridge 1 protocol rstp vlan- Create bridge 1 as an RSTP VLAN-aware bridge. bridge SW3(config)#vlan database Enter VLAN configure mode. SW3(config-vlan)#vlan 2 bridge 1 Create VLAN 2 on bridge 1. SW3(config-vlan)#vlan 3 bridge 1 Create VLAN 3 on bridge 1. SW3(config-vlan)#vlan 4 bridge 1 Create VLAN 4 on bridge 1. SW3(config-vlan)#exit Exit VLAN configure mode. SW3(config)#interface eth1 Configure interface eth1.
SW3(config-if)#switchport Configure eth1 as switch port. SW3(config-if)#bridge-group 1 Configure eth1 in bridge group 1. SW3(config-if)#switchport mode trunk Configure interface mode as trunk. SW3(config-if)#switchport trunk allowed vlan Allow all VLANs on interface eth1. all SW3(config)#interface eth2 Configure interface eth2. SW3(config-if)#switchport Configure interface as switch port. SW3(config-if)#bridge-group 1 Configure eth2 in bridge group 1.
SW3(config-if)#switchport mode trunk Configure eth2 mode as trunk. SW3(config-if)#switchport trunk allowed vlan Allow all VLANs on interface eth2. all SW3(config)#ethernet cfm default-md-level Create default MD level table to control MIP creation entry vid 2 level 7 mip-creation default permissions. bridge 1 SW4 SW4#configure terminal Enter configure mode. SW4(config)#bridge 1 protocol rstp vlan- Create bridge 1 as an RSTP VLAN-aware bridge. bridge © 2015 IP Infusion Inc. Proprietary 13
bridge © 2015 IP Infusion Inc. Proprietary 13 Ethernet CFM Configurations SW4(config)#vlan database Enter VLAN configure mode. SW4(config-vlan)#vlan 2 bridge 1 Create VLAN 2 on bridge 1. SW4(config-vlan)#vlan 3 bridge 1 Create VLAN 3 on bridge 1. SW4(config-vlan)#vlan 4 bridge 1 Create VLAN 4 on bridge 1. SW4(config-vlan)#exit Exit VLAN configure mode. SW4(config)#ethernet cfm configure vlan 2 Configure VLAN 2 as primary VLAN. bridge 1
bridge 1 SW4(config-cfm-vlan)#add vid 3 bridge 1 Add secondary VLAN ID 3 to bridge 1. SW4(config-cfm-vlan)#add vid 4 bridge 1 Add secondary VLAN ID 4 to bridge 1. SW4(config-cfm-vlan)#exit Exit CFM VLAN mode. SW4(config)#ethernet cfm domain-name type Enter CFM mode and create domain domain1 at level 7, character-string name domain1 level 7 mip- setting MIP creation permissions to the default. creation default bridge 1
creation default bridge 1 SW4(config-ether-cfm)#service ma-type Create MA with type as integer and set MIP creation integer ma-name 200 vlan 2 mip-creation permissions to the default. default SW4(config-ether-cfm)#mep crosscheck mpid Enable crosscheck to remote MEP ID in VLAN 2. 152 vlan 2 SW4(config-ether-cfm)#exit Exit Ethernet CFM mode. SW4(config)#interface eth1 Configure interface eth1. SW4(config-if)#switchport Configure eth1 as switch port.
SW4(config-if)#bridge-group 1 Configure eth1 in bridge group 1. SW4(config-if)#switchport mode trunk Configure interface mode as trunk. SW4(config-if)#switchport trunk allowed vlan Allow all VLANs on interface eth1. all SW4(config-if)#ethernet cfm mep down mpid Enter CFM MEP mode and create a down MEP in domain1 151 active true domain domain1 vlan 2 local- for VLAN 2 local VID 3 on bridge 1. vid 3 bridge 1
vid 3 bridge 1 SW4(config-if-eth-cfm-mep)#cc multicast Enable multicast continuity checking (CC) on the interface. state enable SW4(config-if-eth-cfm-mep)#exit Exit CFM MEP mode. SW4(config-if)#exit Exit Interface mode. SW4(config)#ethernet cfm domain-name type Enter CFM mode. character-string name domain1 level 7 mip- creation default bridge 1 SW4(config-ether-cfm)#cc vlan 2 interval 5 Configure CC time interval. Validation
Validation show ethernet cfm maintenance-points remote, show ethernet cfm maintenance-points local, show ethernet cfm maintenance-points remote domain, and ping ethernet multicast mepid 14 © 2015 IP Infusion Inc. Proprietary Ethernet CFM Configurations Up MEP SW1 SW1#configure terminal Enter configure mode. SW1(config)#bridge 1 protocol rstp vlan- Create bridge 1 as an RSTP VLAN-aware bridge. bridge SW1(config)#vlan database Enter VLAN configure mode.
SW1(config-vlan)#vlan 2 bridge 1 Create VLAN 2 on bridge 1. SW1(config-vlan)#vlan 3 bridge 1 Create VLAN 3 on bridge 1. SW1(config-vlan)#vlan 4 bridge 1 Create VLAN 4 on bridge 1. SW1(config-vlan)#exit Exit VLAN configure mode. SW1(config)#ethernet cfm configure vlan 2 Configure VLAN 2 as primary VLAN. bridge 1 SW1(config-cfm-vlan)#add vid 3 bridge 1 Add secondary VLAN ID (VID) 3. SW1(config-cfm-vlan)#add vid 4 bridge 1 Add secondary VLAN ID (VID) 4.
SW1(config-cfm-vlan)#exit Exit CFM VLAN mode. SW1(config)#ethernet cfm domain-name type Enter CFM mode and create domain domain1 at level 7, character-string name domain1 level 7 mip- setting MIP creation permissions to the default. creation default bridge 1 SW1(config-ether-cfm)#service ma-type Create MA with type as integer and set MIP creation integer ma-name 200 vlan 2 mip-creation permissions to the default. default
default SW1(config-ether-cfm)#mep crosscheck mpid Configure crosscheck to remote MEP in VLAN 2. 151 vlan 2 SW1(config-ether-cfm)#exit Exit Ethernet CFM mode. SW1(config)#interface eth1 Configure interface eth1. SW1(config-if)#switchport Configure interface as switch port. SW1(config-if)#bridge-group 1 Configure interface in bridge group 1. SW1(config-if)#switchport mode trunk Configure interface mode as trunk. SW1(config-if)#switchport trunk allowed vlan Allow all VLANs on interface eth1. all
all SW1(config-if)#ethernet cfm mep up mpid 152 Enter CFM MEP mode and create an up MEP assigned to active true domain domain1 vlan 2 local-vid domain1, VLAN 2, local VID 3, and bridge 1. 3 bridge 1 SW1(config-if-eth-cfm-mep)#cc multicast Enable multicast CC on the interface. state enable SW4(config-if-eth-cfm-mep)#exit Exit CFM MEP mode. SW1(config-if)#exit Exit interface mode. SW1(config)#interface eth2 Configure interface eth2. SW1(config-if)#switchport Configure eth2 as switch port.
SW1(config-if)#bridge-group 1 Configure eth2 in bridge group SW1(config-if)#switchport mode trunk Make the interface a trunk. © 2015 IP Infusion Inc. Proprietary 15 Ethernet CFM Configurations SW1(config-if)#switchport trunk allowed vlan Allow all VLANs on interface eth2. all SW1(config)#ethernet cfm default-md-level Create default MD level table to control MIP creation entry vid 2 level 7 mip-creation default permissions. bridge 1 SW2 SW2#configure terminal Enter configure mode.
SW2 SW2#configure terminal Enter configure mode. SW2(config)#bridge 1 protocol rstp vlan- Create bridge 1 as an RSTP VLAN-aware bridge. bridge SW2(config)#vlan database Enter VLAN configure mode. SW2(config-vlan)#vlan 2 bridge 1 Create VLAN 2 on bridge 1. SW2(config-vlan)#vlan 3 bridge 1 Create VLAN 3 on bridge 1. SW2(config-vlan)#vlan 4 bridge 1 Create VLAN 4 on bridge 1. SW2(config-vlan)#exit Exit VLAN configure mode. SW2(config)#interface eth1 Configure interface as eth1.
SW2(config-if)#switchport Configure interface as switch port. SW2(config-if)#bridge-group 1 Configure eth1 in bridge group. SW2(config-if)#switchport mode trunk Configure eth1 mode as trunk. SW2(config-if)#switchport trunk allowed vlan Allow all VLANs on interface eth1. all SW2(config)#interface eth2 Configure interface eth2. SW2(config-if)#switchport Configure eth2 as switch port. SW2(config-if)#bridge-group 1 Configure eth2 in bridge group
SW2(config-if)#switchport mode trunk Configure interface mode as trunk. SW2(config-if)#switchport trunk allowed vlan Allow all VLANs on interface eth2. all SW2(config)#ethernet cfm default-md-level Create default MD level table to control MIP creation entry vid 2 level 7 mip-creation default permissions. bridge 1 SW3 SW3#configure terminal Enter configure mode. SW3(config)#bridge 1 protocol rstp vlan- Create bridge 1 as an RSTP VLAN-aware bridge. bridge
bridge SW3(config)#vlan database Enter VLAN configure mode. SW3(config-vlan)#vlan 2 bridge 1 Create VLAN 2 on bridge 1. SW3(config-vlan)#vlan 3 bridge 1 Create VLAN 3 on bridge 1. SW3(config-vlan)#vlan 4 bridge 1 Create VLAN 4 on bridge 1. SW3(config-vlan)#exit Exit VLAN configure mode. SW3(config)#interface eth1 Configure interface as eth1. 16 © 2015 IP Infusion Inc. Proprietary Ethernet CFM Configurations SW3(config-if)#switchport Configure eth1 as switch port
SW3(config-if)#bridge-group 1 Configure eth1 in bridge group. SW3(config-if)#switchport mode trunk Configure interface mode as trunk.. SW3(config-if)#switchport trunk allowed vlan Allow all VLANs on interface eth1. all SW3(config)#interface eth2 Configure interface eth2. SW3(config-if)#switchport Configure interface as switch port SW3(config-if)#bridge-group 1 Configure interface in bridge group SW3(config-if)#switchport mode trunk Configure interface mode as trunk.
SW3(config-if)#switchport trunk allowed vlan Allow all VLANs on interface eth2. all SW3(config)#ethernet cfm default-md-level Create default MD level table to control MIP creation entry vid 2 level 7 mip-creation default permissions. bridge 1 SW4 SW4#configure terminal Enter configure mode. SW4(config)#bridge 1 protocol rstp vlan- Create bridge 1 as an RSTP VLAN-aware bridge bridge SW4(config)#vlan database Enter VLAN configure mode. SW4(config-vlan)#vlan 2 bridge 1 Create VLAN 2 on bridge 1.
SW4(config-vlan)#vlan 3 bridge 1 Create VLAN 3 on bridge 1. SW4(config-vlan)#vlan 4 bridge 1 Create VLAN 4 on bridge 1. SW4(config-vlan)#exit Exit VLAN configure mode. SW4(config)#ethernet cfm configure vlan 2 Configuring VLAN 2 as primary VLAN. bridge 1 SW4(config-cfm-vlan)#add vid 3 bridge 1 Add secondary VLAN ID (VID) 3. SW4(config-cfm-vlan)#add vid 4 bridge 1 Add secondary VLAN ID (VID) 4. SW4(config-cfm-vlan)#exit Exit CFM VLAN database mode.
SW4(config)#ethernet cfm domain-name type Enter CFM mode and create domain domain1 at level 7, character-string name domain1 level 7 mip- setting MIP creation permissions to the default. creation default bridge 1 SW4(config-ether-cfm)#service ma-type Create an MA with type as integer and set MIP creation integer ma-name 200 vlan 2 mip-creation permissions to the default. default SW4(config-ether-cfm)#mep crosscheck mpid Enable crosscheck on MEP. 152 vlan 2
152 vlan 2 SW4(config-ether-cfm)#exit Exit Ethernet CFM mode. SW4(config)#interface eth2 Configure interface eth2. SW4(config-if)#switchport Configure eth2 as switch port SW4(config-if)#bridge-group 1 Configure eth2 in bridge group 1. SW4(config-if)#switchport mode trunk Configure interface mode as trunk. SW4(config-if)#switchport trunk allowed vlan Allow all VLANs on interface eth2. all © 2015 IP Infusion Inc. Proprietary 17 Ethernet CFM Configurations
Ethernet CFM Configurations SW4(config-if)#ethernet cfm mep up mpid 151 Enter CFM MEP mode and create a Up MEP for domain1, active true domain domain1 vlan 2 local-vid VLAN 2, local VID 3 on bridge 1. 3 bridge 1 SW4(config-if-eth-cfm-mep)#cc multicast Enable multicast CC on the interface. state enable SW4(config-if-eth-cfm-mep)#exit Exit CFM MEP mode. SW4(config-if)#exit Exit interface mode. SW4(config)#interface eth1 Configure interface eth1.
SW4(config-if)#switchport Configure eth1 as switch port SW4(config-if)#bridge-group 1 Configure eth1 in bridge group SW4(config-if)#switchport mode trunk Make the interface a trunk. SW4(config-if)#switchport trunk allowed vlan Allow all VLANs on interface eth1. all SW4(config)#ethernet cfm default-md-level Create default MD level table to control MIP creation entry vid 2 level 7 mip-creation default permissions. bridge 1 Validation
bridge 1 Validation show ethernet cfm maintenance-points remote, show ethernet cfm maintenance-points local, show ethernet cfm maintenance-points remote domain, and ping ethernet multicast 18 © 2015 IP Infusion Inc. Proprietary CFM Over PBB Configurations CHAPTER 2 This chapter describes how to configure 802.1ah Connectivity Fault Management (CFM) over Provider Backbone Bridges (PBB) in ZebOS-XP. The IEEE 802.1ah CFM specification amends IEEE 802.1ag by including additional
operational modes of MEP (Maintenance End Points) and MIP (Maintenance Intermediate Points) to support CFM for PBBN (Provider Backbone Bridge Networks): • In 802.1ag, a MEP or MIP is identified by a MEP ID, MA (Maintenance Association) ID, MD (Maintenance Domain), MD Level, and B-VLAN (backbone VLAN). • In 802.1ah, the MEP/MIP identification also includes the I-SID (Service Instance ID). CFM-PBB Components Three different components are configured as a part of the CFM-PBB setup:
I-BEB An I-BEB is the I-Component Bridge of the PBBN (provider backbone bridge network). The I-Component consists of the PIP (Provider Instance Port) and CNP (Customer Network Port). This is an S-VLAN (Service VLAN) component with one or more PIPs. B-BEB A B-BEB is the B-Component Bridge of the PBBN. The B-Component consists of the PNP (Provider Network Port) and the CBP (Customer Backbone Port). This is an S-VLAN component with one or more CBPs.
BCB A BCB is an S-VLAN bridge used within the core of the PBBN. Topology The diagram depicts two I-component bridges at the edge of a service domain, two B-component bridges, and one backbone core bridge (BCB). Figure 2-1 displays a sample CFM topology. Figure 2-1: CFM Service Domain Topology Legend The following table is the legend for Figure 2-1: B-BEB B-Component Backbone Bridge BCB Backbone Core Bridge I-BEB I-Component Backbone Bridge CNP Customer Network Port
CNP Customer Network Port © 2015 IP Infusion Inc. Proprietary 19 CFM Over PBB Configurations PIP Provider Instance Port PNP Provider Network Port PN Provider Network CBP Customer Backbone Port I-BEB (DUT-1) DUT-1#configure terminal Enter configure mode. DUT-1(config)#bridge beb mac 1111.1111.1111 Configure bridge 1 as an I-component bridge. 1 Protocol provider-mstp DUT-1(config)#ethernet cfm enable Enable CFM globally. DUT-1(config)#vlan database Enter VLAN configure mode.
DUT-1(config-vlan)#vlan 3 type service Configure VLAN 3 as a service VLAN and associate it with point-point bridge 1 state enable bridge 1. DUT-1(config-vlan)#exit Exit VLAN configure mode. DUT-1(config)#ethernet cfm pbb domain-type Create a service type domain and associate it with the bridge. service name abc level 3 bridge 1 DUT-1(config-ether-cfm-pbb)#service pbb 12 Create an MA for the domain. isid 3 DUT-1(config-ether-cfm-pbb)#mep pbb Configure the remote MEP. crosscheck mpid 3 isid 3
crosscheck mpid 3 isid 3 DUT-1(config-ether-cfm-pbb)#exit Exit MA configure mode. DUT(config)#pbb isid list Enter I-SID configure mode. DUT(pbb-isid)#isid 3 name 3 i-component 1 Create an I-SID entry on I-component 1. DUT(pbb-isid)#exit Exit I-SID configure mode. DUT-1(config)#interface eth1 Enter interface mode. DUT-1(config-if)#switchport Configure the interface as Layer 2. DUT-1(config-if)#bridge-group 1 Associate the interface with bridge 1.
DUT-1(config-if)#switchport mode pip Configure the interface as a PIP. DUT-1(config-if)#switchport beb vlan 3 pip Make VLAN 3 the default for the PIP. DUT-1(config-if)#exit Exit interface mode DUT-1(config)#interface eth2 Enter interface mode. DUT-1(config-if)#switchport Configure the interface as a Layer 2 Interface DUT-1(config-if)#bridge-group 1 Associate the interface with bridge 1. DUT-1(config-if)#switchport mode cnp Configure the interface as a CNP that receives and transmits
frames for a single customer. DUT-1(config-if)#switchport beb vlan 3 cnp Make VLAN 3 the default for the CNP. DUT-1(config-if)#switchport beb customer- Map VLAN 3 to I-SID 3. network svlan add 3 instance 3 egress-port eth1 DUT-1(config-if)#exit Exit interface mode. 20 © 2015 IP Infusion Inc. Proprietary CFM Over PBB Configurations DUT-1(config)#ethernet cfm pbb domain-name Configure a domain, setting the name, type, level, and MIP type character-string name abc pbb-domain- creation permissions.
type service level 3 mip-creation none bridge 1 DUT-1(config-ether-cfm-pbb)#service pbb ma- Configure an MA for I-SID 3. type string ma-name 12 isid 3 mip-creation none DUT-1(config-ether-cfm-pbb)#mep pbb Configure cross checking for I-SID 3, associating it with crosscheck mpid 164 isid 3 remote MEP 164. DUT-1(config-ether-cfm-pbb)#end Go to privileged exec mode, DUT-1#configure terminal Enter configure mode. DUT-1(config)#interface eth1 Enter interface mode.
DUT-1(config-if)#ethernet cfm pbb mep down Create a MEP for I-SID 3. mpid 61 domain-name abc isid 3 bridge 1 DUT-1(config-if-eth-cfm-pbb-mep)#cc Enable continuity checking (CC) for MEP 61. multicast state enable DUT-1(config-if-eth-cfm-pbb-mep)#exit Exit CFM MEP mode. DUT-1(config-if)#exit Exit interface mode. DUT-1(config)#exit Exit configure mode. B-BEB (DUT-2) DUT-2#configure terminal Enter configure mode.
DUT-2#configure terminal Enter configure mode. DUT-2(config)#bridge beb mac 1111.1111.1111 Configure bridge 1 as an I-component bridge. backbone protocol provider-mstp DUT-2(config)#ethernet cfm enable Enable CFM globally. DUT-2(config)#vlan database Enter VLAN configure mode. DUT-2(config-vlan)#vlan 3 type backbone Configure VLAN 3 as a backbone VLAN. point-point state enable DUT-2(config-vlan)#exit Exit VLAN configure mode. DUT-2(config)#interface eth1 Enter interface mode.
DUT-2(config-if)#switchport Configure the interface as Layer 2 DUT-2(config-if)#bridge-group backbone Associate eth1 with the bridge. DUT-2(config-if)#switchport mode cbp Configure the interface as a CBP. DUT-2(config-if)#switchport beb vlan 3 cbp Make VLAN 3 the default for the CBP. DUT-2(config-if)#switchport beb customer- Map the BVID (backbone VLAN ID) to the VLAN. backbone instance add 3 bvlan 3 DUT-2(config-if)#exit Exit interface mode.
DUT-2(config-if)#exit Exit interface mode. DUT-2(config-if)#interface eth2 Enter interface mode. DUT-2(config-if)#switchport Configure the interface as a Layer 2 interface. DUT-2(config-if)#bridge-group backbone Associate the interface with the backbone bridge. DUT-2(config-if)#switchport mode pnp Configure the interface as a PNP that receives and transmits frames for multiple customers. DUT-2(config-if)#switchport beb vlan 3 pnp Make VLAN 3 the default for the PNP.
© 2015 IP Infusion Inc. Proprietary 21 CFM Over PBB Configurations DUT-2(config-if)#exit Exit interface mode. DUT-2(config)#ethernet cfm pbb domain-name Configure a domain, setting the name, type, level, and MIP type character-string name abc pbb-domain- creation permissions. type service level 3 mip-creation none backbone DUT-2(config-ether-cfm-pbb)#service pbb ma- Configure an MA for I-SID 3. type string ma-name 12 isid 3 mip-creation none
type string ma-name 12 isid 3 mip-creation none DUT-2(config-ether-cfm-pbb)#exit Exit Ethernet CFM PBB mode, DUT-2(config)#exit Exit global configure mode. BCB (DUT-3) DUT-3#configure terminal Enter configure mode. DUT-3(config)#bridge 1 protocol provider- Configure bridge 1. mstp DUT-3(config)#ethernet cfm enable Enable CFM globally. DUT-3(config)#vlan database Enter VLAN configure mode. DUT-3(config-vlan)#vlan 3 type service Configure VLAN 3 as a service VLAN.
point-point Bridge 1 state enable DUT-3(config-vlan)#exit Exit VLAN configure mode. DUT-3(config)#interface eth1 Enter interface mode. DUT-3(config-if)#switchport Configure the interface as Layer 2. DUT-3(config-if)#bridge-group 1 Associate the interface with bridge 1. DUT-3(config-if)#switchport mode provider- Configure the interface as a provider network. network DUT-3(config-if)#switchport provider- Associate VLAN 3 to the interface. network allowed vlan add 3
network allowed vlan add 3 DUT-3(config-if)#exit Exit interface mode. DUT-3(config)#interface eth2 Enter interface mode. DUT-3(config-if)#switchport Configure the interface as a Layer 2 interface. DUT-3(config-if)#bridge-group 1 Associate the interface with bridge 1. DUT-3(config-if)#switchport mode provider- Configure the interface as a provider network. network DUT-3(config-if)#switchport provider- Associate VLAN 3 to the interface. network allowed vlan add 3
network allowed vlan add 3 DUT-3(config-if)#exit Exit interface mode. DUT-3(config)#exit Exit configure mode. 22 © 2015 IP Infusion Inc. Proprietary CFM Over PBB Configurations B-BEB (DUT-4) DUT-4#configure terminal Enter configure mode. DUT-4(config)#bridge beb mac 1111.1111.1111 Configure bridge 1 as an I-component bridge. backbone protocol provider-mstp DUT-4(config)#ethernet cfm enable Enable CFM globally. DUT-4(config)#vlan database Enter VLAN configure mode.
DUT-4(config-vlan)#vlan 3 type backbone Configure VLAN 3 as a backbone VLAN. point-point state enable DUT-4(config-vlan)#exit Exit VLAN configure mode. DUT-4(config)#interface eth1 Enter interface mode. DUT-4(config-if)#switchport Configure the interface as Layer 2. DUT-4(config-if)#bridge-group backbone Associate eth1 with the backbone bridge. DUT-4(config-if)#switchport mode cbp Configure the interface as a CBP. DUT-4(config-if)#switchport beb vlan 3 cbp Make VLAN 3 the default for the CBP.
DUT-4(config-if)#switchport beb customer- Map the BVID (backbone VLAN ID) to the VLAN. backbone instance add 3 bvlan 3 DUT-4(config-if)#exit Exit interface mode. DUT-4(config-if)#interface eth2 Enter interface mode. DUT-4(config-if)#switchport Configure the interface as Layer 2. DUT-4(config-if)#bridge-group backbone Associate the interface with the backbone bridge. DUT-4(config-if)#switchport mode pnp Configure the interface as a PNP that receives and transmits frames for multiple customers.
frames for multiple customers. DUT-4(config-if)#switchport beb vlan 3 pnp Make VLAN 3 the default for the PNP. DUT-4(config-if)#switchport beb provider- Configure the interface as a provider network, associating all network bvlan all backbone VLANs to the PNP port. DUT-4(config-if)#exit Exit interface mode. DUT-4(config)#exit Exit configure mode. I-BEB (DUT-5) DUT-5#configure terminal Enter configure mode.
DUT-5#configure terminal Enter configure mode. DUT-5(config)#bridge beb mac 1111.1111.1111 Configure the bridge as an I-component bridge. 1 Protocol provider-mstp DUT-5(config)#ethernet cfm enable Enable CFM globally. DUT-5(config)#vlan database Enter VLAN configure mode. DUT-5(config-vlan)#vlan 3 type service Configure VLAN 3 as a service VLAN and associate it with point-point Bridge 1 state enable bridge 1. DUT-5(config-vlan)#exit Exit VLAN configure mode.
DUT-5(config-vlan)#exit Exit VLAN configure mode. DUT-5(config)#pbb isid list Enter I-SID configure mode. DUT-5(pbb-isid)#isid 3 name 3 i-component 1 Create an I-SID entry on I-component 1. © 2015 IP Infusion Inc. Proprietary 23 CFM Over PBB Configurations DUT-5(pbb-isid)#exit Exit I-SID configure mode. DUT-5(config)#interface eth1 Enter interface mode. DUT-5(config-if)#switchport Configure the interface as Layer 2. DUT-5(config-if)#bridge-group 1 Associate it with bridge 1.
DUT-5(config-if)#switchport mode pip Configure the interface as a PIP. DUT-5(config-if)#switchport beb vlan 3 pip Make VLAN 3 the default for the PIP. DUT-5(config-if)#exit Exit interface mode. DUT-5(config)#interface eth2 Enter interface mode. DUT-5(config-if)#switchport Configure the interface as Layer 2. DUT-5(config-if)#bridge-group 1 Associate it with bridge 1. DUT-5(config-if)#switchport mode cnp Configure the interface as a CNP that receives and transmits frames for a single customer.
frames for a single customer. DUT-5(config-if)#switchport beb vlan 3 cnp Make VLAN 3 the default for the CNP. DUT-5(config-if)#switchport beb customer- Map the VLAN ID to the I-SID. network svlan add 3 instance 3 egress-port eth1 DUT-5(config-if)#exit Exit interface mode. DUT-5(config)#ethernet cfm pbb domain-name Configure a domain, setting the name, type, level, and MIP type character-string name abc pbb-domain- creation permissions. type service level 3 mip-creation none bridge 1
type service level 3 mip-creation none bridge 1 DUT-5(config-ether-cfm-pbb)#service pbb ma- Configure an MA for I-SID 3. type string ma-name 12 isid 3 mip-creation none DUT-5(config-ether-cfm-pbb)#mep pbb Configure cross checking for I-SID 3, associating it with crosscheck mpid 61 isid 3 remote MEP 164. DUT-5(config-ether-cfm-pbb)#exit Exit Ethernet CFM PBB mode, DUT-5(config)#interface eth1 Enter interface mode. DUT-5(config-if)#ethernet cfm pbb mep down Create a MEP for I-SID 3.
mpid 164 domain-name abc isid 3 bridge 1 DUT-5(config-if-eth-cfm-pbb-mep)#cc Enable continuity checking (CC) for MEP 164. multicast state enable DUT-5(config-if)#end Return to privileged exec mode. Validation The following show command for DUT-5 displays information about the maintenance points in the domain named abc associated with I-SID 3, on bridge 1, at maintenance level 3: DUT-5#show ethernet cfm pbb maintenance-points remote domain-name abc isid 3 bridge 1
MPID LEVEL ISID MEP-UP Remote Mac ---------------------------------------------------------------- 3 3 3 Yes 0002.a5e0.9563 The following ping command displays loopback and test information for the configured elements: DUT-5#ping ethernet pbb multicast mepid 23 domain-name abc isid 3 tlv data 20 bridge 1 Host MEP: 23 Number of RMEPs that replied to mcast frame = 1 24 © 2015 IP Infusion Inc. Proprietary CFM Over PBB Configurations LBR received from the following 0002.a5e0.9563
LBR received from the following 0002.a5e0.9563 success rate is 100 (1/1) The following show command for DUT-1 displays detailed information about the domain, including maintenance level, interface type, domain type, VLAN ID, service instance ID, topology, port ID, continuity check status and MAC address: DUT-1#show ethernet cfm pbb maintenance-points local mep domain-name abc bridge 1 MPID DOMAIN_NAME LEVEL TYPE Domain-Type VLAN ISID Topo-Type PORT CC-Status Mac-address
-------------------------------------------------------------------------------------- 23 abc 3 MEP service 3 3 default eth1 enabled 0002.b3d4.3f25 © 2015 IP Infusion Inc. Proprietary 25 CFM Over PBB Configurations 26 © 2015 IP Infusion Inc. Proprietary Ethernet to the First Mile OAM Configuration CHAPTER 3 This chapter contains a complete sample Ethernet to the First Mile - Operation Administration and Maintenance (EFM- OAM) configuration.
OAM) configuration. The main functions of EFM-OAM are link performance monitoring, fault detection, fault signaling and loopback signaling. Slow Protocol frames called OAM Protocol Data Units (OAMPDUs) deliver OAM information. OAMPDUs contain the appropriate control and status information used to monitor, test and troubleshoot OAM-enabled links. Topology Figure 3-1 displays a sample EFM topology. Figure 3-1: EFM Topology © 2015 IP Infusion Inc. Proprietary 27
© 2015 IP Infusion Inc. Proprietary 27 Ethernet to the First Mile OAM Configuration ZebOS1 ZebOS1#configure terminal Enter configure mode. ZebOS1(config)#interface eth2 Enter interface mode. ZebOS1(config-if)#ethernet oam enable Enable Ethernet OAM in eth2. ZebOS1(config-if)#ethernet oam mode active Configure Ethernet OAM mode as active in eth1. (The default mode is passive.) ZebOS1(config-if)#ethernet oam timeout 10 Configure the link-timer as 10. Upon expiry of the link timer,
the discovery process will restart. ZebOS1(config-if)#ethernet oam max-rate 1 Specify the maximum number of OAMPDUS to be sent per second. The range is <1-10>. ZebOS2(config-if)#end Exit interface mode. ZebOS2 ZebOS2#configure terminal Enter configure mode. ZebOS2(config)#interface eth2 Enter interface mode. ZebOS2(config-if)#ethernet oam enable Enable Ethernet OAM in eth2. ZebOS2(config-if)#ethernet oam mode active Configure Ethernet OAM mode as active in eth1. (The default mode is passive.)
mode is passive.) ZebOS2(config-if)#ethernet oam timeout 10 Configure the link-timer as 10. Upon expiry of the link timer, the discovery process will restart ZebOS2(config-if)#end Exit interface mode. Validation The EFM Discovery Machine State should be “send any” in both machines. This is the expected normal operating state for OAM on fully-operational links. The various states of OAM discovery state machine are defined below. Discovery State Description
Discovery State Description ACTIVE_SEND_LOCAL A DTE configured in Active mode sends Information OAMPDUs that only contain the Local Information TLV. This state is called ACTIVE_SEND_LOCAL. While in this state, the local DTE waits for Information OAMPDUs received from the remote DTE. PASSIVE_WAIT DTE configured in Passive mode waits until receiving Information OAMPDUs with Local Information TLVs before sending any Information OAMPDUs with Local
Information TLVs. This state is called PASSIVE_WAIT. By waiting until first receiving an Information OAMPDU with the Local Information TLV, a Passive DTE cannot complete the OAM Discovery process when connected to another Passive DTE. SEND_LOCAL_REMOTE Once the local DTE has received an Information OAMPDU with the Local Information TLV from the remote DTE, the local DTE begins sending Information OAMPDUs that contain both the Local and Remote Information TLVs. This state is called
SEND_LOCAL_REMOTE. 28 © 2015 IP Infusion Inc. Proprietary Ethernet to the First Mile OAM Configuration Discovery State Description SEND_LOCAL_REMOTE_OK If the local OAM client deems the settings on both the local and remote DTEs are acceptable, it enters the SEND_LOCAL_REMOTE_OK state. SEND_ANY Once an OAMPDU has been received, indicating the remote device is satisfied with the respective settings, the local device enters the SEND_ANY state. This is the expected
normal operating state for OAM on fully operational links. FAULT If OAM is reset, disabled, or the link timer expires, the Discovery process returns to the FAULT state. Validation ZebOS1#show ethernet oam eth2 eth2 Discovery State Machine Details: EFM Discovery Machine State: Send Any Local Parser State: Forward Local Multiplexer State: Forward Remote Parser State: Forward Remote Multiplexer State: Forward Local Client: Symbol Period Error: Window: 05f5e100 Symbol(s) Threshold: 00 Symbol(s)
Threshold: 00 Symbol(s) Last Window Symbols Errors: 00 Symbol(s) Total Symbols Errors: 00 Symbol(s) Total Symbols Errors Events: 0 Events(s) Relative Timestamp of the Event: 0 x 100 milliseconds Frame Error: Window: 100 x 100 milliseconds Threshold: 1 Error Frame(s) Last Window Frame Errors: 0 Frame(s) Total Frame Errors: 00 Frames(s) Total Frame Errors Events: 0 Events(s) Relative Timestamp of the Event: 0 x 100 milliseconds Frame Period Error: Window: 989680 Frames Threshold: 1 Error Frame(s)
Window: 989680 Frames Threshold: 1 Error Frame(s) Last Window Frame Errors: 0 Frame(s) Total Frame Errors: 00 Frames(s) Total Frame Period Errors Events: 0 Events(s) Relative Timestamp of the Event: 0 x 100 milliseconds Frame Seconds Error: Window: 1000 x 100 milliseconds Threshold: 1 Error Second(s) Last Window Frame Second Errors: 0 Frame(s) Total Frame Second Errors: 00 Frames(s) Total Frame Second Errors Events: 0 Events(s) Relative Timestamp of the Event: 0 x 100 milliseconds
ZebOS1#show ethernet oam discovery interface eth2 © 2015 IP Infusion Inc. Proprietary 29 Ethernet to the First Mile OAM Configuration eth2 Local client: Administrative configurations: Mode: active Unidirection: supported Link monitor: supported(on) Remote Loopback: supported MIB retrieval: not supported MTU Size : 1518 Operational status: Port status: operational Loopback status: no loopback PDU revision: 1 Remote client: MAC address: 0002.b33e.401d Vendor(oui): 3 0 50
MAC address: 0002.b33e.401d Vendor(oui): 3 0 50 Administrative configurations: Mode: active Unidirection: supported Link monitor: supported Remote Loopback: supported MIB retrieval: not supported MTU Size : 1518 30 © 2015 IP Infusion Inc. Proprietary Ethernet to the First Mile OAM Configuration Remote Loopback You must enable Ethernet OAM remote loopback on an interface for the local OAM client to start OAM remote loopback operations. Ethernet OAM remote loopback is disabled by default.
Note: For ethernet oam remote-loopback start command to be successful, the node should receive at least one PDU. ZebOS1#configure terminal Enter configure mode. ZebOS1(config)#interface eth2 Enter interface mode. ZebOS1(config-if)#ethernet oam remote- Enable Ethernet remote loopback on eth2. loopback supported ZebOS1(config-if)#ethernet oam remote- Turn remote-loopback ON on eth2 loopback start ZebOS1(config-if)#ethernet oam remote- Turn remote-loopback OFF on eth2 loopback stop
loopback stop ZebOS1(config-if)#end Exit interface mode. Validation An OAM entity can put its remote entity into loopback mode using a loopback control OAMPDU. In loopback mode, every frame received is transmitted back on that same port except for OAMPDUs. The periodic exchange of OAMPDUs must continue during loopback state to maintain the OAM session. Once we enable remote loopback in ZebOS1, it sends out a loopback control OAMPDU with Enable remote loopback command. When ZebOS2 receives it,
it changes its parser state to Loopback and MUX state to discard and then sends out information OAMPDU with updated state information. ZebOS1#show ethernet oam eth2 eth2 Discovery State Machine Details: EFM Discovery Machine State: Send Any Local Parser State: Discard Local Multiplexer State: Forward Remote Parser State: Loopback Remote Multiplexer State: Invalid Link Monitoring Event
Link Monitoring Event We can configure high and low threshold for link-monitoring features. We can also configure an error disable action if one of the high thresholds is exceeded. ZebOS1#configure terminal Enter configure mode. ZebOS1(config)#interface eth2 Enter interface mode. ZebOS1(config-if)#ethernet oam link-monitor Enable the interface to support link monitoring. This is the supported default. ZebOS1(config-if)#ethernet oam link-monitor Start link monitoring. on
on © 2015 IP Infusion Inc. Proprietary 31 Ethernet to the First Mile OAM Configuration ZebOS1(config-if)#ethernet oam link-monitor Configure a high and low threshold for frame events. Specify frame threshold high 5000 low 200 window 500 the number of seconds to set a window period during which error frames are counted. ZebOS1(config-if)#ethernet oam link-monitor Configure this stub CLI to generate frames with the specified frame-errors 3000 error value.
frame-errors 3000 error value. ZebOS1(config-if)#ethernet oam link-monitor Configure high and low thresholds for frame-period events. frame-period threshold high 3000 low 500 ZebOS1(config-if)#ethernet oam link-monitor Configure high and low thresholds for frame-seconds events. frame-seconds threshold high 600 low 200 ZebOS1(config-if)#ethernet oam link-monitor Configure high and low thresholds for symbol events. symbol-period threshold high 40000 low 1000
symbol-period threshold high 40000 low 1000 ZebOS1(config-if)#ethernet oam link-monitor Configure the error-disable-action that should take high threshold action error-disable- place on the interface when one of the high thresholds is interface exceeded. ZebOS1(config-if)#end Exit interface mode. Validation When link monitoring is ON and the number of errors (frame-errors, seconds-errors, or symbol period errors) exceeds
the low threshold, a corresponding event notification PDU is sent. If the number of errors exceeds high threshold and a high threshold action (error-disable-interface) has been configured, the interface is disabled (shut down). ZebOS1#show ethernet oam status interface eth2 eth2 General: Mode: active PDU max rate: 10 packets per second PDU min rate: 1 packet per 1 second Link timeout: 5 seconds High threshold action: disable interface Link Monitoring: Status: supported(on) Symbol Period Error:
Status: supported(on) Symbol Period Error: Window: 100 million symbols Low threshold: 1000 error symbol(s) High threshold: 40000 error symbol(s) Frame Error: Window: 500 x 100 milliseconds Low threshold: 200 error frame(s) High threshold: 5000 error frame(s) Frame Period Error: Window: 1000 x 100,000 frames Low threshold: 500 error frame(s) High threshold: 500 error frame(s) Frame Seconds Error: Window: 1000 x 100 milliseconds Low threshold: 200 error second(s)
Low threshold: 200 error second(s) High threshold: 600 error second(s) Show output of the interface disabled through high threshold action: interface eth2 32 © 2015 IP Infusion Inc. Proprietary Ethernet to the First Mile OAM Configuration ip address 23.5.9.3/24 shutdown Remote Failure Detection Configuration An error-disable action can be configured to occur on an interface so that if any of the critical link events (link fault,
dying gasp, etc.) occurs in the remote machine, the interface is shut down. ZebOS1#configure terminal Enter configure mode. ZebOS1(config)#interface eth2 Enter interface mode. ZebOS1#ethernet oam remote-failure critical- Configure the Ethernet OAM remote-failure action on eth2. event dying-gasp link-fault action error- Configure the interface to shut down when any of the critical disable-interface link events take place on the remote machine.
ZebOS2(config-if)#ethernet oam local-event Set this stub CLI to generate a critical event. critical-event ZebOS2(config-if)#ethernet oam local-event Set this stub CLI to generate a dying-gasp event. dying-gasp ZebOS2(config-if)#ethernet oam local-event Set this stub CLI to generate a link-fault event. link-fault ZebOS1(config-if)#end Exit interface mode. Validation When a remote failure action (error-disable-interface) is configured in ZebOS1 and when a critical link event
(link fault, dying gasp, or other critical event) occurs in ZebOS2, the interface is disabled (shut down). © 2015 IP Infusion Inc. Proprietary 33 Ethernet to the First Mile OAM Configuration 34 © 2015 IP Infusion Inc. Proprietary Link Layer Discovery Protocol Configuration CHAPTER 4 This chapter contains a complete sample Link Layer Discovery Protocol (LLDP) configuration. LLDP is a neighbor discovery protocol that defines a method for network access devices using Ethernet connectivity to
advertise themselves to other devices on the same physical LAN, and then to store information about the network. It allows a device to learn higher-layer management reachability and connection endpoint information from adjacent devices. Using LLDP, a network device is able to advertise its identity, its capabilities and its media-specific configuration, as well as learn the same information from other connected devices. Topology Figure 4-1 displays a sample LLDP topology.
Figure 4-1 displays a sample LLDP topology. Figure 4-1: LLDP Topology LLDPv1 Note: All configuration commands in the table below should be followed for each machines. #configure terminal Enter configure mode. (config)#set lldp system-name L2-LLDP Specify a system name. (config)#set lldp system-description TEST- Specify a system description. LLDP (config)#bridge 1 protocol ieee vlan-bridge Configure an IEEE VLAN-aware bridge. (config)#vlan database Enter VLAN configure mode.
(config)#vlan database Enter VLAN configure mode. (config-vlan)#vlan 2 bridge 1 state enable Configure a VLAN and add it to the bridge. (config)#exit Exit the VLAN configuration mode. (config)#interface eth1 Enter interface mode. (config-if)#set lldp enable txrx Enable an LLDP agent on the port. (config-if)#lldp tlv ieee-8021-org-specific Enable the various TLV's to be transmitted on the port. management-address port-description system- capabilities system-description system-name
capabilities system-description system-name (config-if)#switchport Set switching characteristics on the port. (config-if)#bridge-group 1 Associate the interface to the bridge. (config)#exit Exit interface mode. © 2015 IP Infusion Inc. Proprietary 35 Link Layer Discovery Protocol Configuration Validation 1. Verify the remote system information. #show lldp port eth1 Remote LLDP MAC Address: 0 d0 b7 1b 8 93 TTL: 120 Interface Number: 3 Port Vlan ID: 0 AutoNego Support: AutoNego Capability: 0
AutoNego Support: AutoNego Capability: 0 Operational MAU Type: 0 /* PoE Feature Starts */ Power via MDI Capability (raw data): (Use command [show poe port remote] for details): MDI power support: 0x0 PSE power pair: 0x0 Power class: 0x0 Type/source/priority: 0x0 PD requested power value: 0x0 PSE allocated power value: 0x0 /* PoE Feature Ends*/ Link Aggregation Status: Link Aggregation Port ID: 0 Max Frame Size: 0 System name: L2-LLDP System Description: TEST-LLDP System Capabilities: 512
System Capabilities: 512 System Capabilities Enabled: 512 2. Verify the LLDP configurations in the local machine. #show running-config ! no service password-encryption ! no service dhcp ip domain-lookup ! mpls propagate-ttl ! vrrp vmac enable no ipv6 forwarding bridge 1 protocol ieee vlan-bridge lldp system-name L2-LLDP lldp system-description TEST-LLDP ! interface lo ip address 127.0.0.1/8 ! interface eth0 ip address 2.2.2.42/24 ! interface eth1 switchport bridge-group 1
! interface eth1 switchport bridge-group 1 36 © 2015 IP Infusion Inc. Proprietary Link Layer Discovery Protocol Configuration switchport mode access set lldp enable txrx lldp tlv chassis-id port-id ttl port-description system-name system- capabilities system-description management-address ieee-8021-org-specific ! interface eth2 ! interface eth3 ip address 10.87.125.41/24 ! interface svlan0.1 ! interface vlan1.1 ! line con 0 login line vty 0 4 login ! end 3. Verify the LLDP port statistics.
login ! end 3. Verify the LLDP port statistics. #show lldp port eth1 statistics LLDP Port statistics for eth1 Frames transmitted: 36 Frames Aged out: 0 Frames Discarded: 0 Frames with Error: 0 Frames Received: 37 TLVs discarded: 0 TLVs unrecognized 0 LLDPv2 Default Agent All configuration commands in the table below should be followed for each machines. #configure terminal Enter configure mode. (config)#bridge 1 protocol ieee vlan- bridge Configure an IEEE VLAN-aware bridge.
(config)#vlan database Enter VLAN configure mode. (config-vlan)#vlan 2 bridge 1 state enable Configure a VLAN and add it to the bridge. (config-vlan)#exit Exit the VLAN configuration mode. (config)#interface eth1 Enter interface mode. (config-if)# set lldp port-description Specify port description LLDP-Interface (config-if)#lldp-agent Enter into the default agent (lldp-agent)#set lldp enable txrx Enable an LLDP agent on the port.
(lldp-agent)# set lldp chassis-id-tlv ip- Configure the subtype for chassis-id TLV address © 2015 IP Infusion Inc. Proprietary 37 Link Layer Discovery Protocol Configuration (lldp-agent)# set lldp port-id-tlv mac- Configure the subtype for port-id TLV address (lldp-agent)# lldp tlv-select basic-mgmt Enable the port-description TLV to be transmitted port-description on the port (lldp-agent)# lldp tlv-select basic-mgmt Enable the system-name TLV to be transmitted on the system-name port
system-name port (lldp-agent)# lldp tlv-select basic-mgmt Enable the system-capabilities TLV to be system-capabilities transmitted on the port (lldp-agent)# lldp tlv-select basic-mgmt Enable the system-description TLV to be system-description transmitted on the port (lldp-agent)# lldp tlv-select basic-mgmt Enable the management-address TLV to be management-address transmitted on the port (lldp-agent)# lldp tlv-select ieee-8021- Enable the VLAN-id TLV to be transmitted on the port
org-specific port-vlanid (lldp-agent)# lldp tlv-select ieee-8021- Enable the VLAN-NAME TLV to be transmitted on the port org-specific vlan-name (lldp-agent)# lldp tlv-select ieee-8021- Enable the Port and Protocol VLAN id TLV to be org-specific port-ptcl-vlanid transmitted on the port (lldp-agent)# lldp tlv-select ieee-8021- Enable the Protocol Identity TLV to be transmitted org-specific ptcl-identity on the port
org-specific ptcl-identity on the port (lldp-agent)# lldp tlv-select ieee-8021- Enable the VID Usage Digest TLV to be transmitted org-specific vid-digest on the port (lldp-agent)# lldp tlv-select ieee-8021- Enable the Management VID TLV to be transmitted on org-specific mgmt-vid the port (lldp-agent)# lldp tlv-select ieee-8021- Enable the Link Aggregation TLV to be transmitted org-specific link-agg on the port
org-specific link-agg on the port (lldp-agent)# lldp tlv-select ieee-8023- Enable the MAC/PHY Configuration/Status TLV to be org-specific mac-phy transmitted on the port (lldp-agent)# lldp tlv-select ieee-8023- Enable the Maximum Frame Size TLV to be transmitted on org-specific max-mtu-size the port (lldp-agent)# lldp tlv-select ieee-8023- Enable Power-Via-MDI TLV to be transmitted on the port. org-specific power-via-mdi
org-specific power-via-mdi (lldp-agent)# set lldp timer msg-fast-TX 5 Defines the time interval during fast transmission periods (lldp-agent)# set lldp Tx-fast-init 6 Defines the number of LLDPDUs that are transmitted during a fast transmission period (lldp-agent)#exit Exit the lldp agent mode (config-if)#switchport Set switching characteristics on the port. (config-if)#bridge-group 1 Associate the interface to the bridge. (config-if)#exit Exit interface mode. Validation
(config-if)#exit Exit interface mode. Validation 1. Verify the LLDP configurations in the local machine #show running-config lldp ! interface lo lldp-agent ! interface eth0 38 © 2015 IP Infusion Inc. Proprietary Link Layer Discovery Protocol Configuration lldp-agent ! interface eth1 lldp-agent set lldp enable txrx lldp tlv-select basic-mgmt port-description lldp tlv-select basic-mgmt system-name lldp tlv-select basic-mgmt system-capabilities lldp tlv-select basic-mgmt system-description
lldp tlv-select basic-mgmt system-description lldp tlv-select basic-mgmt management-address lldp tlv-select ieee-8021-org-specific port-vlanid lldp tlv-select ieee-8021-org-specific vlan-name lldp tlv-select ieee-8021-org-specific port-ptcl-vlanid lldp tlv-select ieee-8021-org-specific ptcl-identity lldp tlv-select ieee-8021-org-specific vid-digest lldp tlv-select ieee-8021-org-specific mgmt-vid lldp tlv-select ieee-8021-org-specific link-agg lldp tlv-select ieee-8023-org-specific mac-phy
lldp tlv-select ieee-8023-org-specific mac-phy lldp tlv-select ieee-8023-org-specific link-agg lldp tlv-select ieee-8023-org-specific max-mtu-size lldp tlv-select ieee-8023-org-specific power-via-mdi set lldp timer msg-fast-TX 5 set lldp tx-fast-init 6 ! interface eth2 lldp-agent ! interface eth3 lldp-agent ! interface sit0 lldp-agent ! interface svlan0.1 lldp-agent ! interface vlan1.1 lldp-agent ! interface vlan1.2 lldp-agent 2. Verify the LLDP port statistics
lldp-agent 2. Verify the LLDP port statistics #show lldp interface eth1 nearest-bridge Agent Mode : Nearest bridge Enable (tx/rx): Y/Y MED Enabled :N Device Type: NOT_DEFINED LLDP Agent traffic statistics: Total frames transmitted: 24 Total entries aged: 0 Total frames recieved: 16 Total frames received in error: 0 Total frames discarded: 0 Total discarded TLVs: 0 Total unrecognised TLVs: 0 © 2015 IP Infusion Inc. Proprietary 39 Link Layer Discovery Protocol Configuration Customer Bridge
Customer Bridge All configuration commands in the table below should be followed for each machines. #configure terminal Enter configure mode. (config)#bridge 1 protocol ieee vlan- bridge Configure an IEEE VLAN-aware bridge. (config)#vlan database Enter VLAN configure mode. (config-vlan)#vlan 2 bridge 1 state enable Configure a VLAN and add it to the bridge. (config-vlan)#exit Exit the VLAN configuration mode. (config)#interface eth1 Enter interface mode.
(config)#interface eth1 Enter interface mode. (config-if)# set lldp port-description LLDP- Specify port description Interface (config-if)#lldp-agent customer-bridge Enter into the Customer Bridge agent (lldp-agent)#set lldp enable txrx Enable an LLDP agent on the port. (lldp-agent)# set lldp chassis-id-tlv ip- Configure the subtype for chassis-id TLV address (lldp-agent)# set lldp port-id-tlv mac- Configure the subtype for port-id TLV address
address (lldp-agent)# lldp tlv-select basic-mgmt Enable the port-description TLV to be transmitted on the port port-description (lldp-agent)# lldp tlv-select basic-mgmt Enable the system-name TLV to be transmitted on the port system-name (lldp-agent)# lldp tlv-select basic-mgmt Enable the system-capabilities TLV to be transmitted on the system-capabilities port (lldp-agent)# lldp tlv-select basic-mgmt Enable the system-description TLV to be transmitted on the system-description port
system-description port (lldp-agent)# lldp tlv-select basic-mgmt Enable the management-address TLV to be transmitted on management-address the port (lldp-agent)# lldp tlv-select ieee-8021-org- Enable the VLAN-id TLV to be transmitted on the port specific port-vlanid (lldp-agent)# lldp tlv-select ieee-8021-org- Enable the VLAN-NAME TLV to be transmitted on the port specific vlan-name (lldp-agent)# lldp tlv-select ieee-8021-org- Enable the Port and Protocol VLAN id TLV to be transmitted
specific port-ptcl-vlanid on the port (lldp-agent)# lldp tlv-select ieee-8021-org- Enable the Protocol Identity TLV to be transmitted on the port specific ptcl-identity (lldp-agent)# lldp tlv-select ieee-8021-org- Enable the VID Usage Digest TLV to be transmitted on the specific vid-digest port (lldp-agent)# lldp tlv-select ieee-8021-org- Enable the Management VID TLV to be transmitted on the specific mgmt-vid port
specific mgmt-vid port (lldp-agent)# lldp tlv-select ieee-8021-org- Enable the Link Aggregation TLV to be transmitted on the specific link-agg port (lldp-agent)# lldp tlv-select ieee-8023-org- Enable the MAC/PHY Configuration/Status TLV to be specific mac-phy transmitted on the port (lldp-agent)# lldp tlv-select ieee-8023-org- Enable the Maximum Frame Size TLV to be transmitted on specific max-mtu-size the port
specific max-mtu-size the port (lldp-agent)# lldp tlv-select ieee-8023-org- Enable The Power-Via-MDI TLV to be transmitted on the specific power-via-mdi port 40 © 2015 IP Infusion Inc. Proprietary Link Layer Discovery Protocol Configuration (lldp-agent)# set lldp timer msg-fast-TX 5 Defines the time interval during fast transmission periods (lldp-agent)# set lldp Tx-fast-init 6 Defines the number of LLDPDUs that are transmitted during a fast transmission period
a fast transmission period (lldp-agent)#exit Exit the lldp agent mode (config-if)#switchport Set switching characteristics on the port. (config-if)#bridge-group 1 Associate the interface to the bridge. (config-if)#exit Exit interface mode. Validation 1. Verify the LLDP configurations in the local machine #show running-config lldp ! interface lo lldp-agent ! interface eth0 lldp-agent ! interface eth1 lldp-agent customer-bridge set lldp enable txrx lldp tlv-select basic-mgmt port-description
lldp tlv-select basic-mgmt port-description lldp tlv-select basic-mgmt system-name lldp tlv-select basic-mgmt system-capabilities lldp tlv-select basic-mgmt system-description lldp tlv-select basic-mgmt management-address lldp tlv-select ieee-8021-org-specific port-vlanid lldp tlv-select ieee-8021-org-specific vlan-name lldp tlv-select ieee-8021-org-specific port-ptcl-vlanid lldp tlv-select ieee-8021-org-specific ptcl-identity lldp tlv-select ieee-8021-org-specific vid-digest
lldp tlv-select ieee-8021-org-specific vid-digest lldp tlv-select ieee-8021-org-specific mgmt-vid lldp tlv-select ieee-8021-org-specific link-agg lldp tlv-select ieee-8023-org-specific mac-phy lldp tlv-select ieee-8023-org-specific link-agg lldp tlv-select ieee-8023-org-specific max-mtu-size lldp tlv-select ieee-8023-org-specific power-via-mdi set lldp timer msg-fast-TX 5 set lldp tx-fast-init 6 ! interface eth2 lldp-agent ! interface eth3 lldp-agent ! interface sit0 lldp-agent !
lldp-agent ! interface sit0 lldp-agent ! interface svlan0.1 lldp-agent ! interface vlan1.1 © 2015 IP Infusion Inc. Proprietary 41 Link Layer Discovery Protocol Configuration lldp-agent ! interface vlan1.2 lldp-agent 2. Verify the LLDP port statistics #show lldp interface eth1 Customer-bridge Agent Mode : Customer-bridge Enable (tx/rx): Y/Y MED Enabled : NOT_DEFINED Device Type: Non LLDP Agent traffic statistics: Total frames transmitted: 21 Total entries aged: 0 Total frames recieved: 15
Total entries aged: 0 Total frames recieved: 15 Total frames received in error: 0 Total frames discarded: 0 Total discarded TLVs: 0 Total unrecognised TLVs: 0 Non-Tpmr-Bridge #configure terminal Enter configure mode. (config)#bridge 1 protocol ieee vlan- bridge Configure an IEEE VLAN-aware bridge. (config)#vlan database Enter VLAN configure mode. (config-vlan)#vlan 2 bridge 1 state enable Configure a VLAN and add it to the bridge. (config-vlan)#exit Exit the VLAN configuration mode.
(config)#interface eth1 Enter interface mode. (config-if)# set lldp port-description LLDP- Specify port description Interface (config-if)#lldp-agent non-tpmr-bridge Enter into the Non tpmr Bridge agent (lldp-agent)#set lldp enable txrx Enable an LLDP agent on the port. (lldp-agent)# set lldp chassis-id-tlv ip- Configure the subtype for chassis-id TLV address (lldp-agent)# set lldp port-id-tlv mac- Configure the subtype for port-id TLV address
address (lldp-agent)# lldp tlv-select basic-mgmt Enable the port-description TLV to be transmitted on the port port-description (lldp-agent)# lldp tlv-select basic-mgmt Enable the system-name TLV to be transmitted on the port system-name (lldp-agent)# lldp tlv-select basic-mgmt Enable the system-capabilities TLV to be transmitted on the system-capabilities port (lldp-agent)# lldp tlv-select basic-mgmt Enable the system-description TLV to be transmitted on the system-description port
system-description port (lldp-agent)# lldp tlv-select basic-mgmt Enable the management-address TLV to be transmitted on management-address the port (lldp-agent)# lldp tlv-select ieee-8021-org- Enable the VLAN-id TLV to be transmitted on the port specific port-vlanid 42 © 2015 IP Infusion Inc. Proprietary Link Layer Discovery Protocol Configuration (lldp-agent)# lldp tlv-select ieee-8021-org- Enable the VLAN-NAME TLV to be transmitted on the port specific vlan-name
specific vlan-name (lldp-agent)# lldp tlv-select ieee-8021-org- Enable the Port and Protocol VLAN id TLV to be transmitted specific port-ptcl-vlanid on the port (lldp-agent)# lldp tlv-select ieee-8021-org- Enable the Protocol Identity TLV to be transmitted on the port specific ptcl-identity (lldp-agent)# lldp tlv-select ieee-8021-org- Enable the VID Usage Digest TLV to be transmitted on the specific vid-digest port
specific vid-digest port (lldp-agent)# lldp tlv-select ieee-8021-org- Enable the Management VID TLV to be transmitted on the specific mgmt-vid port (lldp-agent)# lldp tlv-select ieee-8021-org- Enable the Link Aggregation TLV to be transmitted on the port specific link-agg (lldp-agent)# lldp tlv-select ieee-8023-org- Enable the MAC/PHY Configuration/Status TLV to be specific mac-phy transmitted on the port
specific mac-phy transmitted on the port (lldp-agent)# lldp tlv-select ieee-8023-org- Enable the Maximum Frame Size TLV to be transmitted on specific max-mtu-size the port (lldp-agent)# lldp tlv-select ieee-8023-org- Enable Power-Via-MDI TLV to be transmitted on the port. specific power-via-mdi (lldp-agent)# set lldp timer msg-fast-TX 5 Defines the time interval during fast transmission periods (lldp-agent)# set lldp Tx-fast-init 6 Defines the number of LLDPDUs that are transmitted during a
fast transmission period (lldp-agent)#exit Exit the lldp agent mode (config-if)#switchport Set switching characteristics on the port. (config-if)#bridge-group 1 Associate the interface to the bridge. (config-if)#exit Exit interface mode. Validation 1. Verify the LLDP configurations in the local machine #show running-config lldp ! interface lo lldp-agent ! interface eth0 lldp-agent ! interface eth1 lldp-agent non-tpmr-bridge set lldp enable txrx lldp tlv-select basic-mgmt port-description
lldp tlv-select basic-mgmt port-description lldp tlv-select basic-mgmt system-name lldp tlv-select basic-mgmt system-capabilities lldp tlv-select basic-mgmt system-description lldp tlv-select basic-mgmt management-address lldp tlv-select ieee-8021-org-specific port-vlanid lldp tlv-select ieee-8021-org-specific vlan-name lldp tlv-select ieee-8021-org-specific port-ptcl-vlanid lldp tlv-select ieee-8021-org-specific ptcl-identity lldp tlv-select ieee-8021-org-specific vid-digest
lldp tlv-select ieee-8021-org-specific vid-digest lldp tlv-select ieee-8021-org-specific mgmt-vid © 2015 IP Infusion Inc. Proprietary 43 Link Layer Discovery Protocol Configuration lldp tlv-select ieee-8021-org-specific link-agg lldp tlv-select ieee-8023-org-specific mac-phy lldp tlv-select ieee-8023-org-specific link-agg lldp tlv-select ieee-8023-org-specific max-mtu-size lldp tlv-select ieee-8023-org-specific power-via-mdi set lldp timer msg-fast-TX 5 set lldp tx-fast-init 6 ! interface eth2
set lldp tx-fast-init 6 ! interface eth2 lldp-agent ! interface eth3 lldp-agent ! interface sit0 lldp-agent ! interface svlan0.1 lldp-agent ! interface vlan1.1 lldp-agent ! interface vlan1.2 lldp-agent 2. Verify the LLDP port statistics #show lldp interface eth1 Non-TPMR-bridge Agent Mode : Non-TPMR-bridge Enable (tx/rx): Y/Y MED Enabled :N Device Type: NOT_DEFINED LLDP Agent traffic statistics: Total frames transmitted: 20 Total entries aged: 0 Total frames recieved: 13
Total entries aged: 0 Total frames recieved: 13 Total frames received in error: 0 Total frames discarded: 0 Total discarded TLVs: 0 Total unrecognised TLVs: 0 LLDP-MED LLDP extensions and behavior requirements are described specifically in the areas of network Configuration and policy, device location (including for Emergency Call Service / E911), Power over Ethernet management, and inventory management. Based on the device type, different TLVs are advertised by the Station.
44 © 2015 IP Infusion Inc. Proprietary Link Layer Discovery Protocol Configuration LLDP-MED Network Connectivity Device LLDP-MED Network Connectivity Devices, as defined in this Standard, provide access to the IEEE 802 based LAN infrastructure for LLDP-MED Endpoint Devices. An LLDP-MED Network Connectivity Device is a LAN access device based on any of the following technologies: • LAN Switch/Router • IEEE 802.1 Bridge • IEEE 802.3 Repeater (included for historical reasons)
• IEEE 802.11 Wireless Access Point • Any device that supports the IEEE 802.1AB and MED extensions defined by this Standard and can relay IEEE 802 frames via any method. Configuration Command set lldp med-devtype net-connect LLDP-MED Generic Endpoint (Class I) The LLDP-MED Generic Endpoint (Class I) definition is applicable to all endpoint products that require the base LLDP discovery services, however do not support IP media or act as an end-user communication appliance. Such devices
may include (but are not limited to) IP Communication Controllers, other communication related servers, or any device requiring basic services. Configuration Command set lldp med-devtype ep-class1 LLDP-MED Generic Endpoint (Class 2) The LLDP-MED Media Endpoint (Class II) definition is applicable to all endpoint products that have IP media capabilities however may or may not be associated with a particular end user. Capabilities include all of the capabilities
defined for the previous Generic Endpoint Class (Class I), and are extended to include aspects related to media streaming. Example product categories expected to adhere to this class include (but are not limited to) Voice / Media Gateways, Conference Bridges, Media Servers, and similar Configuration Command set lldp med-devtype ep-class2 LLDP-MED Generic Endpoint (Class 3) The LLDP-MED Communication Endpoint (Class III) definition is applicable to all endpoint products that act as end
user communication appliances supporting IP media. Capabilities include all of the capabilities defined for the previous Generic Endpoint (Class I) and Media Endpoint (Class II) classes, and are extended to include aspects related to end user devices. Example product categories expected to adhere to this class include (but are not limited to) end user communication appliances, such as IP Phones, PC-based softphones, or other communication appliances that directly support the end user.
support the end user. Configuration Command set lldp med-devtype ep-class3 © 2015 IP Infusion Inc. Proprietary 45 Link Layer Discovery Protocol Configuration Machine A #configure terminal Enter configure mode. (config)#bridge 1 protocol ieee vlan- bridge Configure an IEEE VLAN-aware bridge. (config)#vlan database Enter VLAN configure mode. (config-vlan)#vlan 2 bridge 1 state enable Configure a VLAN and add it to the bridge. (config-vlan)#exit Exit the VLAN configuration mode.
(config)#interface eth1 Enter interface mode. (config-if)#lldp-agent Enter into the default agent (lldp-agent)#set lldp enable txrx Enable an LLDP agent on the port. (lldp-agent)#exit Exit the lldp agent mode (config-if)#lldp-agent customer-bridge Enter into the customer-bridge agent (lldp-agent)#set lldp enable txrx Enable an LLDP agent on the port. (lldp-agent)#exit Exit the lldp agent mode (config-if)#lldp-agent non-tpmr-bridge Enter into the non-tpmr-bridge agent
(lldp-agent)#set lldp enable txrx Enable an LLDP agent on the port. (lldp-agent)#exit Exit the lldp agent mode (config-if)# set lldp med-devtype net- Configure the med device type connect (config-if)#switchport Set switching characteristics on the port. (config-if)#bridge-group 1 Associate the interface to the bridge. (config-if)#exit Exit interface mode. Machine B #configure terminal Enter configure mode. (config)#bridge 1 protocol ieee vlan- Configure an IEEE VLAN-aware bridge. bridge
bridge (config)#vlan database Enter VLAN configure mode. (config-vlan)#vlan 2 bridge 1 state enable Configure a VLAN and add it to the bridge. (config-vlan)#exit Exit the VLAN configuration mode. (config)#interface eth1 Enter interface mode. (config-if)#lldp-agent Enter into the default agent (lldp-agent)#set lldp enable txrx Enable an LLDP agent on the port. (lldp-agent)#exit Exit the lldp agent mode (config-if)#lldp-agent customer-bridge Enter into the customer-bridge agent
46 © 2015 IP Infusion Inc. Proprietary Link Layer Discovery Protocol Configuration (lldp-agent)#set lldp enable txrx Enable an LLDP agent on the port. (lldp-agent)#exit Exit the lldp agent mode (config-if)#lldp-agent non-tpmr-bridge Enter into the non-tpmr-bridge agent (lldp-agent)#set lldp enable txrx Enable an LLDP agent on the port. (lldp-agent)#exit Exit the lldp agent mode (config-if)# set lldp med-devtype {ep- Configure the med device type class1|ep-class2|ep-class3}
class1|ep-class2|ep-class3} (config-if)#switchport Set switching characteristics on the port. (config-if)#bridge-group 1 Associate the interface to the bridge. (config-if)#exit Exit interface mode. Validation 1. Verify the LLDP configurations on Machine A #show running-config lldp ! interface lo lldp-agent ! interface eth0 lldp-agent ! interface eth1 set lldp med-devtype net-connect lldp-agent set lldp enable txrx lldp tlv-select med media-capabilities lldp tlv-select med network-policy
lldp tlv-select med network-policy lldp tlv-select med location lldp tlv-select med extended-power-via-mdi lldp-agent non-TPMR-bridge set lldp enable txrx lldp tlv-select med media-capabilities lldp tlv-select med network-policy lldp tlv-select med location lldp tlv-select med extended-power-via-mdi lldp-agent customer-bridge set lldp enable txrx lldp tlv-select med media-capabilities lldp tlv-select med network-policy lldp tlv-select med location lldp tlv-select med extended-power-via-mdi !
lldp tlv-select med extended-power-via-mdi ! interface eth2 lldp-agent ! interface eth3 lldp-agent ! interface sit0 lldp-agent ! © 2015 IP Infusion Inc. Proprietary 47 Link Layer Discovery Protocol Configuration interface svlan0.1 lldp-agent ! interface vlan1.1 lldp-agent ! interface vlan1.2 lldp-agent ! 2. Verify the LLDP port statistics on machine A #sh lldp interface eth1 Agent Mode: Customer-bridge Enable (tx/rx): Y/Y MED Enabled :Y Device Type: NETWORK_CONNECTIVITY
MED Enabled :Y Device Type: NETWORK_CONNECTIVITY LLDP Agent traffic statistics: Total frames transmitted: 20 Total entries aged: 0 Total frames recieved: 6 Total frames received in error: 0 Total frames discarded: 0 Total discarded TLVs: 0 Total unrecognised TLVs: 0 Agent Mode : Non-TPMR-bridge Enable (tx/rx): Y/Y MED Enabled :Y Device Type: NETWORK_CONNECTIVITY LLDP Agent traffic statistics: Total frames transmitted: 19 Total entries aged: 0 Total frames recieved: 9
Total entries aged: 0 Total frames recieved: 9 Total frames received in error: 0 Total frames discarded: 0 Total discarded TLVs: 0 Total unrecognised TLVs: 0 Agent Mode : Nearest bridge Enable (tx/rx): Y/Y MED Enabled :Y Device Type: NETWORK_CONNECTIVITY LLDP Agent traffic statistics: Total frames transmitted: 21 Total entries aged: 0 Total frames recieved: 5 Total frames received in error: 0 Total frames discarded: 0 Total discarded TLVs: 0 Total unrecognised TLVs: 0
Total unrecognised TLVs: 0 3. Verify the LLDP configurations for end device ep-class3 on machine B #show running-config lldp ! interface lo lldp-agent 48 © 2015 IP Infusion Inc. Proprietary Link Layer Discovery Protocol Configuration ! interface eth0 lldp-agent ! interface eth1 set lldp med-devtype ep-class3 lldp-agent set lldp enable txrx lldp tlv-select med network-policy lldp-agent non-TPMR-bridge set lldp enable txrx lldp tlv-select med network-policy lldp-agent customer-bridge
lldp-agent customer-bridge set lldp enable txrx lldp tlv-select med network-policy ! interface eth2 lldp-agent ! interface eth3 lldp-agent ! interface sit0 lldp-agent ! interface svlan0.1 lldp-agent ! interface vlan1.1 lldp-agent ! interface vlan1.2 lldp-agent ! 4. Verify the LLDP port statistics on machine B #sh lldp interface eth1 Agent Mode: Customer-bridge Enable (tx/rx): Y/Y MED Enabled :Y Device Type: END_POINT_CLASS_3 LLDP Agent traffic statistics: Total frames transmitted: 15
Total frames transmitted: 15 Total entries aged: 0 Total frames recieved: 5 Total frames received in error: 0 Total frames discarded: 0 Total discarded TLVs: 0 Total unrecognised TLVs: 0 Agent Mode : Non-TPMR-bridge Enable (tx/rx): Y/Y MED Enabled :Y Device Type: END_POINT_CLASS_3 LLDP Agent traffic statistics: Total frames transmitted: 17 © 2015 IP Infusion Inc. Proprietary 49 Link Layer Discovery Protocol Configuration Total entries aged: 0 Total frames recieved: 7
Total entries aged: 0 Total frames recieved: 7 Total frames received in error: 0 Total frames discarded: 0 Total discarded TLVs: 0 Total unrecognised TLVs: 0 Agent Mode : Nearest bridge Enable (tx/rx): Y/Y MED Enabled :Y Device Type: END_POINT_CLASS_3 LLDP Agent traffic statistics: Total frames transmitted: 18 Total entries aged: 0 Total frames recieved: 9 Total frames received in error: 0 Total frames discarded: 0 Total discarded TLVs: 0 Total unrecognised TLVs: 0
Total unrecognised TLVs: 0 Configuring LLDPv2 through SNMP Note: As a pre-requisite LSR, FTN, NON-TPMR-BRIDGE and Customer Bridge must be configured using CLI. LLDPv2 nearest bridge agent MIB objects Configuration 1. Enable transmission only (txonly) [root@localhost sbin]# snmpset -v 2c -c test 10.12.48.158 .1.3.111.2.802.1.1.13.1.1.8.1.3.5.1 int 1 SNMPv2-SMI::org.111.2.802.1.1.13.1.1.8.1.3.3.1 = INTEGER: 1 2. Enable reception only (rxonly)
2. Enable reception only (rxonly) [root@localhost sbin]# snmpset -v 2c -c test 10.12.48.158 .1.3.111.2.802.1.1.13.1.1.8.1.3.5.1 int 2 SNMPv2-SMI::org.111.2.802.1.1.13.1.1.8.1.3.3.1 = INTEGER: 2 3. Enable transmission and reception (txrx) [root@localhost sbin]# snmpset -v 2c -c test 10.12.48.158 .1.3.111.2.802.1.1.13.1.1.8.1.3.5.1 int 3 SNMPv2-SMI::org.111.2.802.1.1.13.1.1.8.1.3.3.1 = INTEGER: 3 4. Disable transmission and reception [root@localhost sbin]# snmpset -v 2c -c test 10.12.48.158
.1.3.111.2.802.1.1.13.1.1.8.1.3.5.1 int 4 SNMPv2-SMI::org.111.2.802.1.1.13.1.1.8.1.3.3.1 = INTEGER: 4 LLDPv2 non-tpmr bridge agent MIB objects Configuration 1. Enable transmission only (txonly) [root@localhost sbin]# snmpset -v 2c -c test 10.12.48.158 .1.3.111.2.802.1.1.13.1.1.8.1.3.5.2 int 1 SNMPv2-SMI:: org.111.2.802.1.1.13.1.1.8.1.3.3.2 = INTEGER: 1 2. Enable reception only (rxonly) [root@localhost sbin]# snmpset -v 2c -c test 10.12.48.158 .1.3.111.2.802.1.1.13.1.1.8.1.3.5.2 int 2
.1.3.111.2.802.1.1.13.1.1.8.1.3.5.2 int 2 SNMPv2-SMI:: org.111.2.802.1.1.13.1.1.8.1.3.3.2 = INTEGER: 2 50 © 2015 IP Infusion Inc. Proprietary Link Layer Discovery Protocol Configuration 3. Enable transmission and reception (txrx) [root@localhost sbin]# snmpset -v 2c -c test 10.12.48.158 .1.3.111.2.802.1.1.13.1.1.8.1.3.5.2 int 3 SNMPv2-SMI::org.111.2.802.1.1.13.1.1.8.1.3.3.2 = INTEGER: 3 4. Disable transmission and reception [root@localhost sbin]# snmpset -v 2c -c test 10.12.48.158
.1.3.111.2.802.1.1.13.1.1.8.1.3.5.2 int 4 SNMPv2-SMI:: org.111.2.802.1.1.13.1.1.8.1.3.3.2 = INTEGER: 4 LLDPv2 customer bridge agent MIB objects Configuration 1. Enable transmission only (txonly) [root@localhost sbin]# snmpset -v 2c -c test 10.12.48.158 .1.3.111.2.802.1.1.13.1.1.8.1.3.5.3 int 1 SNMPv2-SMI:: org.111.2.802.1.1.13.1.1.8.1.3.3.3 = INTEGER: 1 2. Enable reception only (rxonly) [root@localhost sbin]# snmpset -v 2c -c test 10.12.48.158 .1.3.111.2.802.1.1.13.1.1.8.1.3.5.3 int 2
.1.3.111.2.802.1.1.13.1.1.8.1.3.5.3 int 2 SNMPv2-SMI:: org.111.2.802.1.1.13.1.1.8.1.3.3.3 = INTEGER: 2 3. Enable transmission and reception (txrx) [root@localhost sbin]# snmpset -v 2c -c test 10.12.48.158 .1.3.111.2.802.1.1.13.1.1.8.1.3.5.3 int 3 SNMPv2-SMI::org.111.2.802.1.1.13.1.1.8.1.3.3.3 = INTEGER: 3 4. Disable transmission and reception [root@localhost sbin]# snmpset -v 2c -c test 10.12.48.158 .1.3.111.2.802.1.1.13.1.1.8.1.3.5.3 int 4
.1.3.111.2.802.1.1.13.1.1.8.1.3.5.3 int 4 SNMPv2-SMI::org.111.2.802.1.1.13.1.1.8.1.3.3.3 = INTEGER: 4 SNMPSET and SNMPGET for lldpV2MessageTxInterval snmpset of lldpV2MessageTxInterval will set the time interval between LLDPDU. [root@localhost ~]# snmpset -v 2c -c test 10.12.20.194 .1.3.111.2.802.1.1.13.1.1.1.0 u 5 iso.3.111.2.802.1.1.13.1.1.1.0 = Gauge32: 5 [root@localhost ~]# snmpget -v 2c -c test 10.12.20.194 .1.3.111.2.802.1.1.13.1.1.1.0 iso.3.111.2.802.1.1.13.1.1.1.0 = Gauge32: 5
iso.3.111.2.802.1.1.13.1.1.1.0 = Gauge32: 5 SNMPSET and SNMPGET for lldpV2MessageTxHoldMultiplier The time-to-live value expressed as a multiple of the lldpV2MessageTxInterval object [root@localhost ~]# snmpset -v 2c -c test 10.12.20.194 .1.3.111.2.802.1.1.13.1.1.2.0 u 3 iso.3.111.2.802.1.1.13.1.1.2.0 = Gauge32: 3 [root@localhost ~]# snmpget -v 2c -c test 10.12.20.194 .1.3.111.2.802.1.1.13.1.1.2.0 iso.3.111.2.802.1.1.13.1.1.2.0 = Gauge32: 3 SNMPSET and SNMPGET for lldpV2ReinitDelay
SNMPSET and SNMPGET for lldpV2ReinitDelay The lldpV2ReinitDelay indicates the delay (in units of seconds) from when lldpPortConfigAdminStatus object of a particular port becomes 'disabled' until re-initialization is attempted. [root@localhost ~]# snmpset -v 2c -c test 10.12.20.194 .1.3.111.2.802.1.1.13.1.1.3.0 u 6 iso.3.111.2.802.1.1.13.1.1.3.0 = Gauge32: 6 © 2015 IP Infusion Inc. Proprietary 51 Link Layer Discovery Protocol Configuration [root@localhost ~]# snmpget -v 2c -c test 10.12.20.194
.1.3.111.2.802.1.1.13.1.1.3.0 iso.3.111.2.802.1.1.13.1.1.3.0 = Gauge32: 6 SNMPSET and SNMPGET for lldpV2TxCreditMax The maximum number of consecutive LLDPDUs that can be transmitted at any time. [root@localhost ~]# snmpset -v 2c -c test 10.12.20.194 .1.3.111.2.802.1.1.13.1.1.5.0 u 6 iso.3.111.2.802.1.1.13.1.1.5.0 = Gauge32: 6 [root@localhost ~]# snmpget -v 2c -c test 10.12.20.194 .1.3.111.2.802.1.1.13.1.1.5.0 iso.3.111.2.802.1.1.13.1.1.5.0 = Gauge32: 6
iso.3.111.2.802.1.1.13.1.1.5.0 = Gauge32: 6 SNMPSET and SNMPGET for lldpV2MessageFastTx The interval at which LLDP frames are transmitted on behalf of the LLDP agent during fast transmission period [root@localhost ~]# snmpset -v 2c -c test 10.12.20.194 .1.3.111.2.802.1.1.13.1.1.6.0 u 5 iso.3.111.2.802.1.1.13.1.1.6.0 = Gauge32: 5 [root@localhost ~]# snmpget -v 2c -c test 10.12.20.194 .1.3.111.2.802.1.1.13.1.1.6.0 iso.3.111.2.802.1.1.13.1.1.6.0 = Gauge32: 5
iso.3.111.2.802.1.1.13.1.1.6.0 = Gauge32: 5 SNMPSET and SNMPGET for lldpV2MessageFastTx The initial value used to initialize the txFast variable which determines the number of transmissions that are made in fast transmission mode. [root@localhost ~]# snmpset -v 2c -c test 10.12.20.194 .1.3.111.2.802.1.1.13.1.1.7.0 u 8 iso.3.111.2.802.1.1.13.1.1.7.0 = Gauge32: 8 [root@localhost ~]# snmpget -v 2c -c test 10.12.20.194 .1.3.111.2.802.1.1.13.1.1.7.0 iso.3.111.2.802.1.1.13.1.1.7.0 = Gauge32: 8
iso.3.111.2.802.1.1.13.1.1.7.0 = Gauge32: 8 SNMP WALK for lldpV2PortConfigTable snmpwalk on lldpV2PortConfigTable will returns entire values in lldpV2PortConfigTable snmpwalk -v 2c -c test 10.12.20.194 .1.3.111.2.802.1.1.13.1.1.8 Sample output [root@localhost ~]# snmpwalk -v 2c -c test 10.12.20.194 .1.3.111.2.802.1.1.13.1.1.8 iso.3.111.2.802.1.1.13.1.1.8.1.3.1.1 = INTEGER: 4 iso.3.111.2.802.1.1.13.1.1.8.1.3.2.1 = INTEGER: 4 iso.3.111.2.802.1.1.13.1.1.8.1.3.3.1 = INTEGER: 4
iso.3.111.2.802.1.1.13.1.1.8.1.3.3.1 = INTEGER: 4 iso.3.111.2.802.1.1.13.1.1.8.1.3.4.1 = INTEGER: 4 iso.3.111.2.802.1.1.13.1.1.8.1.3.5.1 = INTEGER: 3 iso.3.111.2.802.1.1.13.1.1.8.1.3.5.2 = INTEGER: 3 iso.3.111.2.802.1.1.13.1.1.8.1.3.5.3 = INTEGER: 3 iso.3.111.2.802.1.1.13.1.1.8.1.3.6.1 = INTEGER: 4 iso.3.111.2.802.1.1.13.1.1.8.1.3.8.1 = INTEGER: 4 iso.3.111.2.802.1.1.13.1.1.8.1.3.10.1 = INTEGER: 4 iso.3.111.2.802.1.1.13.1.1.8.1.4.1.1 = INTEGER: 0
iso.3.111.2.802.1.1.13.1.1.8.1.4.1.1 = INTEGER: 0 iso.3.111.2.802.1.1.13.1.1.8.1.4.2.1 = INTEGER: 0 iso.3.111.2.802.1.1.13.1.1.8.1.4.3.1 = INTEGER: 0 iso.3.111.2.802.1.1.13.1.1.8.1.4.4.1 = INTEGER: 0 52 © 2015 IP Infusion Inc. Proprietary Link Layer Discovery Protocol Configuration iso.3.111.2.802.1.1.13.1.1.8.1.4.5.1 = INTEGER: 0 iso.3.111.2.802.1.1.13.1.1.8.1.4.5.2 = INTEGER: 0 iso.3.111.2.802.1.1.13.1.1.8.1.4.5.3 = INTEGER: 0 iso.3.111.2.802.1.1.13.1.1.8.1.4.6.1 = INTEGER: 0
iso.3.111.2.802.1.1.13.1.1.8.1.4.6.1 = INTEGER: 0 iso.3.111.2.802.1.1.13.1.1.8.1.4.8.1 = INTEGER: 0 iso.3.111.2.802.1.1.13.1.1.8.1.4.10.1 = INTEGER: 0 iso.3.111.2.802.1.1.13.1.1.8.1.5.1.1 = Hex-STRING: 00 iso.3.111.2.802.1.1.13.1.1.8.1.5.2.1 = Hex-STRING: 00 iso.3.111.2.802.1.1.13.1.1.8.1.5.3.1 = Hex-STRING: 00 iso.3.111.2.802.1.1.13.1.1.8.1.5.4.1 = Hex-STRING: 00 iso.3.111.2.802.1.1.13.1.1.8.1.5.5.1 = Hex-STRING: F0 iso.3.111.2.802.1.1.13.1.1.8.1.5.5.2 = Hex-STRING: F0
iso.3.111.2.802.1.1.13.1.1.8.1.5.5.3 = Hex-STRING: F0 iso.3.111.2.802.1.1.13.1.1.8.1.5.6.1 = Hex-STRING: 00 iso.3.111.2.802.1.1.13.1.1.8.1.5.8.1 = Hex-STRING: 00 iso.3.111.2.802.1.1.13.1.1.8.1.5.10.1 = Hex-STRING: 00 SNMP WALK for lldpV2DestAddressTable snmpwalk on lldpV2DestAddressTable will returns entire values in lldpV2DestAddressTable snmpwalk -v 2c -c test 10.12.20.194 .1.3.111.2.802.1.1.13.1.1.9 Sample output [root@localhost ~]# snmpwalk -v 2c -c test 10.12.20.194
.1.3.111.2.802.1.1.13.1.1.9 iso.3.111.2.802.1.1.13.1.1.9.1.2.1 = Hex-STRING: 01 80 C2 00 00 0E iso.3.111.2.802.1.1.13.1.1.9.1.2.2 = Hex-STRING: 01 80 C2 00 00 03 iso.3.111.2.802.1.1.13.1.1.9.1.2.3 = Hex-STRING: 01 80 C2 00 00 00 SNMP WALK for lldpV2StatsTxPortTable snmpwalk on lldpV2StatsTxPortTable will returns entire values in lldpV2StatsTxPortTable snmpwalk -v 2c -c test 10.12.20.194 .1.3.111.2.802.1.1.13.1.2.6 Sample output: [root@localhost ~]# snmpwalk -v 2c -c test 10.12.20.194
.1.3.111.2.802.1.1.13.1.2.6 iso.3.111.2.802.1.1.13.1.2.6.1.3.1.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.6.1.3.2.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.6.1.3.3.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.6.1.3.4.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.6.1.3.5.1 = Counter32: 86 iso.3.111.2.802.1.1.13.1.2.6.1.3.5.2 = Counter32: 87 iso.3.111.2.802.1.1.13.1.2.6.1.3.5.3 = Counter32: 87 iso.3.111.2.802.1.1.13.1.2.6.1.3.6.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.6.1.3.8.1 = Counter32: 0
iso.3.111.2.802.1.1.13.1.2.6.1.3.10.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.6.1.3.12.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.6.1.4.1.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.6.1.4.2.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.6.1.4.3.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.6.1.4.4.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.6.1.4.5.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.6.1.4.5.2 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.6.1.4.5.3 = Counter32: 0
iso.3.111.2.802.1.1.13.1.2.6.1.4.6.1 = Counter32: 0 © 2015 IP Infusion Inc. Proprietary 53 Link Layer Discovery Protocol Configuration iso.3.111.2.802.1.1.13.1.2.6.1.4.8.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.6.1.4.10.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.6.1.4.12.1 = Counter32: 0 SNMP WALK for lldpV2StatsRxPortTable snmpwalk on lldpV2StatsRxPortTable will returns entire values in lldpV2StatsRxPortTable snmpwalk -v 2c -c test 10.12.20.194 .1.3.111.2.802.1.1.13.1.2.7 Sample output
Sample output [root@localhost ~]# snmpwalk -v 2c -c test 10.12.20.194 .1.3.111.2.802.1.1.13.1.2.7 iso.3.111.2.802.1.1.13.1.2.7.1.3.1.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.3.2.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.3.3.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.3.4.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.3.5.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.3.5.2 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.3.5.3 = Counter32: 0
iso.3.111.2.802.1.1.13.1.2.7.1.3.6.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.3.8.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.3.10.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.3.12.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.4.1.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.4.2.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.4.3.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.4.4.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.4.5.1 = Counter32: 0
iso.3.111.2.802.1.1.13.1.2.7.1.4.5.2 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.4.5.3 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.4.6.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.4.8.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.4.10.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.4.12.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.5.1.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.5.2.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.5.3.1 = Counter32: 0
iso.3.111.2.802.1.1.13.1.2.7.1.5.4.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.5.5.1 = Counter32: 90 iso.3.111.2.802.1.1.13.1.2.7.1.5.5.2 = Counter32: 73 iso.3.111.2.802.1.1.13.1.2.7.1.5.5.3 = Counter32: 73 iso.3.111.2.802.1.1.13.1.2.7.1.5.6.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.5.8.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.5.10.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.5.12.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.6.1.1 = Counter32: 0
iso.3.111.2.802.1.1.13.1.2.7.1.6.2.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.6.3.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.6.4.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.6.5.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.6.5.2 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.6.5.3 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.6.6.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.6.8.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.6.10.1 = Counter32: 0
iso.3.111.2.802.1.1.13.1.2.7.1.6.12.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.7.1.1 = Counter32: 0 54 © 2015 IP Infusion Inc. Proprietary Link Layer Discovery Protocol Configuration iso.3.111.2.802.1.1.13.1.2.7.1.7.2.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.7.3.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.7.4.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.7.5.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.7.5.2 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.7.5.3 = Counter32: 0
iso.3.111.2.802.1.1.13.1.2.7.1.7.6.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.7.8.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.7.10.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.7.12.1 = Counter32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.8.1.1 = Gauge32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.8.2.1 = Gauge32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.8.3.1 = Gauge32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.8.4.1 = Gauge32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.8.5.1 = Gauge32: 0
iso.3.111.2.802.1.1.13.1.2.7.1.8.5.1 = Gauge32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.8.5.2 = Gauge32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.8.5.3 = Gauge32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.8.6.1 = Gauge32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.8.8.1 = Gauge32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.8.10.1 = Gauge32: 0 iso.3.111.2.802.1.1.13.1.2.7.1.8.12.1 = Gauge32: 0 SNMP WALK for lldpV2LocPortTable snmpwalk on lldpV2LocPortTable will returns entire values in lldpV2LocPortTable
lldpV2LocPortTable snmpwalk -v 2c -c test 10.12.20.194 .1.3.111.2.802.1.1.13.1.3.7 Sample output [root@localhost ~]# snmpwalk -v 2c -c test 10.12.20.194 .1.3.111.2.802.1.1.13.1.3.7 iso.3.111.2.802.1.1.13.1.3.7.1.2.1 = INTEGER: 3 iso.3.111.2.802.1.1.13.1.3.7.1.2.2 = INTEGER: 3 iso.3.111.2.802.1.1.13.1.3.7.1.2.3 = INTEGER: 3 iso.3.111.2.802.1.1.13.1.3.7.1.2.4 = INTEGER: 3 iso.3.111.2.802.1.1.13.1.3.7.1.2.5 = INTEGER: 3 iso.3.111.2.802.1.1.13.1.3.7.1.2.6 = INTEGER: 3
iso.3.111.2.802.1.1.13.1.3.7.1.2.6 = INTEGER: 3 iso.3.111.2.802.1.1.13.1.3.7.1.2.8 = INTEGER: 3 iso.3.111.2.802.1.1.13.1.3.7.1.2.10 = INTEGER: 3 iso.3.111.2.802.1.1.13.1.3.7.1.2.12 = INTEGER: 3 iso.3.111.2.802.1.1.13.1.3.7.1.3.1 = Hex-STRING: 00 00 00 00 00 00 iso.3.111.2.802.1.1.13.1.3.7.1.3.2 = Hex-STRING: 00 02 A5 4E CE 62 iso.3.111.2.802.1.1.13.1.3.7.1.3.3 = Hex-STRING: 00 02 A5 4E CE 63 iso.3.111.2.802.1.1.13.1.3.7.1.3.4 = Hex-STRING: 00 02 A5 4F 00 18
iso.3.111.2.802.1.1.13.1.3.7.1.3.5 = Hex-STRING: 00 02 A5 4F 00 19 iso.3.111.2.802.1.1.13.1.3.7.1.3.6 = Hex-STRING: 2C 27 D7 3D E4 76 iso.3.111.2.802.1.1.13.1.3.7.1.3.8 = Hex-STRING: 00 00 00 00 00 00 iso.3.111.2.802.1.1.13.1.3.7.1.3.10 = Hex-STRING: 00 02 A5 4F 00 19 iso.3.111.2.802.1.1.13.1.3.7.1.3.12 = Hex-STRING: 00 02 A5 4F 00 19 iso.3.111.2.802.1.1.13.1.3.7.1.4.1 = "" iso.3.111.2.802.1.1.13.1.3.7.1.4.2 = "" iso.3.111.2.802.1.1.13.1.3.7.1.4.3 = "" iso.3.111.2.802.1.1.13.1.3.7.1.4.4 = ""
iso.3.111.2.802.1.1.13.1.3.7.1.4.4 = "" iso.3.111.2.802.1.1.13.1.3.7.1.4.5 = "" iso.3.111.2.802.1.1.13.1.3.7.1.4.6 = "" iso.3.111.2.802.1.1.13.1.3.7.1.4.8 = "" iso.3.111.2.802.1.1.13.1.3.7.1.4.10 = "" iso.3.111.2.802.1.1.13.1.3.7.1.4.12 = "" © 2015 IP Infusion Inc. Proprietary 55 Link Layer Discovery Protocol Configuration SNMP WALK for lldpV2RemTable snmpwalk on lldpV2RemTable will returns entire values in lldpV2RemTable snmpwalk -v 2c -c test 10.12.20.194 .1.3.111.2.802.1.1.13.1.4.1
Sample output [root@localhost ~]# snmpwalk -v 2c -c test 10.12.20.194 .1.3.111.2.802.1.1.13.1.4.1 iso.3.111.2.802.1.1.13.1.4.1.1.5.0.5.1.1 = INTEGER: 4 iso.3.111.2.802.1.1.13.1.4.1.1.5.0.5.2.2 = INTEGER: 4 iso.3.111.2.802.1.1.13.1.4.1.1.5.0.5.3.3 = INTEGER: 4 iso.3.111.2.802.1.1.13.1.4.1.1.6.0.5.1.1 = Hex-STRING: 00 02 A5 4E D4 B0 iso.3.111.2.802.1.1.13.1.4.1.1.6.0.5.2.2 = Hex-STRING: 00 02 A5 4E D4 B0 iso.3.111.2.802.1.1.13.1.4.1.1.6.0.5.3.3 = Hex-STRING: 00 02 A5 4E D4 B0
iso.3.111.2.802.1.1.13.1.4.1.1.7.0.5.1.1 = INTEGER: 3 iso.3.111.2.802.1.1.13.1.4.1.1.7.0.5.2.2 = INTEGER: 3 iso.3.111.2.802.1.1.13.1.4.1.1.7.0.5.3.3 = INTEGER: 3 iso.3.111.2.802.1.1.13.1.4.1.1.8.0.5.1.1 = Hex-STRING: 00 02 A5 4E D4 B0 iso.3.111.2.802.1.1.13.1.4.1.1.8.0.5.2.2 = Hex-STRING: 00 02 A5 4E D4 B0 iso.3.111.2.802.1.1.13.1.4.1.1.8.0.5.3.3 = Hex-STRING: 00 02 A5 4E D4 B0 iso.3.111.2.802.1.1.13.1.4.1.1.9.0.5.1.1 = Hex-STRING: 70 33 70 31 00
iso.3.111.2.802.1.1.13.1.4.1.1.9.0.5.2.2 = Hex-STRING: 70 33 70 31 00 iso.3.111.2.802.1.1.13.1.4.1.1.9.0.5.3.3 = Hex-STRING: 70 33 70 31 00 iso.3.111.2.802.1.1.13.1.4.1.1.10.0.5.1.1 = STRING: "G8316" iso.3.111.2.802.1.1.13.1.4.1.1.10.0.5.2.2 = STRING: "G8316" iso.3.111.2.802.1.1.13.1.4.1.1.10.0.5.3.3 = STRING: "G8316" iso.3.111.2.802.1.1.13.1.4.1.1.11.0.5.1.1 = STRING: "ZebOS" iso.3.111.2.802.1.1.13.1.4.1.1.11.0.5.2.2 = STRING: "ZebOS" iso.3.111.2.802.1.1.13.1.4.1.1.11.0.5.3.3 = STRING: "ZebOS"
iso.3.111.2.802.1.1.13.1.4.1.1.12.0.5.1.1 = Hex-STRING: E0 iso.3.111.2.802.1.1.13.1.4.1.1.12.0.5.2.2 = Hex-STRING: E0 iso.3.111.2.802.1.1.13.1.4.1.1.12.0.5.3.3 = Hex-STRING: E0 iso.3.111.2.802.1.1.13.1.4.1.1.13.0.5.1.1 = STRING: "(" iso.3.111.2.802.1.1.13.1.4.1.1.13.0.5.2.2 = STRING: "(" iso.3.111.2.802.1.1.13.1.4.1.1.13.0.5.3.3 = STRING: "(" iso.3.111.2.802.1.1.13.1.4.1.1.14.0.5.1.1 = INTEGER: 0 iso.3.111.2.802.1.1.13.1.4.1.1.14.0.5.2.2 = INTEGER: 0
iso.3.111.2.802.1.1.13.1.4.1.1.14.0.5.3.3 = INTEGER: 0 iso.3.111.2.802.1.1.13.1.4.1.1.15.0.5.1.1 = INTEGER: 0 iso.3.111.2.802.1.1.13.1.4.1.1.15.0.5.2.2 = INTEGER: 0 iso.3.111.2.802.1.1.13.1.4.1.1.15.0.5.3.3 = INTEGER: 0 SNMP WALK for lldpV2RemManAddrTable snmpwalk on lldpV2RemManAddrTable will returns entire values in lldpV2RemManAddrTable snmpwalk -v 2c -c test 10.12.20.194 .1.3.111.2.802.1.1.13.1.4.2 Sample output [root@localhost ~]# snmpwalk -v 2c -c test 10.12.20.194
.1.3.111.2.802.1.1.13.1.4.2 iso.3.111.2.802.1.1.13.1.4.2.1.3.0.5.1.1.6.0.2.165.78.212.176 = INTEGER: 6 iso.3.111.2.802.1.1.13.1.4.2.1.3.0.5.2.2.6.0.2.165.78.212.176 = INTEGER: 6 iso.3.111.2.802.1.1.13.1.4.2.1.3.0.5.3.3.6.0.2.165.78.212.176 = INTEGER: 6 iso.3.111.2.802.1.1.13.1.4.2.1.4.0.5.1.1.6.0.2.165.78.212.176 = Gauge32: 4 iso.3.111.2.802.1.1.13.1.4.2.1.4.0.5.2.2.6.0.2.165.78.212.176 = Gauge32: 4 iso.3.111.2.802.1.1.13.1.4.2.1.4.0.5.3.3.6.0.2.165.78.212.176 = Gauge32: 4
iso.3.111.2.802.1.1.13.1.4.2.1.5.0.5.1.1.6.0.2.165.78.212.176 = OID: ccitt.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0 56 © 2015 IP Infusion Inc. Proprietary Link Layer Discovery Protocol Configuration iso.3.111.2.802.1.1.13.1.4.2.1.5.0.5.2.2.6.0.2.165.78.212.176 = OID: ccitt.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0 iso.3.111.2.802.1.1.13.1.4.2.1.5.0.5.3.3.6.0.2.165.78.212.176 = OID: ccitt.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0
SNMP WALK for lldpV2RemOrgDefInfoTable snmpwalk on lldpV2RemOrgDefInfoTable will returns entire values in lldpV2RemOrgDefInfoTable snmpwalk -v 2c -c test 10.12.20.194 .1.3.111.2.802.1.1.13.1.4.4.1 Sample output [root@localhost ~]# snmpwalk -v 2c -c test 10.12.20.194 .1.3.111.2.802.1.1.13.1.4.4.1 iso.3.111.2.802.1.1.13.1.4.4.1.4.0.5.1.5.0.128.194.1.0 = Hex-STRING: 01 00 00 00 iso.3.111.2.802.1.1.13.1.4.4.1.4.0.5.1.5.0.128.194.2.0 = Hex-STRING: 00 00 00 00
00 iso.3.111.2.802.1.1.13.1.4.4.1.4.0.5.1.5.0.128.194.3.1 = STRING: "default" iso.3.111.2.802.1.1.13.1.4.4.1.4.0.5.1.5.0.128.194.4.0 = Hex-STRING: 82 00 00 00 iso.3.111.2.802.1.1.13.1.4.4.1.4.0.5.1.5.0.128.194.5.0 = Hex-STRING: 00 00 00 00 iso.3.111.2.802.1.1.13.1.4.4.1.4.0.5.1.5.0.128.194.6.0 = Hex-STRING: 00 00 00 00 iso.3.111.2.802.1.1.13.1.4.4.1.4.0.5.1.5.0.128.194.7.0 = Hex-STRING: 01 00 00 00 iso.3.111.2.802.1.1.13.1.4.4.1.4.0.5.1.5.0.18.15.1.0 = Hex-STRING: 01 00 00 00
iso.3.111.2.802.1.1.13.1.4.4.1.4.0.5.1.5.0.18.15.2.0 = Hex-STRING: 00 00 00 00 iso.3.111.2.802.1.1.13.1.4.4.1.4.0.5.1.5.0.18.15.3.0 = Hex-STRING: 00 00 00 00 iso.3.111.2.802.1.1.13.1.4.4.1.4.0.5.1.5.0.18.15.4.0 = Hex-STRING: dc 05 00 00 iso.3.111.2.802.1.1.13.1.4.4.1.4.0.5.2.4.0.128.194.1.0 = Hex-STRING: 01 00 00 00 iso.3.111.2.802.1.1.13.1.4.4.1.4.0.5.2.4.0.128.194.2.0 = Hex-STRING: 00 00 00 00 iso.3.111.2.802.1.1.13.1.4.4.1.4.0.5.2.4.0.128.194.3.1 = STRING: "default"
iso.3.111.2.802.1.1.13.1.4.4.1.4.0.5.2.4.0.128.194.4.0 = Hex-STRING: 82 00 00 00 iso.3.111.2.802.1.1.13.1.4.4.1.4.0.5.2.4.0.128.194.5.0 = Hex-STRING: 00 00 00 00 iso.3.111.2.802.1.1.13.1.4.4.1.4.0.5.2.4.0.128.194.6.0 = Hex-STRING: 00 00 00 00 iso.3.111.2.802.1.1.13.1.4.4.1.4.0.5.2.4.0.128.194.7.0 = Hex-STRING: 01 00 00 00 iso.3.111.2.802.1.1.13.1.4.4.1.4.0.5.2.4.0.18.15.1.0 = Hex-STRING: 01 00 00 00 iso.3.111.2.802.1.1.13.1.4.4.1.4.0.5.2.4.0.18.15.2.0 = Hex-STRING: 00 00 00 00
iso.3.111.2.802.1.1.13.1.4.4.1.4.0.5.2.4.0.18.15.3.0 = Hex-STRING: 00 00 00 00 iso.3.111.2.802.1.1.13.1.4.4.1.4.0.5.2.4.0.18.15.4.0 = Hex-STRING: dc 05 00 00 iso.3.111.2.802.1.1.13.1.4.4.1.4.0.5.3.6.0.128.194.1.0 = Hex-STRING: 01 00 00 00 iso.3.111.2.802.1.1.13.1.4.4.1.4.0.5.3.6.0.128.194.2.0 = Hex-STRING: 00 00 00 00 iso.3.111.2.802.1.1.13.1.4.4.1.4.0.5.3.6.0.128.194.3.1 = STRING: "default" iso.3.111.2.802.1.1.13.1.4.4.1.4.0.5.3.6.0.128.194.4.0 = Hex-STRING: 82 00 00 00
00 iso.3.111.2.802.1.1.13.1.4.4.1.4.0.5.3.6.0.128.194.5.0 = Hex-STRING: 00 00 00 00 iso.3.111.2.802.1.1.13.1.4.4.1.4.0.5.3.6.0.128.194.6.0 = Hex-STRING: 00 00 00 00 iso.3.111.2.802.1.1.13.1.4.4.1.4.0.5.3.6.0.128.194.7.0 = Hex-STRING: 01 00 00 00 iso.3.111.2.802.1.1.13.1.4.4.1.4.0.5.3.6.0.18.15.1.0 = Hex-STRING: 01 00 00 00 © 2015 IP Infusion Inc. Proprietary 57 Link Layer Discovery Protocol Configuration iso.3.111.2.802.1.1.13.1.4.4.1.4.0.5.3.6.0.18.15.2.0 = Hex-STRING: 00 00 00 00
iso.3.111.2.802.1.1.13.1.4.4.1.4.0.5.3.6.0.18.15.3.0 = Hex-STRING: 00 00 00 00 iso.3.111.2.802.1.1.13.1.4.4.1.4.0.5.3.6.0.18.15.4.0 = Hex-STRING: dc 05 00 00 SNMPSET and SNMPGET for LLDPXDOT3LOCPOWERPRIORITY (PoE MIB) /usr/bin/snmpset -c abc -v2c localhost org.111.2.802.1.1.13.1.5.4623.1.2.2.1.9.28 i 2 SNMPv2-SMI::org.111.2.802.1.1.13.1.5.4623.1.2.2.1.9.28 = INTEGER: 2 /usr/bin/snmpget -c abc -v2c localhost org.111.2.802.1.1.13.1.5.4623.1.2.2.1.9.28
org.111.2.802.1.1.13.1.5.4623.1.2.2.1.9.28 SNMPv2-SMI::org.111.2.802.1.1.13.1.5.4623.1.2.2.1.9.28 = INTEGER: 2 SNMPSET and SNMPGET for LLDPV2XDOT3PORTCONFIGTLVSTXENABLE (PoE MIB) /usr/bin/snmpset -c abc -v2c localhost SNMPv2- SMI::org.111.2.802.1.1.13.1.5.4623.1.2.2.1.12.28.1 s "2" /usr/bin/snmpget -c abc -v2c localhost SNMPv2- SMI::org.111.2.802.1.1.13.1.5.4623.1.2.2.1.12.28.1 SNMPv2-SMI::org.111.2.802.1.1.13.1.5.4623.1.2.2.1.12.28.1 = Hex-STRING: 02
SNMPSET and SNMPGET for LLDPXMEDPORTCONFIGTLVSTXENABLE (PoE MIB) /usr/bin/snmpset -c abc -v2c localhost iso.0.8802.1.1.2.1.5.4795.1.1.2.1.2.28 s "1" iso.0.8802.1.1.2.1.5.4795.1.1.2.1.2.28 = STRING: "1" 58 © 2015 IP Infusion Inc. Proprietary Provider Bridging Configuration CHAPTER 5 This chapter contains sample Provider Bridging configurations. A Provider Bridged network is a virtual bridged LAN that comprises of Provider Bridges (SVLAN Bridges and Provider
Edge Bridges), attached LANs, and is under the administrative control of a single service provider. Provider Bridges interconnect the separate MACs of the IEEE 802 LANs that compose a Provider Bridged network, relaying frames to provide connectivity between all the LANs to provide customer interfaces for each service instance. Provider Bridging allows a service provider to offer an equivalent of separate LAN segments, bridged or virtual bridged LANs, over the
Provider Bridged network. This feature offers inter-operability and consistent management. It also requires minimum cooperation between the customers and service provider and does not require cooperation among the customers. Provider Bridging with Customer Hosts This sample shows configuring a Provider Bridged network with customer hosts. Topology Figure 5-1 displays a sample Provider Bridged topology. Note: NOTE: Customer Host machine will always send untagged traffic.
Figure 5-1: Provider Bridge Topology Legend The following table is the legend for Figure 5-1: © 2015 IP Infusion Inc. Proprietary 59 Provider Bridging Configuration C1 Customer 1 host machines C2 Customer 2 host machines PB1, PB2 Provider bridges PB1 PB1#configure terminal Enter configure mode. PB1(config)#bridge 1 protocol provider-mstp Configure bridge 1 as a provider edge bridge. edge PB1(config)#vlan database Enter the VLAN Configure mode.
PB1(config-vlan)#vlan 2 type customer bridge Configure VLAN 2 as a customer VLAN and 1 state enable associate it with bridge 1. PB1(config-vlan)#vlan 4 type customer bridge Configure VLAN 4 as a customer VLAN and 1 state enable associate it with bridge 1. PB1(config-vlan)#vlan 3 type service point- Configure VLAN 3 as a service VLAN and associate it point bridge 1 state enable with bridge 1. PB1(config-vlan)#vlan 6 type service point- Configure VLAN 6 as a service VLAN and associate it
point bridge 1 state enable with bridge 1. PB1(config-vlan)#exit Exit the VLAN Configure mode. PB1(config)#interface eth1 Enter interface mode. PB1(config-if)#switchport Configure eth1 as a Layer-2 interface. PB1(config-if)#bridge-group 1 Associate the eth1 interface with bridge 1. PB1(config-if)#switchport mode customer-edge Configure the interface to access mode. access PB1(config-if)#switchport customer-edge Associate the eth1 interface with VLAN 2. access vlan 2
access vlan 2 PB1(config-if)#exit Exit interface mode. PB1(config)#interface eth3 Enter interface mode. PB1(config-if)#switchport Configure eth3 as a Layer-2 interface. PB1(config-if)#bridge-group 1 Associate the eth3 interface with bridge 1. PB1(config-if)#switchport mode customer-edge Configure the interface to access mode. access PB1(config-if)#switchport customer-edge Associate the eth3 interface with VLAN 4. access vlan 4 PB1(config-if)#exit Exit interface mode.
PB1(config-if)#exit Exit interface mode. PB1(config)#interface eth2 Enter interface mode. PB1(config-if)#switchport Configure eth2 as a Layer-2 interface. PB1(config-if)#bridge-group 1 Associate the eth2 interface with bridge 1. PB1(config-if)#switchport provider-network Associate Service VLAN 3 and Service VLAN 6 with the allowed vlan add 3,6 provider network. PB1(config-if)#exit Exit interface mode. PB1(config)#cvlan registration table Create a CVLAN table customer1, and associate it with
customer1 bridge 1 bridge 1. 60 © 2015 IP Infusion Inc. Proprietary Provider Bridging Configuration PB1(config-cvlan-registration)#cvlan 2 svlan Map CVLAN 2 with SVLAN 3. 3 PB1(config-cvlan-registration)#exit Exit the CVLAN table configuration. PB1(config)#cvlan registration table Create a CVLAN table customer2, and associate it with customer2 bridge 1 bridge 1. PB1(config-cvlan-registration)#cvlan 4 svlan Map CVLAN 4 with SVLAN 6. 6
6 PB1(config-cvlan-registration)#exit Exit the CVLAN table configuration. PB1(config)#interface eth1 Enter interface mode. PB1(config-if)#switchport customer-edge vlan Associate the customer1 table with the interface. registration customer1 PB1(config-cvlan-registration)#exit Exit the CVLAN table configuration. PB1(config)#interface eth3 Enter interface mode. PB1(config-if)#switchport customer-edge vlan Associate the customer2 table with the interface. registration customer2
registration customer2 PB1(config-cvlan-registration)#exit Exit the CVLAN table configuration. PB2 PB2#configure terminal Enter configure mode. PB2(config)#bridge 1 protocol provider-mstp Configure bridge 1 as a provider edge bridge. edge PB2(config)#vlan database Enter the VLAN Configure mode. PB2(config-vlan)#vlan 2 type customer bridge Configure VLAN 2 as a customer VLAN and 1 state enable associate it with bridge 1.
1 state enable associate it with bridge 1. PB2(config-vlan)#vlan 4 type customer bridge Configure VLAN 4 as a customer VLAN and 1 state enable associate it with bridge 1. PB2(config-vlan)#vlan 3 type service point- Configure VLAN 3 as a service VLAN and associate it point bridge 1 state enable with bridge 1. PB2(config-vlan)#vlan 6 type service point- Configure VLAN 6 as a service VLAN and associate it point bridge 1 state enable with bridge 1.
point bridge 1 state enable with bridge 1. PB2(config-vlan)#exit Exit the VLAN Configure mode. PB2(config)#interface eth1 Enter interface mode. PB2(config-if)#switchport Configure eth1 as a Layer-2 interface. PB2(config-if)#bridge-group 1 Associate the eth1 interface with bridge 1. PB2(config-if)#switchport mode customer-edge Configure the interface to access mode. access PB2(config-if)#switchport customer-edge Associate the eth1 interface with VLAN 2. access vlan 2
access vlan 2 PB2(config-if)#exit Exit interface mode. PB2(config)#interface eth3 Enter interface mode. PB2(config-if)#switchport Configure eth3 as a Layer-2 interface. PB2(config-if)#bridge-group 1 Associate the eth3 interface with bridge 1. PB2(config-if)#switchport mode customer-edge Configure the interface to access mode. access © 2015 IP Infusion Inc. Proprietary 61 Provider Bridging Configuration PB2(config-if)#switchport customer-edge Associate the eth3 interface with VLAN 4.
access vlan 4 PB2(config-if)#exit Exit interface mode. PB2(config)#interface eth2 Enter interface mode. PB2(config-if)#switchport Configure eth2 as a Layer-2 interface. PB2(config-if)#bridge-group 1 Associate the eth2 interface with bridge 1. PB2(config-if)#switchport provider-network Associate Service VLAN 3 and Service VLAN 6 with the allowed vlan add 3,6 provider network. PB2(config-if)#exit Exit interface mode.
PB2(config-if)#exit Exit interface mode. PB2(config)#cvlan registration table Create a CVLAN table customer1, and associate it with customer1 bridge 1 bridge 1. PB2(config-cvlan-registration)#cvlan 2 svlan Map CVLAN 2 with SVLAN 3. 3 PB2(config-cvlan-registration)#exit Exit the CVLAN table configuration. PB2(config)#cvlan registration table Create a CVLAN table customer2, and associate it with customer2 bridge 1 bridge 1. PB2(config-cvlan-registration)#cvlan 4 svlan Map CVLAN 4 with SVLAN 6. 6
6 PB2(config-cvlan-registration)#exit Exit the CVLAN table configuration. PB2(config)#interface eth1 Enter interface mode. PB2(config-if)#switchport customer-edge vlan Associate the customer1 table with the interface. registration customer1 PB2(config-cvlan-registration)#exit Exit the CVLAN table configuration. PB2(config)#interface eth3 Enter interface mode. PB2(config-if)#switchport customer-edge vlan Associate the customer2 table with the interface. registration customer2
registration customer2 PB2(config-cvlan-registration)#exit Exit the CVLAN table configuration. Validation PB2#sh cvlan registration table Bridge Table Name Port List ====== ========== ========= 1 customer1 eth1 CVLAN ID SVLAN ID ======== ======== 2 3 Bridge Table Name Port List ====== ========== ========= 1 customer2 eth3 CVLAN ID SVLAN ID ======== ======== 4 6 Customer C1 Customer C1 (3.3.3.1) on VLAN2 should be able to ping customer C1's other site (3.3.3.3) on the same VLAN.
[root@C1 root]#ping 3.3.3.3 62 © 2015 IP Infusion Inc. Proprietary Provider Bridging Configuration PING 3.3.3.3(3.3.3.3) 56(84) bytes of data. 64 bytes from 3.3.3.3: icmp_seq=1 ttl=64 time=1.06 ms 64 bytes from 3.3.3.3: icmp_seq=2 ttl=64 time=0.394 ms --- 3.3.3.3 ping statistics --- 2 packets transmitted, 2 received, 0% packet loss, time 1004ms rtt min/avg/max/mdev = 0.394/0.730/1.067/0.337 ms Customer C1 (3.3.3.1) on VLAN 2 should not be able to ping customer C2's site (3.3.3.6) on VLAN 4.
[root@C1 root]#ping 3.3.3.6 PING 3.3.3.6 (3.3.3.6) 56(84) bytes of data. --- 3.3.3.6 ping statistics --- 3 packets transmitted, 0 received, 100% packet loss, time 2010ms Customer C2 Customer C2 (3.3.3.6) on VLAN 4 should be able to ping customer C2's other site (3.3.3.5) on the same VLAN. [root@C2 root]#ping 3.3.3.5 PING 3.3.3.5 (3.3.3.5) 56(84) bytes of data. 64 bytes from 3.3.3.5: icmp_seq=1 ttl=64 time=0.647 ms 64 bytes from 3.3.3.5: icmp_seq=2 ttl=64 time=0.342 ms
64 bytes from 3.3.3.5: icmp_seq=3 ttl=64 time=0.358 ms --- 3.3.3.5 ping statistics --- 3 packets transmitted, 3 received, 0% packet loss, time 2011ms rtt min/avg/max/mdev = 0.342/0.449/0.648/0.141 ms Customer C2 (3.3.3.6) on VLAN 4 should not be able to ping customer C1's other site (3.3.3.1) on VLAN 2. [root@C2 root]#ping 3.3.3.1 PING 3.3.3.1 (3.3.3.1) 56(84) bytes of data. --- 3.3.3.1 ping statistics --- 2 packets transmitted, 0 received, 100% packet loss, time 1018ms
Provider Bridging with Customer Equipment This sample shows configuring a Provider Bridged network with customer equipment. Topology Figure 5-2 displays a sample Provider Bridged topology with customer equipment. © 2015 IP Infusion Inc. Proprietary 63 Provider Bridging Configuration Figure 5-2: Provider Bridging with Customer Equipment Topology Legend The following table is the legend for Figure 5-2 on page 64: CE-A-1, CE-A-2, CE-B-1, CE-B-2 Customer equipment
CE-A-1, CE-A-2, CE-B-1, CE-B-2 Customer equipment Host A-1, Host A-2, Host B-1, Host B-2 Customer host machines PB1, PB2 Provider edge bridges PB1 PB1#configure terminal Enter configure mode. PB1(config)#bridge 1 protocol provider-mstp Configure bridge 1 as a provider MSTP edge bridge. edge PB1(config)#vlan database Enter the VLAN Configure mode. PB1(config-vlan)#vlan 2 type customer bridge Configure VLAN 2 as a customer VLAN and associate it 1 state enable with bridge 1.
1 state enable with bridge 1. PB1(config-vlan)#vlan 3 type customer bridge Configure VLAN 3 as a customer VLAN and associate it 1 state enable with bridge 1. PB1(config-vlan)#vlan 4 type service point- Configure VLAN 4 as a service VLAN and associate it with point bridge 1 state enable bridge 1. PB1(config-vlan)#vlan 5 type service point- Configure VLAN 5 as a service VLAN and associate it with point bridge 1 state enable bridge 1. PB1(config-vlan)#exit Exit the VLAN Configure mode.
PB1(config)#interface eth2 Enter interface mode. PB1(config-if)#switchport Configure eth2 as a Layer-2 interface. PB1(config-if)#bridge-group 1 Associate the eth2 interface with bridge 1. PB1(config-if)#switchport mode customer-edge Configure the eth2 interface to hybrid mode. hybrid 64 © 2015 IP Infusion Inc. Proprietary Provider Bridging Configuration PB1(config-if)#switchport customer-edge Configure the eth2 interface to allow all VLANs. hybrid allowed vlan all
hybrid allowed vlan all PB1(config-if)#exit Exit interface mode. PB1(config)#interface eth3 Enter interface mode. PB1(config-if)#switchport Configure eth3 as a Layer-2 interface. PB1(config-if)#bridge-group 1 Associate the eth3 interface with bridge 1. PB1(config-if)#switchport mode customer-edge Configure the eth3 interface to hybrid mode. hybrid PB1(config-if)#switchport customer-edge Configure the eth3 interface to allow all VLANs. hybrid allowed vlan all
hybrid allowed vlan all PB1(config-if)#exit Exit interface mode. PB1(config)#interface eth1 Enter interface mode. PB1(config-if)#switchport Configure eth1 as a Layer-2 interface. PB1(config-if)#bridge-group 1 Associate the eth1 interface with bridge 1. PB1(config-if)#switchport provider-network Associate Service VLAN 4 and Service VLAN 5 with the allowed vlan add 4,5 provider network. PB1(config-if)#exit Exit interface mode.
PB1(config-if)#exit Exit interface mode. PB1(config)#cvlan registration table Create a CVLAN table customer1, and associate it with customer1 bridge 1 bridge 1. PB1(config-cvlan-registration)#cvlan 1 svlan Map CVLAN 1 with SVLAN 4. 4 PB1(config-cvlan-registration)#cvlan 2 svlan Map CVLAN 2 with SVLAN 4. 4 PB1(config-cvlan-registration)#exit Exit the CVLAN table configuration. PB1(config)#cvlan registration table Create a CVLAN table customer2, and associate it with customer2 bridge 1 bridge 1.
customer2 bridge 1 bridge 1. PB1(config-cvlan-registration)#cvlan 1 svlan Map CVLAN 1 with SVLAN 5. 5 PB1(config-cvlan-registration)#cvlan 3 svlan Map CVLAN 3 with SVLAN 5. 5 PB1(config-cvlan-registration)#exit Exit the CVLAN table configuration. PB1(config)#interface eth2 Enter interface mode. PB1(config-if)#switchport customer-edge vlan Associate the customer1 table with the interface. registration customer1 PB1(config-if)#exit Exit interface mode.
PB1(config-if)#exit Exit interface mode. PB1(config)#interface eth3 Enter interface mode. PB1(config-if)#switchport customer-edge vlan Associate the customer2 table with the interface. registration customer2 PB1(config-if)#exit Exit interface mode. PB2 PB2#configure terminal Enter configure mode. PB2(config)#bridge 1 protocol provider-mstp Configure bridge 1 as a provider MSTP edge bridge. edge © 2015 IP Infusion Inc. Proprietary 65 Provider Bridging Configuration
Provider Bridging Configuration PB2(config)#vlan database Enter the VLAN Configure mode. PB2(config-vlan)#vlan 2 type customer bridge Configure VLAN 2 as a customer VLAN and associate it 1 state enable with bridge 1. PB2(config-vlan)#vlan 3 type customer bridge Configure VLAN 3 as a customer VLAN and associate it 1 state enable with bridge 1. PB2(config-vlan)#vlan 4 type service point- Configure VLAN 4 as a service VLAN and associate it with point bridge 1 state enable bridge 1.
point bridge 1 state enable bridge 1. PB2(config-vlan)#vlan 5 type service point- Configure VLAN 5 as a service VLAN and associate it with point bridge 1 state enable bridge 1. PB2(config-vlan)#exit Exit the VLAN Configure mode. PB2(config)#interface eth2 Enter interface mode. PB2(config-if)#switchport Configure eth2 as a Layer-2 interface. PB2(config-if)#bridge-group 1 Associate the eth2 interface with bridge 1.
PB2(config-if)#switchport mode customer-edge Configure the eth2 interface to hybrid mode. hybrid PB2(config-if)#switchport customer-edge Configure the eth2 interface to allow all VLANs. hybrid allowed vlan all PB2(config-if)#exit Exit interface mode. PB2(config)#interface eth3 Enter interface mode. PB2(config-if)#switchport Configure eth3 as a Layer-2 interface. PB2(config-if)#bridge-group 1 Associate the eth3 interface with bridge 1.
PB2(config-if)#switchport mode customer-edge Configure the eth3 interface to hybrid mode. hybrid PB2(config-if)#switchport customer-edge Configure the eth3 interface to allow all VLANs. hybrid allowed vlan all PB2(config-if)#exit Exit interface mode. PB2(config)#interface eth1 Enter interface mode. PB2(config-if)#switchport Configure eth1 as a Layer-2 interface. PB2(config-if)#bridge-group 1 Associate the eth1 interface with bridge 1.
PB2(config-if)#switchport provider-network Associate Service VLAN 4 and Service VLAN 5 with the allowed vlan add 4,5 provider network. PB2(config-if)#exit Exit interface mode. PB2(config)#cvlan registration table Create a CVLAN table customer1, and associate it with customer1 bridge 1 bridge 1. PB2(config-cvlan-registration)#cvlan 1 svlan Map CVLAN 1 with SVLAN 4. 4 PB2(config-cvlan-registration)#cvlan 2 svlan Map CVLAN 2 with SVLAN 4. 4
4 PB2(config-cvlan-registration)#exit Exit the CVLAN table configuration. PB2(config)#cvlan registration table Create a CVLAN table customer2, and associate it with customer2 bridge 1 bridge 1. PB2(config-cvlan-registration)#cvlan 1 svlan Map CVLAN 1 with SVLAN 5. 5 PB2(config-cvlan-registration)#cvlan 3 svlan Map CVLAN 3 with SVLAN 5. 5 PB2(config-cvlan-registration)#exit Exit the CVLAN table configuration. 66 © 2015 IP Infusion Inc. Proprietary Provider Bridging Configuration
Provider Bridging Configuration PB2(config)#interface eth2 Enter interface mode. PB2(config-if)#switchport customer-edge vlan Associate the customer1 table with the interface. registration customer1 PB2(config-if)#exit Exit interface mode. PB2(config)#interface eth3 Enter interface mode. PB2(config-if)#switchport customer-edge vlan Associate the customer2 table with the interface. registration customer2 PB2(config-if)#exit Exit interface mode. CE-A-1
PB2(config-if)#exit Exit interface mode. CE-A-1 CE-A-1#configure terminal Enter configure mode. CE-A-1(config)#bridge 1 protocol mstp Create an MSTP bridge. CE-A-1(config)#vlan database Enter the VLAN Configure mode. CE-A-1(config-vlan)#vlan 2 bridge 1 state Create VLAN 2, and associate it with bridge 1. enable CE-A-1(config-vlan)#exit Exit the VLAN Configure mode. CE-A-1(config)#interface eth1 Enter interface mode. CE-A-1(config-if)#switchport Configure eth1 as a Layer-2 interface.
CE-A-1(config-if)#bridge-group 1 Associate the eth1 interface with bridge 1. CE-A-1(config-if)#switchport mode hybrid Configure the eth1 interface to hybrid mode. CE-A-1(config-if)#switchport hybrid allowed Configure the eth1 interface to allow all VLANs. vlan all CE-A-1(config-if)#exit Exit interface mode. CE-A-1(config)#interface eth2 Enter interface mode. CE-A-1(config-if)#switchport Configure eth2 as a Layer-2 interface.
CE-A-1(config-if)#bridge-group 1 Associate the eth2 interface with bridge 1. CE-A-1(config-if)#switchport mode hybrid Configure the eth2 interface to hybrid mode. CE-A-1(config-if)#switchport hybrid allowed Configure the eth2 interface to allow all VLANs. vlan all CE-A-1(config-if)#exit Exit interface mode. CE-A-2 CE-A-2#configure terminal Enter configure mode. CE-A-2(config)#bridge 1 protocol mstp Create an MSTP bridge. CE-A-2(config)#vlan database Enter the VLAN Configure mode.
CE-A-2(config-vlan)#vlan 2 bridge 1 state Create VLAN 2, and associate it with bridge 1. enable CE-A-2(config-vlan)#exit Exit the VLAN Configure mode. CE-A-2(config)#interface eth1 Enter interface mode. CE-A-2(config-if)#switchport Configure eth1 as a Layer-2 interface. © 2015 IP Infusion Inc. Proprietary 67 Provider Bridging Configuration CE-A-2(config-if)#bridge-group 1 Associate the eth1 interface with bridge 1.
CE-A-2(config-if)#switchport mode hybrid Configure the eth1 interface to hybrid mode. CE-A-2(config-if)#switchport hybrid allowed Configure the eth1 interface to allow all VLANs. vlan all CE-A-2(config-if)#exit Exit interface mode. CE-A-2(config)#interface eth2 Enter interface mode. CE-A-2(config-if)#switchport Configure eth2 as a Layer-2 interface. CE-A-2(config-if)#bridge-group 1 Associate the eth2 interface with bridge 1.
CE-A-2(config-if)#switchport mode hybrid Configure the eth2 interface to hybrid mode. CE-A-2(config-if)#switchport hybrid allowed Configure the eth2 interface to allow all VLANs. vlan all CE-A-2(config-if)#exit Exit interface mode. CE-B-1 CE-B-1#configure terminal Enter configure mode. CE-B-1(config)#bridge 1 protocol mstp Create an MSTP bridge. CE-B-1(config)#vlan database Enter the VLAN Configure mode. CE-B-1(config-vlan)#vlan 3 bridge 1 state Create VLAN 3, and associate it with bridge 1.
enable CE-B-1(config-vlan)#exit Exit the VLAN Configure mode. CE-B-1(config)#interface eth1 Enter interface mode. CE-B-1(config-if)#switchport Configure eth1 as a Layer-2 interface. CE-B-1(config-if)#bridge-group 1 Associate the eth1 interface with bridge 1. CE-B-1(config-if)#switchport mode hybrid Configure the eth1 interface to hybrid mode. CE-B-1(config-if)#switchport hybrid allowed Configure the eth1 interface to allow all VLANs. vlan all CE-B-1(config-if)#exit Exit interface mode.
CE-B-1(config-if)#exit Exit interface mode. CE-B-1(config)#interface eth3 Enter interface mode. CE-B-1(config-if)#switchport Configure eth3 as a Layer-2 interface. CE-B-1(config-if)#bridge-group 1 Associate the eth3 interface with bridge 1. CE-B-1(config-if)#switchport mode hybrid Configure the eth3 interface to hybrid mode. CE-B-1(config-if)#switchport hybrid allowed Configure the eth3 interface to allow all VLANs. vlan all CE-B-1(config-if)#exit Exit interface mode. CE-B-2
CE-B-2 CE-B-2#configure terminal Enter configure mode. CE-B-2(config)#bridge 1 protocol mstp Create an MSTP bridge. CE-B-2(config)#vlan database Enter the VLAN Configure mode. 68 © 2015 IP Infusion Inc. Proprietary Provider Bridging Configuration CE-B-2(config-vlan)#vlan 3 bridge 1 state Create VLAN 3, and associate it with bridge 1. enable CE-B-2(config-vlan)#exit Exit the VLAN Configure mode. CE-B-2(config)#interface eth1 Enter interface mode.
CE-B-2(config-if)#switchport Configure eth1 as a Layer-2 interface. CE-B-2(config-if)#bridge-group 1 Associate the eth1 interface with bridge 1. CE-B-2(config-if)#switchport mode hybrid Configure the eth1 interface to hybrid mode. CE-B-2(config-if)#switchport hybrid allowed Configure the eth1 interface to allow all VLANs. vlan all CE-B-2(config-if)#exit Exit interface mode. CE-B-2(config)#interface eth3 Enter interface mode. CE-B-2(config-if)#switchport Configure eth3 as a Layer-2 interface.
CE-B-2(config-if)#bridge-group 1 Associate the eth3 interface with bridge 1. CE-B-2(config-if)#switchport mode hybrid Configure the eth3 interface to hybrid mode. CE-B-2(config-if)#switchport hybrid allowed Configure the eth3 interface to allow all VLANs. vlan all CE-B-2(config-if)#exit Exit interface mode. Validation PB1#show cvlan registration table bridge 1 Bridge Table Name Port List ====== ========== ========= 1 customer1 eth2 CVLAN ID SVLAN ID ======== ======== 1 4 2 4
CVLAN ID SVLAN ID ======== ======== 1 4 2 4 Bridge Table Name Port List ====== ========== ========= 1 customer2 eth0 CVLAN ID SVLAN ID ======== ======== 1 5 3 5 PB2#show cvlan registration table bridge 1 Bridge Table Name Port List ====== ========== ========= 1 customer1 eth2 CVLAN ID SVLAN ID ======== ======== 1 4 2 4 © 2015 IP Infusion Inc. Proprietary 69 Provider Bridging Configuration Bridge Table Name Port List ====== ========== ========= 1 customer2 eth0 CVLAN ID SVLAN ID
1 customer2 eth0 CVLAN ID SVLAN ID ======== ======== 1 5 3 5 Host A-1 and Host A-2 Host machine (Host-A-1 [8.8.8.5]) of customer A on VLAN2 should be able to ping host machine (Host-A-2 [8.8.8.3]) in customer A's other site on the same VLAN. [root@Host-A-1 root]#ping 8.8.8.3 PING 8.8.8.3(8.8.8.3) 56(84) bytes of data. 64 bytes from 8.8.8.3: icmp_seq=1 ttl=64 time=0.032 ms 64 bytes from 8.8.8.3: icmp_seq=2 ttl=64 time=0.015 ms --- 8.8.8.3 ping statistics ---
--- 8.8.8.3 ping statistics --- 2 packets transmitted, 2 received, 0% packet loss, time 999ms rtt min/avg/max/mdev = 0.015/0.023/0.032/0.009 ms Host B-2 and Host B-1 Host machine (Host-B-2 [8.8.8.2]) of customer B on VLAN3 should be able to ping host machine (Host-B-1 [8.8.8.8]) in customer B's other site on the same VLAN. [root@Host-B-2 root]#ping 8.8.8.8 PING 8.8.8.8 (8.8.8.8) 56(84) bytes of data. 64 bytes from 8.8.8.2: icmp_seq=1 ttl=64 time=0.032 ms
64 bytes from 8.8.8.2: icmp_seq=2 ttl=64 time=0.015 ms --- 8.8.8.2 ping statistics --- 2 packets transmitted, 2 received, 0% packet loss, time 999ms rtt min/avg/max/mdev = 0.015/0.023/0.032/0.009 ms Host A-2 and Host B-1 Host machine (Host-A-2 [8.8.8.3]) of customer A on VLAN2 should not be able to ping host machine (Host-B-1 [8.8.8.8] in customer B's site because it is in a different VLAN. [root@Host-A-2 root]#ping 8.8.8.8 PING 8.8.8.8 (8.8.8.8) 56(84) bytes of data.
PING 8.8.8.8 (8.8.8.8) 56(84) bytes of data. --- 8.8.8.8 ping statistics --- 6 packets transmitted, 0 received, 100% packet loss, time 5010ms Host B-2 and Host A-1 Host machine (Host-B-2 [8.8.8.2]) of customer B on VLAN3 should not be able to ping host machine (Host-A-1 [8.8.8.5] in customer A's site because it is in a different VLAN. [root@QA-33 root]#ping 8.8.8.5 PING 8.8.8.5 (8.8.8.5) 56(84) bytes of data. --- 8.8.8.5 ping statistics ---
--- 8.8.8.5 ping statistics --- 2 packets transmitted, 0 received, 100% packet loss, time 1015ms 70 © 2015 IP Infusion Inc. Proprietary MEF UNI Configuration CHAPTER 6 This chapter contains samples of Link Aggregation Control Protocol (LACP) configuration for a User Network Interface (UNI) within a Metro Ethernet Network (MEN) framework. ZebOS-XP conforms to the Metro Ethernet Form (MEF) specification mef11.doc.
specification mef11.doc. A User Network Interface (UNI) can be configured to Peer, Tunnel, or Discard the Layer 2 protocols LACP and DOT1.X. The default behavior is Peering. In the case of LACP Peering, all customer-edge ports configured for aggregation should be aggregated and synchronized with the host. Note: MEF UNI is not supported for ZebIC releases. LACP Peering In this example, PB 1 and PB 2 are provider-MSTP edge bridges that communicate directly with each other via eth0.
The interfaces on Host 1 and Host 2 (eth1 and eth2) are Layer 2 interfaces. Depending on what restrictions may be set, traffic can be sent from Host 1, passing through PB 1 and PB 2, and received on Host 2. Messages may also be sent in the other direction, depending on the provider and customer restrictions for sending and receiving interfaces. Figure 6-1 displays a sample UNI topology. Figure 6-1: UNI Topology Legend The following table is the legend for Figure 6-1:
The following table is the legend for Figure 6-1: PB1 and PB2 Provider Edge Bridges Host-1 and Host-2 Host machines PB1 PB1#configure terminal Enter configure mode. PB1(config)#bridge 1 protocol provider-mstp Configure the bridge as a provider-MSTP edge bridge. edge PB1(config)#vlan database Enter VLAN configure mode. PB1(config-vlan)#vlan 10 type service point- Configure VLAN 10 as service VLAN (point-to-point EVC ) point bridge 1 state enable and associate it with bridge.
PB1(config-vlan)#exit Exit VLAN database configuration mode. © 2015 IP Infusion Inc. Proprietary 71 MEF UNI Configuration PB1(config)#cvlan registration table map1 Create CVLAN registration table, map1, and associate it with bridge 1 bridge 1. PB1(config-cvlan-registration)#cvlan 1 svlan Map CVLAN 1 (default VLAN) to SVLAN 10. 10 PB1(config-cvlan-registration)#exit Exit CVLAN-registration mode. PB1(config)#interface eth1 Enter interface mode.
PB1(config)#interface eth1 Enter interface mode. PB1(config-if)#switchport Configure the interface as a Layer 2 interface PB1(config-if)#bridge-group 1 Associate it with bridge 1. PB1(config-if)#switchport mode customer-edge Configure the interface as customer-edge port in hybrid mode. hybrid PB1(config-if)#switchport customer-edge vlan Associate map1 (the CVLAN registration table) with the registration map1 interface.
registration map1 interface. PB1(config-if)#channel-group 2 mode passive Associate the interface to a channel group specified in passive mode, so that link aggregation is enabled on the interface. PB1(config-if)#exit Exit interface mode. PB1(config)#interface eth2 Enter interface mode. PB1(config-if)#switchport Configure the interface as a Layer 2 interface. PB1(config-if)#bridge-group 1 Associate it with bridge 1.
PB1(config-if)#switchport mode customer-edge Configure the interface as customer-edge port in hybrid mode. hybrid PB1(config-if)#switchport customer-edge vlan Associate map1 (the CVLAN registration table) with the registration map1 interface. PB1(config-if)#channel-group 2 mode passive Associate the interface to a channel group specified in passive mode, so that link aggregation is enabled on the interface. PB1(config-if)#exit Exit interface mode.
PB1(config-if)#exit Exit interface mode. PB1(config)#interface eth0 Enter interface mode. PB1(config-if)#switchport Configure the interface as a Layer 2 interface. PB1(config-if)#bridge-group 1 Associate the interface with bridge 1. PB1(config-if)#switchport mode provider- Configure the interface as a provider-network port. network PB1(config-if)#switchport provider-network Configure the provider-network port to allow SVLAN 10. allowed vlan add 10 PB1(config-if)#exit Exit interface mode. PB2
PB1(config-if)#exit Exit interface mode. PB2 PB2#configure terminal Enter configure mode. PB2(config)#bridge 1 protocol provider-mstp Configure the bridge as a provider-MSTP edge bridge. edge PB2(config)#vlan database Enter VLAN configure mode. PB2(config-vlan)#vlan 10 type service point- Configure VLAN 10 as service VLAN, associate it with bridge point bridge 1 state enable 1, and enable point-to-point. PB2(config-vlan)#exit Exit VLAN database configuration mode.
72 © 2015 IP Infusion Inc. Proprietary MEF UNI Configuration PB2(config)#cvlan registration table map1 Create a CVLAN registration table, map1, and associate it bridge 1 with bridge 1. PB2(config-cvlan-registration)#cvlan 1 svlan Map CVLAN 1 (default VLAN) with SVLAN 10. 10 PB2(config-cvlan-registration)#exit Exit Configure CVLAN Registration mode. PB2(config)#interface eth1 Enter interface mode. PB2(config-if)#switchport Configure the interface as a Layer 2 interface.
PB2(config-if)#bridge-group 1 Associate it with bridge 1. PB2(config-if)#switchport mode customer-edge Configure the interface as a customer-edge port in hybrid hybrid mode. PB2(config-if)#switchport customer-edge vlan Associate map1 (the CVLAN registration table) with the registration map interface. PB2(config-if)#channel-group 4 mode passive Associate the interface to a channel group specified in passive mode, so that link aggregation is enabled on the interface.
interface. PB2(config-if)#exit Exit interface mode. Host Machines HOST-1 HOST-1#configure terminal Enter configure mode. HOST-1(config)#interface eth1 Enter interface mode. HOST-1(config-if)#switchport Configure the interface as a Layer 2 interface. HOST-1(config-if)#channel-group 1 mode Associate the interface to a channel group specified in active active mode, so that link aggregation is enabled on the interface. HOST-1(config-if)#exit Exit interface mode.
HOST-1(config-if)#exit Exit interface mode. HOST-1(config)#interface eth2 Enter interface mode. HOST-1(config-if)#switchport Configure the interface as a Layer 2 interface. HOST-1(config-if)#channel-group 1 mode Associate the interface to a channel group specified in active active mode, so that link aggregation is enabled on the interface. HOST-2 HOST-2#configure terminal Enter configure mode. HOST-2(config)#interface eth1 Enter interface mode.
HOST-2(config-if)#switchport Configure the interface as a Layer 2 interface. HOST-2(config-if)#channel-group 3 mode Associate the interface to a channel group specified in active active mode, so that link aggregation is enabled on the interface. HOST-2(config-if)#exit Exit interface mode. HOST-2(config)#interface eth2 Enter interface mode. HOST-2(config-if)#switchport Configure the interface as a Layer 2 interface.
HOST-2(config-if)#channel-group 3 mode Associate the interface to a channel group specified in active active mode, so that link aggregation is enabled on the interface. © 2015 IP Infusion Inc. Proprietary 73 MEF UNI Configuration Validation PB1 PB1#show cvlan registration table bridge Bridge Table Name Port List ====== ========== ========= 1 map1 eth1, eth2 CVLAN ID SVLAN ID ======== ======== 1 10 PB2#show cvlan registration table bridge 1 Bridge Table Name Port List ====== ========== =========
====== ========== ========= 1 map1 eth1, eth2 CVLAN ID SVLAN ID ======== ======== 1 10 PB1#show cvlan registration table bridge Bridge Table Name Port List ====== ========== ========= 1 map1 eth1, eth2 CVLAN ID SVLAN ID ======== ======== 1 10 PB2#show cvlan registration table bridge 1 Bridge Table Name Port List ====== ========== ========= 1 map1 eth1, eth2 CVLAN ID SVLAN ID ======== ======== 1 10 PB1#show running-config ! bridge 1 protocol provider-mstp edge ! vlan database
! vlan database vlan 10 type service point-point bridge 1 name VLAN0010 vlan 10 type service point-point bridge 1 state enable ! cvlan registration table map1 bridge 1 cvlan 1 svlan 10 ! interface eth0 switchport bridge-group 1 switchport mode provider-network 74 © 2015 IP Infusion Inc. Proprietary MEF UNI Configuration switchport provider-network allowed vlan add 10 ! interface eth1 switchport bridge-group 1 switchport mode customer-edge hybrid
switchport mode customer-edge hybrid switchport mode customer-edge hybrid acceptable-frame-type all switchport customer-edge vlan registration map1 channel-group 2 mode passive lacp timeout long ! interface eth2 switchport bridge-group 1 switchport mode customer-edge hybrid switchport mode customer-edge hybrid acceptable-frame-type all switchport customer-edge vlan registration map1 channel-group 2 mode passive lacp timeout long ! interface po2 mac-address 0000.0000.0000 switchport
mac-address 0000.0000.0000 switchport bridge-group 1 switchport mode customer-edge hybrid switchport mode customer-edge hybrid acceptable-frame-type all switchport customer-edge vlan registration map1 no multicast ! end PB2 PB2#show running-config ! bridge 1 protocol provider-mstp edge ! vlan database vlan 10 type service point-point bridge 1 name VLAN0010 vlan 10 type service point-point bridge 1 state enable ! cvlan registration table map1 bridge 1 cvlan 1 svlan 10 ! interface eth0 switchport
cvlan 1 svlan 10 ! interface eth0 switchport bridge-group 1 switchport mode provider-network switchport provider-network allowed vlan add 10 ! © 2015 IP Infusion Inc. Proprietary 75 MEF UNI Configuration interface eth1 switchport bridge-group 1 switchport mode customer-edge hybrid switchport mode customer-edge hybrid acceptable-frame-type all switchport customer-edge vlan registration map1 channel-group 4 mode passive lacp timeout long ! interface eth2 switchport bridge-group 1
! interface eth2 switchport bridge-group 1 switchport mode customer-edge hybrid switchport mode customer-edge hybrid acceptable-frame-type all switchport customer-edge vlan registration map1 channel-group 4 mode passive lacp timeout long ! interface po4 mac-address 0000.0000.0000 switchport bridge-group 1 switchport mode customer-edge hybrid switchport mode customer-edge hybrid acceptable-frame-type all switchport customer-edge vlan registration map1 no multicast ! end HOST-2
no multicast ! end HOST-2 HOST-2#show running-config ! interface eth1 channel-group 3 mode active lacp timeout long ! interface eth2 channel-group 3 mode active lacp timeout long ! interface po3 mac-address 0000.0000.0000 no multicast ! end 76 © 2015 IP Infusion Inc. Proprietary MEF UNI Configuration Verification HOST-1 Configuration HOST-1#configure terminal Enter configure mode. HOST-1(config)#interface po1 Enter interface mode.
HOST-1(config-if)#ip address 3.3.3.1/2 Configure IP address to po1 (aggregated interface). HOST-2 Configuration HOST-2#configure terminal Enter configure mode. HOST-2(config)#interface po3 Enter interface mode. HOST-2(config-if)#ip address 3.3.3.2/24 Configure IP address to po3(aggregated interface). Aggregated interface allows packets to pass through. [root@Host-2 root]#ping 3.3.3.1 PING 3.3.3.1 (3.3.3.1) 56(84) bytes of data. 64 bytes from 3.3.3.1: icmp_seq=1 ttl=64 time=0.606 ms
64 bytes from 3.3.3.1: icmp_seq=2 ttl=64 time=0.551 ms DOT1.X Tunneling in UNI UNI can be configured to tunnel the Layer 2 protocol DOT1.X. When DOT1.X is present, a Tunneling xsupplicant on one side of a Provider Network gets authenticated by RADIUS server, which is in other side of the Provider Network. The customer-edge port (UNI) of the Provider Network is configured to tunnel DOT1.X packets. Figure 6-2 displays a sample DOT1.X Tunneling in UNI topology.
Figure 6-2: DOT1.X Tunneling in UNI Topology Legend The following table is the legend for Figure 6-2: PB1 and PB2 Provider Edge Bridges Host-1 Xsupplicant; eth2=10.10.11.40 Host-2 RADIUS Server; eth1=10.10.10.40 © 2015 IP Infusion Inc. Proprietary 77 MEF UNI Configuration PB1 PB1#configure terminal Enter configure mode. PB1(config)#bridge 1 protocol provider-mstp Configure the bridge as a provider-MSTP edge bridge. edge PB1(config)#vlan database Enter VLAN configure mode.
PB1(config-vlan)#vlan 10 type service point- Configure VLAN 10 as service VLAN (point-to-point EVC ) point bridge 1 state enable and associate it with bridge 1. PB1(config-vlan)#exit Exit VLAN configure mode. PB1(config)#cvlan registration table map1 Create a CVLAN registration table, map1, and associate it bridge 1 with bridge 1. PB1(config-cvlan-registration)#cvlan 1 svlan Map CVLAN 1 (default VLAN) with SVLAN 10. 10 PB1(config-cvlan-registration)#exit Exit CVLAN registration mode.
PB1(config)#interface eth1 Enter interface mode. PB1(config-if)#switchport Configure the interface as a Layer 2 interface. PB1(config-if)#bridge-group 1 Associate it with bridge 1. PB1(config-if)#switchport mode customer-edge Configure the interface as customer-edge port in hybrid mode. hybrid PB1(config-if)#switchport customer-edge vlan Associate map1 (the CVLAN registration table) with the registration map1 interface.
registration map1 interface. PB1(config-if)#l2protocol dot1x tunnel 10 Configure the interface to tunnel dot1x packets. PB1(config-if)#exit Exit interface mode. PB1(config)#interface eth0 Enter interface mode PB1(config-if)#switchport Configure the interface as a Layer 2 interface. PB1(config-if)#bridge-group 1 Associate it with bridge 1. PB1(config-if)#switchport mode provider- Configure the interface as provider-network port. network
network PB1(config-if)#switchport provider-network Configure the provider-network port to allow SVLAN 10. allowed vlan add 10 PB1(config-if)#exit Exit interface mode PB2 PB2#configure terminal Enter configure mode. PB2(config)#bridge 1 protocol provider-mstp Configure the bridge as a provider-MSTP edge bridge. edge PB2(config)#vlan database Enter VLAN database. PB2(config-vlan)#vlan 10 type service point- Configure VLAN 10 as a service VLAN (point-to-point EVC )
point bridge 1 state enable and associate it with bridge 1. PB2(config-vlan)#exit Exit VLAN database configuration mode. PB2(config)#cvlan registration table map1 Create a CVLAN registration table, map1, and associate it bridge 1 with bridge 1. 78 © 2015 IP Infusion Inc. Proprietary MEF UNI Configuration PB2(config-cvlan-registration)#cvlan 1 svlan Map CVLAN 1 (default VLAN) to SVLAN 10. 10 PB2(config-cvlan-registration)#exit Exit CVLAN-registration mode.
PB2(config)#interface eth1 Enter interface mode. PB2(config-if)#switchport Configure the interface as a Layer 2 interface. PB2(config-if)#bridge-group 1 Associate it with bridge 1. PB2(config-if)#switchport mode customer-edge Configure the interface as customer-edge port in hybrid mode. hybrid PB2(config-if)#switchport customer-edge vlan Associate map1 (the CVLAN registration table) with the registration map1 interface.
registration map1 interface. PB2(config-if)#l2protocol dot1x tunnel 10 Configure the interface to tunnel DOT1.X packets. PB2(config-if)#exit Exit interface mode. PB2(config)#interface eth0 Enter interface mode. PB2(config-if)#switchport Configure the interface as a Layer 2 interface. PB2(config-if)#bridge-group 1 Associate it with bridge 1. PB2(config-if)#switchport mode provider- Configure the interface as provider-network port. network
network PB2(config-if)#switchport provider-network Configure the provider-network port to allow SVLAN 10. allowed vlan add 10 PB2(config-if)#exit Exit interface mode. DUT DUT#configure terminal Enter configure mode DUT(config)#radius-server host Configure the RADIUS server parameters: 10.10.10.40 auth-port 1812 key authd • 10.10.10.40—IP address of the remote RADIUS server. • 1812—UDP destination port for authentication requests. The default is 1812, and the range is <0 to 65536>.
to 65536>. • authd—Authentication key used between the DUT and the RADIUS daemon running on the RADIUS server. DUT(config)#dot1x system-auth-ctrl Enable IEEE 802.1x authentication globally on the DUT. DUT(config)#interface eth1 Enter interface mode. DUT(config-if)#ip address 10.10.10.70/24 Configure IP address to the interface. DUT(config-if)#exit Exit interface mode. DUT(config)#interface eth2 Enter interface mode. DUT(config)#ip address 10.10.11.70/24 Configure IP address to the interface.
DUT(config-if)#dot1x port-control auto Enable IEEE 802.1x authentication on the port. DUT(config-if)#dot1x port-control dir in Configure the interface to allow control packets from xsupplicant. DUT(config-if)#dot1x protocol-version 1 Configure the DOT1.X protocol version as 1. DUT(config-if)#exit Exit interface mode © 2015 IP Infusion Inc. Proprietary 79 MEF UNI Configuration HOST-2 Radius Server [root@RADIUS-SERVER root]#ifconfig eth1 Configure IP address of interface eth1 on RADIUS Server.
10.10.10.40 broadcast 10.10.10.255 netmask 255.255.255.0 [root@RADIUS-SERVER root]#route add -net Configure route to xsupplicant (10.10.11.40) through the eth1 10.10.11.0 netmask 255.255.255.0 gw of DUT (10.10.10.60) as the gateway. 10.10.10.60 HOST-1 Xsupplicant [root@XSUPPLICANT1 root]#ifconfig eth2 Configure IP address of interface eth2 on RADIUS Server. 10.10.11.40 broadcast 10.10.11.255 netmask 255.255.255.0
255.255.255.0 [root@XSUPPLICANT1 root]#route add -net Configure route to RAIDUS server (10.10.10.40) through eth2 10.10.10.0 netmask 255.255.255.0 gw of DUT (10.10.11.60) as the gateway. 10.10.11.60 1. Start Radius daemon on Radius server: [root@RADIUS-SERVER root]#radiusd –X 2. Start xsupplicant daemon in xsupplicant: [root@XSUPPLICANT1 root]#xsupplicant -c /usr/local/etc/1x/md5-example.conf -f -d s Validation DUT#show dot1x all 802.1X Port-Based Authentication Enabled
802.1X Port-Based Authentication Enabled RADIUS server address: 10.10.10.40:1812 Next radius message id: 2 RADIUS client address: not configured 802.1X info for interface eth0 Supplicant name: testuser Supplicant address: 0008.c73b.05ce portEnabled: true - portControl: Auto portStatus: Authorized - currentId: 17 reAuthenticate: disabled reAuthPeriod: 3600 abort:F fail:F start:F timeout:F success:T PAE: state: Authenticated - portMode: Auto PAE: reAuthCount: 0 - rxRespId: 0
PAE: reAuthCount: 0 - rxRespId: 0 PAE: quietPeriod: 60 - reauthMax: 2 - txPeriod: 30 BE: state: Idle - reqCount: 0 - idFromServer: 16 BE: suppTimeout: 30 - serverTimeout: 30 - maxReq: 2 CD: adminControlledDirections: in - operControlledDirections: in CD: bridgeDetected: false KR: rxKey: false KT: keyAvailable: false - keyTxEnabled: false 80 © 2015 IP Infusion Inc. Proprietary MEF UNI Configuration Xsupplicant should be able to ping RADIUS Server. [root@XSUPPLICANT1 root]#ping 10.10.10.40
[root@XSUPPLICANT1 root]#ping 10.10.10.40 PING 3.3.3.1 (3.3.3.1) 56(84) bytes of data. 64 bytes from 10.10.10.40: icmp_seq=1 ttl=64 time=0.606 ms 64 bytes from 10.10.10.40: icmp_seq=2 ttl=64 time=0.551 ms Bundling in UNI A UNI can be configured for bundling. A CVLAN registration table with only one SVLAN is supported on the UNI configured for bundling. Multiple CVLANs can be mapped to the SVLAN. Figure 6-3 displays a sample Bundling in UNI topology. Figure 6-3: Bundling in UNI Topology Legend
Figure 6-3: Bundling in UNI Topology Legend The following table is the legend for Figure 6-2: Host-1 and Host-2 Host machines PB1 and PB2 Provider Edge Bridges PB1 PB1#configure terminal Enter configure mode. PB1(config)#bridge 1 protocol provider-mstp Configure the bridge as a provider-MSTP edge bridge. edge PB1(config)#vlan database Enter VLAN configure mode. PB1(config-vlan)#vlan 2 type customer bridge Configure VLAN 2 as a customer VLAN and associate it with 1 state enable bridge 1.
1 state enable bridge 1. PB1(config-vlan)#vlan 3 type customer bridge Configure VLAN 3 as a customer VLAN and associate it with 1 state enable bridge 1. PB1(config-vlan)#vlan 4 type customer bridge Configure VLAN 4 as a customer VLAN and associate it with 1 state enable bridge 1. PB1(config-vlan)#vlan 20 type service point- Configure VLAN 20 as service VLAN (point-to-point EVC) and point bridge 1 state enable associate it with bridge 1.
PB1(config-vlan)#vlan 30 type service point- Configure VLAN 30 as service VLAN (point-to-point EVC ) point bridge 1 state enable and associate it with bridge 1. PB1(config-vlan)#exit Exit VLAN database configuration mode. © 2015 IP Infusion Inc. Proprietary 81 MEF UNI Configuration PB1(config)#cvlan registration table map1 Create a CVLAN registration table, map1, and associate it bridge 1 with bridge 1. PB1(config-cvlan-registration)#cvlan 2 svlan Map CVLAN 2 (default VLAN) with SVLAN 20. 20
20 PB1(config-cvlan-registration)#cvlan 3 svlan Map CVLAN 3(default VLAN) with SVLAN 20. 20 PB1(config-cvlan-registration)#exit Exit CVLAN-registration mode. PB1(config)#interface eth0 Enter interface mode. PB1(config-if)#switchport Configure the interface as a Layer 2 interface. PB1(config-if)#bridge-group 1 Associate it with bridge 1. PB1(config-if)#switchport mode customer-edge Configure the interface as customer-edge port in hybrid mode. hybrid
hybrid PB1(config-if)##switchport customer-edge Configure the customer-edge port to allow CVLAN 2, with hybrid allowed vlan add 2 egress-tagged egress-tagged enabled. enable PB1(config-if)##switchport customer-edge Configure the customer-edge port to allow CVLAN 3, with hybrid allowed vlan add 3 egress-tagged egress-tagged enabled. enable PB1(config-if)##switchport customer-edge Configure the customer-edge port to allow CVLAN 4, with
hybrid allowed vlan add 4 egress-tagged egress-tagged enabled. enable PB1(config-if)#switchport customer-edge vlan Associate map1 (the CVLAN registration table) with the registration map1 interface. PB1(config-if)#ethernet uni bundle Configure the UNI for bundling. PB1(config-if)#exit Exit interface mode. PB1(config)#interface eth1 Enter interface mode. PB1(config-if)#switchport Configure the interface as a Layer 2 interface. PB1(config-if)#bridge-group 1 Associate it with bridge 1.
PB1(config-if)#switchport mode provider- Configure the interface as a provider-network port. network PB1(config-if)#switchport provider-network Configure the provider-network port to allow SVLAN 20. allowed vlan add 20 PB1(config-if)#switchport provider-network Configure the provider-network port to allow SVLAN 30. allowed vlan add 30 PB1(config-if)#exit Exit interface mode. PB2 PB2#configure terminal Enter configure mode.
PB2 PB2#configure terminal Enter configure mode. PB2(config)#bridge 1 protocol provider-mstp Configure the bridge as a provider-MSTP edge bridge. edge PB2(config)#vlan database Enter VLAN configure mode. PB2(config-vlan)#vlan 2 type customer bridge Configure VLAN 2 as a customer VLAN and associate it with 1 state enable bridge 1. PB2(config-vlan)#vlan 3 type customer bridge Configure VLAN 3 as a customer VLAN and associate it with 1 state enable bridge 1. 82 © 2015 IP Infusion Inc. Proprietary
82 © 2015 IP Infusion Inc. Proprietary MEF UNI Configuration PB2(config-vlan)#vlan 4 type customer bridge Configure VLAN 4 as a customer VLAN and associate it with 1 state enable bridge 1. PB2(config-vlan)#vlan 20 type service point- Configure VLAN 20 as service VLAN (point-to-point EVC) and point bridge 1 state enable associate it with bridge 1. PB2(config-vlan)#vlan 30 type service point- Configure VLAN 30 as service VLAN (point-to-point EVC )
point bridge 1 state enable and associate it with bridge 1. PB2(config-vlan)#exit Exit VLAN configure mode. PB2(config)#cvlan registration table map1 Create a CVLAN registration table, map1, and associate it bridge 1 with bridge 1. PB2(config-cvlan-registration)#cvlan 2 svlan Map CVLAN 2 (default VLAN) to SVLAN 20. 20 PB2(config-cvlan-registration)#cvlan 3 svlan Map CVLAN 3(default VLAN) to SVLAN 20. 20 PB2(config-cvlan-registration)#exit Exit CVLAN registration mode.
PB2(config)#interface eth0 Enter interface mode. PB2(config-if)#switchport Configure the interface as a Layer 2 interface. PB2(config-if)#bridge-group 1 Associate it with bridge 1. PB2(config-if)#switchport mode customer-edge Configure the interface as customer-edge port in hybrid mode. hybrid PB2(config-if)##switchport customer-edge Configure the customer-edge port to allow CVLAN 2, with hybrid allowed vlan add 2 egress-tagged egress-tagged enabled. enable
enable PB2(config-if)##switchport customer-edge Configure the customer-edge port to allow CVLAN 3, with hybrid allowed vlan add 3 egress-tagged egress-tagged enabled. enable PB2(config-if)##switchport customer-edge Configure the customer-edge port to allow CVLAN 4, with hybrid allowed vlan add 4 egress-tagged egress-tagged enabled. enable PB2(config-if)#switchport customer-edge vlan Associate map1 (the CVLAN registration table) with the registration map1 interface.
registration map1 interface. PB2(config-if)#ethernet uni bundle Configure the UNI for bundling. PB2(config-if)#exit Exit interface mode. PB2(config)#interface eth1 Enter interface mode. PB2(config-if)#switchport Configure the interface as a Layer 2 interface. PB2(config-if)#bridge-group 1 Associate it with bridge 1. PB2(config-if)#switchport mode provider- Configure the interface as provider-network port. network
network PB2(config-if)#switchport provider-network Configure the provider-network port to allow SVLAN 20. allowed vlan add 20 PB2(config-if)#switchport provider-network Configure the provider-network port to allow SVLAN 30. allowed vlan add 30 PB2(config-if)#exit Exit interface mode. HOST-1 [root@HOST-1 root]#vconfig add eth0 2 Configure tagged interface for VLAN 2. [root@HOST-1 root]#ifconfig eth0.2 2.2.2.1 Configure IP address for VLAN 2 tagged interface.
© 2015 IP Infusion Inc. Proprietary 83 MEF UNI Configuration [root@HOST-1 root]#vconfig add eth0 3 Configure tagged interface for VLAN 3. [root@HOST-1 root]#ifconfig eth0.3 3.3.3.1 Configure IP address for VLAN 3 tagged interface. [root@HOST-1 root]#vconfig add eth0 4 Configure tagged interface for VLAN 4. [root@HOST-1 root]#ifconfig eth0.4 4.4.4.1 Configure IP address for VLAN 4 tagged interface. HOST-2 [root@HOST-2 root]#vconfig add eth0 2 Configure tagged interface for VLAN 2.
[root@HOST-2 root]#ifconfig eth0.2 2.2.2.2 Configure IP address for VLAN 2 tagged interface. [root@HOST-2 root]#vconfig add eth0 3 Configure tagged interface for VLAN 3. [root@HOST-2 root]#ifconfig eth0.3 3.3.3.2 Configure IP address for VLAN 3 tagged interface. [root@HOST-2 root]#vconfig add eth0 4 Configure tagged interface for VLAN 4. [root@HOST-2 root]#ifconfig eth0.4 4.4.4.2 Configure IP address for VLAN 4 tagged interface. Validation PB1 PB1#show running-config !
Validation PB1 PB1#show running-config ! bridge 1 protocol provider-mstp edge ! vlan database vlan 2 type customer bridge 1 name VLAN0002 vlan 2 type customer bridge 1 state enable vlan 3 type customer bridge 1 name VLAN0003 vlan 3 type customer bridge 1 state enable vlan 4 type customer bridge 1 name VLAN0004 vlan 4 type customer bridge 1 state enable vlan 20 type service point-point bridge 1 name VLAN0020 vlan 20 type service point-point bridge 1 state enable
vlan 30 type service point-point bridge 1 name VLAN0030 vlan 30 type service point-point bridge 1 state enable ! cvlan registration table map2 bridge 1 cvlan 2 svlan 20 cvlan 3 svlan 20 ! interface eth1 switchport bridge-group 1 switchport mode provider-network switchport provider-network allowed vlan add 20 switchport provider-network allowed vlan add 30 ! interface eth0 switchport 84 © 2015 IP Infusion Inc. Proprietary MEF UNI Configuration bridge-group 1 switchport mode customer-edge hybrid
switchport mode customer-edge hybrid switchport mode customer-edge hybrid acceptable-frame-type all switchport customer-edge hybrid allowed vlan add 2 egress-tagged enable switchport customer-edge hybrid allowed vlan add 3 egress-tagged enable switchport customer-edge hybrid allowed vlan add 4 egress-tagged enable switchport customer-edge vlan registration map1 ethernet uni bundle ! end PB2 PB1#show running-config ! bridge 1 protocol provider-mstp edge ! vlan database
! vlan database vlan 2 type customer bridge 1 name VLAN0002 vlan 2 type customer bridge 1 state enable vlan 3 type customer bridge 1 name VLAN0003 vlan 3 type customer bridge 1 state enable vlan 4 type customer bridge 1 name VLAN0004 vlan 4 type customer bridge 1 state enable vlan 20 type service point-point bridge 1 name VLAN0020 vlan 20 type service point-point bridge 1 state enable vlan 30 type service point-point bridge 1 name VLAN0030 vlan 30 type service point-point bridge 1 state enable
! cvlan registration table map2 bridge 1 cvlan 2 svlan 20 cvlan 3 svlan 20 ! interface eth1 switchport bridge-group 1 switchport mode provider-network switchport provider-network allowed vlan add 20 switchport provider-network allowed vlan add 30 ! interface eth0 switchport bridge-group 1 switchport mode customer-edge hybrid switchport mode customer-edge hybrid acceptable-frame-type all switchport customer-edge hybrid allowed vlan add 2 egress-tagged enable
switchport customer-edge hybrid allowed vlan add 3 egress-tagged enable switchport customer-edge hybrid allowed vlan add 4 egress-tagged enable switchport customer-edge vlan registration map1 ethernet uni bundle ! © 2015 IP Infusion Inc. Proprietary 85 MEF UNI Configuration end 1. Verify whether frames with C-VLAN-ID which is mapped to S-VLAN passes through the UNI. Ping should go through eth0.2 of HOST-1 and eth0.2 of HOST-2: [root@HOST-1 root]#ping 2.2.2.2
[root@HOST-1 root]#ping 2.2.2.2 PING 2.2.2.2 (2.2.2.2) 56(84) bytes of data. 64 bytes from 2.2.2.2: icmp_seq=1 ttl=64 time=1.41 ms 64 bytes from 2.2.2.2: icmp_seq=2 ttl=64 time=0.776 ms --- 2.2.2.2 ping statistics --- 2 packets transmitted, 2 received, 0% packet loss, time 1005ms rtt min/avg/max/mdev = 0.776/1.096/1.417/0.322 ms Ping should go through eth0.3 of HOST-1 and eth0.3 of HOST-2: [root@HOST-1 root]#ping 3.3.3.2 PING 3.3.3.2 (3.3.3.2) 56(84) bytes of data.
PING 3.3.3.2 (3.3.3.2) 56(84) bytes of data. 64 bytes from 3.3.3.2: icmp_seq=1 ttl=64 time=1.42 ms 64 bytes from 3.3.3.2: icmp_seq=2 ttl=64 time=0.752 ms --- 3.3.3.2 ping statistics --- 2 packets transmitted, 2 received, 0% packet loss, time 1009ms rtt min/avg/max/mdev = 0.752/1.089/1.426/0.337 ms 2. Verify whether frames with C-VLAN-ID which is mapped to S-VLAN passes through the UNI. Ping should not go through eth0.4 of HOST-1 and eth0.4 of HOST-2: [root@HOST-1 root]#ping 4.4.4.2
[root@HOST-1 root]#ping 4.4.4.2 PING 4.4.4.2 (4.4.4.2) 56(84) bytes of data. From 4.4.4.1 icmp_seq=1 Destination Host Unreachable From 4.4.4.1 icmp_seq=2 Destination Host Unreachable From 4.4.4.1 icmp_seq=3 Destination Host Unreachable --- 2.2.2.3 ping statistics --- 4 packets transmitted, 0 received, +3 errors, 100% packet loss, time 3028ms , pipe 3 3. Verify whether CVLAN registration table is not getting modified in contradiction to configuration of UNI to which it is
associated. Modify CVLAN registration table (map1 of PB1) and try mapping CVLAN 4 to SVLAN 30. Map1 should not get modified as it is associated to customer-edge port (eth0 of PB1), which is configured for bundling. PB1#configure terminal Enter configuration commands, one per line. End with CNTL/Z. PB1(config)#cvlan registration table map1 bridge 1 PB1(config-cvlan-registration)#cvlan 4 svlan 30 % CVLAN Map Contradicts the service attribute PB1(config-cvlan-registration)#
PB1(config-cvlan-registration)# 86 © 2015 IP Infusion Inc. Proprietary MEF ENNI Configuration CHAPTER 7 These requirements detail the method of interconnection between two Operator MENs including the protocols that support the exchange of the information needed to support the UNI to UNI Ethernet Services. This interface is called the External Network Network Interface (ENNI). The Protocol Data Units exchanged at the ENNI are called ENNI
Frames. These requirements detail the connectivity attributes that are supported by an Operator MEN. Such attributes can exist between UNIs as described in MEF standards. • OVC - Operator Virtual Connection • OVC End Point - An association of an OVC with a specific External Interface i.e.,UNI/ENNI • ENNI - A reference point representing the boundary between two Operator • MENs that are operated as separate administrative domains Note: MEF ENNI is not supported for ZebIC releases.
Figure 7-1: ENNI Topology Operator Services Attributes The Service Model for the use of the ENNI involves the purchase of services from one or more Operators. These services are the exchange of traffic among ENNIs and UNIs that are supported by each Operator MEN. ENNI Service Attributes The ENNI is the point of demarcation between the responsibilities of two Operators. For each instance of an ENNI, there are two sets of ENNI Service Attributes, one for each Operator.
The End Point Map specifies how each S-Tagged ENNI Frame is associated with an OVC EndPoint within an Operator MEN. © 2015 IP Infusion Inc. Proprietary 87 MEF ENNI Configuration OVC Service Attributes An OVC End Point represents the logical attachment of an OVC to an External Interface. At each External Interface, there must be a way to map each frame to at most one OVC End Point. Figure 7-2: OVC End Points PEB1 (config)#bridge 1 protocol provider-mstp Configure bridge 1 as Provider-MSTP edge
edge (config)#vlan database Enter Vlan database (config-vlan)# vlan 2 type customer bridge 1 Create Customer Vlan 2 state enenable (config-vlan)# vlan 4 type service point- Create Service Vlan 4 point bridge 1 state enable (config-vlan)# ethernet svlan 4 ovc-id OVC1 Associate Svlan4 to oep id & Create OVC1 oep-id oep1 bridge 1 (config-mst)#oep mapping table map1 bridge 1 Create Map1. (config-oep-mapping)# cvlan 2 oep-id oep1 Register the association of mapping between Cvlan & oep id 1
1 (config-oep-mapping)#ex exit (config)#interface eth1 Enter interface mode (config-if)# switchport Enter Switchport Mode (config-if)# bridge-group 1 Enter Bridge-Group 1 (config-if)# switchport mode customer-edge Make the switchport Mode hybrid hybrid (config-if)# switchport mode customer-edge Make the mode customer-edge to accept all the frames hybrid acceptable-frame-type all (config-if)# switchport customer-edge hybrid Make the mode customer-edge to accept all the frames allowed vlan all
allowed vlan all (config-if)#ethernet uni-oep mapping table 1 Associate the map1 to cvlan (config-if)#ex Exit domain configuration mode. (config)#interface eth2 Enter interface mode. (config-if)# switchport Enter switchport mode (config-if)# bridge-group 1 Enter the bridge-group mode 88 © 2015 IP Infusion Inc. Proprietary MEF ENNI Configuration (config-if)# switchport mode provider- Make the mode provider-network network (config-if)# switchport provider-network Allow all the vlans
allowed vlan all PCB1 (config)#bridge 1 protocol provider-mstp Configure bridge 1 as Provider-MSTP edge (config)#vlan database Enter Vlan database (config-vlan)# vlan 4 type service point- Create s Vlan 4 point bridge 1 state enable (config-vlan)# ethernet svlan 4 ovc-id OVC1 Associate Svlan4 to oep id & Create OVC1 oep-id oep2 bridge 1 (config-vlan)# vlan 1023 type service point- Create s Vlan 1023 point bridge 1 state enable (config-mst)#oep mapping table map2 bridge 1 Create Map2.
(config-oep-mapping)# svlan 1023 oep-id oep2 Register the association of mapping between Svlan & oep id 2 (config-oep-mapping)#ex exit (config)#interface eth1 Enter interface mode (config-if)# switchport Enter Switchport Mode (config-if)# bridge-group 1 Enter Bridge-Group 1 (config-if)# switchport mode provider- Make the switchport Mode provider-network network (config-if)# switchport provider-network Make the mode provider-network to accept all the frames allowed vlan all
allowed vlan all (config-if)# ethernet enni-oep mapping table Associate the map2 to svlan map2 (lldp-agent)# exit exit (config-if)#interface eth2 Enter interface mode. (config-if)# switchport Enter switchport mode (config-if)# bridge-group 1 Enter the bridge-group mode (config-if)# switchport mode provider- Make the mode provider-network network (config-if)# switchport provider-network Allow all the svlans allowed vlan all PCB2
allowed vlan all PCB2 (config)#bridge 1 protocol provider-mstp Configure bridge 1 as Provider-MSTP edge (config)#vlan database Enter Vlan database © 2015 IP Infusion Inc. Proprietary 89 MEF ENNI Configuration (config-vlan)# vlan 5 type service point- Create s Vlan 5 point bridge 1 state enable (config-vlan)# ethernet svlan 5 ovc-id OVC2 Associate Svlan4 to oep id & Create OVC1 oep-id oep3 bridge 1 (config-vlan)# vlan 1023 type service point- Create s Vlan 1023 point bridge 1 state enable
point bridge 1 state enable (config-mst)#oep mapping table map3 bridge 1 Create Map3. (config-oep-mapping)# svlan 1023 oep-id oep3 Register the association of mapping between Svlan & oep id 2 (config-oep-mapping)#ex exit (config)#interface eth1 Enter interface mode (config-if)# switchport Enter Switchport Mode (config-if)# bridge-group 1 Enter Bridge-Group 1 (config-if)# switchport mode provider- Make the switchport Mode provider-network network
network (config-if)# switchport provider-network Make the mode provider-network to accept all the frames allowed vlan all (config-if)# ethernet enni-oep mapping table Associate the map3 to svlan map3 (lldp-agent)# exit exit (config-if)#interface eth2 Enter interface mode. (config-if)# switchport Enter switchport mode (config-if)# bridge-group 1 Enter the bridge-group mode (config-if)# switchport mode provider- Make the mode provider-network network
network (config-if)# switchport provider-network Allow all the svlans allowed vlan all PEB2 (config)#bridge 1 protocol provider-mstp Configure bridge 1 as Provider-MSTP edge edge (config)#vlan database Enter Vlan database (config-vlan)# vlan 2 type customer bridge 1 Create Customer Vlan 2 state enable (config-vlan)# vlan 5 type service point- Create Service Vlan 5 point bridge 1 state enable (config-vlan)# ethernet svlan 5 ovc-id OVC2 Associate Svlan 5to oep id & Create OVC1
oep-id oep4 bridge 1 (config-mst)#oep mapping table map4 bridge 1 Create Map4. (config-oep-mapping)# cvlan 2 oep-id oep4 Register the association of mapping between Cvlan & oep id 4 (config-oep-mapping)#ex exit 90 © 2015 IP Infusion Inc. Proprietary MEF ENNI Configuration (config)#interface eth1 Enter interface mode (config-if)# switchport Enter Switchport Mode (config-if)# bridge-group 1 Enter Bridge-Group 1 (config-if)# switchport mode customer-edge Make the switchport Mode hybrid hybrid
hybrid (config-if)# switchport mode customer-edge Make the mode customer-edge to accept all the frames hybrid acceptable-frame-type all (config-if)# switchport customer-edge hybrid Make the mode customer-edge to accept all the frames allowed vlan add 2 egress-tagged enable (config-if)#ex Associate the map1 to cvlan (config)#interface eth2 Exit domain configuration mode. (config-if)# switchport Enter interface mode. (config-if)# bridge-group 1 Enter switchport mode
(config-if)# bridge-group 1 Enter switchport mode (config-if)# switchport mode provider- Enter the bridge-group mode network (config-if)# switchport provider-network Make the mode provider-network allowed vlan all (config-if)#ex Allow all the vlans Validation PEB1 Rtr2#show ethernet enni ovc attributes ovc-id OVC1 bridge 1 % Bridge name - 1 % ----------------- % OVC-ID - OVC1 % OVC Type - point-to-point % --------------------------- % OEP-ID - oep1 % --------------------------- % MAX OEP - 2
% --------------------------- % MAX OEP - 2 % MAX OVC - 1 % CE-VLAN ID Preservation - no % CE-VLAN CoS Preservation - no % S-VLAN ID Preservation - no % S-VLAN CoS Preservation – no PCB1 Rtr3#show ethernet enni ovc attributes ovc-id OVC1 bridge 1 % Bridge name - 1 % ----------------- % OVC-ID - OVC1 % OVC Type - point-to-point % --------------------------- % OEP-ID - oep2 % --------------------------- © 2015 IP Infusion Inc. Proprietary 91 MEF ENNI Configuration % MAX OEP - 2 % MAX OVC - 1
% MAX OEP - 2 % MAX OVC - 1 % CE-VLAN ID Preservation - no % CE-VLAN CoS Preservation - no % S-VLAN ID Preservation - no % S-VLAN CoS Preservation - no PCB2 Rtr4#show ethernet enni ovc attributes ovc-id OVC2 bridge 1 % Bridge name - 1 % ----------------- % OVC-ID - OVC2 % OVC Type - point-to-point % --------------------------- % OEP-ID - oep3 % --------------------------- % MAX OEP - 2 % MAX OVC - 1 % CE-VLAN ID Preservation - no % CE-VLAN CoS Preservation - no % S-VLAN ID Preservation - no
% S-VLAN ID Preservation - no % S-VLAN CoS Preservation - no PEB2 Rtr5#show ethernet enni ovc attributes ovc-id OVC2 bridge 1 % Bridge name - 1 % ----------------- % OVC-ID - OVC2 % OVC Type - point-to-point % --------------------------- % OEP-ID - oep4 % --------------------------- % MAX OEP - 2 % MAX OVC - 1 % CE-VLAN ID Preservation - no % CE-VLAN CoS Preservation - no % S-VLAN ID Preservation - no % S-VLAN CoS Preservation – no Note: You can also use this command:
Note: You can also use this command: show ethernet enni ovc attributes interface eth1 Layer 2 Control Protocol This section provides requirements for the processing of a Subscriber’s Layer 2 Control Protocol (L2CP) Service Frames for the services defined in this document. The requirements are intended to provide guidance for actual 92 © 2015 IP Infusion Inc. Proprietary MEF ENNI Configuration
MEF ENNI Configuration deployments of the Ethernet services, while at the same time allowing for flexibility among the Service Provider offerings. The document address Service Frames carrying a MAC Destination Address (DA) within the range 01-80-C2-00-00-00 through 01-80-C2-00-00-0F and 01-80-C2-00-00-20 through 01-80-C2-00-00-2F. EPL, EP-LAN, and EP-TREE Services EPL, EP-TREE and EP-LAN must process the L2CP frames based on the Destination MAC address as specified in the following table.
following table. Destination MAC Address L2CP action for EPL, EP-Tre, EP-LAN 01-80-C2-00-00-00 MUST Tunnel 01-80-C2-00-00-01 through 01-80-C2-00- MUST NOT Tunnel (additional requirements may apply as per the sub-section 00-0A 8.1.1, 8.1.3, 8.1.5) 01-80-C2-00-00-0B MUST Tunnel 01-80-C2-00-00-0C MUST Tunnel 01-80-C2-00-00-0D MUST Tunnel 01-80-C2-00-00-0E MUST Tunnel 01-80-C2-00-00-00F MUST NOT Tunnel (additional requirements may apply as per the sub-section 8.1.1, 8.1.3, 8.1.5)
8.1.1, 8.1.3, 8.1.5) EVPL, EVP-LAN, and EVP-TREE Services Destination MAC Address L2CP action for EPL, EP-Tre, EP-LAN 01-80-C2-00-00-01 through 01-80-C2-00- MUST NOT Tunnel (additional requirements may apply as per the sub-section 00-0F 8.1.2, 8.1.4, 8.1.6) © 2015 IP Infusion Inc. Proprietary 93 MEF ENNI Configuration L2CP action for Services Following are the typical examples and configuration for the three (tunnel/peer/discard) L2CP actions for MEF services. STP Tunneling Configuration
STP Tunneling Configuration Topology In this example, PB 1 and PB 2 are provider-MSTP edge bridges that communicate directly with each other via eth0. The interfaces on Host 1 and Host 2 (eth1 and eth2) are Layer 2 interfaces. Depending on what restrictions may be set, traffic can be sent from Host 1, passing through PB 1 and PB 2, and received on Host 2. Messages may also be sent in the other direction, depending on the provider and customer restrictions for sending and receiving interfaces.
Figure 7-3: Tunnel Topology PEB1 PEB1#configure terminal Enter configure mode. PEB1(config)#bridge 1 protocol provider-mstp Configure the bridge as a provider-MSTP edge bridge. edge PEB1(config)#vlan database Enter VLAN configure mode. PEB1(config-vlan)# vlan 2 type customer Configure VLAN 2 as customer vlan bridge 1 state enable PEB1(config-vlan)# vlan 3 type customer Configure VLAN 3 as customer vlan bridge 1 state enable
bridge 1 state enable PEB1(config-vlan)# vlan 4 type customer Configure VLAN 4 as customer vlan bridge 1 state enable PEB1(config-vlan)# vlan 5 type customer Configure VLAN 5 as customer vlan bridge 1 state enable PEB1(config-vlan)# vlan 6 type service Configure VLAN 6 as service VLAN (point-to-point EVC ) point-point bridge 1 state enable and associate it with bridge. PEB1(config-vlan)# exit Exit from vlan database
PEB1(config-vlan)# exit Exit from vlan database PEB1(config)#cvlan registration table map1 Create CVLAN registration table, map1, and associate it with bridge 1 bridge 1. PEB1(config-cvlan-registration)#cvlan 1 Map CVLAN 1 (default VLAN) to SVLAN 6. svlan 94 © 2015 IP Infusion Inc. Proprietary MEF ENNI Configuration PEB1(config-cvlan-registration)#cvlan 2 Map CVLAN 2 to SVLAN 6. svlan PEB1(config-cvlan-registration)#cvlan 3 Map CVLAN 3 to SVLAN 6. svlan
svlan PEB1(config-cvlan-registration)#cvlan 4 Map CVLAN 4 to SVLAN 6. svlan PEB1(config-cvlan-registration)#cvlan 5 Map CVLAN 5 to SVLAN 6. svlan PEB1(config)#interface eth1 Enter interface mode. PEB1(config-if)#switchport Configure the interface as a Layer 2 interface PEB1(config-if)#bridge-group 1 Associate it with bridge 1. PEB1(config-if)#switchport mode customer- Configure the interface as customer-edge port in hybrid mode. edge hybrid
edge hybrid PEB1(config-if)# switchport customer-edge Configure the interface as customer-edge port in hybrid mode hybrid allowed vlan all and allow all the vlans PEB1(config-if)#switchport customer-edge Associate map1 (the CVLAN registration table) with the vlan registration map1 interface. PEB1(config-if)# ethernet uni all-to-one Configure UNI as all to one bundling. PEB1(config-if)#exit Exit interface mode. PEB1(config)#interface eth2 Enter interface mode.
PEB1(config)#interface eth2 Enter interface mode. PEB1(config-if)#switchport Configure the interface as a Layer 2 interface. PEB1(config-if)#bridge-group 1 Associate the interface with bridge 1. PEB1(config-if)#switchport mode provider- Configure the interface as a provider-network port. network PEB1(config-if)#switchport provider-network Configure the provider-network port to allow all allowed vlan all PEB1(config-if)#exit Exit interface mode. PEB1(config)#vlan database Enter vlan database.
PEB1(config)#vlan database Enter vlan database. PEB1(config-vlan)# ethernet svlan 6 evc-id Assigning the name to svlan or EVC . evc1 bridge 1 PEB1(config-vlan)# exit Exit interface mode. PEB2 PEB2#configure terminal Enter configure mode. PEB2(config)#bridge 1 protocol provider-mstp Configure the bridge as a provider-MSTP edge bridge. edge PEB2(config)#vlan database Enter VLAN configure mode. © 2015 IP Infusion Inc. Proprietary 95 MEF ENNI Configuration
MEF ENNI Configuration PEB2(config-vlan)# vlan 2 type customer Configure VLAN 2 as customer vlan bridge 1 state enable PEB2(config-vlan)# vlan 3 type customer Configure VLAN 3 as customer vlan bridge 1 state enable . PEB2(config-vlan)# vlan 4 type customer Configure VLAN 4 as customer vlan bridge 1 state enable PEB2(config-vlan)# vlan 5 type customer Configure VLAN 5 as customer vlan bridge 1 state enable
bridge 1 state enable PEB2(config-vlan)# vlan 6 type service Configure VLAN 6 as service VLAN (point-to-point EVC ) point-point bridge 1 state enable and associate it with bridge. PEB2(config-vlan)# exit Exit from vlan database PEB2(config)#cvlan registration table map1 Create CVLAN registration table, map1, and associate it with bridge 1 bridge 1. PEB2(config-cvlan-registration)#cvlan 1 Map CVLAN 1 (default VLAN) to SVLAN 6. svlan PEB2(config-cvlan-registration)#cvlan 2 Map CVLAN 2 to SVLAN 6.
svlan PEB2(config-cvlan-registration)#cvlan 3 Map CVLAN 3 to SVLAN 6. svlan PEB2(config-cvlan-registration)#cvlan 4 Map CVLAN 4 to SVLAN 6. svlan PEB2(config-cvlan-registration)#cvlan 5 Map CVLAN 5 to SVLAN 6. svlan PEB2(config)#interface eth1 Enter interface mode. PEB2(config-if)#switchport Configure the interface as a Layer 2 interface PEB2(config-if)#bridge-group 1 Associate it with bridge 1.
PEB2(config-if)#switchport mode customer- Configure the interface as customer-edge port in hybrid mode. edge hybrid PEB2(config-if)# switchport customer-edge Configure the interface as customer-edge port in hybrid mode hybrid allowed vlan all and allow all the vlans PEB2(config-if)#switchport customer-edge Associate map1 (the CVLAN registration table) with the vlan registration map1 interface. PEB2(config-if)# ethernet uni all-to-one Configure UNI as all to one bundling.
PEB2(config-if)#exit Exit interface mode. PEB2(config)#interface eth2 Enter interface mode. PEB2(config-if)#switchport Configure the interface as a Layer 2 interface. PEB2(config-if)#bridge-group 1 Associate the interface with bridge 1. PEB2(config-if)#switchport mode provider- Configure the interface as a provider-network port. network PEB2(config-if)#switchport provider-network Configure the provider-network port to allow all allowed vlan all 96 © 2015 IP Infusion Inc. Proprietary
96 © 2015 IP Infusion Inc. Proprietary MEF ENNI Configuration PEB2(config-if)#exit Exit interface mode. PEB2(config)#vlan database Enter vlan database. PEB2(config-vlan)# ethernet svlan 6 evc-id Assigning the name to svlan or EVC . evc1 bridge 1 PEB2(config-vlan)# exit Exit interface mode. HOST 1 HOST-1#configure terminal Enter configure mode. HOST-1#bridge 1 protocol ieee vlan-bridge Configure bridge 1 ieee vlan aware bridge. HOST-1(config)#interface eth1 Enter interface mode.
HOST-1(config-if)#switchport Configure the interface as a Layer 2 interface. HOST-1(config-if)#bridge-group 1 Associate the interface with bridge 1. HOST-1(config-if)#exit Exit interface mode. HOST-2 HOST-2#configure terminal Enter configure mode. HOST-2#bridge 1 protocol ieee vlan-bridge Configure bridge 1 ieee vlan aware bridge. HOST-2(config)#interface eth1 Enter interface mode. HOST-2(config-if)#switchport Configure the interface as a Layer 2 interface.
HOST-2(config-if)#bridge-group 1 Associate the interface with bridge 1. HOST-2(config-if)#exit Exit interface mode. Validation PEB1#show cvlan registration table bridge 1 Bridge Table Name Port List ====== ========== ========= 1 map1 eth1 CVLAN ID SVLAN ID ======== ======== 2 6 1 6 4 6 3 6 5 6 PEB2#show cvlan registration table bridge 1 Bridge Table Name Port List ====== ========== ========= 1 map1 eth1 © 2015 IP Infusion Inc. Proprietary 97 MEF ENNI Configuration CVLAN ID SVLAN ID
MEF ENNI Configuration CVLAN ID SVLAN ID ======== ======== 2 6 1 6 4 6 3 6 5 6 Show Run for PEB1 PEB1#show running-config ! bridge 1 protocol provider-mstp edge spanning-tree mode provider-rstp ce-vlan preserve-cos 6 bridge 1 ce-vlan preserve-vlanid 6 bridge 1 ethernet cfm enable ! vlan database vlan 2 type customer bridge 1 name VLAN0002 vlan 2 type customer bridge 1 state enable vlan 3 type customer bridge 1 name VLAN0003 vlan 3 type customer bridge 1 state enable
vlan 3 type customer bridge 1 state enable vlan 4 type customer bridge 1 name VLAN0004 vlan 4 type customer bridge 1 state enable vlan 5 type customer bridge 1 name VLAN0005 vlan 5 type customer bridge 1 state enable vlan 6 type service point-point bridge 1 name VLAN0006 vlan 6 type service point-point bridge 1 state enable ethernet svlan 6 evc-id evc1 bridge 1 ! spanning-tree mst configuration ! cvlan registration table map1 bridge 1 cvlan 2 svlan 6 cvlan 1 svlan 6 cvlan 4 svlan 6
cvlan 2 svlan 6 cvlan 1 svlan 6 cvlan 4 svlan 6 cvlan 3 svlan 6 cvlan 5 svlan 6 ! interface eth1 switchport bridge-group 1 switchport mode customer-edge hybrid switchport mode customer-edge hybrid acceptable-frame-type all switchport customer-edge hybrid allowed vlan all switchport customer-edge vlan registration map1 l2protocol stp tunnel vlan 6 l2protocol gmrp tunnel vlan 6 l2protocol mmrp tunnel vlan 6 98 © 2015 IP Infusion Inc. Proprietary MEF ENNI Configuration
MEF ENNI Configuration l2protocol gvrp tunnel vlan 6 l2protocol mvrp tunnel vlan 6 l2protocol lacp peer l2protocol dot1x peer l2protocol efm peer l2protocol elmi peer l2protocol lldp peer l2protocol ptp peer l2protocol synce peer l2protocol pause discard ethernet uni all-to-one ethernet uni max-evc 1 no shutdown no snmp trap link-status set lldp locally-assigned p8p1 lldp port-id-tlv local no dcbx enable customer-spanning-tree provider-edge svlan 6 path-cost 128 ! interface eth2 switchport
! interface eth2 switchport bridge-group 1 switchport mode provider-network switchport provider-network allowed vlan all switchport provider-network allowed vlan remove 2 switchport provider-network allowed vlan remove 4 switchport provider-network allowed vlan remove 3 switchport provider-network allowed vlan remove 5 no shutdown no snmp trap link-status set lldp locally-assigned p9p1 lldp port-id-tlv local no dcbx enable ! Show Run for PEB2 PEB2#show running-config !
! Show Run for PEB2 PEB2#show running-config ! bridge 1 protocol provider-mstp edge spanning-tree mode provider-rstp ce-vlan preserve-cos 6 bridge 1 ce-vlan preserve-vlanid 6 bridge 1 ethernet cfm enable ! vlan database vlan 2 type customer bridge 1 name VLAN0002 vlan 2 type customer bridge 1 state enable vlan 3 type customer bridge 1 name VLAN0003 vlan 3 type customer bridge 1 state enable vlan 4 type customer bridge 1 name VLAN0004 © 2015 IP Infusion Inc. Proprietary 99 MEF ENNI Configuration
MEF ENNI Configuration vlan 4 type customer bridge 1 state enable vlan 5 type customer bridge 1 name VLAN0005 vlan 5 type customer bridge 1 state enable vlan 6 type service point-point bridge 1 name VLAN0006 vlan 6 type service point-point bridge 1 state enable ethernet svlan 6 evc-id evc1 bridge 1 ! spanning-tree mst configuration ! cvlan registration table map1 bridge 1 cvlan 2 svlan 6 cvlan 1 svlan 6 cvlan 4 svlan 6 cvlan 3 svlan 6 cvlan 5 svlan 6 ! interface eth1 switchport bridge-group 1
! interface eth1 switchport bridge-group 1 switchport mode customer-edge hybrid switchport mode customer-edge hybrid acceptable-frame-type all switchport customer-edge hybrid allowed vlan all switchport customer-edge vlan registration map1 l2protocol stp tunnel vlan 6 l2protocol gmrp tunnel vlan 6 l2protocol mmrp tunnel vlan 6 l2protocol gvrp tunnel vlan 6 l2protocol mvrp tunnel vlan 6 l2protocol lacp peer l2protocol dot1x peer l2protocol efm peer l2protocol elmi peer l2protocol lldp peer
l2protocol elmi peer l2protocol lldp peer l2protocol ptp peer l2protocol synce peer l2protocol pause discard ethernet uni all-to-one ethernet uni max-evc 1 no shutdown no snmp trap link-status set lldp locally-assigned p8p1 lldp port-id-tlv local no dcbx enable customer-spanning-tree provider-edge svlan 6 path-cost 128 ! interface eth2 switchport bridge-group 1 switchport mode provider-network switchport provider-network allowed vlan all 100 © 2015 IP Infusion Inc. Proprietary
100 © 2015 IP Infusion Inc. Proprietary MEF ENNI Configuration switchport provider-network allowed vlan remove 2 switchport provider-network allowed vlan remove 4 switchport provider-network allowed vlan remove 3 switchport provider-network allowed vlan remove 5 no shutdown no snmp trap link-status set lldp locally-assigned p9p1 lldp port-id-tlv local no dcbx enable ! STP Tunneling Topology PEB1 PEB1#configure terminal Enter configure mode.
PEB1#configure terminal Enter configure mode. PEB1(config)#bridge 1 protocol provider-mstp Configure the bridge as a provider-MSTP edge bridge. edge PEB1(config)#vlan database Enter VLAN configure mode. PEB1(config-vlan)# vlan 2 type customer Configure VLAN 2 as customer vlan bridge 1 state enable PEB1(config-vlan)# vlan 3 type customer Configure VLAN 3 as customer vlan bridge 1 state enable . PEB1(config-vlan)# vlan 4 type customer Configure VLAN 4 as customer vlan bridge 1 state enable
bridge 1 state enable PEB1(config-vlan)# vlan 5 type customer Configure VLAN 5 as customer vlan bridge 1 state enable PEB1(config-vlan)# vlan 6 type service Configure VLAN 6 as service VLAN (point-to-point EVC ) point-point bridge 1 state enable and associate it with bridge. PEB1(config-vlan)# vlan 7 type service Configure VLAN 7 as service VLAN (point-to-point EVC ) point-point bridge 1 state enable and associate it with bridge. © 2015 IP Infusion Inc. Proprietary 101 MEF ENNI Configuration
MEF ENNI Configuration PEB1(config-vlan)# exit Exit from vlan database PEB1(config)#cvlan registration table map1 Create CVLAN registration table, map1, and associate it with bridge 1 bridge 1. PEB1(config-cvlan-registration)#cvlan 1 Map CVLAN 1 (default VLAN) to SVLAN 6. svlan PEB1(config-cvlan-registration)#cvlan 2 Map CVLAN 2 to SVLAN 6. svlan PEB1(config-cvlan-registration)#cvlan 3 Map CVLAN 3 to SVLAN 6. svlan PEB1(config-cvlan-registration)#cvlan 4 Map CVLAN 4 to SVLAN 7. svlan
svlan PEB1(config-cvlan-registration)#cvlan 5 Map CVLAN 5 to SVLAN 7. svlan PEB1(config)#interface eth1 Enter interface mode. PEB1(config-if)#switchport Configure the interface as a Layer 2 interface PEB1(config-if)#bridge-group 1 Associate it with bridge 1. PEB1(config-if)#switchport mode customer- Configure the interface as customer-edge port in hybrid mode. edge hybrid PEB1(config-if)# switchport customer-edge Configure the interface as customer-edge port in hybrid mode
hybrid allowed vlan all and allow all the vlans PEB1(config-if)#switchport customer-edge Associate map1 (the CVLAN registration table) with the vlan registration map1 interface. PEB1(config-if)#exit Exit interface mode. PEB1(config)#interface eth2 Enter interface mode. PEB1(config-if)#switchport Configure the interface as a Layer 2 interface. PEB1(config-if)#bridge-group 1 Associate the interface with bridge 1.
PEB1(config-if)#switchport mode provider- Configure the interface as a provider-network port. network PEB1(config-if)#switchport provider-network Configure the provider-network port to allow all allowed vlan all PEB1(config-if)#exit Exit interface mode. PEB1(config)#vlan database Enter vlan database. PEB1(config-vlan)# ethernet svlan 6 evc-id Assigning the name to svlan or EVC. evc1 bridge 1 PEB1(config-vlan)# ethernet svlan 7 evc-id Assigning the name to svlan or EVC. evc1 bridge 1
evc1 bridge 1 PEB1(config-vlan)# exit Exit interface mode. 102 © 2015 IP Infusion Inc. Proprietary MEF ENNI Configuration Host Machines (CB1) HOST-1 HOST-1#configure terminal Enter configure mode. HOST-1#bridge 1 protocol ieee vlan-bridge Configure bridge 1 ieee vlan aware bridge. HOST-1(config)#interface eth2 Enter interface mode. HOST-1(config-if)#switchport Configure the interface as a Layer 2 interface. HOST-1(config-if)#bridge-group 1 Associate the interface with bridge 1.
HOST-1(config-if)#exit Exit interface mode. Validation PEB1#show cvlan registration table bridge 1 Bridge Table Name Port List ====== ========== ========= 1 map1 eth1 CVLAN ID SVLAN ID ======== ======== 2 6 1 6 4 7 3 6 5 7 Show Run for PEB1 PEB1#show running-config ! bridge 1 protocol provider-mstp edge spanning-tree mode provider-rstp ethernet cfm enable ! vlan database vlan 2 type customer bridge 1 name VLAN0002 vlan 2 type customer bridge 1 state enable
vlan 2 type customer bridge 1 state enable vlan 3 type customer bridge 1 name VLAN0003 vlan 3 type customer bridge 1 state enable vlan 4 type customer bridge 1 name VLAN0004 vlan 4 type customer bridge 1 state enable vlan 5 type customer bridge 1 name VLAN0005 vlan 5 type customer bridge 1 state enable vlan 6 type service point-point bridge 1 name VLAN0006 vlan 6 type service point-point bridge 1 state enable ethernet svlan 6 evc-id evc1 bridge 1
ethernet svlan 6 evc-id evc1 bridge 1 vlan 7 type service point-point bridge 1 name VLAN0007 vlan 7 type service point-point bridge 1 state enable © 2015 IP Infusion Inc. Proprietary 103 MEF ENNI Configuration ! spanning-tree mst configuration ! cvlan registration table map1 bridge 1 cvlan 2 svlan 6 cvlan 1 svlan 6 cvlan 4 svlan 7 cvlan 3 svlan 6 cvlan 5 svlan 7 ! interface eth1 switchport bridge-group 1 switchport mode customer-edge hybrid
switchport mode customer-edge hybrid switchport mode customer-edge hybrid acceptable-frame-type all switchport customer-edge hybrid allowed vlan all switchport customer-edge vlan registration map1 l2protocol stp peer l2protocol gmrp peer l2protocol mmrp peer l2protocol gvrp peer l2protocol mvrp peer l2protocol lacp peer l2protocol dot1x peer l2protocol efm peer l2protocol elmi peer l2protocol lldp discard l2protocol ptp peer l2protocol synce peer l2protocol pause discard no shutdown !
l2protocol pause discard no shutdown ! interface eth2 switchport bridge-group 1 switchport mode provider-network switchport provider-network allowed vlan all switchport provider-network allowed vlan remove 2 switchport provider-network allowed vlan remove 4 switchport provider-network allowed vlan remove 3 switchport provider-network allowed vlan remove 5 no shutdown lldp-agent no dcbx enable Spanning-tree status of eth2 of CB1: % 1: portfast bpdu-filter disabled
% 1: portfast bpdu-filter disabled % 1: portfast bpdu-guard disabled % 1: portfast errdisable timeout disabled % 1: portfast errdisable timeout interval 300 sec 104 © 2015 IP Infusion Inc. Proprietary MEF ENNI Configuration % eth2: Port Number 4 - Ifindex 4 - Port Id 8004 - Role Designated - State Forwarding % eth2: Designated External Path Cost 0 -Internal Path Cost 0 % eth2: Configured Path Cost 20000 - Add type Explicit ref count 1 % eth2: Designated Port Id 8004 - CIST Priority 128 -
% eth2: CIST Root 800008002725e07a % eth2: Regional Root 800008002725e07a % eth2: Designated Bridge 800008002725e07a % eth2: Message Age 0 - Max Age 20 % eth2: CIST Hello Time 2 - Forward Delay 15 % eth2: CIST Forward Timer 0 - Msg Age Timer 0 - Hello Timer 1 - topo change timer 0 % eth2: forward-transitions 1 % eth2: Version Multiple Spanning Tree Protocol - Received None - Send MSTP % eth2: No portfast configured - Current portfast off % eth2: bpdu-guard default - Current bpdu-guard off
% eth2: bpdu-filter default - Current bpdu-filter off % eth2: no root guard configured - Current root guard off % eth2: Configured Link Type point-to-point - Current point-to-point % eth2: No auto-edge configured - Current port Auto Edge off Spanning-tree status of eth1 of PEB1: % % eth1: Port Number 4 - Ifindex 4 - Port Id 2fff - Role Rootport - State Forwarding % eth1: Designated Path Cost 0 % eth1: Configured Path Cost 20000 - Add type Explicit ref count 1
% eth1: Designated Port Id 8004 - Priority 32 - % eth1: Root 800008002725e07a % eth1: Designated Bridge ffff080027731b56 % eth1: Message Age 0 - Max Age 20 % eth1: Hello Time 2 - Forward Delay 15 % eth1: Forward Timer 0 - Msg Age Timer 3 - Hello Timer 2 - topo change timer 0 % eth1: forward-transitions 1 % eth1: Version Rapid Spanning Tree Protocol - Received MSTP - Send RSTP % eth1: No portfast configured - Current portfast off % eth1: bpdu-guard default - Current bpdu-guard off
% eth1: bpdu-filter default - Current bpdu-filter off % eth1: no root guard configured - Current root guard off % eth1: Configured Link Type point-to-point - Current point-to-point % eth1: No auto-edge configured - Current port Auto Edge off © 2015 IP Infusion Inc. Proprietary 105 MEF ENNI Configuration STP Discarding Topology PEB1 PEB1#configure terminal Enter configure mode. PEB1(config)#bridge 1 protocol provider-mstp Configure the bridge as a provider-MSTP edge bridge. edge
edge PEB1(config)#vlan database Enter VLAN configure mode. PEB1(config-vlan)# vlan 2 type customer Configure VLAN 2 as customer vlan bridge 1 state enable PEB1(config-vlan)# vlan 3 type customer Configure VLAN 3 as customer vlan bridge 1 state enable . PEB1(config-vlan)# vlan 4 type customer Configure VLAN 4 as customer vlan bridge 1 state enable PEB1(config-vlan)# vlan 5 type customer Configure VLAN 5 as customer vlan bridge 1 state enable
bridge 1 state enable PEB1(config-vlan)# vlan 6 type service Configure VLAN 6 as service VLAN (point-to-point EVC ) point-point bridge 1 state enable and associate it with bridge. PEB1(config-vlan)# vlan 7 type service Configure VLAN 7 as service VLAN (point-to-point EVC ) point-point bridge 1 state enable and associate it with bridge. PEB1(config-vlan)# exit Exit from vlan database PEB1(config)#cvlan registration table map1 Create CVLAN registration table, map1, and associate it with
bridge 1 bridge 1. PEB1(config-cvlan-registration)#cvlan 1 Map CVLAN 1 (default VLAN) to SVLAN 6. svlan PEB1(config-cvlan-registration)#cvlan 2 Map CVLAN 2 to SVLAN 6. svlan PEB1(config-cvlan-registration)#cvlan 3 Map CVLAN 3 to SVLAN 6. svlan PEB1(config-cvlan-registration)#cvlan 4 Map CVLAN 4 to SVLAN 7. svlan 106 © 2015 IP Infusion Inc. Proprietary MEF ENNI Configuration PEB1(config-cvlan-registration)#cvlan 5 Map CVLAN 5 to SVLAN 7. svlan PEB1(config)#interface eth1 Enter interface mode.
PEB1(config)#interface eth1 Enter interface mode. PEB1(config-if)#switchport Configure the interface as a Layer 2 interface PEB1(config-if)#bridge-group 1 Associate it with bridge 1. PEB1(config-if)#switchport mode customer- Configure the interface as customer-edge port in hybrid mode. edge hybrid PEB1(config-if)# switchport customer-edge Configure the interface as customer-edge port in hybrid mode hybrid allowed vlan all and allow all the vlans
hybrid allowed vlan all and allow all the vlans PEB1(config-if)#switchport customer-edge Associate map1 (the CVLAN registration table) with the vlan registration map1 interface. PEB1(config-if)#l2protocol stp discard Discard STP service frames. PEB1(config-if)#exit Exit interface mode. PEB1(config)#interface eth2 Enter interface mode. PEB1(config-if)#switchport Configure the interface as a Layer 2 interface. PEB1(config-if)#bridge-group 1 Associate the interface with bridge 1.
PEB1(config-if)#switchport mode provider- Configure the interface as a provider-network port. network PEB1(config-if)#switchport provider-network Configure the provider-network port to allow all allowed vlan all PEB1(config-if)#exit Exit interface mode. PEB1(config)#vlan database Enter vlan database. PEB1(config-vlan)# ethernet svlan 6 evc-id Assigning the name to svlan or EVC. evc1 bridge 1 PEB1(config-vlan)# ethernet svlan 7 evc-id Assigning the name to svlan or EVC. evc1 bridge 1
evc1 bridge 1 PEB1(config-vlan)# exit Exit interface mode. Configurations for HOST Machines (CB1) HOST-1 HOST-1#configure terminal Enter configure mode. HOST-1#bridge 1 protocol ieee vlan-bridge Configure bridge 1 ieee vlan aware bridge. HOST-1(config)#interface eth2 Enter interface mode. HOST-1(config-if)#switchport Configure the interface as a Layer 2 interface. © 2015 IP Infusion Inc. Proprietary 107 MEF ENNI Configuration
MEF ENNI Configuration HOST-1(config-if)#bridge-group 1 Associate the interface with bridge 1. HOST-1(config-if)#exit Exit interface mode. Validation PEB1#show cvlan registration table bridge 1 Bridge Table Name Port List ====== ========== ========= 1 map1 eth1 CVLAN ID SVLAN ID ======== ======== 2 6 1 6 4 7 3 6 5 7 Show Run for PEB1 PEB1#show running-config ! bridge 1 protocol provider-mstp edge spanning-tree mode provider-rstp ethernet cfm enable ! vlan database
ethernet cfm enable ! vlan database vlan 2 type customer bridge 1 name VLAN0002 vlan 2 type customer bridge 1 state enable vlan 3 type customer bridge 1 name VLAN0003 vlan 3 type customer bridge 1 state enable vlan 4 type customer bridge 1 name VLAN0004 vlan 4 type customer bridge 1 state enable vlan 5 type customer bridge 1 name VLAN0005 vlan 5 type customer bridge 1 state enable vlan 6 type service point-point bridge 1 name VLAN0006 vlan 6 type service point-point bridge 1 state enable
ethernet svlan 6 evc-id evc1 bridge 1 vlan 7 type service point-point bridge 1 name VLAN0007 vlan 7 type service point-point bridge 1 state enable ! spanning-tree mst configuration ! cvlan registration table map1 bridge 1 cvlan 2 svlan 6 cvlan 1 svlan 6 cvlan 4 svlan 7 cvlan 3 svlan 6 cvlan 5 svlan 7 ! 108 © 2015 IP Infusion Inc. Proprietary MEF ENNI Configuration interface eth1 switchport bridge-group 1 switchport mode customer-edge hybrid
switchport mode customer-edge hybrid switchport mode customer-edge hybrid acceptable-frame-type all switchport customer-edge hybrid allowed vlan all switchport customer-edge vlan registration map1 l2protocol stp discard l2protocol gmrp peer l2protocol mmrp peer l2protocol gvrp peer l2protocol mvrp peer l2protocol lacp peer l2protocol dot1x peer l2protocol efm peer l2protocol elmi peer l2protocol lldp discard l2protocol ptp peer l2protocol synce peer l2protocol pause discard no shutdown !
l2protocol pause discard no shutdown ! interface eth2 switchport bridge-group 1 switchport mode provider-network switchport provider-network allowed vlan all switchport provider-network allowed vlan remove 2 switchport provider-network allowed vlan remove 4 switchport provider-network allowed vlan remove 3 switchport provider-network allowed vlan remove 5 no shutdown lldp-agent no dcbx enable exit ! Spanning-tree status of eth2 of CB1: % 1: portfast bpdu-filter disabled
% 1: portfast bpdu-filter disabled % 1: portfast bpdu-guard disabled % 1: portfast errdisable timeout disabled % 1: portfast errdisable timeout interval 300 sec % eth2: Port Number 4 - Ifindex 4 - Port Id 8004 - Role Designated - State Forwarding % eth2: Designated External Path Cost 0 -Internal Path Cost 0 % eth2: Configured Path Cost 20000 - Add type Explicit ref count 1 % eth2: Designated Port Id 8004 - CIST Priority 128 - % eth2: CIST Root 800008002725e07a
% eth2: CIST Root 800008002725e07a % eth2: Regional Root 800008002725e07a % eth2: Designated Bridge 800008002725e07a % eth2: Message Age 0 - Max Age 20 © 2015 IP Infusion Inc. Proprietary 109 MEF ENNI Configuration % eth2: CIST Hello Time 2 - Forward Delay 15 % eth2: CIST Forward Timer 0 - Msg Age Timer 0 - Hello Timer 0 - topo change timer 0 % eth2: forward-transitions 1 % eth2: Version Multiple Spanning Tree Protocol - Received None - Send MSTP
% eth2: No portfast configured - Current portfast off % eth2: bpdu-guard default - Current bpdu-guard off % eth2: bpdu-filter default - Current bpdu-filter off % eth2: no root guard configured - Current root guard off % eth2: Configured Link Type point-to-point - Current point-to-point % eth2: No auto-edge configured - Current port Auto Edge off Spanning-tree status of eth1 of PEB1 : % eth1: Port Number 4 - Ifindex 4 - Port Id 2fff - Role Disabled - State Forwarding
% eth1: Designated Path Cost 0 % eth1: Configured Path Cost 20000 - Add type Explicit ref count 1 % eth1: Designated Port Id 2fff - Priority 32 - % eth1: Message Age 0 - Max Age 20 % eth1: Hello Time 2 - Forward Delay 15 % eth1: Forward Timer 0 - Msg Age Timer 0 - Hello Timer 0 - topo change timer 0 % eth1: forward-transitions 2 % eth1: Version Rapid Spanning Tree Protocol - Received None - Send RSTP % eth1: No portfast configured - Current portfast off
% eth1: bpdu-guard default - Current bpdu-guard off % eth1: bpdu-filter default - Current bpdu-filter off % eth1: no root guard configured - Current root guard off % eth1: Configured Link Type point-to-point - Current point-to-point % eth1: No auto-edge configured - Current port Auto Edge off Note: Configuration for other protocols is same as the above example. It should be configured for either of the following tunnel, peer, or discard as per MEF 6.1.1 110 © 2015 IP Infusion Inc. Proprietary
110 © 2015 IP Infusion Inc. Proprietary User Network Interface Configuration CHAPTER 8 This chapter contains a complete sample User Network Interface (UNI) configuration. Topology Figure 8-1 displays what you want to accomplish after you are finished with the sample configuration. Figure 8-1: Simple UNI Configuration CFM Convergence on UNI-MEG The following steps describe how to configure Connectivity Fault Management (CFM) convergence on a UNI-MEG (Maintenance Entity Group). CE
(Maintenance Entity Group). CE Do the following to configure a customer edge (CE): #configure terminal Enter configure mode. (config)#bridge 1 protocol rstp vlan-bridge Configure bridge 1 as RSTP-VLAN aware. (config)#interface eth1 Enter interface mode. (config-if)#switchport Configure eth1 as a layer 2 port. (config-if)#bridge-group 1 Associate bridge to an interface. (config-if)#switchport mode trunk Configure port as a trunk.
(config-if)#switchport trunk allowed vlan all Allow all the VLANs on the Eth1 interface. (config-if)#exit Exit the eth1 interface mode. (config)#ethernet cfm domain-name type Enter CFM mode and create a domain at level 0 on bridge character-string name test level 0 mip- 1. creation default bridge 1 (config-ether-cfm)#service ma-type integer Create a service ID. ma-name 13 (config-ether-cfm)#mep crosscheck mpid 11 Configure crosscheck between host MEP and the remote MEP.
MEP. (config-ether-cfm)#exit Exit domain configuration mode. (config)#interface eth1 Enter interface mode. © 2015 IP Infusion Inc. Proprietary 111 User Network Interface Configuration (config-if)#ethernet cfm mep down mpid 10 Enter CFM MEP mode and configure the interface as a active true domain abc uni-mep bridge 1 maintenance end point (MEP). (config-if-eth-cfm-mep)#cc multicast state Enable multicast continuity checking (CC) on the interface. enable
enable (config-if-eth-cfm-mep)#exit Exit CFM MEP mode. (config)#exit Exit interface mode. PEB Do the following to configure a provider edge bridge (PEB): #configure terminal Enter configure mode. (config)#bridge 1 protocol provider-rstp edge Configure bridge 1 as RSTP-VLAN aware. (config)#cvlan registration table map1 bridge Configure the CVLAN registration table map1 on bridge 1. 1 (config-cvlan-registration)#cvlan 1 svlan 1 Map CVLAN 1 to SVLAN 1.
(config-cvlan-registration)#exit Exit the Configure CVLAN registration mode. (config)#interface eth1 Go to Interface mode. (config-if)#switchport Configure eth1 as a layer2 port. (config-if)#bridge-group 1 Associates the eth1 interface with bridge 1. (config-if)#switchport mode customer-edge Configure port as a customer-edge hybrid. hybrid (config-if)#switchport customer-edge hybrid Allow all VLANs on the eth1 interface. allowed vlan all
allowed vlan all (config-if)#switchport customer-edge vlan Associate map1 with the interface. registration map1 (config-if)#exit Exit interface mode. (config)#ethernet cfm domain-name type Enter CFM mode and create a domain at level 0 on bridge character-string name abc level 0 mip- 1. creation default bridge 1 (config-ether-cfm)#service ma-type integer Create a service ID. ma-name 13 (config-ether-cfm)#mep crosscheck mpid 10 Configure crosscheck between host MEP and the remote MEP.
MEP. (config-ether-cfm)#exit Exit the ether-cfm Config mode. (config)#interface eth1 Enter interface mode. (config)#PEB1(config-if)#ethernet cfm mep Enter CFM MEP mode and configure the interface as a down mpid 11 active true domain abc uni-mep maintenance end point (MEP). bridge 1 (config-if-eth-cfm-mep)#cc multicast state Enable multicast continuity checking (CC) on the interface. enable (config-if-eth-cfm-mep)#exit Exit CFM MEP mode. (config-if)#exit Exit interface mode.
(config-if)#exit Exit interface mode. 112 © 2015 IP Infusion Inc. Proprietary User Network Interface Configuration Validation Enter the commands listed in the sections below to confirm the configurations. #show ethernet cfm maintenance-points remote domain abc bridge 1 MPID LEVEL VLAN ACTIVE Remote Mac RDI FLAGS -------------------------------------------------------------------------------- 11 0 0 Yes 0007.e9a5.61c1 False Configured Provider Edge Bridge
Provider Edge Bridge Do the following to configure a Provider Edge Bridge (PEB): #configure terminal Enter configure mode. (config)#bridge 1 protocol provider-mstp edge Configure bridge 1 as a provider-MSTP edge. (config)#vlan database Enter the VLAN configure mode. (config-vlan)#vlan 2 type customer bridge 1 Configure customer VLAN 2 and associate with bridge 1. state enable (config-vlan)#vlan 4 type customer bridge 1 Configure customer VLAN 4 and associate with bridge 1. state enable
state enable (config-vlan)#vlan 3 type service point-point Configure service VLAN 3 and associate with bridge 1. bridge 1 state enable (config-vlan)#vlan 5 type service multipoint- Configure service VLAN 5 and associate with bridge 1 multipoint bridge 1 state enable (config-vlan)#exit Exit the VLAN configure mode. (config)#cvlan registration table map1 bridge Configure CVLAN registration table map1 on bridge 1. 1 (config-cvlan-registration)#cvlan 2 svlan 4 Map CVLAN 2 to SVLAN 4.
(config-cvlan-registration)#cvlan 3 svlan 5 Map CVLAN 3 to SVLAN 5. (config-cvlan-registration)#exit Exit configure CVLAN registration mode. (config)#interface eth1 Enter interface mode. (config-if)#switchport Configure the eth1 interface as a layer 2 port. (config-if)#bridge-group 1 Associate bridge to interface. (config-if)#switchport mode customer-edge Configure port as a customer-edge hybrid. hybrid (config-if)#switchport customer-edge hybrid Allow all VLANs on the eth1 interface.
allowed vlan all (config-if)#switchport customer-edge vlan Associate map1 with the eth1 interface. registration map1 (config-if)#exit Exit interface mode (config)#interface eth2 Enter interface mode. (config-if)#switchport Configure the eth2 interface as a layer 2 port. (config-if)#bridge-group 1 Associate bridge to an interface. (config-if)#switchport mode provider-network Configure port as a provider-network. © 2015 IP Infusion Inc. Proprietary 113 User Network Interface Configuration
User Network Interface Configuration (config-if)#switchport provider-network Allow all the VLANs created on the Eth2 interface. allowed vlan all (config-if)#exit Exit interface mode (config)#interface eth1 Enter interface mode. (config-if)#ingress-policing uni cir 1 Configure the ingress-policing committed information rate to 1. (config-if)#ingress-policing uni cbs 1500 Configure the ingress-policing committed burst size to 1500.
1500. (config-if)#ingress-policing uni eir 2 Configure the ingress-policing excess information rate to 2. (config-if)#ingress-policing uni ebs 3000 Configure the ingress-policing excess burst size to 3000. (config-if)#ingress-policing uni coupling- Enable the ingress-policing coupling flag. flag enable (config-if)#ingress-policing uni color-mode Configure the ingress-policing color mode to color-aware. color-aware
color-aware (config-if)#ingress-policing uni active Activate the egress-shaping excess information rate. (config-if)#egress-shaping uni cir 1 Configure the egress-shaping committed information rate to 1. (config-if)#egress-shaping uni cbs 1500 Configure the egress-shaping committed burst size to 1500. (config-if)#egress-shaping uni eir 2 Configure the egress-shaping excess information rate to 2. (config-if)#egress-shaping uni ebs 3000 Configure the egress-shaping excess burst size to 3000.
(config-if)#egress-shaping uni coupling-flag Enable the egress-shaping coupling flag. enable (config-if)#egress-shaping uni color-mode Configure the egress-shaping color mode to color-aware. color-aware (config-if)#egress-shaping uni active Activate egress-shaping. (config-if)#exit Exit interface mode. Provider Edge Bridge Do the following to configure a Provider Edge Bridge (PEB): #configure terminal Enter configure mode.
#configure terminal Enter configure mode. (config)#bridge 1 protocol provider-mstp edge Configure bridge 1 as a provider-MSTP edge. (config)#vlan database Enter the VLAN configure mode. (config-vlan)#vlan 2 type customer bridge 1 Configure customer VLAN 2 and associate with bridge 1. state enable (config-vlan)#vlan 4 type customer bridge 1 Configure customer VLAN 4 and associate with bridge 1. state enable
state enable (config-vlan)#vlan 3 type service point-point Configure service VLAN 3 and associate with bridge 1. bridge 1 state enable (config-vlan)#vlan 5 type service multipoint- Configure service VLAN 5 and associate with bridge 1 multipoint bridge 1 state enable (config-vlan)##ethernet svlan 3 evc-id serv3 Configure EVC-ID for SVLAN 3. bridge 1 (config-vlan)#ethernet svlan 5 evc-id serv5 Configure EVC-ID for SVLAN 5. bridge 1 114 © 2015 IP Infusion Inc. Proprietary
bridge 1 114 © 2015 IP Infusion Inc. Proprietary User Network Interface Configuration (config-vlan)#exit Exit the VLAN configure mode. (config)#cvlan registration table map1 bridge Configure CVLAN registration table map1 on bridge 1. 1 (config-cvlan-registration)#cvlan 2 svlan 4 Map CVLAN 2 to SVLAN 4. (config-cvlan-registration)#cvlan 3 svlan 5 Map CVLAN 3 to SVLAN 5. (config-cvlan-registration)#exit Exit configure CVLAN registration mode. (config)#interface eth1 Enter interface mode.
(config)#interface eth1 Enter interface mode. (config-if)#switchport Configure the eth1 interface as a layer 2 port. (config-if)#bridge-group 1 Associate bridge to interface. (config-if)#switchport mode customer-edge Configure port as a customer-edge hybrid. hybrid (config-if)#switchport customer-edge hybrid Allow all VLANs on the Eth1 interface. allowed vlan all (config-if)#switchport customer-edge vlan Associate map1 with the Eth1 interface. registration map1
registration map1 (config-if)#exit Exit interface mode (config)#interface eth2 Enter interface mode. (config-if)#switchport Configure the eth2 interface as a layer 2 port. (config-if)#bridge-group 1 Associate bridge to an interface. (config-if)#switchport mode provider-network Configure port as a provider-network. (config-if)#switchport provider-network Allow all the VLANs created on the Eth2 interface. allowed vlan all (config-if)#exit Exit interface mode
(config-if)#exit Exit interface mode (config)#interface eth1 Enter interface mode. Provider Edge Bridge Do the following to configure a Provider Edge Bridge (PEB): #configure terminal Enter configure mode. (config)#bridge 1 protocol provider-mstp edge Configure bridge 1 as a provider-MSTP edge. (config)#vlan database Enter the VLAN configure mode. (config-vlan)#vlan 2 type customer bridge 1 Configure customer VLAN 2 and associate with bridge 1. state enable
state enable (config-vlan)#vlan 4 type customer bridge 1 Configure customer VLAN 4 and associate with bridge 1. state enable (config-vlan)#vlan 3 type service point-point Configure service VLAN 3 and associate with bridge 1. bridge 1 state enable (config-vlan)#vlan 5 type service multipoint- Configure service VLAN 5 and associate with bridge 1 multipoint bridge 1 state enable (config-vlan)##ethernet svlan 3 evc-id serv3 Configure EVC-ID for SVLAN 3. bridge 1
bridge 1 (config-vlan)#ethernet svlan 5 evc-id serv5 Configure EVC-ID for SVLAN 5. bridge 1 (config-vlan)#exit Exit the VLAN configure mode. © 2015 IP Infusion Inc. Proprietary 115 User Network Interface Configuration (config)#cvlan registration table map1 bridge Configure CVLAN registration table map1 on bridge 1. 1 (config-cvlan-registration)#cvlan 2 svlan 4 Map CVLAN 2 to SVLAN 4. (config-cvlan-registration)#cvlan 3 svlan 5 Map CVLAN 3 to SVLAN 5.
(config-cvlan-registration)#exit Exit configure CVLAN registration mode. (config)#interface eth1 Enter interface mode. (config-if)#switchport Configure the Eth1 interface as a layer 2 port. (config-if)#bridge-group 1 Associate bridge to interface. (config-if)#switchport mode customer-edge Configure port as a customer-edge hybrid. hybrid (config-if)#switchport customer-edge hybrid Allow all VLANs on the Eth1 interface. allowed vlan all
allowed vlan all (config-if)#switchport customer-edge vlan Associate map1 with the Eth1 interface. registration map1 (config-if)#exit Exit interface mode (config)#interface eth2 Enter interface mode. (config-if)#switchport Configure the Eth2 interface as a layer 2 port. (config-if)#bridge-group 1 Associate bridge to an interface. (config-if)#switchport mode provider-network Configure port as a provider-network.
(config-if)#switchport provider-network Allow all the VLANs created on the Eth2 interface. allowed vlan all (config-if)#exit Exit interface mode (config)#interface eth1 Enter interface mode. (config-if)#exit Exit interface mode. EVC ID, UNI EVC ID, UNI ID and UNI List service attributes The following steps describe configuration for EVC ID, UNI EVC ID, UNI Identifier and UNI List service attributes. PEB Do the following to configure a Provider Edge Bridge (PEB):
#configure terminal Enter configure mode. (config)#bridge 1 protocol provider-mstp edge Configure bridge 1 as a provider-MSTP edge. (config)#vlan database Enter the VLAN configure mode. (config-vlan)#vlan 2 type customer bridge 1 Configure customer VLAN 2 and associate with bridge 1. state enable (config-vlan)#vlan 3 type service point-point Configure service VLAN 3 and associate with bridge 1. bridge 1 state enable
bridge 1 state enable (config-vlan)#vlan 4 type customer bridge 1 Configure customer VLAN 4 and associate with bridge 1. state enable (config-vlan)#vlan 5 type service multipoint- Configure service VLAN 5 and associate with bridge 1 multipoint bridge 1 state enable 116 © 2015 IP Infusion Inc. Proprietary User Network Interface Configuration (config-vlan)#exit Exit the VLAN configure mode. (config)#cvlan registration table map1 bridge Configure CVLAN registration table map1 on bridge 1. 1
1 (config-cvlan-registration)#cvlan 2 svlan 3 Map CVLAN 2 to SVLAN 3. (config-cvlan-registration)#exit Exit configure CVLAN registration mode. (config)#interface eth1 Enter interface mode. (config-if)#switchport Configure the Eth1 interface as a layer 2 port. (config-if)#bridge-group 1 Associate bridge to interface. (config-if)#switchport mode customer-edge Configure port as a customer-edge hybrid. hybrid (config-if)#switchport customer-edge hybrid Allow all VLANs on the eth1 interface.
allowed vlan all (config-if)#switchport customer-edge vlan Associate map1 with the eth1 interface. registration map1 (config-if)#exit Exit interface mode (config)#interface eth2 Enter interface mode. (config-if)#switchport Configure the eth2 interface as a layer 2 port. (config-if)#bridge-group 1 Associate bridge to an interface. (config-if)#switchport mode provider-network Configure port as a provider-network.
(config-if)#switchport provider-network Allow all the VLANs created on the Eth2 interface. allowed vlan all (config-if)#exit Exit interface mode (config)#vlan database Enter the VLAN configure mode. (config-vlan)#ethernet svlan 3 evc-id svlan3 Configure an EVC-ID for SVLAN 3. bridge 1 (config-vlan)#exit Exit VLAN the configure mode. (config)#interface eth1 Enter interface mode. (config-if)#ethernet uni id uni1 Configure a UNI ID. (config-if)#exit Exit interface mode Validation
(config-if)#exit Exit interface mode Validation Enter the commands listed in the sections below to confirm the configurations. #show ethernet uni evc-id bridge 1 ------------------------------------------- Bridge-name Interface-name UNI-ID, EVC-ID ----------- -------------- ---------------- 1 eth1 uni1,svlan3 #show ethernet uni list bridge 1 % Bridge-name VLAN-ID Interface-name UNI-LIST % =============== ======= ============== ================ % 1 3 eth1 uni-eth,Root
% 1 3 eth1 uni-eth,Root © 2015 IP Infusion Inc. Proprietary 117 User Network Interface Configuration MEF 10.2 Configuration This section shows how to enable MEF10.2 on a bridge and interface. MEF 10.2 introduced the concept of a rooted-multipoint EVC as shown in Figure 8-2. Figure 8-2: Rooted Multipoint EVC The User Network Interface (UNI) is the physical demarcation point between the responsibility of the Service Provider
and the responsibility of the Subscriber. An Ethernet Virtual Connection (EVC) is an association of two or more UNIs. A given UNI can support more than one EVC via the Service Multiplexing attribute. There are three types of EVCs: • In a point-to-point EVC, exactly two UNIs are associated with one another. • In a multipoint EVC, two or more UNIs are associated with one another • In a rooted-multipoint EVC, one or more of the UNIs must be designated as root and each of the other UNIs must
be designated as a leaf. If root, the UNI can send service frames to all other points in the EVC; if leaf, the UNI can send and receive service frames to and from root only. Topology Figure 8-3: Provider Bridge 118 © 2015 IP Infusion Inc. Proprietary User Network Interface Configuration Ethernet Service Attributes Configuration Zebos1 These commands enable the rooted multipoint EVC on the bridge and UNI creation on the port. All default values will be set.
be set. #configure terminal Enter Configure Mode (config)#bridge 32 protocol provider-mstp edge Create bridge as provider edge bridge (config)#vlan database Enables ETS on the bridge (config-vlan)#vlan 4 type service rooted- Configure VLAN service as rooted multipoint multipoint bridge 32 name VLAN4 state enable (config-vlan)#ethernet svlan 4 evc-id EVC4 Create EVC id for configured rooted multipoint service bridge 32 VLAN (config-vlan)#exit Exit VLAN mode
bridge 32 VLAN (config-vlan)#exit Exit VLAN mode (config)#interface eth1 Configure interface eth1 (config-if)#switchport Configure eth1 as a Layer 2 port (config-if)#bridge-group 32 Configure eth1 in bridge group 1 (config-if)#ethernet uni id test1 type leaf Configure UNI type as a leaf of a rooted multipoint EVC evc-id EVC4 Validation 1. Verify the Ethernet service attribute configurations on the interface. #show ethernet uni evc attributes interface eth1 % Interface Name - eth1
% Interface Name - eth1 % --------------------- % UNI - ID |UNI Type|EVC-ID |S-VLAN-ID % ============================================================= % test1 |leaf |EVC4 |4 % ============================================================= % MAX - EVC – 4094 2. Verify the Ethernet service attribute configurations for rooted multipoint EVC using the EVC identifier. #show ethernet uni evc attributes evc-id EVC4 bridge 32 % Bridge name - 32 % ----------------- % EVC-ID - EVC4
% ----------------- % EVC-ID - EVC4 % EVC Type - rooted-multipoint % UNI List (UNI-ID, UNI-Type) % --------------------------- % test1,Leaf % --------------------------- % MAX UNI - 0 % CE-VLAN Preservation - no 3. Verify the Ethernet service attribute UNI details for rooted multipoint EVC using the service VLAN. #show ethernet uni list svlan 4 bridge 32 % Bridge-name VLAN-ID Interface-name UNI-LIST © 2015 IP Infusion Inc. Proprietary 119 User Network Interface Configuration
User Network Interface Configuration % =============== ======= ============== ================ % 32 4 eth1 test1, Leaf 4. Verify the UNI details on the bridge. #show ethernet uni list bridge 32 % Bridge-name VLAN-ID Interface-name UNI-LIST % =============== ======= ============== ================ % 32 1 eth1 test1, % 32 4 eth1 test1, Leaf Zebos1 #configure terminal Enter Configure Mode (config)#bridge 32 protocol provider-mstp edge Create bridge as provider edge bridge
(config)#vlan database Enables ETS on the bridge (config-vlan)#vlan 4 type service rooted- Configure VLAN service as rooted multipoint multipoint bridge 32 name VLAN4 state enable (config-vlan)#ethernet svlan 4 evc-id EVC4 bridge Create EVC id for configured rooted multipoint 32 service VLAN (config-vlan)#exit Exit VLAN mode (config)#interface eth1 Configure interface eth1 (config-if)#switchport Configure eth1 as a Layer 2 port (config-if)#bridge-group 32 Configure eth1 in bridge group 1
(config-if)#ethernet uni id test1 type leaf evc-id Configure UNI type as leaf for configured rooted- EVC4 multipoint EVC (config-if)#l2protocol (stp|gvrp|mvrp|dot1x|lacp) Assign a CoS identifier to a group of L2 protocols tunnel vlan 4 cos-id 100 120 © 2015 IP Infusion Inc. Proprietary User Network Interface Configuration MEF 10.2 Configuration This section shows how to enable MEF10.2 on a bridge and interface.
The User Network Interface (UNI) is the physical demarcation point between the responsibility of the Service Provider and the responsibility of the Subscriber. An Ethernet Virtual Connection (EVC) is an association of two or more UNIs. A given UNI can support more than one EVC via the Service Multiplexing attribute. There are three types of EVCs: • In a point-to-point EVC, exactly two UNIs are associated with one another. • In a multipoint EVC, two or more UNIs are associated with one another.
• In a rooted-multipoint EVC, one or more of the UNIs must be designated as root and each of the other UNIs must be designated as a leaf. If root, the UNI can send service frames to all other points in the EVC; if leaf, the UNI can send and receive service frames to and from root only. MEF 10.2 introduced the concept of a rooted-multipoint EVC as shown in Figure 8-4. Figure 8-4: Rooted Multipoint EVC Topology Figure 8-5: Provider Bridge © 2015 IP Infusion Inc. Proprietary 121
© 2015 IP Infusion Inc. Proprietary 121 User Network Interface Configuration Ethernet Service Attributes Configuration Zebos1 These commands enable the rooted multipoint EVC on the bridge and UNI creation on the port. All default values will be set. #configure terminal Enter Configure Mode (config)#bridge 32 protocol provider- mstp Create bridge as provider edge bridge edge (config)#vlan database Enables ETS on the bridge
(config)#vlan database Enables ETS on the bridge (config-vlan)#vlan 4 type service rooted- Configure VLAN service as rooted multipoint multipoint bridge 32 name VLAN4 state enable (config-vlan)#ethernet svlan 4 evc-id EVC4 Create EVC id for configured rooted multipoint service bridge 32 VLAN (config-vlan)#exit Exit VLAN mode (config)#interface eth1 Configure interface eth1 (config-if)#switchport Configure eth1 as a Layer 2 port (config-if)#bridge-group 32 Configure eth1 in bridge group 1
(config-if)#ethernet uni id test1 type leaf Configure UNI type as a leaf of a rooted multipoint EVC evc-id EVC4 Frame Delay Measurement This section shows how to enable Frame Delay Measurement on a bridge and interface. One Way ETH-DM Configurations Zebos1 #configure terminal Enter Configure Mode on RTR1 (config)#ethernet cfm domain-name type Create domain-name, level & mip on RTR1 character-string name MD1 level 3 mip- (config)# mep mpid 1 vlan 2 Associate mpid to vlan on RTR1
(config-vlan)# 1dm unicast rmpid 2 duration Enable 1 dm on RTR1 20 interval 3 (config-vlan)# exit Exit the mode #configure terminal Enter Configure Mode (config-vlan)# ethernet cfm domain-name type Create domain-name, level & mip on RTR2 character-string name MD1 level 3 mip- (config-vlan)# mep mpid 2 vlan 2 Associate mpid to vlan on RTR2 (config)# 1dm receive duration 10 Receive the time stamp on other RTR2 122 © 2015 IP Infusion Inc. Proprietary User Network Interface Configuration Validation
User Network Interface Configuration Validation rtr4(config-cfm-mep)#1dm receive duration 10 Host MEP : 2 Remote MEP : 1 frame delay measurement = 11516548603397031321 frame delay measurement = 11516548603397031322 frame delay variation = 1 frame delay measurement = 11516548603397031323 frame delay variation = 1 frame delay measurement = 11516548603397031324 frame delay variation = 1 frame delay measurement = 11516548603397031325 frame delay variation = 1
frame delay measurement = 11516548603397031326 frame delay variation = 1 frame delay measurement = 11516548603397031327 frame delay variation = 1 frame delay measurement = 11516548603397031328 frame delay variation = 1 frame delay measurement = 11516548603397031329 frame delay variation = 1 frame delay measurement = 11516548603397031330 frame delay variation = 1 rtr4(config-cfm-mep)#end Two Way ETH-DM Configurations Zebos1 #configure terminal Enter Configure Mode on RTR1
#configure terminal Enter Configure Mode on RTR1 (config)#ethernet cfm domain-name type Create domain-name, level & mip on RTR1 character-string name MD1 level 3 mip- (config)# mep mpid 1 vlan 2 Associate mpid to vlan on RTR1 (config-vlan)# 1dm unicast rmpid 2 Enable 1 dm on RTR1 duration 20 interval 3 (config-vlan)# exit Exit the mode #configure terminal Enter Configure Mode (config-vlan)# ethernet cfm domain-name Create domain-name, level & mip on RTR2 type character-string name MD1 level 3
type character-string name MD1 level 3 (config-vlan)# mep mpid 2 vlan 2 Associate mpid to vlan on RTR2 (config)# dmm unicast rmpid 2 duration 10 Receive the time stamp on other RTR2 Validation rtr1(config-cfm-mep)#dmm unicast rmpid 2 duration 10 interval 3^M^M Total number of DMM sent = 10 Host MEP : 1 Delay Measurement for each frame sent is as follows Frame Number 1 frame delay measurement = 0 Frame Number 2 frame delay measurement = 0 Frame Number 3 frame delay measurement = 0 Frame Number 4
frame delay measurement = 0 Frame Number 4 © 2015 IP Infusion Inc. Proprietary 123 User Network Interface Configuration frame delay measurement = 0 Frame Number 5 frame delay measurement = 0 Frame Number 6 frame delay measurement = 0 Frame Number 7 frame delay measurement = 0 Frame Number 8 frame delay measurement = 0 Frame Number 9 frame delay measurement = 0 Frame Number 10 frame delay measurement = 0 DVM Configurations Zebos1 #configure terminal Enter Configure Mode on RTR1
#configure terminal Enter Configure Mode on RTR1 (config)#ethernet cfm domain-name type character- Create domain-name, level & mip on RTR1 string name MD1 level 3 mip-creation default (config)# mep mpid 1 vlan 2 Associate mpid to vlan on RTR1 (config)# dvm multicast rmpid 1 duration 30 Receive the time stamp on other RTR2 Validation rtr4(config-cfm-mep)#1dm receive duration 10 Host MEP : 2 Remote MEP : 1 frame delay measurement = 11516548603397042623
frame delay measurement = 11516548603397042623 frame delay measurement = 11516548603397042624 frame delay variation = 1 frame delay measurement = 11516548603397042625 frame delay variation = 1 frame delay measurement = 11516548603397042626 frame delay variation = 1 frame delay measurement = 11516548603397042627 frame delay variation = 1 frame delay measurement = 11516548603397042628 frame delay variation = 1 frame delay measurement = 11516548603397042629 frame delay variation = 1
frame delay measurement = 11516548603397042630 frame delay variation = 1 frame delay measurement = 11516548603397042631 frame delay variation = 1 124 © 2015 IP Infusion Inc. Proprietary Provider Backbone Bridging Configuration CHAPTER 9 This chapter contains complete examples of Provider Backbone Bridging configurations. Note: Provider Backbone Bridging is not supported for ZebIC releases.
Provider Backbone Bridging (PBB), as specified in IEEE 802.1ah/Draft 4.1, provides a network operator with an Ethernet backbone for its (PB) Provider Bridge-based Ethernet service access network. Frames sent across a PBB network are encapsulated with an additional backbone MAC header with backbone MAC addresses, and a B-VLAN tag space independent of attached customer networks. Each customer service frame is recognized by a service instance
ID (I-SID). The Ethernet Virtual Circuit (EVC) is recognized by the Service VLAN (S-VLAN). Packets through the provider network are doubly tagged. The Enhanced Internal Sub-layer Services (EISS) have been extended to support the PBB I- and B-component architecture. Topology Figure 9-1 displays a simple PBB Configuration topology. Figure 9-1: Provider Backbone Bridging Topology Legend The following table is the legend for Figure 9-1: PB-A Provider Bridges I_BEB I-BEB provider backbone bridge
I_BEB I-BEB provider backbone bridge B_BEB B-BEB provider backbone bridge BCB Backbone Core Bridge I_BEB1 I_BEB1#configure terminal Enter configure mode. I_BEB1(config)#bridge beb mac 0001.0001.0001 Configure bridge as a beb (backbone edge bridge). 1 protocol provider-mstp © 2015 IP Infusion Inc. Proprietary 125 Provider Backbone Bridging Configuration I_BEB1(config)#spanning-tree mode provider- Configure spanning tree mode as RSTP. rstp
rstp I_BEB1(config)#bridge CNP-3 priority 61440 Assigning priority to bridge. I_BEB1(config)#vlan database Enter VLAN configure mode. I_BEB1(config-vlan)#vlan 3 type service Configure S-VLAN 3 as a service type and associate it point-point bridge 1 name ipi3 with a name ipi3. I_BEB1(config-vlan)#vlan 3 type service Configure S-VLAN 3 as a service type and associate it point-point bridge 1 state enable with bridge 1. I_BEB1(config-vlan)#exit Exit VLAN configure mode.
I_BEB1(config)#pbb isid list Enter the service instance configure mode. I_BEB1(pbb-isid)#isid 1 name isid1 i- Configure instance 1 on I-component bridge 1 with name component 1 isid1. Creates a VIP port for the service instance. iI_BEB1(pbb-isid)#exit Exit service instance configure mode. I_BEB1(config)#interface eth1 Enter interface mode. I_BEB1(config-if)#no shutdown Administratively shut down the interface. I_BEB1(config-if)#switchport Configure eth1 as a Layer 2 port.
I_BEB1(config-if)#bridge-group 1 Associate the eth1 with bridge group 1. I_BEB1(config-if)#switchport mode cnp Configure eth1 as a cnp (customer network port). I_BEB1(config-if)#switchport beb vlan 3 cnp Associate B-VLAN 3 with eth1. I_BEB1(config-if)#switchport beb customer- Configure SVLAN to service instance mapping, and network svlan add 3 instance 1 egress-port specify an egress port for the service instance. eth2 I_BEB1(config-if)#exit Exit interface mode
eth2 I_BEB1(config-if)#exit Exit interface mode I_BEB1(config)#interface eth2 Enter interface mode. I_BEB1(config-if)#no shutdown Administratively shut down the interface. I_BEB1(config-if)#switchport Configure eth2 as a Layer 2 port. I_BEB1(config-if)#bridge-group 1 Associate the eth2 with bridge group 1. I_BEB1(config-if)#switchport mode pip Configure the interface as a pip (provider instance port).
I_BEB1(config-if)#switchport beb vlan 3 pip Configure the interface as a pip (provider instance port). I_BEB1(config-if)#switchport beb pip Configure MAC 0003.ffc7.cad for pip. backbone-source-mac 0003.ffc7.cada I_BEB1(config-if)#switchport beb vip Map ISID to allow all ingress and egress frames with ISID 1. instance 1 allowed all I_BEB1(config-if)#exit Exit interface mode. I_BEB1(config)#interface eth3 Enter interface mode. I_BEB1(config-if)#shutdown Shut down the interface.
I_BEB1(config-if)#exit Exit interface mode. Validation The following commands display the state of service instance 1 and service instance 2: I_BEB1#show beb bridge 1 Interface name : eth1 Switchport mode : cnp 126 © 2015 IP Infusion Inc. Proprietary Provider Backbone Bridging Configuration Interface name : eth2 Switchport mode : pip The following command on I_BEB1 displays CNP details for bridge 1: I_BEB1#show beb bridge 1 cnp CNP configuration for bridge 1
CNP configuration for bridge 1 ======================================================== Interface ServiceType ServiceID ServiceName svlans ======================================================== eth1 SvlanBased 1 isid1 3 to 3 The following command on I_BEB1 displays PIP configuration for bridge 1: I_BEB1#show beb bridge 1 pip PIP configuration for bridge 1 ======================================================== icompid port_num port_name
icompid port_num port_name ======================================================== 1 4 eth2 The following command on I_BEB1 displays VIP configuration for bridge 1: show beb bridge 1 vip VIP configuration for bridge 1 ======================================================== Interface Instance InstanceName def-DBMAC status ======================================================== 1 1 isid1 011e.8300.0001 Not Dispatched The following command on I_BEB1 displays VLAN information for bridge 1:
I_BEB1#show beb bridge 1 vlan Service VLANs Bridge VLAN ID Name State Member ports =============== ======= ================ ====================================== 1 1 default ACTIVE Service VLANs Bridge VLAN ID Name State Member ports =============== ======= ================ ====================================== 1 3 ipi3 ACTIVE eth1eth2 © 2015 IP Infusion Inc. Proprietary 127 Provider Backbone Bridging Configuration B_BEB1 B_BEB1#configure terminal Enter configure mode.
B_BEB1#configure terminal Enter configure mode. B_BEB1(config)#spanning-tree mode provider- Configure spanning tree mode as RSTP. rstp B_BEB1(config)#bridge beb mac 0001.0001.0001 Configure bridge as a beb (backbone edge bridge). backbone protocol provider-mstp B_BEB1(config)#vlan database Enter VLAN configure mode. B_BEB1(config-vlan)#vlan 3 type backbone Configure S-VLAN 3 as a backbone and associate it point-point name ipi3 with a name ipi3.
point-point name ipi3 with a name ipi3. B_BEB1(config-vlan)#vlan 3 type backbone Configure BVLAN 3 as a backbone VLAN and associate it point-point state enable with backbone. B_BEB1(config-vlan)#exit Exit VLAN configure mode. B_BEB1(config)#interface eth1 Enter interface mode. B_BEB1(config-if)#no shutdown Administratively shut down the interface. B_BEB1(config-if)#switchport Configure eth1 as a Layer 2 port. B_BEB1(config-if)#bridge-group backbone Associate eth1 with bridge backbone.
B_BEB1(config-if)#switchport mode cbp Configure the interface as a cbp (customer backbone port). B_BEB1(config-if)#switchport beb vlan 3 cbp Associate B-VLAN 3 with eth1. B_BEB1(config-if)#switchport beb customer- Configure SVLAN to service instance mapping for BVLAN backbone instance add 1 bvlan 3 3 B_BEB1(config-if)#exit Exit interface mode. B_BEB1(config)#interface eth2 Enter interface mode. B_BEB1(config-if)#no shutdown Administratively shut down the interface.
B_BEB1(config-if)#switchport Configure eth2 as a Layer 2 port. B_BEB1(config-if)#bridge-group backbone Associate eth2 with bridge backbone. B_BEB1(config-if)#switchport mode pnp Configure eth2 as a pnp (provider network port). B_BEB1(config-if)#switchport beb vlan 3 pnp Associate B-VLAN 3 with eth2. B_BEB1(config-if)#switchport beb provider- Associate BVLAN 3 with interface eth2. A BVLAN must network bvlan add 3 be defined before a service instance can be mapped to transport over it.
transport over it. B_BEB1(config-if)#exit Exit interface mode. B_BEB1(config)#interface eth3 Enter interface mode. B_BEB1(config-if)#shutdown Shut down the interface. B_BEB1(config-if)#exit Exit interface mode. Validation The following command on B_BEB1 displays backbone bridge details: B_BEB1#show beb bridge backbone Interface name : eth1 128 © 2015 IP Infusion Inc. Proprietary Provider Backbone Bridging Configuration Switchport mode : cbp Interface name : eth2 Switchport mode : pnp
Interface name : eth2 Switchport mode : pnp The following command on B_BEB1 displays customer backbone port details: B_BEB1#show beb bridge backbone cbp Default vlan 3 customer-backbone CBP configuration for backbone bridge ======================================================== Interface BVID Instance status ======================================================== eth1 3 1 Not Dispatched The following command on B_BEB1 displays backbone VLAN information: B_BEB1#show beb bridge backbone vlan
B_BEB1#show beb bridge backbone vlan Bridge VLAN ID Name State Member ports =============== ======= ======================= =============================== backbone 1 default ACTIVE Backbone VLANs Bridge VLAN ID Name State Member ports =============== ======= ======================= =============================== backbone 3 ipi3 ACTIVE eth1eth2 BCB BCB#configure terminal Enter configure mode. BCB(config)#bridge 1 protocol provider-mstp Configure bridge 1 as a provider bridge.
BCB(config)#spanning-tree mode provider-rstp Configure spanning tree mode as RSTP. BCB(config)#no data-center-bridging enable Disables data center bridging on bridge 1. bridge 1 BCB(config)#no data-center-bridging enable Disables data center bridging. BCB(config)#bridge shutdown 1 bridge-forward Configure BCB to forwarding mode. BCB(config)#vlan database Enter VLAN configure mode. BCB(config-vlan)#vlan 3 type service point- Configure S-VLAN 3 as a service type and associate it
point bridge 1 name ipi3 with a name ipi3. BCB(config-vlan)#vlan 3 type service point- Configure S-VLAN 3 as a service type and associate it point bridge 1 state enable with bridge 1. BCB(config-vlan)#exit Exit the VLAN Database mode. BCB(config)#interface eth1 Enter interface mode. BCB(config-if)#no shutdown Administratively shut down the interface. BCB(config-if)#switchport Configure eth1 as a Layer 2 port. © 2015 IP Infusion Inc. Proprietary 129 Provider Backbone Bridging Configuration
Provider Backbone Bridging Configuration BCB(config-if)#bridge-group 1 Associate the eth1 with bridge group 1. BCB(config-if)#switchport mode provider- Configure port as a provider-network. network BCB(config-if)#switchport provider-network Configure the provider-network port to allow SVLAN 3. allowed vlan add 3 BCB(config-if)#exit Exit interface mode. BCB(config)#interface eth3 Enter interface mode. BCB(config-if)#no shutdown Administratively shut down the interface.
BCB(config-if)#bridge-group 1 Associate the eth3 with bridge group 1. BCB(config-if)#switchport mode provider- Configure port as a provider-network. network BCB(config-if)#switchport provider-network Configure the provider-network port to allow SVLAN 3. allowed vlan add 3 BCB(config-if)#exit Exit interface mode. B_BEB2 B_BEB2#configure terminal Enter configure mode. B_BEB2(config)#spanning-tree mode provider- Configure spanning tree mode as RSTP. rstp
rstp B_BEB2(config)#bridge beb mac 0001.0001.0001 Configure bridge as a beb (backbone edge bridge). backbone protocol provider-mstp B_BEB2(config)#vlan database Enter VLAN configure mode. B_BEB2(config-vlan)#vlan 3 type backbone Configure S-VLAN 3 as a backbone and associate it point-point name ipi3 with a name ipi3. B_BEB2(config-vlan)#vlan 3 type backbone Configure BVLAN 3 as a backbone VLAN and associate it point-point state enable with backbone.
point-point state enable with backbone. B_BEB2(config-vlan)#exit Exit VLAN configure mode. B_BEB2(config)#interface eth1 Enter interface mode. B_BEB2(config-if)#no shutdown Administratively shut down the interface. B_BEB2(config-if)#switchport Configure eth1 as a Layer 2 port. B_BEB2(config-if)#bridge-group backbone Associate eth1 with bridge backbone. B_BEB2(config-if)#switchport mode pnp Configure eth1 as a pnp. B_BEB2(config-if)#switchport beb vlan 3 pnp Associate B-VLAN 3 with eth1.
B_BEB2(config-if)#switchport beb provider- Associate BVLAN 3 with interface eth1. A BVLAN must network bvlan add 3 be defined before a service instance can be mapped to transport over it. B_BEB2(config-if)#exit Exit interface mode. B_BEB2(config)#interface eth2 Enter interface mode. B_BEB2(config-if)#no shutdown Administratively shut down the interface. B_BEB2(config-if)#switchport Configure eth2 as a Layer 2 port. B_BEB2(config-if)#bridge-group backbone Associate eth2 with bridge backbone.
130 © 2015 IP Infusion Inc. Proprietary Provider Backbone Bridging Configuration B_BEB2(config-if)#switchport mode cbp Configure the interface as a cbp (customer backbone port). B_BEB2(config-if)#switchport beb vlan 3 cbp Associate B-VLAN 3 with eth2. B_BEB2(config-if)#switchport beb customer- Configure SVLAN to service instance mapping for BVLAN backbone instance add 1 bvlan 3 3. B_BEB2(config-if)#exit Exit interface mode. Validation The following command on B_BEB2 displays the bridge details:
B_BEB2#show beb bridge backbone Interface name : eth1 Switchport mode : pnp Interface name : eth2 Switchport mode : cbp The following command on B_BEB2 displays customer backbone port details: B_BEB2#show beb bridge backbone cbp Default vlan 3 customer-backbone CBP configuration for backbone bridge ======================================================== Interface BVID Instance status ======================================================== eth2 3 1 Not Dispatched
eth2 3 1 Not Dispatched The following command on B_BEB2 displays VLAN information for the bridge: B_BEB2#show beb bridge backbone vlan Bridge VLAN ID Name State Member ports =============== ======= ======================= ===================== backbone 1 default ACTIVE Backbone VLANs Bridge VLAN ID Name State Member ports =============== ======= ======================= ====================== backbone 3 ipi3 ACTIVE eth1 I_BEB2 I_BEB2#configure terminal Enter configure mode.
I_BEB2#configure terminal Enter configure mode. I_BEB2(config)#bridge beb mac 0001.0001.0001 Configure bridge as a beb (backbone edge bridge). 1 protocol provider-mstp © 2015 IP Infusion Inc. Proprietary 131 Provider Backbone Bridging Configuration I_BEB2(config)#spanning-tree mode provider- Configure spanning tree mode as RSTP. rstp I_BEB1(config)#bridge CNP-4 priority 61440 Assigning priority to bridge. I_BEB2(config)#vlan database Enter VLAN configure mode.
I_BEB2(config-vlan)#vlan 3 type service Configure S-VLAN 3 as a service type and associate it point-point bridge 1 name ipi3 with a name ipi3. I_BEB2(config-vlan)#vlan 3 type service Configure S-VLAN 3 as a service type and associate it point-point bridge 1 state enable with bridge 1. I_BEB1(config)#pbb isid list Enter the service instance configure mode. I_BEB1(pbb-isid)#isid 1 name isid1 i- Configure instance 1 on I-component bridge 1 with name
component 1 isid1. Creates a VIP port for the service instance. I_BEB1(pbb-isid)#exit Exit service instance configure mode. I_BEB2(config-vlan)#exit Exit the VLAN Database mode. I_BEB2(config)#interface eth1 Enter interface mode. I_BEB2(config-if)#no shutdown Administratively shut down the interface. I_BEB2(config-if)#switchport Configure eth2 as a Layer 2 port. I_BEB2(config-if)#bridge-group 1 Associate the eth1 with bridge group 1.
I_BEB2(config-if)#switchport mode pip Configure the interface as a pip (provider instance port). I_BEB2(config-if)#switchport beb vlan 3 pip Associate B-VLAN 3 with eth1. I_BEB2(config-if)#switchport beb pip Configure 0003.ff7e.20d4 for pip. backbone-source-mac 0003.ff7e.20d4 I_BEB2(config-if)#switchport beb vip Map ISID to allow all ingress and egress frames with ISID 1. instance 1 allowed all I_BEB2(config-if)#exit Exit interface mode. I_BEB2(config)#interface eth2 Enter interface mode.
I_BEB2(config-if)#no shutdown Administratively shut down the interface. I_BEB2(config-if)#switchport Configure eth2 as a Layer 2 port. I_BEB2(config-if)#bridge-group 1 Associate the eth2 with bridge group 1. I_BEB2(config-if)#switchport mode cnp Configure the interface as a cnp (customer network port). I_BEB2(config-if)#switchport beb vlan 3 cnp Associate B-VLAN 3 with eth1. I_BEB2(config-if)#switchport beb customer- Configure SVLAN to service instance mapping, and
network svlan add 3 instance 1 egress-port specify an egress port for the service instance. eth1 I_BEB2(config-if)#exit Exit interface mode. I_BEB2(config)#interface eth3 Enter interface mode. I_BEB2(config-if)#shutdown Shut down the interface. I_BEB2(config-if)#exit Exit interface mode. Validation The following command on I_BEB2 displays the bridge details: I_BEB2#show beb bridge backbone Interface name : eth2 Switchport mode : cnp 132 © 2015 IP Infusion Inc. Proprietary
132 © 2015 IP Infusion Inc. Proprietary Provider Backbone Bridging Configuration Interface name : eth1 Switchport mode : pip The following command on I_BEB1 displays CNP details for bridge 1: I_BEB2#show beb bridge 1 cnp CNP configuration for bridge 1 ======================================================== Interface ServiceType ServiceID ServiceName svlans ======================================================== eth2 SvlanBased 1 isid1 3 to 3
eth2 SvlanBased 1 isid1 3 to 3 The following command on I_BEB2 displays PIP configuration for bridge 1: I_BEB2#show beb bridge 1 pip PIP configuration for bridge 1 ======================================================== icompid port_num port_name ======================================================== 1 3 eth1 The following command on I_BEB2 displays VIP configuration for bridge 1: I_BEB_2#show beb bridge 1 vip VIP configuration for bridge 1
VIP configuration for bridge 1 ======================================================== Interface Instance InstanceName def-DBMAC status ======================================================== 1 1 isid1 011e.8300.0001 Not Dispatched The following command on I_BEB2 displays VLAN information for the bridge: I_BEB2#show beb bridge 1 vlan Service VLANs Bridge VLAN ID Name State Member ports =============== ======= ================ ====================================== 1 1 default ACTIVE
1 1 default ACTIVE Service VLANs Bridge VLAN ID Name State Member ports =============== ======= ================ ====================================== 1 3 ipi3 ACTIVE eth2 eth1 © 2015 IP Infusion Inc. Proprietary 133 Provider Backbone Bridging Configuration 134 © 2015 IP Infusion Inc. Proprietary Ethernet Protection Switching Configuration CHAPTER 10 Ethernet Protection Switching (EPS) describes the specifics of protection switching for Ethernet VLAN signals.
Protection switching is a fully allocated survivability mechanism, in the sense that the route and bandwidth of the protection entity is reserved for a selected working entity. The configurations in this section relate to the simple topology below, and are for creating and configuring an Ethernet Protection Switching group. Topology Figure 10-1 displays a simple EPS Configuration topology. Figure 10-1: EPS Configuration Topology Bridge 1 #configure terminal Enter configure mode.
#configure terminal Enter configure mode. (config)#bridge 1 protocol mstp Add bridge1 to the multiple spanning tree (MST) table. (config)#vlan database Enter VLAN configure mode. (config-vlan)#vlan 2 bridge 1 state enable Enable the state of VLAN 2 on bridge 1 to allow forwarding of frames over VLAN 2 on bridge 1. (config-vlan)#exit Exit VLAN configure mode. (config)#spanning-tree mst configuration Enter MST configuration mode.
(config-mst)#bridge 1 instance 1 vlan 2 Create an instance of VLAN. VLANs must be created before being associating with an instance. If the VLAN range is not specified, the instance will not be created. (config-mst)#exit Exit MST configuration mode. (config)#ethernet cfm domain-name type Enter CFM mode and create domain test on bridge 1 at level character-string name test level 3 mip- 3. creation none bridge 1
creation none bridge 1 (config-ether-cfm)#service ma-type string Define a Maintenance Association (MA) for the domain ma-name eps vlan 2 mip-creation none created. (config-ether-cfm)#mep crosscheck mpid 20 Configure crosscheck to the MEP at MAC address vlan 2 mac 0007.e9a5.1cc9 0007.e9a5.1cc9. (config-ether-cfm)#mep crosscheck mpid 21 Configure crosscheck to the MEP at MAC address vlan 2 mac 0007.e9a5.1cd8 0007.e9a5.1cd9. (config-ether-cfm)#exit Exit CFM configuration mode.
© 2015 IP Infusion Inc. Proprietary 135 Ethernet Protection Switching Configuration (config)#interface eth1 Enter interface mode. (config-if)#switchport Configure eth1 as switch port. (config-if)#bridge-group 1 Associate the eth1 with bridge group 1. (config-if)#switchport mode trunk Set the switching abilities of this interface to trunk mode. (config-if)#switchport trunk allowed vlan Allow all VLANs on this interface. all
all (config-if)#ethernet cfm mep down mpid 10 Configure the interface as an MEP (Maintenance End Point). active true domain test vlan 2 bridge 1 (config-if-eth-cfm-mep)#cc multicast state Enable multicast continuity checking (CC) on the interface. enable (config-if-eth-cfm-mep)#exit Exit CFM MEP mode. (config-if)#exit Exit interface mode. (config)#interface eth2 Enter interface mode. (config-if)#switchport Configure eth2 as switch port.
(config-if)#bridge-group 1 Associate interface eth2 with bridge group 1. (config-if)#switchport mode trunk Set the switching abilities of this interface to trunk mode. (config-if)#switchport trunk allowed vlan Allow all VLANs on this interface. all (config-if)#ethernet cfm mep down mpid 11 Configure the interface as an MEP. active true domain test vlan 2 bridge 1 (config-if-eth-cfm-mep)#cc multicast state Enable multicast continuity checking (CC) on the interface. enable
enable (config-if-eth-cfm-mep)#exit Exit CFM MEP mode. (config-if)#exit Exit interface mode. (config)#bridge 1 g8031 eps-id 10 working- Configure EPS protection group 10 with the working-port on port eth1 protection-port eth2 instance 3 eth1 and the protection-port on eth2. (config)#g8031 configure vlan eps-id 10 Enter G8031 Configure VLAN mode. bridge 1 (g8031-config-vlan)#g8031 vlan 2 primary Configure VLAN 2 as primary. (g8031-config-vlan)#exit Exit G8031 Configure VLAN mode.
(config)#g8031 configure switching eps-id 10 Enter G8031 Configure Switching mode. bridge 1 (g8031-config-switching)#g8031 mode bridging Configure the switching mode as permanent with restoration permanent restoration revertive as revertive. (g8031-config-switching)#g8031 ethernet md- Associate the EPS group to the CFM domain and MA created. name test service-id eps (g8031-config-switching)#exit Exit G8031 Configure Switching mode. Bridge 2 #configure terminal Enter configure mode.
#configure terminal Enter configure mode. (config)#bridge 1 protocol mstp Add a bridge 1 to the MST table. (config)#vlan database Enter VLAN configure mode. 136 © 2015 IP Infusion Inc. Proprietary Ethernet Protection Switching Configuration (config-vlan)#vlan 2 bridge 1 state enable Enable the state of VLAN 2 on bridge 1 to allow forwarding of frames over VLAN 2 on bridge 1. (config-vlan)#exit Exit VLAN configure mode. (config)#spanning-tree mst configuration Enter MST configuration mode.
(config-mst)#bridge 1 instance 1 vlan 2 Create an instance of VLAN. VLANs must be created before being associating with an instance. (config-mst)#exit Exit MST configuration mode. (config)#ethernet cfm domain-name type Enter CFM mode and create domain test on bridge 1 at level character-string name test level 3 mip- 3. creation none bridge 1 (config-ether-cfm)#service ma-type string Define an MA for the domain created. ma-name eps vlan 2 mip-creation none
ma-name eps vlan 2 mip-creation none (config-ether-cfm)#mep crosscheck mpid 10 Configure crosscheck to the MEP at MAC address vlan 2 mac 0007.e9a5.1c4d 0007.e9a5.1c4d. (config-ether-cfm)#mep crosscheck mpid 11 Configure crosscheck to the MEP at MAC address vlan 2 mac 0007.e9a5.1996 0007.e9a5.1996. (config-ether-cfm)#exit Exit CFM configuration mode. (config)#interface eth1 Enter interface mode. (config-if)#switchport Configure eth1 as switch port.
(config-if)#bridge-group 1 Associate the interface eth1 with bridge group 1. (config-if)#switchport mode trunk Set the switching abilities of this interface to trunk mode. (config-if)#switchport trunk allowed vlan Allow all VLANs on this interface. all (config-if)#ethernet cfm mep down mpid 20 Configure the interface as an MEP. active true domain test vlan 2 bridge 1 (config-if-eth-cfm-mep)#cc multicast state Enable multicast continuity checking (CC) on the interface. enable
enable (config-if-eth-cfm-mep)#exit Exit CFM MEP mode. (config-if)#exit Exit interface mode. (config)#interface eth2 Enter interface mode. (config-if)#switchport Configure eth2 as switch port. (config-if)#bridge-group 1 Associate the interface eth2 with bridge group 1 (config-if)#switchport mode trunk Set the switching abilities of this interface to trunk mode. (config-if)#switchport trunk allowed vlan Allow all VLANs on this interface all
all (config-if)#ethernet cfm mep down mpid 21 Configure the interface as an MEP. active true domain test vlan 2 bridge 1 (config-if-eth-cfm-mep)#cc multicast state Enable multicast continuity checking (CC) on the interface. enable (config-if-eth-cfm-mep)#exit Exit CFM MEP mode. (config-if)#exit Exit interface mode. (config)#bridge 1 g8031 eps-id 10 working- Configure EPS protection group 10 with the working-port on port eth1 protection-port eth2 instance 3 eth1 and the protection-port on eth2.
(config)#g8031 configure vlan eps-id 10 Enter the G8031 Configure VLAN mode. bridge 1 (g8031-config-vlan)#g8031 vlan 2 primary Configure the VLAN created as primary. © 2015 IP Infusion Inc. Proprietary 137 Ethernet Protection Switching Configuration (g8031-config-vlan)#exit Exit G8031 Configure VLAN mode. (config)#g8031 configure switching eps-id Enter G8031 Configure Switching mode. 10 bridge 1
10 bridge 1 (g8031-config-switching)#g8031 mode bridging Configure the switching mode as permanent with restoration permanent restoration revertive as revertive. (g8031-config-switching)#g8031 ethernet md- Associate the EPS group created to the CFM domain and MA name test service-id eps created. (g8031-config-switching)#exit Exit G8031 Configure Switching mode. Removing Ethernet Protection Switching
Removing Ethernet Protection Switching The configurations in this section relate to the same simple topology, and are for removing an Ethernet Protection Switching group. Bridge 1 (config)#g8031 configure switching eps-id 10 Enter G8031 Configure Switching mode. bridge 1 (config)#no g8031 ethernet md-name test Remove the association of EPS group 10 with the CFM service-id eps domain and MA.. (g8031-config-switching)#no g8031 mode Reconfigure the switching mode to no g8031 mode.
(g8031-config-switching)#exit Exit G8031 Configure Switching mode. (config)#no bridge 1 g8031 eps-id 10 Delete EPS protection group 10. Bridge 2 (config)#g8031 configure switching eps-id 10 Enter G8031 Configure Switching mode. bridge 1 (config)#no g8031 ethernet md-name test Remove the association of EPS group 10 with the CFM service-id eps domain and MA.. (g8031-config-switching)#no g8031 mode Reconfigure the switching mode to no g8031 mode.
(g8031-config-switching)#exit Exit G8031 Configure Switching mode. (config)#no bridge 1 g8031 eps-id 10 Delete EPS protection group 10. 138 © 2015 IP Infusion Inc. Proprietary PBB-TE Configurations CHAPTER 11 The configurations in the chapter illustrate how to set up Provider Backbone Bridging Traffic Engineering with different network topologies. Examples are provided for Ethernet Switched Path, Automated Protection Switching, Unicast
Connectivity Fault Management, and Multicast Connectivity Fault Management. Note: Provider Backbone Bridging is not supported for ZebIC releases. Ethernet Switched Path These configurations are for setting up an Ethernet Switched Path (ESP) in a PBB-TE topology. Figure 11-1 displays a simple ESP topology. Figure 11-1: ESP Topology IB-BEB-1 IB-BEB-1#configure terminal Enter configure mode. IB-BEB-1(config)#bridge beb mac Configure an I-component bridge 1 with MAC
aabb.1a5f.7611 1 protocol provider-mstp aabb.1a5f.7611. IB-BEB-1(config)#bridge beb mac Configure backbone bridge 1 with MAC bbbb.bbbb.bbba. bbbb.bbbb.bbba backbone protocol provider- mstp IB-BEB-1(config)#vlan database Enter VLAN configure mode. IB-BEB-1(config-vlan)#vlan 2 type service Configure VLAN 2 as a service VLAN and associate it with point-point bridge 1 state enable bridge 1. IB-BEB-1(config-vlan)#vlan 4 type backbone Configure VLAN 4 as a backbone point-to-point VLAN.
point-point state enable IB-BEB-1(config-vlan)#vlan 5 type backbone Configure VLAN 5 as a backbone point-to-point VLAN. point-point state enable IB-BEB-1(config-vlan)#vlan 6 type backbone Configure VLAN 6 as a backbone point-to-point VLAN. point-point state enable IB-BEB-1(config-vlan)#vlan 7 type backbone Configure VLAN 7 as a backbone point-to-point VLAN point-point state enable IB-BEB-1(config-vlan)#exit Exit VLAN configure mode. IB-BEB-1(config)#interface eth3 Enter interface mode.
IB-BEB-1(config-if)#switchport Configure eth3 as a Layer-2 interface. IB-BEB-1(config-if)#bridge-group 1 Associate eth3 with bridge-group 1. IB-BEB-1(config-if)#switchport mode cnp Set the switching abilities of this interface to CNP mode. © 2015 IP Infusion Inc. Proprietary 139 PBB-TE Configurations IB-BEB-1(config-if)#switchport beb Map SVLAN to I-SID. customer-network svlan add 2 instance 1 name customer1 IB-BEB-1(config-if)#exit Exit interface mode.
IB-BEB-1(config-if)#exit Exit interface mode. IB-BEB-1(config)#interface eth1 Enter interface mode. IB-BEB-1(config-if)#switchport Configure eth1 as a Layer-2 interface. IB-BEB-1(config-if)#bridge-group backbone Associate eth1 with bridge-group backbone. IB-BEB-1(config-if)#switchport mode pnp Set the switching abilities of this interface to PNP mode. IB-BEB-1(config-if)#switchport beb Add BVLAN to PNP. provider-network bvlan add 4 IB-BEB-1(config-if)#exit Exit interface mode.
IB-BEB-1(config-if)#exit Exit interface mode. IB-BEB-1(config)#interface eth2 Enter interface mode. IB-BEB-1(config-if)#switchport Configure eth2 as a Layer-2 interface. IB-BEB-1(config-if)#bridge-group backbone Associate eth2 with bridge-group backbone. IB-BEB-1(config-if)#switchport mode pnp Set the switching abilities of this interface to PNP mode. IB-BEB-1(config-if)#switchport beb Add BVLAN to PNP. provider-network bvlan add 4 IB-BEB-1(config-if)#exit Exit interface mode.
IB-BEB-1(config-if)#exit Exit interface mode. IB-BEB-1(config)#interface pip.1 Enter interface mode. IB-BEB-1(config-if)#switchport beb pip Configure MAC 0100.1111.1211 for pip.1. backbone-source-mac 0100.1111.1211 IB-BEB-1(config-if)#exit Exit interface mode. IB-BEB-1(config)#interface cbp.1 Enter interface mode. IB-BEB-1(config-if)#switchport beb Map BVLAN to I-SID. customer-backbone instance add 1 bvlan 4 IB-BEB-1(config-if)#exit Exit interface mode.
IB-BEB-1(config-if)#exit Exit interface mode. IB-BEB-1(config)#pbb-te configure tesid 10 Configure a TE-SID with SID as 10. IB-BEB-1(pbb-te-vlan-config)#pbb-te vlan 4 Associate backbone VLAN 4 to TE-SID 10. IB-BEB-1(pbb-te-vlan-config)#pbb-te vlan 5 Associate backbone VLAN 5 to TE-SID 10. IB-BEB-1(pbb-te-vlan-config)#exit Exit TE-SID mode. IB-BEB-1(config)#pbb-te configure tesid 20 Configure a TE-SID with SID as 20.
IB-BEB-1(pbb-te-vlan-config)#pbb-te vlan 6 Associate backbone VLAN 6 to TE-SID 20. IB-BEB-1(pbb-te-vlan-config)#pbb-te vlan 7 Associate backbone VLAN 6 to TE-SID 20. IB-BEB-1(pbb-te-vlan-config)#exit Exit TE-SID mode. IB-BEB-1(config)#interface cbp.1 Enter interface mode. IB-BEB-1(config-if)#pbb-te esp tesid 10 Configure TE-SID 10 with remote MAC address egress remote-mac 0100.1111.1212 vlan 4 pnp 0100.1111.1212, and specify the egress backbone VLAN eth1 and egress interface (eth1).
eth1 and egress interface (eth1). IB-BEB-1(config-if)#pbb-te esp tesid 10 Configure TE-SID 10 with remote MAC address ingress remote-mac 0100.1111.1212 vlan 5 0100.1111.1212, and specify the ingress backbone VLAN. IB-BEB-1(config-if)#pbb-te esp tesid 20 Configure TE-SID 20 with remote MAC address egress remote-mac 0100.1111.1212 vlan 6 pnp 0100.1111.1212, and specify the egress backbone VLAN eth1 and egress interface (eth1). 140 © 2015 IP Infusion Inc. Proprietary PBB-TE Configurations
PBB-TE Configurations IB-BEB-1(config-if)#pbb-te esp tesid 20 Configure TE-SID 20 with remote MAC address ingress remote-mac 0100.1111.1212 vlan 7 0100.1111.1212, and specify the ingress backbone VLAN. IB-BEB-1(config-if)exit Exit interface mode. IB-BEB-2 IB-BEB-2#configure terminal Enter configure mode. IB-BEB-2(config)#bridge beb mac Configure an I-component bridge 1 with MAC aabb.1a5f.7612 1 protocol provider-mstp aabb.1a5f.7612.
IB-BEB-2(config)#bridge beb mac Configure backbone bridge 1 with MAC bbbb.bbbb.bbbb. bbbb.bbbb.bbbb backbone protocol provider- mstp IB-BEB-2(config)#vlan database Enter VLAN configure mode. IB-BEB-2(config-vlan)#vlan 2 type service Configure VLAN 2 as a service VLAN and associate it with point-point bridge 1 state enable bridge 1. IB-BEB-2(config-vlan)#vlan 4 type backbone Configure VLAN 4 as a backbone point-to-point VLAN. point-point state enable
point-point state enable IB-BEB-2(config-vlan)#vlan 5 type backbone Configure VLAN 5 as a backbone point-to-point VLAN. point-point state enable IB-BEB-2(config-vlan)#vlan 6 type backbone Configure VLAN 6 as a backbone point-to-point VLAN. point-point state enable IB-BEB-2(config-vlan)#vlan 7 type backbone Configure VLAN 7 as a backbone point-to-point VLAN. point-point state enable IB-BEB-2(config-vlan)#exit Exit VLAN configure mode. IB-BEB-2(config)#interface eth3 Enter interface mode.
IB-BEB-2(config-if)#switchport Configure eth3 as a Layer-2 interface. IB-BEB-2(config-if)#bridge-group 1 Associate eth3 with bridge-group 1. IB-BEB-2(config-if)#switchport mode cnp Set the switching abilities of this interface to CNP mode. IB-BEB-2(config-if)#switchport beb Map SVLAN to I-SID. customer-network svlan add 2 instance 1 name customer1 IB-BEB-2(config-if)#exit Exit interface mode. IB-BEB-2(config)#interface eth1 Enter interface mode.
IB-BEB-2(config-if)#switchport Configure eth1 as a Layer-2 interface. IB-BEB-2(config-if)#bridge-group backbone Associate eth1 with bridge-group backbone. IB-BEB-2(config-if)#switchport mode pnp Set the switching abilities of this interface to PNP mode. IB-BEB-2(config-if)#switchport beb Add BVLAN to PNP. provider-network bvlan add 4 IB-BEB-2(config-if)#exit Exit interface mode. IB-BEB-2(config)#interface eth2 Enter interface mode.
IB-BEB-2(config-if)#switchport Configure eth2 as a Layer-2 interface. IB-BEB-2(config-if)#bridge-group backbone Associate eth2 with bridge-group backbone. IB-BEB-2(config-if)#switchport mode pnp Set the switching abilities of this interface to PNP mode. © 2015 IP Infusion Inc. Proprietary 141 PBB-TE Configurations IB-BEB-2(config-if)#switchport beb Add BVLAN to PNP. provider-network bvlan add 4 IB-BEB-2(config-if)#exit Exit interface mode. IB-BEB-2(config)#interface pip.1 Enter interface mode.
IB-BEB-2(config-if)#switchport beb pip Configure MAC 0100.1111.1212 for interface pip.1. backbone-source-mac 0100.1111.1212 IB-BEB-2(config-if)#exit Exit interface mode. IB-BEB-2(config)#interface cbp.1 Enter interface mode. IB-BEB-2(config-if)#switchport beb Map BVLAN to I-SID. customer-backbone instance add 1 bvlan 4 IB-BEB-2(config-if)#exit Exit interface mode. IB-BEB-2(config)#pbb-te configure tesid 10 Configure a TE-SID with SID as 10.
IB-BEB-2(pbb-te-vlan-config)#pbb-te vlan 4 Associate backbone VLAN 4 to TE-SID 10. IB-BEB-2(pbb-te-vlan-config)#pbb-te vlan 5 Associate backbone VLAN 5 to TE-SID 10. IB-BEB-2(pbb-te-vlan-config)#exit Exit the TE-SID mode. IB-BEB-2(config)#pbb-te configure tesid 20 Configure a TE-SID with SID as 20. IB-BEB-2(pbb-te-vlan-config)#pbb-te vlan 6 Associate backbone VLAN 6 to TE-SID 20. IB-BEB-2(pbb-te-vlan-config)#pbb-te vlan 7 Associate backbone VLAN 6 to TE-SID 20.
IB-BEB-2(pbb-te-vlan-config)#exit Exit the TE-SID mode. IB-BEB-2(config)#interface cbp.1 Enter interface mode. IB-BEB-2(config-if)#pbb-te esp tesid 10 Configure TE-SID 10 with remote MAC address egress remote-mac 0100.1111.1211 vlan 5 pnp 0100.1111.1211, and specify the egress backbone VLAN eth1 and egress interface (eth1). IB-BEB-2(config-if)#pbb-te esp tesid 10 Configure TE-SID 10 with remote MAC 0100.1111.1211, ingress remote-mac 0100.1111.1211 vlan 4 and specify the ingress backbone VLAN.
IB-BEB-2(config-if)#pbb-te esp tesid 20 Configure TE-SID 20 with remote MAC 0100.1111.1211, egress remote-mac 0100.1111.1211 vlan 6 pnp and specify the egress backbone VLAN and egress interface eth1 (eth1). IB-BEB-2(config-if)#pbb-te esp tesid 20 Configure TE-SID 20 with remote MAC 0100.1111.1211, ingress remote-mac 0100.1111.1211 vlan 7 and specify the ingress backbone VLAN. IB-BEB-2(config-if)#exit Exit interface mode. BCB BCB#configure terminal Enter configure mode.
BCB BCB#configure terminal Enter configure mode. BCB(config)#bridge 1 protocol provider-mstp Configure bridge 1 as a provider bridge. BCB(config)#vlan database Enter VLAN configure mode. BCB(config-vlan)#vlan 4 type service point- Configure VLAN 4 as a service VLAN and associate it with point bridge 1 state enable bridge 1. BCB(config-vlan)#vlan 5 type service point- Configure VLAN 5 as a service VLAN and associate it with point bridge 1 state enable bridge 1.
point bridge 1 state enable bridge 1. BCB(config-vlan)#vlan 6 type service point- Configure VLAN 6 as a service VLAN and associate it with point bridge 1 state enable bridge 1. 142 © 2015 IP Infusion Inc. Proprietary PBB-TE Configurations BCB(config-vlan)#vlan 7 type service point- Configure VLAN 7 as a service VLAN and associate it with point bridge 1 state enable bridge 1. BCB(config-vlan)#exit Exit the VLAN configuration mode. BCB(config)#interface eth1 Enter interface mode.
BCB(config)#interface eth1 Enter interface mode. BCB(config-if)#switchport Configure eth1 as a Layer-2 interface. BCB(config-if)#bridge-group 1 Associate eth1 with bridge 1. BCB(config-if)#switchport mode provider- Set the switching abilities of this interface to provider-network network mode. BCB(config-if)#switchport provider-network Associate Service VLAN 4 with the provider network. allowed vlan add 4
allowed vlan add 4 BCB(config-if)#switchport provider-network Associate Service VLAN 5 with the provider network. allowed vlan add 5 BCB(config-if)#switchport provider-network Associate Service VLAN 6 with the provider network. allowed vlan add 6 BCB(config-if)#switchport provider-network Associate Service VLAN 7 with the provider network. allowed vlan add 7 BCB(config-if)#exit Exit interface mode. BCB(config)#interface eth3 Enter interface mode.
BCB(config)#interface eth3 Enter interface mode. BCB(config-if)#switchport Configure eth3 as a Layer-2 interface BCB(config-if)#bridge-group 1 Associate eth3 with bridge 1. BCB(config-if)#switchport mode provider- Set the switching abilities of this interface to provider-network network mode. BCB(config-if)#switchport provider-network Associate Service VLAN 4 with the provider network. allowed vlan add 4
allowed vlan add 4 BCB(config-if)#switchport provider-network Associate Service VLAN 5 with the provider network. allowed vlan add 5 BCB(config-if)#switchport provider-network Associate Service VLAN 6 with the provider network. allowed vlan add 6 BCB(config-if)#switchport provider-network Associate Service VLAN 7 with the provider network. allowed vlan add 7 BCB(config-if)#exit Exit interface mode.
BCB(config-if)#exit Exit interface mode. BCB(config)#bridge 1 address 0100.1111.1212 Add a static FDB entry to the FDB table to forward all frames forward eth3 vlan 4 with MAC address 0100.1111.1212 and VLAN 4 to interface eth3. BCB(config)#bridge 1 address 0100.1111.1211 Add a static FDB entry to the FDB table to forward all frames forward eth1 vlan 5 with MAC address 0100.1111.1211 and VLAN 5 to interface eth1. BCB(config)#exit Exit the Configure mode. Validation IB-BEB-1
Validation IB-BEB-1 IB-BEB-1#show pbb-te tesid all TESID: 10 © 2015 IP Infusion Inc. Proprietary 143 PBB-TE Configurations cbp interface: cbp.1 ESP Id SMAC DMAC ESP-VID Ingress Multicast 000 0100.1111.1211 0100.1111.1212 4 Yes No 001 0100.1111.1211 0100.1111.1212 5 No No TESID: 20 cbp interface: cbp.1 ESP Id SMAC DMAC ESP-VID Ingress Multicast 000 0100.1111.1211 0100.1111.1212 6 Yes No 001 0100.1111.1211 0100.1111.1212 7 No No IB-BEB-1# IB-BEB2 IB-BEB-2#show pbb-te tesid all TESID: 10
IB-BEB2 IB-BEB-2#show pbb-te tesid all TESID: 10 cbp interface: cbp.1 ESP Id SMAC DMAC ESP-VID Ingress Multicast 000 0100.1111.1212 0100.1111.1211 5 Yes No 001 0100.1111.1212 0100.1111.1211 4 No No TESID: 20 cbp interface: cbp.1 ESP Id SMAC DMAC ESP-VID Ingress Multicast 000 0100.1111.1212 0100.1111.1211 6 Yes No 001 0100.1111.1212 0100.1111.1211 7 No No IB-BEB-2# Automatic Protection Switching
IB-BEB-2# Automatic Protection Switching These configurations are for setting up Automatic Protection Switching (APS) in a PBB-TE topology. Figure 11-2 displays a simple APS topology. Figure 11-2: APS Topology 144 © 2015 IP Infusion Inc. Proprietary PBB-TE Configurations IB-BEB-1 IB-BEB-1#configure terminal Enter configure mode. IB-BEB-1(config)#bridge beb mac Configure an I-component bridge 1 with MAC 0001.0001.0001 1 protocol provider-mstp 0001.0001.0001.
IB-BEB-1(config)#bridge beb mac Configure backbone bridge 1 with MAC 0001.0001.0001. 0001.0001.0001 backbone protocol provider- mstp IB-BEB-1(config)#vlan database Enter VLAN configure mode. IB-BEB-1(config-vlan)#vlan 2 type service Configure VLAN 2 as a service VLAN and associate it with point-point bridge 1 state enable bridge 1. IB-BEB-1(config-vlan)#vlan 3 type service Configure VLAN 3 as a service VLAN and associate it with point-point bridge 1 state enable bridge 1.
point-point bridge 1 state enable bridge 1. IB-BEB-1(config-vlan)#vlan 4 type backbone Configure VLAN 4 as a backbone point-to-point VLAN. point-point state enable IB-BEB-1(config-vlan)#vlan 5 type backbone Configure VLAN 5 as a backbone point-to-point VLAN. point-point state enable IB-BEB-1(config-vlan)#vlan 6 type backbone Configure VLAN 6 as a backbone point-to-point VLAN. point-point state enable IB-BEB-1(config-vlan)#vlan 7 type backbone Configure VLAN 7 as a backbone point-to-point VLAN.
point-point state enable IB-BEB-1(config-vlan)#exit Exit VLAN configure mode. IB-BEB-1(config)#interface eth3 Enter interface mode. IB-BEB-1(config-if)#switchport Configure eth3 as a Layer-2 interface. IB-BEB-1(config-if)#bridge-group 1 Associate eth3 with bridge-group 1. IB-BEB-1(config-if)#switchport mode cnp Set the switching abilities of this interface to CNP mode. IB-BEB-1(config-if)#switchport beb vlan 2 Assign VLAN 2 to CNP. cnp IB-BEB-1(config-if)#switchport beb Map SVLAN to I-SID.
customer-network svlan add range 2 3 instance 1 name customer1 IB-BEB-1(config-if)#exit Exit interface mode. IB-BEB-1(config)#interface eth1 Enter interface mode. IB-BEB-1(config-if)#switchport Configure eth1 as a Layer-2 interface. IB-BEB-1(config-if)#bridge-group backbone Associate eth1 with bridge-group backbone. IB-BEB-1(config-if)#switchport mode pnp Set the switching abilities of this interface to PNP mode. IB-BEB-1(config-if)#switchport beb vlan 5 Add BVLAN to PNP. pnp
pnp IB-BEB-1(config-if)#switchport beb Allow all BVLANs. provider-network bvlan all IB-BEB-1(config-if)#exit Exit interface mode. IB-BEB-1(config)#interface eth2 Enter interface mode. IB-BEB-1(config-if)#switchport Configure eth2 as a Layer-2 interface. IB-BEB-1(config-if)#bridge-group backbone Associate eth2 with bridge-group backbone. © 2015 IP Infusion Inc. Proprietary 145 PBB-TE Configurations IB-BEB-1(config-if)#switchport mode pnp Set the switching abilities of this interface to PNP mode.
IB-BEB-1(config-if)#switchport beb vlan 7 Add BVLAN to PNP. pnp IB-BEB-1(config-if)#switchport beb Allow all BVLANs. provider-network bvlan all IB-BEB-1(config-if)#exit Exit interface mode. IB-BEB-1(config)#interface pip.1 Enter interface mode. IB-BEB-1(config-if)#switchport beb pip Configure MAC address 0005.1111.1211 for interface backbone-source-mac 0005.1111.1211 pip.1 IB-BEB-1(config-if)#switchport beb vip Map ISID to allow all ingress and egress frames with ISID 1. instance 1 allowed all
instance 1 allowed all IB-BEB-1(config-if)#exit Exit interface mode. IB-BEB-1(config)#interface cbp.1 Enter interface mode. IB-BEB-1(config-if)#switchport beb Map BVLAN to I-SID. customer-backbone instance add 1 bvlan 5 IB-BEB-1(config-if)#exit Exit interface mode. IB-BEB-1(config)#pbb-te configure tesid 10 Configure a TE-SID with SID as 10. IB-BEB-1(pbb-te-vlan-config)#pbb-te vlan 4 Associate backbone VLAN 4 to TE-SID 10.
IB-BEB-1(pbb-te-vlan-config)#pbb-te vlan 5 Associate backbone VLAN 5 to TE-SID 10. IB-BEB-1(pbb-te-vlan-config)#exit Exit the TE-SID mode. IB-BEB-1(config)#pbb-te configure tesid 20 Configure a TE-SID with SID as 20. IB-BEB-1(pbb-te-vlan-config)#pbb-te vlan 6 Associate backbone VLAN 6 to TE-SID 20. IB-BEB-1(pbb-te-vlan-config)#pbb-te vlan 7 Associate backbone VLAN 7 to TE-SID 20. IB-BEB-1(pbb-te-vlan-config)#exit Exit the TE-SID mode. IB-BEB-1(config)#interface cbp.1 Enter interface mode.
IB-BEB-1(config-if)#pbb-te esp tesid 10 Configure TE-SID 10 with remote MAC address ingress remote-mac 0005.1111.1212 vlan 4 0005.1111.1212, and specify the ingress backbone VLAN. IB-BEB-1(config-if)#pbb-te esp tesid 10 Configure TE-SID 10 with remote MAC address egress remote-mac 0005.1111.1212 vlan 5 pnp 0005.1111.1212, and specify the egress backbone VLAN eth1 and egress interface (eth1). IB-BEB-1(config-if)#pbb-te esp tesid 20 Configure TE-SID 20 with remote MAC address
ingress remote-mac 0005.1111.1212 vlan 6 0005.1111.1212, and specify the ingress backbone VLAN. IB-BEB-1(config-if)#pbb-te esp tesid 20 Configure TE-SID 20 with remote MAC address egress remote-mac 0005.1111.1212 vlan 7 pnp 0005.1111.1212, and specify the egress backbone VLAN eth2 and egress interface (eth2). B-BEB-1(config-if)#exit Exit interface mode. IB-BEB-1(config)#ethernet cfm pbb-te Configure a PBB-TE MD with name abc on level 3 for
domain-name type character-string name abc backbone bridge. level 3 mip-creation default bridge backbone IB-BEB-1(config-ether-cfm-pbb-te)#service Configure an MA for TE-SID 10 with MA name pbb-te ma-type string ma-name FOR_TESID_10 FOR_TESID_10. te-sid 10 mip-creation default 146 © 2015 IP Infusion Inc. Proprietary PBB-TE Configurations IB-BEB-1(config-ether-cfm-pbb-te)#mep pbb- Add an RMEP (remote MEP) for TE-SID 10. te crosscheck mpid 70 te-sid 10 mac 0005.1111.1212
0005.1111.1212 IB-BEB-1(config-ether-cfm-pbb-te)#exit Exit CFM configuration mode. IB-BEB-1(config)#interface cbp.1 Enter interface mode. IB-BEB-1(config-if)#ethernet cfm pbb-te mep Configure an UP MEP on logical CBP for TE-SID 10 with MEP up mpid 40 domain-name abc te-sid 10 bridge ID 40. backbone IB-BEB-1(config-if-eth-cfm-pbb-te-mep)#cc Enable unicast continuity checking (CC) for TE-SID 10 and unicast rmpid 70 state enable MEP 40. IB-BEB-1(config-if-eth-cfm-pbb-te- Exit CFM MEP mode.
mep)#exit IB-BEB-1(config-if)#exit Exit interface mode. IB-BEB-1(config)#ethernet cfm pbb-te Configure a PBB-TE MD with name abc on level 3 for domain-name type character-string name abc backbone bridge. level 3 mip-creation default bridge backbone IB-BEB-1(config-ether-cfm-pbb-te)#service Configure an MA for TE-SID 10 with MA name pbb-te ma-type string ma-name FOR_TESID_20 FOR_TESID_20. te-sid 20 mip-creation default IB-BEB-1(config-ether-cfm-pbb-te)#mep pbb- Add an RMEP for TE-SID 20.
te crosscheck mpid 70 te-sid 20 mac 0005.1111.1212 IB-BEB-1(config-ether-cfm-pbb-te)#exit Exit CFM configuration mode. IB-BEB-1(config)#interface cbp.1 Enter interface mode. IB-BEB-1(config-if)#ethernet cfm pbb-te mep Configure an UP MEP on logical CBP for TE-SID 20 with MEP up mpid 40 domain-name abc te-sid 20 bridge ID 40. backbone IB-BEB-1(config-if-eth-cfm-pbb-te-mep)#cc Enable unicast continuity checking (CC) for TE-SID 20 and unicast rmpid 70 state enable MEP 40.
unicast rmpid 70 state enable MEP 40. IB-BEB-1(config-if-eth-cfm-pbb-te- Exit CFM MEP mode. mep)#exit IB-BEB-1(config-if)#exit Exit interface mode. IB-BEB-1(config)#interface cbp.1 Enter interface mode. IB-BEB-1(config-if)#pbb-te aps-group 1 Create an APS GROUP with ID 1 with working-tesi as 10 working-tesi 10 protection-tesi 20 and protection-tesi as 20. IB-BEB-1(config-if)#pbb-te aps-group 1 isid Associate ISID 1 to APS Group 1. add 1 IB-BEB-1(config-if)#exit Exit interface mode.
IB-BEB-1(config-if)#exit Exit interface mode. IB-BEB-1(config)#pbb-te configure switching Enter the APS Group configuration mode. cbp cbp.1 aps-group 1 IB-BEB-1(pbb-te-config-switching)#pbb-te Associate APS group 1 to MD with name abc and working MA associate aps-group 1 cbp cbp.1 md-name abc FOR_TESID_10 and protection MA FOR_TESID_20. working ma-name FOR_TESID_10 protective ma- name FOR_TESID_20 IB-BEB-1(pbb-te-config-switching)#exit Exit the APS Group Configuration mode.
© 2015 IP Infusion Inc. Proprietary 147 PBB-TE Configurations BCB-1 BCB-1#configure terminal Enter configure mode. BCB-1(config)#bridge 1 protocol provider- Configure bridge 1 as a provider bridge. mstp BCB-1(config)#vlan database Enter the VLAN Configure mode. BCB-1(config-vlan)#vlan 4 type service Configure VLAN 4 as a service VLAN and associate it with point-point bridge 1 state enable bridge 1. BCB-1(config-vlan)#vlan 5 type service Configure VLAN 5 as a service VLAN and associate it with
point-point bridge 1 state enable bridge 1. BCB-1(config-vlan)#exit Exit VLAN configure mode. BCB-1(config)#interface eth1 Enter interface mode. BCB-1(config-if)#switchport Configure eth1 as a Layer-2 interface. BCB-1(config-if)#bridge-group 1 Associate eth1 with bridge 1. BCB-1(config-if)#switchport mode provider- Set the switching abilities of this interface to provider-network network mode. BCB-1(config-if)#switchport provider- Associate Service VLAN 4 with the provider network.
network allowed vlan add 4 BCB-1(config-if)#switchport provider- Associate Service VLAN 5 with the provider network. network allowed vlan add 5 BCB-1(config-if)#exit Exit interface mode. BCB-1(config)#interface eth3 Enter interface mode. BCB-1(config-if)#switchport Configure eth3 as a Layer-2 interface. BCB-1(config-if)#bridge-group 1 Associate eth3 with bridge 1. BCB-1(config-if)#switchport mode provider- Set the switching abilities of this interface to provider-network network mode.
network mode. BCB-1(config-if)#switchport provider- Associate Service VLAN 4 with the provider network. network allowed vlan add 4 BCB-1(config-if)#switchport provider- Associate Service VLAN 5 with the provider network. network allowed vlan add 5 BCB-1(config-if)#exit Exit interface mode. BCB-1(config)#bridge 1 address Add a static FDB entry to the FDB table to forward all frames 0005.1111.1212 forward eth3 vlan 5 with MAC address 0005.1111.1212 and VLAN 4 to interface eth3.
interface eth3. BCB-1(config)#bridge 1 address Add a static FDB entry to the FDB table to forward all frames 0005.1111.1211 forward eth1 vlan 4 with MAC address 0005.1111.1211 and VLAN 5 to interface eth1. BCB-1(config)#exit Exit the Configure mode. BCB-2 BCB-2#configure terminal Enter configure mode. BCB-2(config)#bridge 1 protocol provider- Configure bridge 1 as a provider bridge. mstp 148 © 2015 IP Infusion Inc. Proprietary PBB-TE Configurations
PBB-TE Configurations BCB-2(config)#vlan database Enter the VLAN Configure mode. BCB-2(config-vlan)#vlan 6 type service Configure VLAN 6 as a service VLAN and associate it with point-point bridge 1 state enable bridge 1. BCB-2(config-vlan)#vlan 7 type service Configure VLAN 7 as a service VLAN and associate it with point-point bridge 1 state enable bridge 1. BCB-2(config-vlan)#exit Exit VLAN Configure mode. BCB-2(config)#interface eth1 Enter interface mode.
BCB-2(config-if)#switchport Configure eth1 as a Layer-2 interface. BCB-2(config-if)#bridge-group 1 Associate eth1 with bridge 1. BCB-2(config-if)#switchport mode provider- Set the switching abilities of this interface to provider-network network mode. BCB-2(config-if)#switchport provider- Associate Service VLAN 6 with the provider network. network allowed vlan add 6 BCB-2(config-if)#switchport provider- Associate Service VLAN 7 with the provider network. network allowed vlan add 7
network allowed vlan add 7 BCB-2(config-if)#exit Exit interface mode. BCB-2(config)#interface eth2 Enter interface mode. BCB-2(config-if)#switchport Configure eth2 as a Layer-2 interface. BCB-2(config-if)#bridge-group 1 Associate the eth2 interface with bridge 1. BCB-2(config-if)#switchport mode provider- Set the switching abilities of this interface to provider-network network mode. BCB-2(config-if)#switchport provider- Associate Service VLAN 6 with the provider network.
network allowed vlan add 6 BCB-2(config-if)#switchport provider- Associate Service VLAN 7 with the provider network. network allowed vlan add 7 BCB-2(config-if)#exit Exit interface mode. BCB-2(config)#bridge 1 address Add a static FDB entry to the FDB table to forward all frames 0005.1111.1212 forward eth2 vlan 7 with MAC address 0005.1111.1212 and VLAN 7 to interface eth3. BCB-2(config)#bridge 1 address Add a static FDB entry to the FDB table to forward all frames
0005.1111.1211 forward eth1 vlan 6 with MAC address 0005.1111.1211 and VLAN 6 to interface eth1. BCB-2(config)#exit Exit the Configure mode. IB-BEB-2 IB-BEB-2#configure terminal Enter configure mode. IB-BEB-2(config)#bridge beb mac Configure an I-component bridge 1 with MAC 0001.0001.0001 1 protocol provider-mstp 0001.0001.0001. IB-BEB-2(config)#bridge beb mac Configure backbone bridge 1 with MAC 0001.0001.0001. 0001.0001.0001 backbone protocol provider- mstp
0001.0001.0001 backbone protocol provider- mstp IB-BEB-2(config)#vlan database Enter VLAN configure mode. © 2015 IP Infusion Inc. Proprietary 149 PBB-TE Configurations IB-BEB-2(config-vlan)#vlan 2 type service Configure VLAN 2 as a service VLAN and associate it with point-point bridge 1 state enable bridge 1. IB-BEB-2(config-vlan)#vlan 3 type service Configure VLAN 3 as a service VLAN and associate it with point-point bridge 1 state enable bridge 1.
point-point bridge 1 state enable bridge 1. IB-BEB-2(config-vlan)#vlan 4 type backbone Configure VLAN 4 as a backbone point-to-point VLAN. point-point state enable IB-BEB-2(config-vlan)#vlan 5 type backbone Configure VLAN 5 as a backbone point-to-point VLAN. point-point state enable IB-BEB-2(config-vlan)#vlan 6 type backbone Configure VLAN 6 as a backbone point-to-point VLAN point-point state enable IB-BEB-2(config-vlan)#vlan 7 type backbone Configure VLAN 7 as a backbone point-to-point VLAN.
point-point state enable IB-BEB-2(config-vlan)#exit Exit VLAN configure mode. IB-BEB-2(config)#interface eth3 Enter interface mode. IB-BEB-2(config-if)#switchport Configure eth3 as a Layer-2 interface. IB-BEB-2(config-if)#bridge-group 1 Associate eth3 with bridge-group 1. IB-BEB-2(config-if)#switchport mode cnp Set the switching abilities of this interface to CNP mode. IB-BEB-2(config-if)#switchport beb vlan 2 Assign VLAN 2 to CNP. cnp IB-BEB-2(config-if)#switchport beb Map SVLAN to I-SID.
customer-network svlan add range 2 3 instance 1 name customer1 IB-BEB-2(config-if)#exit Exit interface mode. IB-BEB-2(config)#interface eth1 Enter interface mode. IB-BEB-2(config-if)#switchport Configure eth1 as a Layer-2 interface. IB-BEB-2(config-if)#bridge-group backbone Associate eth1 with bridge-group backbone IB-BEB-2(config-if)#switchport mode pnp Set the switching abilities of this interface to PNP mode. IB-BEB-2(config-if)#switchport beb vlan 4 Add BVLAN to PNP. pnp
pnp IB-BEB-2(config-if)#switchport beb Allow all BVLANs. provider-network bvlan all IB-BEB-2(config-if)#exit Exit interface mode. IB-BEB-2(config)#interface eth2 Enter interface mode. IB-BEB-2(config-if)#switchport Configure eth2 as a Layer-2 interface. IB-BEB-2(config-if)#bridge-group backbone Associate eth2 with bridge-group backbone. IB-BEB-2(config-if)#switchport mode pnp Set the switching abilities of this interface to PNP mode. IB-BEB-2(config-if)#switchport beb vlan 6 Add BVLAN to PNP.
pnp IB-BEB-2(config-if)#switchport beb Allow all BVLANs. provider-network bvlan all IB-BEB-2(config-if)#exit Exit interface mode. IB-BEB-2(config)#interface pip.1 Enter interface mode. 150 © 2015 IP Infusion Inc. Proprietary PBB-TE Configurations IB-BEB-2(config-if)#switchport beb pip Configure MAC 0005.1111.1212 for interface pip.1. backbone-source-mac 0005.1111.1212 IB-BEB-2(config-if)#switchport beb vip Map ISID to allow all ingress and egress frames with ISID 1. instance 1 allowed all
instance 1 allowed all IB-BEB-2(config-if)#exit Exit interface mode. IB-BEB-2(config)#interface cbp.1 Enter interface mode. IB-BEB-2(config-if)#switchport beb Map SVLAN to I-SID. customer-backbone instance add 1 bvlan 4 IB-BEB-2(config-if)#exit Exit interface mode. IB-BEB-2(config)#pbb-te configure tesid 10 Configure a TE-SID with SID as 10. IB-BEB-2(pbb-te-vlan-config)#pbb-te vlan 4 Associate backbone VLAN 4 to TE-SID 10.
IB-BEB-2(pbb-te-vlan-config)#pbb-te vlan 5 Associate backbone VLAN 5 to TE-SID 10. IB-BEB-2(pbb-te-vlan-config)#exit Exit the TE-SID mode. IB-BEB-2(config)#pbb-te configure tesid 20 Configure a TE-SID with SID as 20. IB-BEB-2(pbb-te-vlan-config)#pbb-te vlan 6 Associate backbone VLAN 6 to TE-SID 20. IB-BEB-2(pbb-te-vlan-config)#pbb-te vlan 7 Associate backbone VLAN 6 to TE-SID 20. IB-BEB-2(pbb-te-vlan-config)#exit Exit the TE-SID mode. IB-BEB-2(config)#interface cbp.1 Enter interface mode.
IB-BEB-2(config-if)#pbb-te esp tesid 10 Configure TE-SID 10 with remote MAC address ingress remote-mac 0005.1111.1211 vlan 5 0005.1111.1211, and specify the ingress backbone VLAN. IB-BEB-2(config-if)#pbb-te esp tesid 10 Configure TE-SID 10 with remote MAC address egress remote-mac 0005.1111.1211 vlan 4 pnp 0005.1111.1211, and specify the egress backbone VLAN eth1 and egress interface (eth1). IB-BEB-2(config-if)#pbb-te esp tesid 20 Configure TE-SID 20 with remote MAC address
ingress remote-mac 0005.1111.1211 vlan 7 0005.1111.1211, and specify the ingress backbone VLAN. IB-BEB-2(config-if)#pbb-te esp tesid 20 Configure TE-SID 20 with remote MAC address egress remote-mac 0005.1111.1211 vlan 6 pnp 0005.1111.1211, and specify the egress backbone VLAN eth2 and egress interface (eth2). IB-BEB-1(config-if)#exit Exit interface mode. IB-BEB-2(config)#ethernet cfm pbb-te Configure PBB-TE MD with name abc on level 3 for backbone
domain-name type character-string name abc bridge. level 3 mip-creation default bridge backbone IB-BEB-2(config-ether-cfm-pbb-te)#service Configure MA for TE-SID 10 with MA name FOR_TESID_10. pbb-te ma-type string ma-name FOR_TESID_10 te-sid 10 mip-creation default IB-BEB-2(config-ether-cfm-pbb-te)#mep pbb- Add an RMEP for TESID 10. te crosscheck mpid 40 te-sid 10 mac 0005.1111.1211 IB-BEB-2(config-ether-cfm-pbb-te)#exit Exit CFM configuration mode.
IB-BEB-2(config)#interface cbp.1 Enter interface mode. IB-BEB-2(config-if)#ethernet cfm pbb-te mep Configure an UP MEP on logical CBP for TE-SID 10 with MEP up mpid 70 domain-name abc te-sid 10 bridge ID 70. backbone IB-BEB-2(config-if-eth-cfm-pbb-te-mep)#cc Enable continutity checking (CC) for TE-SID 10 and MEP 70. unicast rmpid 40 state enable © 2015 IP Infusion Inc. Proprietary 151 PBB-TE Configurations IB-BEB-2(config-if-eth-cfm-pbb-te- Exit CFM MEP mode. mep)#exit
mep)#exit IB-BEB-2(config-if)#exit Exit interface mode. IB-BEB-2(config)#ethernet cfm pbb-te Configure PBB-TE MD with name abc on level 3 for backbone domain-name type character-string name abc bridge. level 3 mip-creation default bridge backbone IB-BEB-2(config-ether-cfm-pbb-te)#service Configure MA for TE-SID 20 with MA name FOR_TESID_20. pbb-te ma-type string ma-name FOR_TESID_20 te-sid 20 mip-creation default IB-BEB-2(config-ether-cfm-pbb-te)#mep pbb- Add an RMEP for TE-SID 20.
te crosscheck mpid 40 te-sid 20 mac 0005.1111.1211 IB-BEB-2(config-ether-cfm-pbb-te)#exit Exit CFM configuration mode IB-BEB-2(config)#interface cbp.1 Enter interface mode. IB-BEB-2(config-if)#ethernet cfm pbb-te mep Configure an UP MEP on logical CBP for TE-SID 20 with MEP up mpid 70 domain-name abc te-sid 20 bridge ID 70. backbone IB-BEB-2(config-if-eth-cfm-pbb-te-mep)#cc Enable continuity checking (CC) for TE-SID 20 and MEP 70. unicast rmpid 40 state enable
unicast rmpid 40 state enable IB-BEB-2(config-if-eth-cfm-pbb-te- Exit CFM MEP mode. mep)#exit IB-BEB-2(config-if)#exit Exit interface mode. IB-BEB-2(config)#interface cbp.1 Enter interface mode. IB-BEB-2(config-if)#pbb-te aps-group 1 Create an APS GROUP with ID 1 with working-tesi as 10 working-tesi 10 protection-tesi 20 and protection-tesi as 20. IB-BEB-2(config-if)#pbb-te aps-group 1 isid Associate ISID 1 to APS Group 1. add 1 IB-BEB-2(config-if)#exit Exit interface mode.
IB-BEB-2(config-if)#exit Exit interface mode. IB-BEB-2(config)#pbb-te configure switching Enter the APS Group configuration mode. cbp cbp.1 aps-group 1 IB-BEB-2(pbb-te-config-switching)#pbb-te Associating APS group 1 to MD with name abc and working associate aps-group 1 cbp cbp.1 md-name abc MA FOR_TESID_10 and protection MA FOR_TESID_20. working ma-name FOR_TESID_10 protective ma- name FOR_TESID_20 IB-BEB-2(pbb-te-config-switching)#exit Exit the APS Group Configuration mode.
Verification and Validation Enter the commands listed in the sections below to confirm the configurations. Verify CFM Configuration for APS On IB-BEB-1 IB-BEB-1#show ethernet cfm pbb-te maintenance-points remote domain-name abc te-sid 10 bridge backbone 152 © 2015 IP Infusion Inc. Proprietary PBB-TE Configurations MPID LEVEL TESID MEP-UP Remote Mac RDI TE-MISMATCH ------------------------------------------------------------------------------------- 70 3 10 Yes 0005.1111.1212 False IB-BEB-1#
70 3 10 Yes 0005.1111.1212 False IB-BEB-1# IB-BEB-1# IB-BEB-1#show ethernet cfm pbb-te maintenance-points remote domain-name abc te-sid 20 bridge backbone MPID LEVEL TESID MEP-UP Remote Mac RDI TE-MISMATCH ------------------------------------------------------------------------------------- 70 3 20 Yes 0005.1111.1212 False IB-BEB-1# On IB-BEB-2 IB-BEB-2#show ethernet cfm pbb-te maintenance-points remote domain-name abc te-sid 10 bridge backbone MPID LEVEL TESID MEP-UP Remote Mac RDI TE-MISMATCH
------------------------------------------------------------------------------------- 40 3 10 Yes 0005.1111.1211 True IB-BEB-2# IB-BEB-2#show ethernet cfm pbb-te maintenance-points remote domain-name abc te-sid 20 bridge backbone MPID LEVEL TESID MEP-UP Remote Mac RDI TE-MISMATCH ------------------------------------------------------------------------------------- 40 3 20 Yes 0005.1111.1211 True IB-BEB-2# Verify APS Configuration On IB-BEB-1 IB-BEB-1#show pbb-te aps-group 1
On IB-BEB-1 IB-BEB-1#show pbb-te aps-group 1 Bridge ApsID Working-Path Protection-Path Current-State Active-Path --------------------------------------------------------------------------------------- backbone 1 10 20 No-Request 10 On IB-BEB-2 IB-BEB-2#show pbb-te aps-group all Bridge ApsID Working-Path Protection-Path Current-State Active-Path --------------------------------------------------------------------------------------- backbone 1 10 20 No-Request 10 Verify Switchover Process
Verify Switchover Process Set eth1 to down on IB-BEB-1 to check that switchover takes place correctly when the working-tesi goes down. IB-BEB-1(config)#interface eth1 IB-BEB-1(config-if)#shutdown IB-BEB-1(config-if)#end Verify switchover using the following commands: IB-BEB-1#show pbb-te aps-group all © 2015 IP Infusion Inc. Proprietary 153 PBB-TE Configurations Bridge ApsID Working-Path Protection-Path Current-State Active-Path
-------------------------------------------------------------------------------------- backbone 1 10 20 Working SF 20 IB-BEB-1#show pbb-te aps-group all Bridge ApsID Working-Path Protection-Path Current-State Active-Path -------------------------------------------------------------------------------------- backbone 1 10 20 No-Request 20 Note: After eth1 of IB-BEB-1 is shut down, the Active path becomes 20, which is the protection-tesi. Unicast Connectivity Fault Management
Unicast Connectivity Fault Management These configurations are for setting up Unicast Connectivity Fault Management (CFM) in a PBB-TE network. Figure 11-3 displays a simple Unicast CFM topology. Figure 11-3: Unicast CFM Topology IB-BEB-1 IB-BEB-1#configure terminal Enter configure mode. IB-BEB-1(config)#bridge beb mac Configure an I-component bridge 1 with MAC 0001.0001.0001 1 protocol provider-mstp 0001.0001.0001.
IB-BEB-1(config)#bridge beb mac Configure backbone bridge 1 with MAC 0001.0001.0001. 0001.0001.0001 backbone protocol provider- mstp IB-BEB-1(config)#vlan database Enter VLAN configure mode. IB-BEB-1(config-vlan)#vlan 2 type service Configure VLAN 2 as a service VLAN and associate it with point-point bridge 1 state enable bridge 1. IB-BEB-1(config-vlan)#vlan 3 type service Configure VLAN 3 as a service VLAN and associate it with point-point bridge 1 state enable bridge 1.
point-point bridge 1 state enable bridge 1. IB-BEB-1(config-vlan)#vlan 4 type backbone Configure VLAN 4 as a backbone point-to-point VLAN. point-point state enable IB-BEB-1(config-vlan)#vlan 5 type backbone Configure VLAN 5 as a backbone point-to-point VLAN. point-point state enable IB-BEB-1(config-vlan)#exit Exit the VLAN configuration mode. IB-BEB-1(config)#interface eth3 Enter interface mode. IB-BEB-1(config-if)#switchport Configure eth3 as a Layer-2 interface.
IB-BEB-1(config-if)#bridge-group 1 Associate eth3 with bridge-group 1. IB-BEB-1(config-if)#switchport mode cnp Set the switching abilities of this interface to CNP mode. 154 © 2015 IP Infusion Inc. Proprietary PBB-TE Configurations IB-BEB-1(config-if)#switchport beb vlan 2 Assign VLAN 2 to CNP. cnp IB-BEB-1(config-if)#switchport beb Map SVLAN to I-SID. customer-network svlan add range 2 3 instance 1 name customer1 IB-BEB-1(config-if)#exit Exit interface mode.
IB-BEB-1(config-if)#exit Exit interface mode. IB-BEB-1(config)#interface eth1 Enter interface mode. IB-BEB-1(config-if)#switchport Configure eth1 as a Layer-2 interface. IB-BEB-1(config-if)#bridge-group backbone Associate eth1 with bridge-group backbone. IB-BEB-1(config-if)#switchport mode pnp Set the switching abilities of this interface to PNP mode. IB-BEB-1(config-if)#switchport beb vlan 5 Add BVLAN to PNP. pnp IB-BEB-1(config-if)#switchport beb Allow all BVLANs. provider-network bvlan all
provider-network bvlan all IB-BEB-1(config-if)#exit Exit interface mode. IB-BEB-1(config)#interface pip.1 Enter interface mode. IB-BEB-1(config-if)#switchport beb pip Configure MAC 0005.1111.1211 for interface pip.1. backbone-source-mac 0005.1111.1211 IB-BEB-1(config-if)#switchport beb vip Map ISID to allow all ingress and egress frames with ISID 1. instance 1 allowed all IB-BEB-1(config-if)#exit Exit interface mode. IB-BEB-1(config)#interface cbp.1 Enter interface mode.
IB-BEB-1(config-if)#switchport beb Map BVLAN to I-SID. customer-backbone instance add 1 bvlan 4 IB-BEB-1(config-if)#exit Exit interface mode. IB-BEB-1(config)#pbb-te configure tesid 10 Configure a TE-SID with SID as 10. IB-BEB-1(pbb-te-vlan-config)#pbb-te vlan 4 Associate backbone VLAN 4 to TE-SID 10. IB-BEB-1(pbb-te-vlan-config)#pbb-te vlan 5 Associate backbone VLAN 5 to TE-SID 10. IB-BEB-1(pbb-te-vlan-config)#exit Exit the TE-SID mode. IB-BEB-1(config)#interface cbp.1 Enter interface mode.
IB-BEB-1(config-if)#pbb-te esp tesid 10 Configure TE-SID 10 with remote MAC address ingress remote-mac 0005.1111.1212 vlan 4 0005.1111.1212, and specify the ingress backbone VLAN. IB-BEB-1(config-if)#pbb-te esp tesid 10 Configure TE-SID 10 with remote MAC address egress remote-mac 0005.1111.1212 vlan 5 pnp 0005.1111.1212, and specify the egress backbone VLAN eth1 and egress interface (eth1). IB-BEB-1(config-if)#exit Exit interface mode.
IB-BEB-1(config-if)#exit Exit interface mode. IB-BEB-1(config)#ethernet cfm pbb-te Configure a PBB-TE MD with name abc on level 3 for domain-name type character-string name abc backbone bridge. level 3 mip-creation default bridge backbone IB-BEB-1(config-ether-cfm-pbb-te)#service Configure an MA for TE-SID 10 with MA name pbb-te ma-type string ma-name MAC_IB_BEB_1 MAC_IB_BEB_1. te-sid 10 mip-creation default IB-BEB-1(config-ether-cfm-pbb-te)#mep pbb- Add an RMEP for TE-SID 10.
te crosscheck mpid 70 te-sid 10 mac 0005.1111.1212 © 2015 IP Infusion Inc. Proprietary 155 PBB-TE Configurations IB-BEB-1(config-ether-cfm-pbb-te)#exit Exit CFM configuration mode. IB-BEB-1(config)#interface cbp.1 Enter interface mode. IB-BEB-1(config-if)#ethernet cfm pbb-te mep Configure an UP MEP on logical CBP for TE-SID 10 with MEP up mpid 40 domain-name abc te-sid 10 bridge ID 40. backbone IB-BEB-1(config-if-eth-cfm-pbb-te-mep)#cc Enable continuity checking (CC) for TE-SID 10 and MEP 40.
unicast rmpid 70 state enable IB-BEB-1(config-if-eth-cfm-pbb-te- Exit CFM MEP mode. mep)#exit IB-BEB-1(config-if)#exit Exit interface mode. IB-BEB-1(config)#exit Exit configure mode. IB-BEB-2 IB-BEB-2#configure terminal Enter configure mode. IB-BEB-2(config)#bridge beb mac Configure an I-component bridge 1 with MAC 0001.0001.0001 1 protocol provider-mstp 0001.0001.0001. IB-BEB-2(config)#bridge beb mac Configure backbone bridge 1 with MAC 0001.0001.0001.
0001.0001.0001 backbone protocol provider- mstp IB-BEB-2(config)#vlan database Enter VLAN configure mode. IB-BEB-2(config-vlan)#vlan 2 type service Configure VLAN 2 as a service VLAN and associate it with point-point bridge 1 state enable bridge 1. IB-BEB-2(config-vlan)#vlan 3 type service Configure VLAN 3 as a service VLAN and associate it with point-point bridge 1 state enable bridge 1. IB-BEB-2(config-vlan)#vlan 4 type backbone Configure VLAN 4 as a backbone point-to-point VLAN.
point-point state enable IB-BEB-2(config-vlan)#vlan 5 type backbone Configure VLAN 5 as a backbone point-to-point VLAN. point-point state enable IB-BEB-2(config-vlan)#exit Exit VLAN configure mode. IB-BEB-2(config)#interface eth3 Enter interface mode. IB-BEB-2(config-if)#switchport Configure eth3 as a Layer-2 interface. IB-BEB-2(config-if)#bridge-group 1 Associate eth3 with bridge-group 1. IB-BEB-2(config-if)#switchport mode cnp Set the switching abilities of this interface to CNP mode.
IB-BEB-2(config-if)#switchport beb vlan 2 Assign VLAN 2 to CNP. cnp IB-BEB-2(config-if)#switchport beb Map SVLAN to I-SID. customer-network svlan add range 2 3 instance 1 name customer1 IB-BEB-2(config-if)#exit Exit interface mode. IB-BEB-2(config)#interface eth1 Enter interface mode. IB-BEB-2(config-if)#switchport Configure eth1 as a Layer-2 interface. IB-BEB-2(config-if)#bridge-group backbone Associate eth1 with bridge-group backbone.
IB-BEB-2(config-if)#switchport mode pnp Set the switching abilities of this interface to PNP mode. 156 © 2015 IP Infusion Inc. Proprietary PBB-TE Configurations IB-BEB-2(config-if)#switchport beb vlan 4 Add BVLAN 4 to PNP. pnp IB-BEB-2(config-if)#switchport beb Allow all BVLANs. provider-network bvlan all IB-BEB-2(config-if)#exit Exit interface mode. IB-BEB-2(config)#interface pip.1 Enter interface mode. IB-BEB-2(config-if)#switchport beb pip Configure MAC 0005.1111.1212 for pip.1.
backbone-source-mac 0005.1111.1212 IB-BEB-2(config-if)#switchport beb vip Map ISID to allow all ingress and egress frames with ISID 1. instance 1 allowed all IB-BEB-2(config-if)#exit Exit interface mode. IB-BEB-2(config)#interface cbp.1 Enter interface mode. IB-BEB-2(config-if)#switchport beb Map BVLAN to I-SID. customer-backbone instance add 1 bvlan 4 IB-BEB-2(config-if)#exit Exit interface mode. IB-BEB-2(config)#pbb-te configure tesid 10 Configure a TE-SID with SID as 10.
IB-BEB-2(pbb-te-vlan-config)#pbb-te vlan 4 Associate backbone VLAN 4 to TE-SID 10. IB-BEB-2(pbb-te-vlan-config)#pbb-te vlan 5 Associate backbone VLAN 5 to TE-SID 10. IB-BEB-2(pbb-te-vlan-config)#exit Exit the TE-SID mode. IB-BEB-2(config)#interface cbp.1 Enter interface mode. IB-BEB-2(config-if)#pbb-te esp tesid 10 Configure TE-SID 10 with remote MAC address ingress remote-mac 0005.1111.1211 vlan 5 0005.1111.1211, and specify the ingress backbone VLAN.
IB-BEB-2(config-if)#pbb-te esp tesid 10 Configure TE-SID 10 with remote MAC address egress remote-mac 0005.1111.1211 vlan 4 pnp 0005.1111.1211, and specify the egress backbone VLAN eth1 and egress interface (eth1). IB-BEB-2(config-if)#exit Exit interface mode. IB-BEB-2(config)#ethernet cfm pbb-te Configure a PBB-TE MD with name abc on level 3 for domain-name type character-string name abc backbone bridge. level 3 mip-creation default bridge backbone
level 3 mip-creation default bridge backbone IB-BEB-2(config-ether-cfm-pbb-te)#service Configure an MA for TE-SID 10 with MA name pbb-te ma-type string ma-name MA_IB_BEB_2 MAC_IB_BEB_2. te-sid 10 mip-creation default IB-BEB-2(config-ether-cfm-pbb-te)#mep pbb- Add an RMEP for TE-SID 10. te crosscheck mpid 40 te-sid 10 mac 0005.1111.1211 IB-BEB-2(config-ether-cfm-pbb-te)#exit Exit CFM configuration mode. IB-BEB-2(config)#interface cbp.1 Enter interface mode.
IB-BEB-2(config-if)#ethernet cfm pbb-te mep Configure an UP MEP on logical CBP for TE-SID 10 with MEP up mpid 70 domain-name abc te-sid 10 bridge ID 70. backbone IB-BEB-2(config-if-eth-cfm-pbb-te-mep)#cc Enable continuity checking (CC) for TE-SID 10 and MEP 70. unicast rmpid 40 state enable IB-BEB-2(config-if-eth-cfm-pbb-te- Exit CFM MEP mode. mep)#exit © 2015 IP Infusion Inc. Proprietary 157 PBB-TE Configurations IB-BEB-2(config-if)#exit Exit interface mode.
IB-BEB-2(config-if)#exit Exit interface mode. IB-BEB-2(config)#end Exit configuration mode. BCB BCB#configure terminal Enter configure mode. BCB(config)#bridge 1 protocol provider-mstp Configure bridge 1 as a provider bridge. BCB(config)#vlan database Enter the VLAN Configure mode. BCB(config-vlan)#vlan 4 type service point- Configure VLAN 4 as a service VLAN and associate it with point bridge 1 state enable bridge 1.
point bridge 1 state enable bridge 1. BCB(config-vlan)#vlan 5 type service point- Configure VLAN 5 as a service VLAN and associate it with point bridge 1 state enable bridge 1. BCB(config-vlan)#exit Exit VLAN Configure mode. BCB(config)#interface eth1 Enter interface mode. BCB(config-if)#switchport Configure eth1 as a Layer-2 interface. BCB(config-if)#bridge-group 1 Associate eth1 with bridge 1.
BCB(config-if)#switchport mode provider- Set the switching abilities of this interface to provider-network network mode. BCB(config-if)#switchport provider-network Associate Service VLAN 4 with the provider network. allowed vlan add 4 BCB(config-if)#switchport provider-network Associate Service VLAN 5 with the provider network. allowed vlan add 5 BCB(config-if)#exit Exit interface mode. BCB(config)#interface eth3 Enter interface mode.
BCB(config)#interface eth3 Enter interface mode. BCB(config-if)#switchport Configure eth3 as a Layer-2 interface. BCB(config-if)#bridge-group 1 Associate eth3 with bridge 1. BCB(config-if)#switchport mode provider- Set the switching abilities of this interface to provider-network network mode. BCB(config-if)#switchport provider-network Associate Service VLAN 4 with the provider network. allowed vlan add 4
allowed vlan add 4 BCB(config-if)#switchport provider-network Associate Service VLAN 5 with the provider network. allowed vlan add 5 BCB(config-if)#exit Exit interface mode. BCB(config)#bridge 1 address 0005.1111.1212 Add a static FDB entry to the FDB table to forward all frames forward eth3 vlan 5 with MAC address 0005.1111.1212 and VLAN 5 to interface eth3. BCB(config)#bridge 1 address 0005.1111.1211 Add a static FDB entry to the FDB table to forward all frames
forward eth1 vlan 4 with MAC address 0005.1111.1211 and VLAN 4 to interface eth1. BCB(config)#exit Exit the Configure mode. Validation Use the commands listed in the sections below to verify and validate the configurations. 158 © 2015 IP Infusion Inc. Proprietary PBB-TE Configurations Verify CFM Maintenance Points On IB-BEB-1 IB-BEB-1#show ethernet cfm pbb-te maintenance-points remote domain-name abc te-sid 10 bridge backbone MPID LEVEL TESID MEP-UP Remote Mac RDI TE-MISMATCH
------------------------------------------------------------------------------------- 70 3 10 Yes 0005.1111.1212 True IB-BEB-1# On IB-BEB-2 IB-BEB-2#show ethernet cfm pbb-te maintenance-points remote domain-name abc te-sid 10 bridge backbone MPID LEVEL TESID MEP-UP Remote Mac RDI TE-MISMATCH ------------------------------------------------------------------------------------- 40 3 10 Yes 0005.1111.1211 True Verify CFM Traceroute On IB-BEB-1
Verify CFM Traceroute On IB-BEB-1 IB-BEB-1#traceroute pbb-te ethernet esp-da-mac 0005.1111.1212 domain-name abc te-sid 10 tlv pbb-te-mip reverse-vid 4 bridge backbone source mac Hops Relay-action 0005.1111.1212 1 1 On IB-BEB-2 IB-BEB-2#traceroute pbb-te ethernet esp-da-mac 0005.1111.1211 domain-name abc te-sid 10 tlv pbb-te-mip reverse-vid 5 bridge backbone source mac Hops Relay-action 0005.1111.1211 1 1 Verify CFM Ping On IB-BEB-1
0005.1111.1211 1 1 Verify CFM Ping On IB-BEB-1 IB-BEB-1#ping ethernet pbb-te unicast rmepid 70 mepid 40 domain-name abc te-sid 10 bridge backbone success rate is 100 (5/5) IB-BEB-1# On IB-BEB-2 IB-BEB-2#ping ethernet pbb-te unicast rmepid 40 mepid 70 domain-name abc te-sid 10 bridge backbone success rate is 100 (5/5) IB-BEB-2# Multicast Connectivity Fault Management These configurations are for setting up multicast Connectivity Fault Management (CFM) in a PBB-TE network.
Figure 11-4 displays a simple CFM topology. © 2015 IP Infusion Inc. Proprietary 159 PBB-TE Configurations Figure 11-4: CFM Topology IB-BEB1 IB-BEB-1#configure terminal Enter configure mode. IB-BEB-1(config)#bridge beb mac 0001.0001.0001 Configure an I-component bridge 1 with MAC 1 protocol provider-mstp 0001.0001.0001. IB-BEB-1(config)#bridge beb mac 0001.0001.0001 Configure backbone bridge 1 with MAC backbone protocol provider-mstp 0001.0001.0001.
backbone protocol provider-mstp 0001.0001.0001. IB-BEB-1(config)#vlan database Enter VLAN configure mode. IB-BEB-1(config-vlan)#vlan 10 type service Configure VLAN 10 as a service VLAN and associate it point-point bridge 1 state enable with bridge 1. IB-BEB-1(config-vlan)#vlan 20 type service Configure VLAN 20 as a service VLAN and associate it point-point bridge 1 state enable with bridge 1. IB-BEB-1(config-vlan)#vlan 40 type backbone Configure VLAN 30 as a backbone point-to-point VLAN.
point-point state enable IB-BEB-1(config-vlan)#vlan 30 type backbone Configure VLAN 40 as a backbone point-to-point VLAN. point-point state enable IB-BEB-1(config-vlan)#vlan 50 type backbone Configure VLAN 50 as a backbone point-to-point VLAN. point-point state enable IB-BEB-1(config-vlan)#exit Exit VLAN configure mode. IB-BEB-1(config)#interface eth3 Enter interface mode. IB-BEB-1(config-if)#switchport Configure eth3 as a Layer-2 interface.
IB-BEB-1(config-if)#bridge-group 1 Associate eth3 with bridge-group 1. IB-BEB-1(config-if)#switchport mode cnp Set the switching abilities of this interface to CNP mode. IB-BEB-1(config-if)#switchport beb vlan 10 cnp Assign VLAN 10 to CNP. IB-BEB-1(config-if)#switchport beb customer- Map SVLAN to I-SID. network svlan add range 10 20 instance 2 name isid IB-BEB-1(config-if)#exit Exit interface mode. IB-BEB-1(config)#interface eth1 Enter interface mode.
IB-BEB-1(config-if)#switchport Configure eth1 as a Layer-2 interface. IB-BEB-1(config-if)#bridge-group backbone Associate eth1 with bridge-group backbone. IB-BEB-1(config-if)#switchport mode pnp Set the switching abilities of this interface to PNP mode. IB-BEB-1(config-if)#switchport beb vlan 40 pnp Add BVLAN to PNP. 160 © 2015 IP Infusion Inc. Proprietary PBB-TE Configurations IB-BEB-1(config-if)#switchport beb provider- Allow all BVLANs. network bvlan all
network bvlan all IB-BEB-1(config-if)#exit Exit interface mode. IB-BEB-1(config)#interface pip.1 Enter interface mode. IB-BEB-1(config-if)#switchport beb pip Configure MAC 0005.0005.0003 for interface pip.1. backbone-source-mac 0005.0005.0003 IB-BEB-1(config-if)#switchport beb vip Map ISID to allow all ingress and egress frames with ISID instance 2 allowed all 1. IB-BEB-1(config-if)#exit Exit interface mode. IB-BEB-1(config)#pbb-te configure tesid 3 Configure a TE-SID with SID as 3.
IB-BEB-1(pbb-te-vlan-config)#pbb-te vlan 40 Associate backbone VLAN 40 to TE-SID 3. IB-BEB-1(pbb-te-vlan-config)#pbb-te vlan 30 Associate backbone VLAN 30 to TE-SID 3. IB-BEB-1(pbb-te-vlan-config)#pbb-te vlan 50 Associate backbone VLAN 50 to TE-SID 3. IB-BEB-1(pbb-te-vlan-config)#exit Exit the TE-SID mode. IB-BEB-1(config)#interface cbp.1 Enter interface mode. IB-BEB-1(config-if)#pbb-te esp tesid 3 ingress Configure TE-SID 3 with remote MAC address
remote-mac 0075.0075.0003 vlan 30 0075.0075.0003, and specify the ingress backbone VLAN. IB-BEB-1(config-if)#pbb-te esp tesid 3 ingress Configure TE-SID 3 with remote MAC address remote-mac 0085.0085.0003 vlan 50 0085.0085.0003, and specify the ingress backbone VLAN. IB-BEB-1(config-if)#pbb-te esp tesid 3 egress Configure TE-SID 3 with remote multicast MAC address multicast remote-mac 0180.c200.0030 vlan 40 0180.c200.0030, and specify the egress backbone
pnp eth1 VLAN and egress interface (eth1). IB-BEB-1(config-if)#exit Exit interface mode. IB-BEB-1(config)#ethernet cfm pbb-te domain- Configure PBB-TE MD with name abc on level 3 for name type character-string name abc level 3 backbone bridge. mip-creation default bridge backbone IB-BEB-1(config-ether-cfm-pbb-te)#service pbb- Configure an MA for TE-SID 3 with MA name 12. te ma-type string ma-name 12 te-sid 3 mip- creation default
creation default IB-BEB-1(config-ether-cfm-pbb-te)#mep pbb-te Add an RMEP for TE-SID 3. crosscheck mpid 42 te-sid 3 mac 075.075.03 IB-BEB-1(config-ether-cfm-pbb-te)#mep pbb-te Exit CFM configuration mode. crosscheck mpid 82 te-sid 3 mac 085.085.03 IB-BEB-1(config)#interface cbp.1 Enter interface mode. IB-BEB-1(config-if)#ethernet cfm pbb-te mep up Configure an UP MEP on logical CBP for TE-SID 3. mpid 3 domain-name abc te-sid 3 bridge backbone
mpid 3 domain-name abc te-sid 3 bridge backbone IB-BEB-2(config-if-eth-cfm-pbb-te-mep)#cc Enable continuity checking (CC) for TE-SID 3 and MEP 3. multicast state enable IB-BEB-2(config-if-eth-cfm-pbb-te-mep)#exit Exit CFM MEP mode. IB-BEB-1(config-if)#exit Exit interface mode. © 2015 IP Infusion Inc. Proprietary 161 PBB-TE Configurations Configuration for BCB BCB#configure terminal Enter configure mode. BCB(config)#bridge 1 protocol provider-mstp Configure bridge 1 as a provider bridge.
BCB(config)#vlan database Enter the VLAN Configure mode. BCB(config-vlan)#vlan 30 type service point- Configure VLAN 30 as a service VLAN and associate it point bridge 1 state enable with bridge 1. BCB(config-vlan)#vlan 40 type service point- Configure VLAN 40 as a service VLAN and associate it point bridge 1 state enable with bridge 1. BCB(config-vlan)#vlan 50 type service point- Configure VLAN 50 as a service VLAN and associate it point bridge 1 state enable with bridge 1.
point bridge 1 state enable with bridge 1. BCB(config-vlan)#exit Exit VLAN configure mode. BCB(config)#pbb-te configure tesid 3 Configure TE-SID 3. BCB(pbb-te-vlan-config)#pbb-te bridge 1 vlan Associate backbone VLAN 40 to TE-SID 3. 40 BCB(pbb-te-vlan-config)#pbb-te bridge 1 vlan Associate backbone VLAN 30 to TE-SID 3. 30 BCB(pbb-te-vlan-config)#pbb-te bridge 1 vlan Associate backbone VLAN 50 to TE-SID 3. 50 BCB(pbb-te-vlan-config)#exit Exit PBB-TE VLAN configure mode.
BCB(config)#interface eth1 Enter interface mode. BCB(config-if)#switchport Configure eth1 as a Layer-2 interface. BCB(config-if)#bridge-group 1 Associate eth1 with bridge 1. BCB(config-if)#switchport mode provider- Set the switching abilities of this interface to provider- network network mode. BCB(config-if)#switchport provider-network Associate Service VLAN 30 with the provider network. allowed vlan add 30
allowed vlan add 30 BCB(config-if)#switchport provider-network Associate Service VLAN 40 with the provider network. allowed vlan add 40 BCB(config-if)#switchport provider-network Associate Service VLAN 50 with the provider network. allowed vlan add 50 BCB(config)#exit Exit interface mode. BCB(config)#interface eth2 Enter interface mode. BCB(config-if)#switchport Configure eth2 as a Layer-2 interface. BCB(config-if)#bridge-group 1 Associate eth2 with bridge 1.
BCB(config-if)#switchport mode provider- Set the switching abilities of this interface to provider- network network mode. BCB(config-if)#switchport provider-network Associate Service VLAN 30 with the provider network. allowed vlan add 30 BCB(config-if)#switchport provider-network Associate Service VLAN 40 with the provider network. allowed vlan add 40 BCB(config-if)#exit Exit interface mode. BCB(config)#interface eth3 Enter interface mode. 162 © 2015 IP Infusion Inc. Proprietary
162 © 2015 IP Infusion Inc. Proprietary PBB-TE Configurations BCB(config-if)#switchport Configure eth3 as a Layer-2 interface. BCB(config-if)#bridge-group 1 Associate the eth3 interface with bridge 1. BCB(config-if)#switchport mode provider- Set the switching abilities of this interface to provider- network network mode BCB(config-if)#switchport provider-network Associate Service VLAN 30 with the provider network. allowed vlan add 30
allowed vlan add 30 BCB(config-if)#switchport provider-network Associate Service VLAN 40 with the provider network. allowed vlan add 40 BCB(config-if)#exit Exit interface mode. BCB(config)#interface eth4 Enter interface mode. BCB(config-if)#switchport Configure eth4 as a Layer-2 interface. BCB(config-if)#bridge-group 1 Associate eth4 with bridge 1. BCB(config-if)#switchport mode provider- Set the switching abilities of this interface to provider- network network mode.
network network mode. BCB(config-if)#switchport provider-network Associate Service VLAN 40 with the provider network. allowed vlan add 40 BCB(config-if)#switchport provider-network Associate Service VLAN 50 with the provider network. allowed vlan add 50 BCB(config-if)#exit Exit interface mode. BCB(config)#bridge 1 address 0005.0005.0003 Add a static FDB entry to the FDB table to forward all forward eth1 vlan 30 frames with MAC address 0005.0005.0003 and VLAN 30 to interface eth1.
30 to interface eth1. BCB(config)#bridge 1 address 0075.0075.0003 Add a static FDB entry to the FDB table to forward all forward eth3 vlan 40 frames with MAC address 0075.0075.0003 and VLAN 40 to interface eth3. BCB(config)#bridge 1 address 0085.0085.0003 Add a static FDB entry to the FDB table to forward all forward eth4 vlan 40 frames with MAC address 0085.0085.0003 and VLAN 40 to interface eth4.
VLAN 40 to interface eth4. BCB(config)#bridge 1 address 0180.c200.0030 Add a static FDB entry to the FDB table to forward all forward eth3 vlan 40 frames with MAC address 0180.c200.0030 and VLAN 40 to interface eth3. BCB(config)#bridge 1 address 0180.c200.0030 Add a static FDB entry to the FDB table to forward all forward eth4 vlan 40 frames with MAC address 0180.c200.0030 and VLAN 40 to interface eth4. BCB(config)#exit Exit the Configure mode. IB-BEB2
BCB(config)#exit Exit the Configure mode. IB-BEB2 IB-BEB-2#configure terminal Enter configure mode. IB-BEB-2(config)#bridge beb mac 0001.0001.0002 Configure an I-component bridge 1 with MAC 1 protocol provider-mstp 0001.0001.0002. IB-BEB-2(config)#bridge beb mac 0001.0001.0001 Configure backbone bridge 1 with MAC backbone protocol provider-mstp 0001.0001.0001. IB-BEB-2(config)#vlan database Enter VLAN configure mode. © 2015 IP Infusion Inc. Proprietary 163 PBB-TE Configurations
PBB-TE Configurations IB-BEB-2(config-vlan)#vlan 10 type service Configure VLAN 10 as a backbone point-to-point VLAN. point-point bridge 1 state enable IB-BEB-2(config-vlan)#vlan 30 type backbone Configure VLAN 30 as a backbone point-to-point VLAN. point-point state enable IB-BEB-2(config-vlan)#vlan 40 type backbone Configure VLAN 40 as a backbone point-to-point VLAN. point-point state enable IB-BEB-2(config-vlan)#exit Exit VLAN configure mode.
IB-BEB-2(config)#interface eth3 Enter interface mode. IB-BEB-2(config-if)#switchport Configure eth3 as a Layer-2 interface. IB-BEB-2(config-if)#bridge-group 1 Associate eth3 with bridge-group 1. IB-BEB-2(config-if)#switchport mode cnp Set the switching abilities of this interface to CNP mode. IB-BEB-2(config-if)#switchport beb vlan 10 cnp Assign VLAN 10 to CNP. IB-BEB-2(config-if)#switchport beb customer- Map SVLAN to I-SID. network svlan add range 10 20 instance 2 name isid
isid IB-BEB-2(config-if)#exit Exit interface mode. IB-BEB-2(config)#interface eth1 Enter interface mode. IB-BEB-2(config-if)#switchport Configure eth1 as a Layer-2 interface. IB-BEB-2(config-if)#bridge-group backbone Associate eth1 with bridge-group backbone. IB-BEB-2(config-if)#switchport mode pnp Set the switching abilities of this interface to PNP mode. IB-BEB-2(config-if)#switchport beb vlan 40 pnp Add BVLAN 40 to PNP. IB-BEB-2(config-if)#switchport beb provider- Allow all BVLANs.
network bvlan all IB-BEB-2(config-if)#exit Exit interface mode. IB-BEB-2(config)#interface pip.1 Enter interface mode. IB-BEB-2(config-if)#switchport beb pip Configure MAC 0075.0075.0003 for interface pip.1. backbone-source-mac 0075.0075.0003 IB-BEB-2(config-if)#switchport beb vip Map ISID to allow all ingress and egress frames with ISID instance 2 allowed all 1. IB-BEB-2(config-if)#exit Exit interface mode. IB-BEB-2(config)#pbb-te configure tesid 3 Configure a TE-SID with SID as 3.
IB-BEB-2(pbb-te-vlan-config)#pbb-te vlan 30 Associate backbone VLAN 30 to TE-SID 3. IB-BEB-2(pbb-te-vlan-config)#pbb-te vlan 40 Associate backbone VLAN 40 to TE-SID 3. IB-BEB-2(pbb-te-vlan-config)#exit Exit the TE-SID mode. IB-BEB-2(config)#interface cbp.1 Enter interface mode. IB-BEB-2(config-if)#pbb-te esp tesid 3 ingress Configure TE-SID 3 with remote MAC address multicast mcast-mac 0180.c200.0030 remote-mac 0005.0005.0003 and multicast MAC address
0005.0005.0003 vlan 40 0180.c200.0030; then specify the ingress backbone VLAN. IB-BEB-2(config-if)#pbb-te esp tesid 3 egress Configure TE-SID 3 with remote MAC address remote-mac 0005.0005.0003 vlan 30 pnp eth1 0005.0005.0003, and specify the egress backbone VLAN and egress interface (eth1). IB-BEB-2(config-if)#exit Exit interface mode. 164 © 2015 IP Infusion Inc. Proprietary PBB-TE Configurations IB-BEB-2(config)#ethernet cfm pbb-te domain- Configure a PBB-TE MD with name abc on level 3 for
name type character-string name abc level 3 backbone bridge. mip-creation default bridge backbone IB-BEB-2(config-ether-cfm-pbb-te)#service pbb- Configure an MA for TE-SID 3 with MA name 12. te ma-type string ma-name 12 te-sid 3 mip- creation default IB-BEB-2(config-ether-cfm-pbb-te)#mep pbb-te Add an RMEP for TE-SID 3. crosscheck mpid 3 te-sid 3 mac 05.05.03 IB-BEB-2(config-ether-cfm-pbb-te)#exit Exit CFM configuration mode. IB-BEB-2(config)#interface cbp.1 Enter interface mode.
IB-BEB-2(config-if)#ethernet cfm pbb-te mep up Configure an UP MEP on logical CBP for TE-SID 3. mpid 42 domain-name abc te-sid 3 bridge backbone IB-BEB-2(config-if-eth-cfm-pbb-te-mep)#cc Enable continuity checking (CC) for TE-SID 3 and MEP unicast rmpid 3 state enable 42. IB-BEB-2(config-if-eth-cfm-pbb-te-mep)#exit Exit CFM MEP mode. IB-BEB-2(config-if)#exit Exit interface mode. IB-BEB-2(config)#exit Exit configure mode. IB-BEB3 IB-BEB-3#configure terminal Enter configure mode.
IB-BEB-3#configure terminal Enter configure mode. IB-BEB-3(config)#bridge beb mac 0001.0001.0002 Configure an I-component bridge 1 with MAC 1 protocol provider-mstp 0001.0001.0002. IB-BEB-3(config)#bridge beb mac 0001.0001.0001 Configure backbone bridge 1 with MAC backbone protocol provider-mstp 0001.0001.0001. IB-BEB-3(config)#vlan database Enter VLAN configure mode. IB-BEB-3(config-vlan)#vlan 10 type service Configure VLAN 10 as a backbone point-to-point VLAN.
point-point bridge 1 state enable IB-BEB-3(config-vlan)#vlan 30 type backbone Configure VLAN 30 as a backbone point-to-point VLAN. point-point state enable IB-BEB-3(config-vlan)#vlan 40 type backbone Configure VLAN 40 as a backbone point-to-point VLAN. point-point state enable IB-BEB-3(config-vlan)#vlan 50 type backbone Configure VLAN 50 as a backbone point-to-point VLAN point-point state enable IB-BEB-3(config-vlan)#exit Exit VLAN configure mode.
IB-BEB-3(config)#interface eth3 Enter interface mode. IB-BEB-3(config-if)#switchport Configure eth3 as a Layer-2 interface. IB-BEB-3(config-if)#bridge-group 1 Associate eth3 with bridge-group 1. IB-BEB-3(config-if)#switchport mode cnp Set the switching abilities of this interface to CNP mode. IB-BEB-3(config-if)#switchport beb vlan 10 cnp Assign VLAN 10 to CNP. IB-BEB-3(config-if)#switchport beb customer- Map SVLAN to I-SID. network svlan add range 10 20 instance 2 name isid
isid © 2015 IP Infusion Inc. Proprietary 165 PBB-TE Configurations IB-BEB-3(config-if)#exit Exit interface mode. IB-BEB-3(config)#interface eth1 Enter interface mode. IB-BEB-3(config-if)#switchport Configure eth1 as a Layer-2 interface. IB-BEB-3(config-if)#bridge-group backbone Associate eth1 with bridge-group backbone. IB-BEB-3(config-if)#switchport mode pnp Set the switching abilities of this interface to PNP mode. IB-BEB-3(config-if)#switchport beb vlan 50 pnp Add BVLAN to PNP.
IB-BEB-3(config-if)#switchport beb provider- Allow all BVLANs. network bvlan all IB-BEB-3(config-if)#exit Exit interface mode. IB-BEB-3(config)#interface pip.1 Enter interface mode. IB-BEB-3(config-if)#switchport beb pip Configure MAC 0085.0085.0003 for interface pip.1. backbone-source-mac 0085.0085.0003 IB-BEB-3(config-if)#switchport beb vip Map ISID to allow all ingress and egress frames with ISID instance 2 allowed all 2. IB-BEB-3(config-if)#exit Exit interface mode.
IB-BEB-3(config-if)#exit Exit interface mode. IB-BEB-3(config)#pbb-te configure tesid 3 Configure a TE-SID with SID as 3. IB-BEB-3(pbb-te-vlan-config)#pbb-te vlan 40 Associate backbone VLAN 40 to TE-SID 3. IB-BEB-3(pbb-te-vlan-config)#pbb-te vlan 50 Associate backbone VLAN 50 to TE-SID 3. IB-BEB-3(pbb-te-vlan-config)#exit Exit the TE-SID mode. IB-BEB-3(config)#interface cbp.1 Enter interface mode. IB-BEB-3(config-if)#pbb-te esp tesid 3 ingress Configure TE-SID 3 with remote MAC address
multicast mcast-mac 0180.c200.0030 remote-mac 0005.0005.0003 and multicast MAC as 0005.0005.0003 vlan 40 0180.c200.0030; then specify the ingress backbone VLAN. IB-BEB-3(config-if)#pbb-te esp tesid 3 egress Configure TE-SID 3 with remote MAC address remote-mac 0005.0005.0003 vlan 50 pnp eth1 0005.0005.0003, and specify the egress backbone VLAN and egress interface (eth1). IB-BEB-3(config-if)#exit Exit interface mode.
IB-BEB-3(config-if)#exit Exit interface mode. IB-BEB-3(config)#ethernet cfm pbb-te domain- Configure a PBB-TE MD with name abc on level 3 for name type character-string name abc level 3 backbone bridge. mip-creation default bridge backbone IB-BEB-3(config-ether-cfm-pbb-te)#service pbb- Configure an MA for TE-SID 3 with MA name 12. te ma-type string ma-name 12 te-sid 3 mip- creation default IB-BEB-3(config-ether-cfm-pbb-te)#mep pbb-te Add an RMEP for TESID 3.
crosscheck mpid 3 te-sid 3 mac 05.05.03 IB-BEB-3(config-ether-cfm-pbb-te)#exit Exit CFM configuration mode. IB-BEB-3(config)#interface cbp.1 Enter interface mode. IB-BEB-3(config-if)#ethernet cfm pbb-te mep up Configure an UP MEP on logical CBP for TE-SID 3. mpid 82 domain-name abc te-sid 3 bridge backbone IB-BEB-3(config-if-eth-cfm-pbb-te-mep)#cc Enable continuity checking (CC) for TE-SID 3 and MEP unicast rmpid 3 state enable 82. 166 © 2015 IP Infusion Inc. Proprietary PBB-TE Configurations
PBB-TE Configurations IB-BEB-3(config-if-eth-cfm-pbb-te-mep)#exit Exit CFM MEP mode. IB-BEB-3(config-if)#exit Exit interface mode. IB-BEB-3(config)#exit Exit the configure mode. Validation Follow the steps in the sections below to verify and validate the configurations. Verify CFM Maintenance Points On IB-BEB-1 IB-BEB-1#sh ethernet cfm pbb-te maintenance-points remote domain-name abc te-sid 3 bridge backbone MPID LEVEL TESID MEP-UP Remote Mac RDI TE-MISMATCH
------------------------------------------------------------------------------------- 42 3 3 Yes 0075.0075.0003 False 82 3 3 Yes 0085.0085.0003 False IB-BEB-1# On IB-BEB-2 IB-BEB-2#sh ethernet cfm pbb-te maintenance-points remote domain-name abc te-sid 3 bridge backbone MPID LEVEL TESID MEP-UP Remote Mac RDI TE-MISMATCH ------------------------------------------------------------------------------------- 3 3 3 Yes 0005.0005.0003 False IB-BEB-2# On IB-BEB-3
IB-BEB-2# On IB-BEB-3 IB-BEB-3#sh ethernet cfm pbb-te maintenance-points remote domain-name abc te-sid 3 bridge backbone MPID LEVEL TESID MEP-UP Remote Mac RDI TE-MISMATCH ------------------------------------------------------------------------------------- 3 3 3 Yes 0005.0005.0003 False IB-BEB-3# Verify CFM Traceroute On IB-BEB-1 IB-BEB-1#traceroute pbb-te ethernet esp-da-mac 75.75.3 domain-name abc te-sid 3 tlv pbb- te-mip reverse-vid 30 bridge backbone source mac Hops Relay-action
source mac Hops Relay-action 0075.0075.0003 1 1 IB-BEB-1# IB-BEB-1#traceroute pbb-te ethernet esp-da-mac 85.85.3 domain-name abc te-sid 3 tlv pbb- te-mip reverse-vid 50 bridge backbone source mac Hops Relay-action 0085.0085.0003 1 1 IB-BEB-1# © 2015 IP Infusion Inc. Proprietary 167 PBB-TE Configurations On IB-BEB-2 IB-BEB-2#traceroute pbb-te ethernet esp-da-mac 5.5.3 domain-name abc te-sid 3 tlv pbb- te-mip reverse-vid 40 bridge backbone source mac Hops Relay-action 0005.0005.0003 1 1 IB-BEB-2#
0005.0005.0003 1 1 IB-BEB-2# On IB-BEB-3 IB-BEB-3#traceroute pbb-te ethernet esp-da-mac 5.5.3 domain-name abc te-sid 3 tlv pbb- te-mip reverse-vid 40 bridge backbone source mac Hops Relay-action 0005.0005.0003 1 1 IB-BEB-3# Verify CFM PING On IB-BEB-1 IB-BEB-1#ping ethernet pbb-te multicast mepid 3 domain-name abc te-sid 3 bridge backbone Host MEP: 3 Number of RMEPs that replied to mcast frame = 2 LBR received from the following 0075.0075.0003 success rate is 100 (1/1) 0085.0085.0003
success rate is 100 (1/1) 0085.0085.0003 success rate is 100 (1/1) IB-BEB-1# On IB-BEB-2 IB-BEB-2#ping ethernet pbb-te unicast rmepid 3 mepid 42 domain-name abc te-sid 3 bridge backbone success rate is 100 (5/5) IB-BEB-2# On IB-BEB-3 IB-BEB-3# IB-BEB-3#ping ethernet pbb-te unicast rmepid 3 mepid 82 domain-name abc te-sid 3 bridge backbone success rate is 100 (5/5) IB-BEB-3# 168 © 2015 IP Infusion Inc. Proprietary PBB-TE Ethernet Switched Path Configuration CHAPTER 12
CHAPTER 12 This chapter contains a complete sample PBB-TE Ethernet Switched Path (ESP) configuration in a PBB-TE topology. Currently, all PBB-TE configurations are static. To support ESP configuration dynamically (GMPLS), the dependency of the dynamic configuration is removed from the static configuration part. In addition, there is no command specifically to create an ISID. SVLAN-to-ISID mapping creates an ISID association with the interface and mapping with the SVLAN.
The following configuration examples illustrate how to set up PBB-TE different network topologies. Examples are provided for Ethernet Switched Path (ESP). Note: Provider Backbone Bridging is not supported for ZebIC releases. Topology Figure 12-1 displays a simple ESP topology. Figure 12-1: Ethernet Switched Path Topology IB-BEB-1 Do the following to configure an I-component and B-component (IB) on Backbone Edge Bridge (BEB) 1: #configure terminal Enter configure mode.
#configure terminal Enter configure mode. (config)#bridge beb mac aaaa.aaaa.aaaa 1 Configure an I-component bridge 1 with MAC protocol provider-mstp aaaa.aaaa.aaaa. (config)#bridge beb mac bbbb.bbbb.bbbb Configure backbone bridge 1 with MAC bbbb.bbbb.bbbb. backbone protocol provider-mstp (config)#vlan database Enter VLAN configure mode. (config-vlan)#vlan 2 type service point-point Configure VLAN 2 as a service VLAN and associate it with bridge 1 state enable bridge 1.
bridge 1 state enable bridge 1. (config-vlan)#vlan 3 type service point-point Configure VLAN 3 as a service VLAN and associate it with bridge 1 state enable bridge 1. (config-vlan)#vlan 4 type backbone point- Configure VLAN 4 as a backbone point-to-point VLAN. point state enable (config-vlan)#vlan 5 type backbone point- Configure VLAN 5 as a backbone point-to-point VLAN. point state enable (config-vlan)#exit Exit VLAN configure mode.
(config-vlan)#exit Exit VLAN configure mode. (config)#pbb isid list Enter the Service instance configuration mode. (pbb-isid)#isid 1 name c1 i-component 1 Configure instance 1 on I-component bridge 1 with name c1. Creates a VIP port for the service instance. © 2015 IP Infusion Inc. Proprietary 169 PBB-TE Ethernet Switched Path Configuration (pbb-isid)#exit Exit instance configuration mode. (config)#interface eth3 Enter interface mode.
(config)#interface eth3 Enter interface mode. (config-if)#switchport Configure Eth3 as a Layer-2 interface. (config-if)#bridge-group 1 Associate Eth3 with bridge-group 1. (config-if)#switchport mode cnp Set the switching characteristics of this interface to CNP mode. (config-if)#switchport beb customer-network Map SVLAN to I-SID. svlan add 2 instance 1 (config-if)#exit Exit interface mode. (config)#interface eth1 Enter interface mode.
(config)#interface eth1 Enter interface mode. (config-if)#switchport Configure Eth1 as a Layer-2 interface. (config-if)#bridge-group backbone Associate Eth1 with bridge-group backbone. (config-if)#switchport mode pnp Set the switching characteristics of this interface to PNP mode. (config-if)#switchport beb provider-network Add BVLAN to PNP. bvlan add 4 (config-if)#exit Exit interface mode. (config)#pbb-te vlan add range 4 5 Add VLAN 4 and VLAN 5 to te-region.
(config)#interface pip.1 Enter the PIP interface mode. (config-if)#switchport beb pip backbone- Configure PIP source MAC address. This address is source-mac 0100.1111.1211 internally copied to customer backbone MAC address, as well. (config-if)#exit Exit PIP interface mode. (config)#interface cbp.1 Associate the TESI to a local CBP interface. (pbb-te-config)#switchport beb customer- Configure service instance to BVLAN 4 mapping for service backbone instance add 1 bvlan 4 instance 1.
backbone instance add 1 bvlan 4 instance 1. (pbb-te-config)#switchport beb customer- Configure service instance to BVLAN 5 mapping for service backbone instance add 1 bvlan 5 instance 1. (pbb-te-config)#pbb-te configure tesid 10 Configure TESID 10 with name trunk-1. name trunk-1 (pbb-te-config)#cbp interface cbp.1 Associate the TESI to a local CBP interface. (pbb-te-config)#esp egress remote-mac Add egress ESP for VLAN 4. 0100.1111.1212 vlan 4
0100.1111.1212 vlan 4 (pbb-te-config)#esp ingress remote-mac Add ingress ESP for VLAN 5. 0100.1111.1212 vlan 5 (pbb-te-config)#esp egress pnp add eth1 Configure egress ESP PNP interface. (pbb-te-config)#exit Exit pbb-te mode. IB-BEB-2 Do the following to configure an I-component and B-component (IB) on Backbone Edge Bridge (BEB) 2: #configure terminal Enter configure mode. (config)#bridge beb mac aaaa.aaaa.aaaa 1 Configure an I-component bridge 1 with MAC protocol provider-mstp aaaa.aaaa.aaaa.
protocol provider-mstp aaaa.aaaa.aaaa. 170 © 2015 IP Infusion Inc. Proprietary PBB-TE Ethernet Switched Path Configuration (config)#bridge beb mac bbbb.bbbb.bbbb Configure backbone bridge 1 with MAC bbbb.bbbb.bbbb. backbone protocol provider-mstp (config)#vlan database Enter VLAN configure mode. (config-vlan)#vlan 2 type service point-point Configure VLAN 2 as a service VLAN and associate it with bridge 1 state enable bridge 1.
bridge 1 state enable bridge 1. (config-vlan)#vlan 3 type service point-point Configure VLAN 3 as a service VLAN and associate it with bridge 1 state enable bridge 1. (config-vlan)#vlan 4 type backbone point- Configure VLAN 4 as a backbone point-to-point VLAN. point state enable (config-vlan)#vlan 5 type backbone point- Configure VLAN 5 as a backbone point-to-point VLAN. point state enable (config-vlan)#exit Exit VLAN configure mode.
(config-vlan)#exit Exit VLAN configure mode. (config)#pbb isid list Enter the Service instance configuration mode. (pbb-isid)#isid 1 name c1 i-component 1 Configure instance 1 on I-component bridge 1 with name c1. Creates a VIP port for the service instance. (pbb-isid)#exit Exit instance configuration mode. (config)#interface eth3 Enter interface mode. (config-if)#switchport Configure Eth3 as a Layer-2 interface. (config-if)#bridge-group 1 Associate Eth3 with bridge-group 1.
(config-if)#switchport mode cnp Set the switching characteristics of this interface to CNP mode. (config-if)#switchport beb customer-network Map SVLAN to I-SID. svlan add 2 instance 1 (config-if)#exit Exit interface mode. (config)#interface eth1 Enter interface mode. (config-if)#switchport Configure Eth1 as a Layer-2 interface. (config-if)#bridge-group backbone Associate Eth1 with bridge-group backbone. (config-if)#switchport mode pnp Set the switching characteristics of this interface to PNP
mode. (config-if)#switchport beb provider-network Add BVLAN to PNP. bvlan add 5 (config-if)#exit Exit interface mode. (config)#pbb-te vlan add range 4 5 Adds VLAN 4 and VLAN 5 to te-region. (config)#interface pip.1 Enter the PIP interface mode. (config-if)#switchport beb pip backbone- Configure PIP source MAC address. This address is source-mac 0100.1111.1212 internally copied to customer backbone MAC address, as well. (config-if)#exit Exit PIP interface mode.
well. (config-if)#exit Exit PIP interface mode. (config)#interface cbp.1 Associate the TESI to a local CBP interface. (pbb-te-config)#switchport beb customer- Configure service instance to BVLAN 4 mapping for service backbone instance add 1 bvlan 4 instance 1. (pbb-te-config)#switchport beb customer- Configure service instance to BVLAN 5 mapping for service backbone instance add 1 bvlan 5 instance 1. (pbb-te-config)#pbb-te configure tesid 10 Configure TESID 10 with name trunk-1. name trunk-1
name trunk-1 (pbb-te-config)#cbp interface cbp.1 Associate the TESI to a local CBP interface. © 2015 IP Infusion Inc. Proprietary 171 PBB-TE Ethernet Switched Path Configuration (pbb-te-config)#esp egress remote-mac Add egress ESP for VLAN 4. 0100.1111.1212 vlan 4 (pbb-te-config)#esp ingress remote-mac Add ingress ESP for VLAN 5. 0100.1111.1212 vlan 5 (pbb-te-config)#esp egress pnp add eth1 Configure egress ESP PNP interface. (pbb-te-config)#exit Exit pbb-te mode BCB
(pbb-te-config)#exit Exit pbb-te mode BCB Do the following to configure Backbone Core Bridge (BCB): #configure terminal Enter configure mode. (config)#bridge 1 protocol provider-mstp Configure bridge 1 as a provider bridge. (config)#vlan database Enter the VLAN Configure mode. (config-vlan)#vlan 4 type service point-point Configure VLAN 4 as a service VLAN and associate it with bridge 1 state enable bridge 1.
bridge 1 state enable bridge 1. (config-vlan)#vlan 5 type service point-point Configure VLAN 5 as a service VLAN and associate it with bridge 1 state enable bridge 1. (config-vlan)#exit Exit the VLAN configure mode. (config)#interface eth1 Enter interface mode. (config-if)#switchport Configure Eth1 as a Layer-2 interface. (config-if)#bridge-group 1 Associate Eth1 with bridge 1. (config-if)#switchport mode provider-network Set the switching characteristics of this interface to
provider-network mode. (config-if)#switchport provider-network Associate Service VLAN 4 with the provider network. allowed vlan add 4 (config-if)#switchport provider-network Associate Service VLAN 5 with the provider network. allowed vlan add 5 (config-if)#exit Exit interface mode. (config)#interface eth3 Enter interface mode. (config-if)#switchport Configure Eth3 as a Layer-2 interface. (config-if)#bridge-group 1 Associate Eth3 with bridge 1.
(config-if)#switchport mode provider-network Set the switching characteristics of this interface to provider-network mode. (config-if)#switchport provider-network Associate Service VLAN 4 with the provider network. allowed vlan add 4 (config-if)#switchport provider-network Associate Service VLAN 5 with the provider network. allowed vlan add 5 (config-if)#exit Exit interface mode. (config)#bridge 1 address 0100.1111.1212 Add a static FDB entry to the FDB table to forward all
forward eth2 vlan 5 frames with MAC address 0100.1111.1212 and VLAN 5 to interface Eth2. 172 © 2015 IP Infusion Inc. Proprietary PBB-TE Ethernet Switched Path Configuration (config)#bridge 1 address 0100.1111.1211 Add a static FDB entry to the FDB table to forward all forward eth1 vlan 5 frames with MAC address 0100.1111.1211 and VLAN 4 to interface Eth1. (config)#exit Exit the Configure mode. Validation Enter the commands listed in the sections below to confirm the configurations. On IB-BEB-1
On IB-BEB-1 #show pbb-te all TESID: 10 cbp interface: cbp.1 tesi type: static tesi mode: passive ESP Id SMAC DMAC ESP-VID Ingress Multicast 000 0100.1111.1211 0100.1111.1212 4 Yes No 001 0100.1111.1211 0100.1111.1212 5 No No #show pbb-te tesid 10 TESID: 10 cbp interface: cbp.1 tesi type: static tesi mode: passive ESP Id SMAC DMAC ESP-VID Ingress Multicast 000 0100.1111.1211 0100.1111.1212 4 Yes No 001 0100.1111.1211 0100.1111.1212 5 No No On IB-BEB-2 #show pbb-te all TESID: 10
On IB-BEB-2 #show pbb-te all TESID: 10 cbp interface: cbp.1 tesi type: static tesi mode: passive ESP Id SMAC DMAC ESP-VID Ingress Multicast 000 0100.1111.1212 0100.1111.1211 5 Yes No 001 0100.1111.1212 0100.1111.1211 4 No No IB-BEB-1##show pbb-te tesid 10 TESID: 10 cbp interface: cbp.1 tesi type: static tesi mode: passive ESP Id SMAC DMAC ESP-VID Ingress Multicast 000 0100.1111.1212 0100.1111.1211 5 Yes No 001 0100.1111.1212 0100.1111.1211 4 No No © 2015 IP Infusion Inc. Proprietary 173
© 2015 IP Infusion Inc. Proprietary 173 PBB-TE Ethernet Switched Path Configuration 174 © 2015 IP Infusion Inc. Proprietary PBB-TE APS Configuration CHAPTER 13 The following section describes the configuration for setting up Automatic Protection Switching (APS) in a PBB-TE topology. Specifically, this requirement mainly concerns PBB-TE APS load sharing. In most configurations, two PBB-TE APS Protection Groups (PG1 and PG2) share two TESIDs (TESID-1 & TESID-2).
PG1 uses TESID-1 as a working TESID and TESID-2 as a protection TESID. Conversely, PG2 uses TESID-2 as a working TESID and TESID-1 as a protection TESID. These two protection groups operate on their own independent state machine. If any of the TESID fail, load sharing occurs due to the protection switching mechanism. Note: Provider Backbone Bridging is not supported for ZebIC releases. Topology Figure 13-1 displays a simple PBB-TE Automatic Protection Switching (APS) topology.
Figure 13-1: APS Topology IB-BEB-1 Do the following to configure an I-component and B-component (IB) on Backbone Edge Bridge (BEB) 1: #configure terminal Enter configure mode. (config)#bridge beb mac 0001.0001.0001 1 Configure an I-component bridge 1 with MAC protocol provider-mstp 0001.0001.0001. (config)#spanning-tree mode provider-rstp Configure spanning tree mode as rstp (config)#bridge beb mac 0001.0001.0001 Configure a backbone bridge 1 with MAC 0001.0001.0001.
backbone protocol provider-mstp (config)#ethernet cfm enable Enable CFM globally. (config)#vlan database Enter VLAN configure mode. (config-vlan)#vlan 10 type service point- Configure VLAN 10 as a service VLAN, associate it with point bridge 1 name ipi10 bridge 1. (config-vlan)#vlan 10 type service point- Configure VLAN 10 as a service VLAN, associate it with point bridge 1 state enable bridge 1 and set state to enable.
(config-vlan)#vlan 20 type service point- Configure VLAN 20 as a service VLAN, associate it with point bridge 1 name ipi20 bridge 1. (config-vlan)#vlan 20 type service point- Configure VLAN 20 as a service VLAN, associate it with point bridge 1 state enable bridge 1 and set state to enable. © 2015 IP Infusion Inc. Proprietary 175 PBB-TE APS Configuration (config-vlan)#vlan 30 type service point- Configure VLAN 30 as a service VLAN, associate it with point bridge 1 name ipi30 bridge 1.
point bridge 1 name ipi30 bridge 1. (config-vlan)#vlan 30 type service point- Configure VLAN 30 as a service VLAN, associate it with point bridge 1 state enable bridge 1 and set state to enable. (config-vlan)#vlan 40 type backbone point- Configure VLAN 40 as a backbone point-to-point VLAN. point name ipi40 (config-vlan)#vlan 40 type backbone point- Configure VLAN 40 as a backbone point-to-point VLAN and point state enable set state to enable.
point state enable set state to enable. (config-vlan)#vlan 30 type backbone point- Configure VLAN 30 as a backbone point-to-point VLAN. point name abc (config-vlan)#vlan 30 type backbone point- Configure VLAN 30 as a backbone point-to-point VLAN and point state enable set state to enable. (config-vlan)#vlan 50 type backbone point- Configure VLAN 50 as a backbone point-to-point VLAN. point name ipi50
point name ipi50 (config-vlan)#vlan 50 type backbone point- Configure VLAN50 as a backbone point-to-point VLAN and point state enable set state to enable. (config-vlan)#vlan 60 type backbone point- Configure VLAN 40 as a backbone point-to-point VLAN. point name ipi60 (config-vlan)#vlan 60 type backbone point- Configure VLAN 60 as a backbone point-to-point VLAN and point state enable set state to enable.
point state enable set state to enable. (config-vlan)#vlan 70 type backbone point- Configure VLAN 70 as a backbone point-to-point VLAN. point name ipi70 (config-vlan)#vlan 70 type backbone point- Configure VLAN 70 as a backbone point-to-point VLAN and point state enable set state to enable. (config-vlan)#vlan 80 type backbone point- Configure VLAN 80 as a backbone point-to-point VLAN. point name ipi80
point name ipi80 (config-vlan)#vlan 80 type backbone point- Configure VLAN 80 as a backbone point-to-point VLAN and point state enable set state to enable. (config-vlan)#exit Exit the VLAN configuration mode. (config)#pbb-te vlan add 30 Configure the backbone VLANs to be part of the TE-region. (config)#pbb-te vlan add 40 Configure the backbone VLANs to be part of the TE-region. (config)#pbb-te vlan add 50 Configure the backbone VLANs to be part of the TE-region.
(config)#pbb-te vlan add 60 Configure the backbone VLANs to be part of the TE-region. (config)#pbb-te vlan add 70 Configure the backbone VLANs to be part of the TE-region. (config)#pbb-te vlan add 80 Configure the backbone VLANs to be part of the TE-region. (config)#pbb isid list Enter the ISID configuration mode. (pbb-isid)#isid 2 name c2 i-component 1 Create an ISID 2 and associate it with i-component 1.
(pbb-isid)#isid 3 name c3 i-component 1 Create an ISID 3 and associate it with i-component 1. (pbb-isid)#isid 4 name c4 i-component 1 Create an ISID 3 and associate it with i-component 1. (pbb-isid)#exit Exit the ISID configuration mode. (config)#pbb-te configure tesid 3 Configure a TE-SID with SID as 3. (pbb-te-config)#cbp interface cbp.1 Associate the TESI to a local CBP interface. (pbb-te-config)#exit Exit interface mode. (config-if)#pbb-te configure tesid 5 Configure a TE-SID with SID as 5.
(config-if)#interface cbp.1 Enter interface mode. (config-if)#exit Exit interface mode. 176 © 2015 IP Infusion Inc. Proprietary PBB-TE APS Configuration (config)#interface eth3 Enter interface mode. (config-if)#switchport Configure eth3 as a Layer-2 interface. (config-if)#bridge-group 1 Associate the eth3 interface with bridge 1. (config-if)#switchport mode cnp Set the switching characteristics of this interface to CNP mode. (config-if)#switchport beb customer-network Map SVLAN 10 to I-ISID 2.
svlan add 10 instance 2 (config-if)#switchport beb customer-network Map SVLAN 20 to I-ISID 3. svlan add 20 instance 3 (config-if)#switchport beb customer-network Map SVLAN 30 to I-ISID 4. svlan add 30 instance 4 (config-if)#no shutdown Administratively shut down the interface. (config-if)#no multicast (config-if)#exit Exit interface mode. (config)#interface eth1 Enter interface mode. (config-if)#switchport Configure eth1 as a Layer-2 interface.
(config-if)#bridge-group backbone Associate eth1 with bridge-group backbone. (config-if)#switchport mode pnp Set the switching characteristics of this interface to PNP mode. (config-if)#switchport beb vlan 40 pnp Add BVLAN 40 to PNP. (config-if)#switchport beb provider-network Allow all BVLANs. bvlan all (config-if)#no shutdown Administratively shut down the interface. (config-if)#exit Exit interface mode. (config)#interface eth2 Enter interface mode.
(config)#interface eth2 Enter interface mode. (config-if)#switchport Configure eth2 as a Layer-2 interface. (config-if)#bridge-group backbone Associate eth2 with bridge-group backbone. (config-if)#switchport mode pnp Set the switching characteristics of this interface to PNP mode. (config-if)#switchport beb vlan 70 pnp Add BVLAN 70 to PNP. (config-if)#switchport beb provider-network Allow all BVLANs. bvlan all (config-if)#no shutdown Administratively shut down the interface.
(config-if)#exit Exit interface mode. (config)#interface pip.1 Enter interface mode. (config-if)#switchport beb pip backbone- Configure MAC address 0005.1111.1212 for interface pip.1. source-mac 0005.1111.1212 (config-if)#exit Exit interface mode. (pbb-te-config)#interface cbp.1 Enter interface mode. (pbb-te-config)#switchport beb customer- Configure service instance to BVLAN 40 mapping for backbone instance add 2 bvlan 40 customer-backbone instance 2.
(pbb-te-config)#switchport beb customer- Configure service instance to BVLAN 60 mapping for backbone instance add 3 bvlan 60 customer-backbone instance 3. (pbb-te-configf)#switchport beb customer- Configure service instance to BVLAN 80 mapping for backbone instance add 4 bvlan 80 customer-backbone instance 4. © 2015 IP Infusion Inc. Proprietary 177 PBB-TE APS Configuration (pbb-te-config)#no shutdown Administratively shut down the interface. (config-if)#exit Exit interface mode.
(config-if)#exit Exit interface mode. (config)#interface cbp.1 Enter interface mode. (pbb-te-config)#pbb-te configure esp tesi 3 Enter the ESP configure mode. (pbb-te-esp-if-config)#esp ingress remote-mac Add ESP ingress for remote-mac 0075.0075.0003 and 0075.0075.0003 vlan 30 VLAN 30. (pbb-te-esp-if-config)#esp egress remote-mac Add ESP egress for remote-mac 0075.0075.0003 and 0075.0075.0003 vlan 40 VLAN 40. (pbb-te-esp-if-config)#esp egress pnp add Add a PNP interface to this TESI. eth1
eth1 (pbb-te-esp-if-config)#exit Exit the ESP Configure mode. (config-if)#pbb-te configure esp tesi 5 Enter the ESP Configure mode. (pbb-te-esp-if-config)#esp ingress remote-mac Add ESP ingress for remote-mac 0075.0075.0003 and 0075.0075.0003 vlan 70 VLAN 70. (pbb-te-esp-if-config)#esp egress remote-mac Add ESP egress for remote-mac 0075.0075.0003 and 0075.0075.0003 vlan 80 VLAN 80. (pbb-te-esp-if-config)#esp egress pnp add Add a PNP interface to this TESI. eth2
eth2 (pbb-te-esp-if-config)#exit Exit the ESP Configure mode. (config)#exit Exit interface mode. (config)#ethernet cfm pbb-te domain-name type Configure a PBB-TE MD with name abc on level 3 for character-string name abc level 3 mip- backbone bridge. creation default bridge backbone (config-ether-cfm-pbb-te)#service pbb-te ma- Configure an MA for TE-SID 3 with MA name 12. type string ma-name 12 te-sid 3 mip-creation default
default (config-ether-cfm-pbb-te)#mep pbb-te Add an RMEP (remote MEP) for TE-SID 3. crosscheck mpid 70 te-sid 3 mac 075.075.03 (config-ether-cfm-pbb-te)#ethernet cfm pbb-te Configure a PBB-TE MD with name abc on level 3 for domain-name type character-string name abc backbone bridge. level 3 mip-creation default bridge backbone (config-ether-cfm-pbb-te)#service pbb-te ma- Configure an MA for TE-SID 5 with MA name 14. type string ma-name 14 te-sid 5 mip-creation default
default (config-ether-cfm-pbb-te)#mep pbb-te Add an RMEP (remote MEP) for TE-SID 5. crosscheck mpid 72 te-sid 5 mac 75.75.03 (config-ether-cfm-pbb-te)#exit Exit this Configure mode. (config-if)#interface cbp.1 Enter interface mode. (pbb-te-config)#ethernet cfm pbb-te mep up Configure an UP MEP on logical CBP for TE-SID 3 with mpid 90 domain-name abc te-sid 3 bridge MEP ID 90. backbone (config-if-eth-cfm-pbb-te-mep)#cc unicast Enable continuity checking (CC) for TE-SID 3 and MEP 90.
rmpid 70 state enable (config-if-eth-cfm-pbb-te-mep)#exit Exit CFM MEP mode. (pbb-te-config)#ethernet cfm pbb-te mep up Configure an UP MEP on logical CBP for TE-SID 5 with mpid 92 domain-name abc te-sid 5 bridge MEP ID 92. backbone (config-if-eth-cfm-pbb-te-mep)#cc unicast Enable continuity checking (CC) for TE-SID 5 and MEP 92. rmpid 72 state enable 178 © 2015 IP Infusion Inc. Proprietary PBB-TE APS Configuration (config-if-eth-cfm-pbb-te-mep)#exit Exit CFM MEP mode.
(pbb-te-config)#pbb-te aps-group 10 working- Create an APS GROUP 10 with working-tesi as 3 and tesi 3 protection-tesi 5 protection-tesi as 5. (pbb-te-config)#pbb-te aps-group 10 isid add Associate ISID 2 to APS Group 10. 2 (pbb-te-config)#pbb-te aps-group 20 working- Create an APS GROUP 20 with working-tesi as 5 and tesi 5 protection-tesi 3 protection-tesi as 3. (pbb-te-config)#pbb-te aps-group 20 isid add Associate ISID 3 to APS Group 20. 3
3 (pbb-te-config)#pbb-te configure switching Enter the APS Group configuration mode. cbp cbp.1 aps-group 10 (pbb-te-config-switching)#pbb-te associate Associate APS group 10 to MD with name abc and working aps-group 10 cbp cbp.1 md-name abc working ma- MA name 12 and protection MA name 14. name 12 protective ma-name 14 (pbb-te-config-switching)#exit Exit APS group configuration mode to configuration mode. (pbb-te-config-switching)#pbb-te configure Enter the APS Group configuration mode.
switching cbp cbp.1 aps-group 20 (pbb-te-config-switching)#pbb-te associate Associate APS group 20 to MD with name abc and working aps-group 20 cbp cbp.1 md-name abc working ma- MA name 14 and protection MA name 12. name 14 protective ma-name 12 (config-if)#exit Enter the APS Group configuration mode. IB-BEB-2 Do the following to configure an I-component and B-component (IB) on Backbone Edge Bridge (BEB) 2: #configure terminal Enter configure mode.
#configure terminal Enter configure mode. (config)#bridge beb mac 0001.0001.0001 1 Configure an I-component bridge 1 with MAC protocol provider-mstp 0001.0001.0001. (config)#spanning-tree mode provider-rstp Configure spanning tree mode as rstp (config)#bridge beb mac 0001.0001.0001 Configure a backbone bridge 1 with MAC 0001.0001.0001. backbone protocol provider-mstp (config)#ethernet cfm enable Enable CFM globally. (config)#vlan database Enter VLAN configure mode.
(config)#vlan database Enter VLAN configure mode. (config-vlan)#vlan 10 type service point- Configure VLAN 10 as a service VLAN, associate it with point bridge 1 name ipi10 bridge 1. (config-vlan)#vlan 10 type service point- Configure VLAN 10 as a service VLAN, associate it with point bridge 1 state enable bridge 1 and set state to enable. (config-vlan)#vlan 20 type service point- Configure VLAN 20 as a service VLAN, associate it with point bridge 1 name ipi20 bridge 1.
point bridge 1 name ipi20 bridge 1. (config-vlan)#vlan 20 type service point- Configure VLAN 20 as a service VLAN, associate it with point bridge 1 state enable bridge 1 and set state to enable. (config-vlan)#vlan 30 type service point- Configure VLAN 30 as a service VLAN, associate it with point bridge 1 name ipi30 bridge 1. (config-vlan)#vlan 30 type service point- Configure VLAN 30 as a service VLAN, associate it with point bridge 1 state enable bridge 1 and set state to enable.
© 2015 IP Infusion Inc. Proprietary 179 PBB-TE APS Configuration (config-vlan)#vlan 40 type backbone point- Configure VLAN 40 as a backbone point-to-point VLAN. point name ipi40 (config-vlan)#vlan 40 type backbone point- Configure VLAN 40 as a backbone point-to-point VLAN and point state enable set state to enable. (config-vlan)#vlan 30 type backbone point- Configure VLAN 30 as a backbone point-to-point VLAN. point name abc
point name abc (config-vlan)#vlan 30 type backbone point- Configure VLAN 30 as a backbone point-to-point VLAN and point state enable set state to enable. (config-vlan)#vlan 50 type backbone point- Configure VLAN 50 as a backbone point-to-point VLAN. point name ipi50 (config-vlan)#vlan 50 type backbone point- Configure VLAN50 as a backbone point-to-point VLAN and point state enable set state to enable.
point state enable set state to enable. (config-vlan)#vlan 60 type backbone point- Configure VLAN 40 as a backbone point-to-point VLAN. point name ipi60 (config-vlan)#vlan 60 type backbone point- Configure VLAN 60 as a backbone point-to-point VLAN and point state enable set state to enable. (config-vlan)#vlan 70 type backbone point- Configure VLAN 70 as a backbone point-to-point VLAN. point name ipi70
point name ipi70 (config-vlan)#vlan 70 type backbone point- Configure VLAN 70 as a backbone point-to-point VLAN and point state enable set state to enable. (config-vlan)#vlan 80 type backbone point- Configure VLAN 80 as a backbone point-to-point VLAN. point name ipi80 (config-vlan)#vlan 80 type backbone point- Configure VLAN 80 as a backbone point-to-point VLAN and point state enable set state to enable. (config-vlan)#exit Exit the VLAN configuration mode.
(config)#pbb-te vlan add 30 Configure the backbone VLANs to be part of the TE-region. (config)#pbb-te vlan add 40 Configure the backbone VLANs to be part of the TE-region. (config)#pbb-te vlan add 50 Configure the backbone VLANs to be part of the TE-region. (config)#pbb-te vlan add 60 Configure the backbone VLANs to be part of the TE-region. (config)#pbb-te vlan add 70 Configure the backbone VLANs to be part of the TE-region.
(config)#pbb-te vlan add 80 Configure the backbone VLANs to be part of the TE-region. (config)#pbb isid list Enter the ISID configuration mode. (pbb-isid)#isid 2 name c2 i-component 1 Create an ISID 2 and associate it with i-component 1. (pbb-isid)#isid 3 name c3 i-component 1 Create an ISID 3 and associate it with i-component 1. (pbb-isid)#isid 4 name c4 i-component 1 Create an ISID 3 and associate it with i-component 1. (pbb-isid)#exit Exit the ISID configuration mode.
(pbb-isid)#exit Exit the ISID configuration mode. (config)#pbb-te configure tesid 3 Configure a TE-SID with SID as 3. (pbb-te-config)#cbp interface cbp.1 Associate the TESI to a local CBP interface. (pbb-te-config)#exit Exit interface mode. (config-if)#pbb-te configure tesid 5 Configure a TE-SID with SID as 5. (config-if)#interface cbp.1 Enter interface mode. (config-if)#exit Exit interface mode. (config)#interface eth3 Enter interface mode.
(config)#interface eth3 Enter interface mode. (config-if)#switchport Configure eth3 as a Layer-2 interface. (config-if)#bridge-group 1 Associate the eth3 interface with bridge 1. 180 © 2015 IP Infusion Inc. Proprietary PBB-TE APS Configuration (config-if)#switchport mode cnp Set the switching characteristics of this interface to CNP mode. (config-if)#switchport beb customer-network Map SVLAN 10 to I-ISID 2. svlan add 10 instance 2
svlan add 10 instance 2 (config-if)#switchport beb customer-network Map SVLAN 20 to I-ISID 3. svlan add 20 instance 3 (config-if)#switchport beb customer-network Map SVLAN 30 to I-ISID 4. svlan add 30 instance 4 (config-if)#no shutdown Administratively shut down the interface. (config-if)#no multicast (config-if)#exit Exit interface mode. (config)#interface eth1 Enter interface mode. (config-if)#switchport Configure eth1 as a Layer-2 interface.
(config-if)#bridge-group backbone Associate eth1 with bridge-group backbone. (config-if)#switchport mode pnp Set the switching characteristics of this interface to PNP mode. (config-if)#switchport beb vlan 30 pnp Add BVLAN 30 to PNP. (config-if)#switchport beb provider-network Allow all BVLANs. bvlan all (config-if)#no shutdown Administratively shut down the interface. (config-if)#exit Exit interface mode. (config)#interface eth2 Enter interface mode.
(config)#interface eth2 Enter interface mode. (config-if)#switchport Configure eth2 as a Layer-2 interface. (config-if)#bridge-group backbone Associate eth2 with bridge-group backbone. (config-if)#switchport mode pnp Set the switching characteristics of this interface to PNP mode. (config-if)#switchport beb vlan 70 pnp Add BVLAN 70 to PNP. (config-if)#switchport beb provider-network Allow all BVLANs. bvlan all (config-if)#no shutdown Administratively shut down the interface.
(config-if)#exit Exit interface mode. (config)#interface pip.1 Enter interface mode. (config-if)#switchport beb pip backbone- Configure MAC address 0075.0075.0003 for interface source-mac 0075.0075.0003 pip.1. (config-if)#exit Exit interface mode. (config-if)#interface cbp.1 Enter interface mode. (config-if)#switchport beb customer-backbone Configure service instance to BVLAN 30 mapping for instance add 2 bvlan 30 customer-backbone instance 2.
(config-if)#switchport beb customer-backbone Configure service instance to BVLAN 50 mapping for instance add 3 bvlan 50 customer-backbone instance 3. (config-if)#switchport beb customer-backbone Configure service instance to BVLAN 70 mapping for instance add 4 bvlan 70 customer-backbone instance 4. (config-if)#pbb-te configure esp tesi 3 Enter the ESP configure mode. (pbb-te-esp-if-config)#esp ingress remote-mac Add ESP ingress for remote-mac 0075.0075.0003 and 0075.0075.0003 vlan 40 VLAN 40.
0075.0075.0003 vlan 40 VLAN 40. © 2015 IP Infusion Inc. Proprietary 181 PBB-TE APS Configuration (pbb-te-esp-if-config)#esp egress remote-mac Add ESP egress for remote-mac 0075.0075.0003 and 0075.0075.0003 vlan 30 VLAN 30. (pbb-te-esp-if-config)#esp egress pnp add Add a PNP interface to this TESI. eth1 (pbb-te-esp-if-config)#exit Exit the ESP Configure mode. (config-if)#pbb-te configure esp tesi 5 Enter the ESP Configure mode.
(pbb-te-esp-if-config)#esp ingress remote-mac Add ESP ingress for remote-mac 0075.0075.0003 and 005.005.0003 vlan 80 VLAN 80. (pbb-te-esp-if-config)#esp egress remote-mac Add ESP egress for remote-mac 0075.0075.0003 and 005.005.0003 vlan 70 VLAN 70. (pbb-te-esp-if-config)#esp egress pnp add Add a PNP interface to this TESI. eth2 (pbb-te-esp-if-config)#exit Exit the ESP Configure mode. (config-if)#exit Exit interface mode.
(config-if)#exit Exit interface mode. (config-if)#ethernet cfm pbb-te domain-name Configure a PBB-TE MD with name abc on level 3 for type character-string name abc level 3 mip- backbone bridge. creation default bridge backbone (config-ether-cfm-pbb-te)#service pbb-te ma- Configure an MA for TE-SID 3 with MA name 12. type string ma-name 12 te-sid 3 mip-creation default (config-ether-cfm-pbb-te)#mep pbb-te Add an RMEP (remote MEP) for TE-SID 3. crosscheck mpid 90 te-sid 3 mac 05.05.03
crosscheck mpid 90 te-sid 3 mac 05.05.03 (config-ether-cfm-pbb-te)#ethernet cfm pbb-te Configure a PBB-TE MD with name abc on level 3 for domain-name type character-string name abc backbone bridge. level 3 mip-creation default bridge backbone (config-ether-cfm-pbb-te)#service pbb-te ma- Configure an MA for TE-SID 5 with MA name 14. type string ma-name 14 te-sid 5 mip-creation default (config-ether-cfm-pbb-te)#mep pbb-te Add an RMEP (remote MEP) for TE-SID 5.
crosscheck mpid 92 te-sid 5 mac 05.05.03 (config-ether-cfm-pbb-te)#exit Exit ESP Configure mode. (config-if)#interface cbp.1 Enter interface mode. (config-if)#ethernet cfm pbb-te mep up mpid Configure an UP MEP on logical CBP for TE-SID 3 with 70 domain-name abc te-sid 3 bridge backbone MEP ID 70. (config-if-eth-cfm-pbb-te-mep)#cc unicast Enable continuity checking (CC) for TE-SID 3 and MEP 70 rmpid 90 state enable (config-if-eth-cfm-pbb-te-mep)#exit Exit CFM MEP mode.
(config-if)#ethernet cfm pbb-te mep up mpid Configure an UP MEP on logical CBP for TE-SID 5 with 72 domain-name abc te-sid 5 bridge backbone MEP ID 72. (config-if-eth-cfm-pbb-te-mep)#cc unicast Enable continuity checking (CC) for TE-SID 5 and MEP 72. rmpid 72 state enable (config-if-eth-cfm-pbb-te-mep)#exit Exit CFM MEP mode. (config-if)#pbb-te aps-group 10 working-tesi Create an APS GROUP 10 with working-tesi as 3 and 3 protection-tesi 5 protection-tesi as 5.
3 protection-tesi 5 protection-tesi as 5. (config-if)#pbb-te aps-group 10 isid add 2 Associate ISID 2 to APS Group 10. (config-if)#pbb-te aps-group 20 working-tesi Create an APS GROUP 20 with working-tesi as 5 and 5 protection-tesi 3 protection-tesi as 3. (config-if)#pbb-te aps-group 20 isid add 3 Associate ISID 3 to APS Group 20. 182 © 2015 IP Infusion Inc. Proprietary PBB-TE APS Configuration (config-if)#pbb-te configure switching cbp Enter the APS Group configuration mode. cbp.1 aps-group 10
cbp.1 aps-group 10 (pbb-te-config-switching)#pbb-te associate Associate APS group 10 to MD with name abc and working aps-group 10 cbp cbp.1 md-name abc working ma- MA name 12 and protection MA name 14. name 12 protective ma-name 14 (pbb-te-config-switching)#exit Exit APS group configuration mode to configuration mode. (pbb-te-config-switching)#pbb-te configure Enter the APS Group configuration mode. switching cbp cbp.1 aps-group 20
switching cbp cbp.1 aps-group 20 (pbb-te-config-switching)#pbb-te associate Associate APS group 20 to MD with name abc and working aps-group 20 cbp cbp.1 md-name abc working ma- MA name 14 and protection MA name 12. name 14 protective ma-name 12 (config-if)#exit Enter the APS Group configuration mode. Validation Enter the commands listed in the sections below to confirm the configurations. Verify CFM Configuration for APS On IB-BEB-1
Verify CFM Configuration for APS On IB-BEB-1 #show ethernet cfm pbb-te maintenance-points remote domain-name abc te-sid 10 bridge backbone MPIDLEVELTESIDMEP-UPRemote MacRDITE-MISMATCH ---------------------------------------------------------------------------------- 40310Yes0005.1111.1212False ##sh ethernet cfm pbb-te maintenance-points remote domain-name abc te-sid 20 bridge backbone MPIDLEVELTESIDMEP-UPRemote MacRDITE-MISMATCH
MPIDLEVELTESIDMEP-UPRemote MacRDITE-MISMATCH ---------------------------------------------------------------------------------- 60320 Yes0005.1111.1212False #sh ethernet cfm pbb-te maintenance-points remote domain-name abc te-sid 30 bridge backbone MPIDLEVELTESIDMEP-UPRemote MacRDITE-MISMATCH ---------------------------------------------------------------------------------- 80330Yes0005.1111.1212False On IB-BEB-2
80330Yes0005.1111.1212False On IB-BEB-2 IB-BEB-2#sh ethernet cfm pbb-te maintenance-points remote domain-name abc te-sid 10 bridge backbone MPIDLEVELTESIDMEP-UPRemote MacRDITE-MISMATCH ---------------------------------------------------------------------------------- 50310Yes0005.1111.1211False IB-BEB-2#sh ethernet cfm pbb-te maintenance-points remote domain-name abc te-sid 20 bridge backbone MPIDLEVELTESIDMEP-UPRemote MacRDITE-MISMATCH © 2015 IP Infusion Inc. Proprietary 183
© 2015 IP Infusion Inc. Proprietary 183 PBB-TE APS Configuration ---------------------------------------------------------------------------------- 70320Yes0005.1111.1211False IB-BEB-2#sh ethernet cfm pbb-te maintenance-points remote domain-name abc te-sid 30 bridge backbone MPIDLEVELTESIDMEP-UPRemote MacRDITE-MISMATCH ---------------------------------------------------------------------------------- 90330Yes0005.1111.1211False Verify PBB-TE APS Group Configuration #sh pbb-te aps-group all
#sh pbb-te aps-group all BridgeApsIDWorking-Path Protection-PathCurrent-StateActive-Path ---------------------------------------------------------------------------------- Backbone11020No-Request10 Backbone22030No-Request20 IB-BEB-2#sh pbb-te aps-group all BridgeApsIDWorking-PathProtection-PathCurrent-StateActive-Path ---------------------------------------------------------------------------------- Backbone11020No-Request10 Backbone22030No-Request20
Backbone22030No-Request20 On disabling CCM on TE-SID 10, the state of aps-group 1on IB-BEB-1 changes to Working SF Disabling CCMs on TE-SID 10 on IB-BEB-2 IB-BEB-2#con t Enter configuration commands, one per line. End with CNTL/Z. IB-BEB-2(config)#ethernet cfm pbb-te cc unicast mpid 40 rmpid 50 state disable domain-name abc te-sid 10 bridge backbone IB-BEB-2(config)#end IB-BEB-1 #show ethernet cfm pbb-te maintenance-points remote domain-name abc te-sid 10 bridge backbone
bridge backbone MPIDLEVELTESIDMEP-UPRemote MacRDITE-MISMATCH --------------------------------------------------------------------------------- 40310No0005.1111.1212False #sh pbb-te aps-group 1 BridgeApsIDWorking-PathProtection-PathCurrent-StateActive-Path ---------------------------------------------------------------------------------- Backbone11020Working SF20 Verify Automatic Protection Switching
Verify Automatic Protection Switching To verify automatic protection switching when common TE-SID (shared between 2 protection groups) link is down 184 © 2015 IP Infusion Inc. Proprietary PBB-TE APS Configuration BCB-2 (config)#interface eth1 (config-if)#shutdown IB-BEB-1 #show pbb-te aps-group 1 BridgeApsIDWorking-PathProtection-PathCurrent-StateActive-Path ---------------------------------------------------------------------------------- Backbone11020ProtectionSF10
Backbone11020ProtectionSF10 To verify automatic protection switching when “MANUAL SWITCH” command is executed on the TESID which is shared in protection groups. (config)#pbb-te configure switching cbp cbp.1 aps-group 1 (pbb-te-config-switching)#manual-switch tesi 20 Verify status for Protection group 1 #show pbb-te aps-group 1 BridgeApsIDWorking-PathProtection-PathCurrent-StateActive-Path ----------------------------------------------------------------------------------
Backbone11020ManualSwitchtoWorking10 IB-BEB-2#show pbb-te aps-group 1 BridgeApsIDWorking-PathProtection-PathCurrent-StateActive-Path ---------------------------------------------------------------------------------- Backbone11020No-Request 10 Verify status for Protection group 2 #show pbb-te aps-group 2 #show pbb-te aps-group 1 BridgeApsIDWorking-PathProtection-PathCurrent-StateActive-Path ----------------------------------------------------------------------------------
Backbone12030ManualSwitchtoWorking30 IB-BEB-2#show pbb-te aps-group 1 BridgeApsIDWorking-PathProtection-PathCurrent-StateActive-Path ---------------------------------------------------------------------------------- Backbone12030No-Request30 © 2015 IP Infusion Inc. Proprietary 185 PBB-TE APS Configuration 186 © 2015 IP Infusion Inc. Proprietary Service OAM Configuration CHAPTER 14 This chapter contains a complete sample Service OAM (SOAM) configuration. Service OAM requirements represent
expectations of Service Providers when managing Ethernet services within a MEN (Metro Ethernet Network) and subscribers when managing Ethernet services across a MEN. Service OAM framework describes the high-level constructs used to model different MEN and service components that are relevant for OAM. This feature adds to the existing MEF 17 implementation in ZebOS-XP. With this feature, users can monitor the connectivity status of an MA or an MEG. Topology
connectivity status of an MA or an MEG. Topology Figure 14-1 displays a sample SOAM topology. Figure 14-1: Service OAM Topology Customer Edge 1 #configure terminal Enter configure mode. (config)#bridge 1 protocol mstp Configure bridge 1 as mstp bridge. (config)#vlan database Enter VLAN configure mode. (config-vlan)#vlan 2 bridge 1 name abc Create VLAN 2 on bridge 1. (config-vlan)#vlan 2 bridge 1 state enable Enable VLAN 2 on bridge 1. (config-vlan)#exit Exit VLAN configure mode.
(config-vlan)#exit Exit VLAN configure mode. (config)interface eth1 Enter interface mode. (config-if)#switchport Configure eth1 as a Layer 2 port. (config-if)#bridge-group 1 Configure eth1 in bridge group 1. (config-if)#switchport mode hybrid Make the interface a hybrid. (config-if)#switchport hybrid allowed vlan Allow VLAN 2 on interface eth1. add 2 egress-tagged enable © 2015 IP Infusion Inc. Proprietary 187 Service OAM Configuration (config-if)#exit Exit interface mode.
(config-if)#exit Exit interface mode. (config)#ethernet cfm domain-name type Enter CFM mode and create a level 5 domain. character-string name test level 5 mip- creation default bridge 1 (config-ether-cfm)#service ma-type string ma- Configure MA abc on VLAN 2. name abc vlan 2 mip-creation default (config-ether-cfm)#mep crosscheck mpid 20 Configure the remote MEPID 20 with the MAC address of vlan 2 mac 000f.1f48.6269 remote MEP interface. (config-ether-cfm)#exit exit from ether cfm mode
(config-ether-cfm)#exit exit from ether cfm mode (config)#interface eth1 Enter interface mode. (config-if)#ethernet cfm mep down mpid 10 Enter CFM MEP mode and configure a local MEP 10 on active true domain test vlan 2 local-vid 2 VLAN 2. bridge 1 (config-if-eth-cfm-mep)#cc unicast rmpid 20 Enable unicast CCM messages for local MEP 10 and state enable remote MEP 20. (config-if-eth-cfm-mep)#exit Exit CFM MEP mode. PEB1 #configure terminal Enter configure mode.
PEB1 #configure terminal Enter configure mode. (config)#bridge 1 protocol provider-mstp edge Configure bridge 1 as provider mstp bridge. (config)#vlan database Enter VLAN configure mode. (config-vlan)#vlan 2 type customer bridge 1 Create VLAN 2 on bridge 1. name ipi2 (config-vlan)#vlan 2 type customer bridge 1 Enable VLAN 2 on bridge 1. state enable (config-vlan)#vlan 3 type service point-point Create VLAN 3 on bridge 1. bridge 1 name ipi3
bridge 1 name ipi3 (config-vlan)#vlan 3 type service point-point Enable VLAN 3 on bridge 1. bridge 1 state enable (config)#cvlan registration table map1 bridge Create a CVLAN registration table. 1 (config-cvlan-registration)#cvlan 2 svlan 3 Create a mapping between VLAN 2 and VLAN 3. (config-cvlan-registration)#Exit Exit configure CVLAN registration mode. (config)interface eth1 Enter interface mode. (config-if)#switchport Configure eth1 as a Layer 2 port.
(config-if)#bridge-group 1 Configure eth1 in bridge group 1. (config-if)#switchport mode customer-edge Make the interface a customer-edge hybrid. hybrid (config-if)#switchport customer-edge hybrid Allow VLAN 2 on interface eth1. allowed vlan add 2 egress-tagged enable (config-if)#switchport customer-edge vlan Add the CVLAN registration table to interface. registration map1 (config-if)#switchport provider-edge vlan 3 Configuring the provider edge VLAN on the interface. untagged-vlan 2
untagged-vlan 2 188 © 2015 IP Infusion Inc. Proprietary Service OAM Configuration (config-if)#switchport provider-edge vlan 3 Configuring the provider edge default VLAN on the default-vlan 2 interface. (config-if)#exit Exit interface mode. (config)interface eth2 Enter interface mode. (config-if)#switchport Configure eth2 as a Layer 2 port. (config-if)#bridge-group 1 Configure eth2 in bridge group 1. (config-if)#switchport mode provider-network Make the interface a provider-network.
(config-if)#switchport provider-network Allow all VLANs on interface eth2. allowed vlan all (config-if)#switchport provider-network Configuration to remove the VLAN 2 from provider network. allowed vlan remove 2 (config-if)#exit Exit interface mode. (config)#ethernet cfm configure default-md- Enable default-md-level on bridge 1. level level 5 mip-creation default bridge 1 PB1 Note: You need to do a similar configuration as shown below for PB2, PEB2 and CE2.
#configure terminal Enter configure mode. (config)#bridge 1 protocol provider-mstp Configure bridge 1 as provider mstp bridge. (config)#vlan database Enter VLAN configure mode. (config-vlan)#vlan 3 type service point-point Create VLAN 3 on bridge 1. bridge 1 name ipi3 (config-vlan)#vlan 3 type service point-point Enable VLAN 3 on bridge 1. bridge 1 state enable (config-vlan)#exit Exit VLAN configure mode. (config)interface eth1 Enter interface mode.
(config)interface eth1 Enter interface mode. (config-if)#switchport Configure eth1 as a Layer 2 port. (config-if)#bridge-group 1 Configure eth1 in bridge group 1. (config-if)#switchport mode provider-network Make the interface a provider-network. (config-if)#switchport provider-network Allow all VLANs on interface eth1. allowed vlan all (config-if)#exit Exit interface mode. (config)interface eth2 Enter interface mode. (config-if)#switchport Configure eth1 as a Layer 2 port.
(config-if)#bridge-group 1 Configure eth1 in bridge group 1. (config-if)#switchport mode provider-network Make the interface a provider-network. (config-if)#switchport provider-network Allow all VLANs on interface eth1. allowed vlan all (config-if)#exit Interface mode. (config)#ethernet cfm configure default-md- Enable default-md-level on bridge 1. level level 5 mip-creation default bridge 1 © 2015 IP Infusion Inc. Proprietary 189 Service OAM Configuration Validation
Service OAM Configuration Validation #sh ethernet cfm ma status domain test vlan 2 mep 10 bridge 1 MA/MEG Status - Active CONFIGURED RMEP COUNT CONVERGED RMEP COUNT =============================================================== 1 1 MEP STATUS MEPID DIRECTION CONNECTIVITY STATUS INTERFACE =============================================================== 10 Down MEP Fully Connected eth1 #sh ethernet cfm maintenance-points remote domain test vlan 2 bridge 1
MPID LEVEL VLAN ACTIVE Remote Mac RDI FLAGS ----------------------------------------------------------------------- 20 5 2 Yes 000f.1f48.6269 False Configured 190 © 2015 IP Infusion Inc. Proprietary G.8032 ERPS Version 1 CHAPTER 15 The ITU-T G.8032 Ethernet Ring Protection Switching (ERPS) recommendation specifies protection switching mechanisms and protocols for Ethernet layer network rings. This feature provides protection switching for ring nodes
that are connected to adjacent nodes (participating in the same ring) using two independent links. Topology Figure 15-1 displays a sample Ring Protection topology on which protection switching is configured with four bridges. The Ring Protection Link (RPL) owner is the link between Bridge 2 and Bridge 3 (eth2 to eth1), on which one side of the link is defined explicitly as RPL owner. The rest of the bridges are explicitly configured RPL non owner to enable ERPS in the ring.
ERPS in the ring. Figure 15-1: Ring Protection Topology Note: The Connectivity Fault Management (CFM) configurations described below must be completed and CFM convergence checked before starting the ERPS configurations. Bridge 2 #configure terminal Enter configure mode. (config)#bridge 2 protocol ieee vlan-bridge Configure bridge 2 as VLAN aware. (config)#vlan database Enter VLAN configure mode. (config-vlan)#vlan 5 bridge 2 name ipi5 Create VLAN 5 on bridge 2.
© 2015 IP Infusion Inc. Proprietary 191 G.8032 ERPS Version 1 (config-vlan)#vlan 10 bridge 2 name ipi10 Create VLAN 10 on bridge 2. (config-vlan)#exit Exit VLAN configure mode. (config)#interface eth1 Enter interface mode. (config-if)#switchport Configure Eth1 as a Layer 2 port. (config-if)#bridge-group 2 Configure Eth1 in bridge group 2. (config-if)#switchport mode trunk Make the interface a trunk. (config-if)#switchport trunk allowed vlan Allow all VLANs on interface Eth1. all
all (config-if)#exit Exit interface mode. (config)#interface eth2 Enter interface mode. (config-if)#switchport Configure Eth2 as a Layer 2 port. (config-if)#bridge-group 2 Configure Eth2 in bridge group 2. (config-if)#switchport mode trunk Make the interface a trunk. (config-if)#switchport trunk allowed vlan Allow all VLANs on interface Eth2. all (config-if)#exit Exit interface mode. (config)#ethernet cfm domain-name type Enter CFM mode and create a domain.
character-string name customer level 7 mip- creation default bridge 2 (config-ether-cfm)#service ma-type integer Create an MA for VLAN 5 which becomes part of the ring. ma-name 13 vlan 5 mip-creation default (config-ether-cfm)#mep crosscheck mpid 400 Enable crosschecking on the MEP for the neighbor with MPID vlan 5 400. (config-ether-cfm)#mep crosscheck mpid 100 Enable crosschecking on the MEP for the neighbor with MPID vlan 5 100. (config-ether-cfm)#exit Exit CFM mode.
(config-ether-cfm)#exit Exit CFM mode. (config-if)#interface eth1 Enter interface mode. (config-if)#ethernet cfm mep down mpid 405 Enter CFM MEP mode and configure MEP 405 as a down active true domain customer vlan 5 local-vid MEP in domain customer for VLAN 5. 5 bridge 2 (config-if-eth-cfm-mep)#cc multicast state Start multicast CC with MEPID 405 for VLAN 5. enable (config-if-eth-cfm-mep)#exit Exit CFM MEP mode. (config-if)#exit Exit interface mode.
(config-if)#exit Exit interface mode. (config)#interface eth2 Enter interface mode. (config-if)#ethernet cfm mep down mpid 105 Enter CFM MEP mode and configure MEP 105 as a down active true domain customer vlan 5 local-vid MEP in domain customer for VLAN 5. 5 bridge 2 (config-if-eth-cfm-mep)#cc multicast state Start multicast CC with MEPID 105 for VLAN 5. enable (config-if-eth-cfm-mep)#exit Exit CFM MEP mode. (config-if)#exit Exit interface mode. 192 © 2015 IP Infusion Inc. Proprietary
192 © 2015 IP Infusion Inc. Proprietary G.8032 ERPS Version 1 Bridge 1 #configure terminal Enter configure mode. (config)#bridge 1 protocol ieee vlan-bridge Configure bridge 1 as VLAN aware. (config)#vlan database Enter VLAN configure mode. (config-vlan)#vlan 5 bridge 1 name Create VLAN 5 on bridge 1. ipi5 (config-vlan)#vlan 10 bridge 1 name Create VLAN 10 on bridge 1. ipi10 (config-vlan)#exit Exit VLAN configure mode. (config)#interface eth1 Enter interface mode.
(config)#interface eth1 Enter interface mode. (config-if)#switchport Configure Eth1 as a Layer 2 port. (config-if)#bridge-group 1 Configure Eth1 in bridge group 1. (config-if)#switchport mode trunk Make the interface a trunk. (config-if)#switchport trunk allowed vlan Allow all VLANs on interface Eth1. all (config-if)#exit Exit interface mode. (config)#interface eth2 Enter interface mode. (config-if)#switchport Configure Eth2 as a Layer 2 port.
(config-if)#bridge-group 1 Configure Eth2 in bridge group 1. (config-if)#switchport mode trunk Make the interface a trunk. (config-if)#switchport trunk allowed vlan Allow all VLANs on interface Eth2. all (config-if)#exit Exit interface mode. (config)#bridge 1 protocol ieee vlan-bridge Configure bridge 1 as VLAN aware. (config)#vlan database Enter VLAN configure mode. (config)#ethernet cfm domain-name type Enter CFM mode and create a domain. character-string name customer level 7 mip-
character-string name customer level 7 mip- creation default bridge 1 (config-ether-cfm)#service ma-type integer Create an MA for VLAN 5 which becomes part of the ring. ma-name 13 vlan 5 mip-creation default (config-ether-cfm)#mep crosscheck mpid 305 Enable crosschecking on the MEP for the neighbor with MPID vlan 5 305. (config-ether-cfm)#mep crosscheck mpid 405 Enable crosschecking on the MEP for the neighbor with MPID vlan 5 405. (config-ether-cfm)#exit Exit CFM mode.
(config-ether-cfm)#exit Exit CFM mode. (config)#interface eth1 Enter interface mode. (config-if)#ethernet cfm mep down mpid 405 Enter CFM MEP mode and configure MEP 405 as a down active true domain customer vlan 5 local-vid MEP in domain customer for VLAN 5. 5 bridge 1 (config-if-eth-cfm-mep)#cc multicast state Start multicast CC with MEPID 405 for VLAN 5. enable (config-if-eth-cfm-mep)#exit Exit CFM MEP mode. © 2015 IP Infusion Inc. Proprietary 193 G.8032 ERPS Version 1
G.8032 ERPS Version 1 (config-if)#exit Exit interface mode. (config)#interface eth2 Enter interface mode. (config-if)#ethernet cfm mep down mpid 300 Enter CFM MEP mode and configure MEP 300 as a down active true domain customer vlan 5 local-vid MEP in domain customer for VLAN 5. 5 bridge 1 (config-if-eth-cfm-mep)#cc multicast state Start multicast CC with MEPID 300 for VLAN 5. enable (config-if-eth-cfm-mep)#exit Exit CFM MEP mode. (config-if)#exit Exit interface mode. Bridge 3
(config-if)#exit Exit interface mode. Bridge 3 #configure terminal Enter configure mode. (config)#bridge 3 protocol ieee vlan-bridge Configure bridge 3 as VLAN aware. (config)#vlan database Enter VLAN configure mode. (config-vlan)#vlan 5 bridge 3 name Create VLAN 5 on bridge 3. ipi5 (config-vlan)#vlan 10 bridge 3 name Create VLAN 10 on bridge 3. ipi10 (config-vlan)#exit Exit VLAN configure mode. (config)#interface eth1 Enter interface mode.
(config)#interface eth1 Enter interface mode. (config-if)#switchport Configure Eth1 as a Layer 2 port. (config-if)#bridge-group 3 Configure Eth1 in bridge group 3. (config-if)#switchport mode trunk Make the interface a trunk. (config-if)#switchport trunk allowed vlan Allow all VLANs on interface Eth1. all (config-if)#exit Exit interface mode. (config)#interface eth2 Enter interface mode. (config-if)#switchport Configure Eth2 as a Layer 2 port.
(config-if)#bridge-group 3 Configure Eth2 in bridge group 3. (config-if)#switchport mode trunk Make the interface a trunk. (config-if)#switchport trunk allowed vlan Allow all VLANs on interface Eth2. all (config-if)#exit Exit interface mode. (config)#bridge 3 protocol ieee vlan-bridge Configure bridge 3 as VLAN aware. (config)#vlan database Enter VLAN configure mode. (config)#ethernet cfm domain-name type Enter CFM mode and create a domain. character-string name customer level 7 mip-
character-string name customer level 7 mip- creation default bridge 3 (config-ether-cfm)#service ma-type integer Create an MA for VLAN 5 which becomes part of the ring. ma-name 13 vlan 5 mip-creation default (config-ether-cfm)#mep crosscheck mpid 105 Enable crosschecking on the MEP for the neighbor with MPID vlan 5 as 105. 194 © 2015 IP Infusion Inc. Proprietary G.8032 ERPS Version 1 (config-ether-cfm)#mep crosscheck mpid 205 Enable crosschecking on the MEP for the neighbor with MPID
vlan 5 205. (config-ether-cfm)#exit Exit CFM mode. (config-if)#exit Exit interface mode. (config)#interface eth1 Enter interface mode. (config-if)#ethernet cfm mep down mpid 405 Enter CFM MEP mode and configure MEP 100 as a down active true domain customer vlan 5 local-vid MEP in domain customer for VLAN 5. 5 bridge 3 (config-if-eth-cfm-mep)#cc multicast state Start multicast CC with MEPID 405 for VLAN 5. enable (config-if-eth-cfm-mep)#exit Exit CFM MEP mode.
(config-if-eth-cfm-mep)#exit Exit CFM MEP mode. (config-if)#exit Exit interface mode. (config)#interface eth2 Enter interface mode. (config-if)#ethernet cfm mep down mpid 200 Enter CFM MEP mode and configure MEP 200 as a down active true domain customer vlan 5 local-vid MEP in domain customer for VLAN 5. 5 bridge 1 (config-if-eth-cfm-mep)#cc multicast state Start multicast CC with MEPID 200 for VLAN 5. enable (config-if-eth-cfm-mep)#exit Exit CFM MEP mode. (config-if)#exit Exit interface mode.
(config-if)#exit Exit interface mode. Bridge 4 #configure terminal Enter configure mode. (config)#bridge 4 protocol ieee vlan-bridge Configure bridge 4 as VLAN aware. (config)#vlan database Enter VLAN configure mode. (config-vlan)#vlan 5 bridge 4 name Create VLAN 5 on bridge 4. ipi5 (config-vlan)#vlan 10 bridge 4 name Create VLAN 10 on bridge 4. ipi10 (config-vlan)#exit Exit VLAN configure mode. (config)#interface eth1 Enter interface mode.
(config)#interface eth1 Enter interface mode. (config-if)#switchport Configure Eth1 as a Layer 2 port. (config-if)#bridge-group 4 Configure Eth1 in bridge group 4. (config-if)#switchport mode trunk Make the interface a trunk. (config-if)#switchport trunk allowed vlan Allow all VLANs on interface Eth1. all (config-if)#exit Exit interface mode. (config)#interface eth2 Enter interface mode. (config-if)#switchport Configure Eth2 as a Layer 2 port.
(config-if)#bridge-group 4 Configure Eth2 in bridge group 4. (config-if)#switchport mode trunk Make the interface a trunk. © 2015 IP Infusion Inc. Proprietary 195 G.8032 ERPS Version 1 (config-if)#switchport trunk allowed vlan Allow all VLANs on interface Eth2. all (config-if)#exit Exit interface mode. (config)#bridge 4 protocol ieee vlan-bridge Configure bridge 4 as VLAN aware. (config)#vlan database Enter VLAN configure mode.
(config)#vlan database Enter VLAN configure mode. (config)#ethernet cfm domain-name type Enter CFM mode and create a domain. character-string name customer level 7 mip- creation default bridge 4 (config-ether-cfm)#service ma-type integer Create an MA for VLAN 5 which becomes part of the ring. ma-name 13 vlan 5 mip-creation default (config-ether-cfm)#mep crosscheck mpid 200 Enable crosschecking on the MEP for neighbor (part of the vlan 5 ring) with MPID as 200.
vlan 5 ring) with MPID as 200. (config-ether-cfm)#mep crosscheck mpid 300 Enable crosschecking on the MEP for neighbor (part of the vlan 5 ring) with MPID 300. (config-ether-cfm)#exit Exit CFM mode. (config-if)#interface eth1 Enter interface mode. (config)#ethernet cfm mep down mpid 205 Enter CFM MEP mode and configure MEP 205 as a down active true domain customer vlan 5 local-vid MEP in domain customer for VLAN 5. 5 bridge 4
5 bridge 4 (config-if-eth-cfm-mep)#cc multicast state Start multicast CC with MEPID 205 for VLAN 5. enable (config-if-eth-cfm-mep)#exit Exit CFM MEP mode. (config-if)#exit Exit interface mode. (config)#interface eth2 Enter interface mode. (config-if)#ethernet cfm mep down mpid 200 Enter CFM MEP mode and configure MEP 200 as a down active true domain customer vlan 5 local-vid MEP in domain customer for VLAN 5. 5 bridge 4
5 bridge 4 (config-if-eth-cfm-mep)#cc multicast state Start multicast CC with MEPID 200 for VLAN 5. enable (config-if-eth-cfm-mep)#exit Exit CFM MEP mode. (config-if)#exit Exit interface mode. Validation Check the convergence of CFM on all bridges for level 7 in VLAN 5 for bridge 1 using the following command: #show ethernet cfm maintenance-points remote level 7 vlan 5 bridge 1 196 © 2015 IP Infusion Inc. Proprietary G.8032 ERPS Version 1 Adding G.8032 Ring Protection Switching Bridge 2
Adding G.8032 Ring Protection Switching Bridge 2 #configure terminal Enter configure mode. (config)#bridge 2 g8032 ring-id 2 east- Configure the bridge with G.8032 for a specific ring ID, identify interface eth2 west-interface eth1 instance the east and west interfaces, and associate them with MSTP 1 instance 1. (config)#g8032 configure vlan ring-id 2 Enter G.8032 configure VLAN mode. bridge 2 (g8032-config-vlan)#g8032 vlan 5 control Set VLAN 5 as control.
(g8032-config-vlan)#exit Exit G.8032 configure VLAN mode. (config)#g8032 configure switching ring-id 2 Enter G.8032 configure switching mode. bridge 2 (g8032-config-switch)#g8032 md-name customer Associate an MD and MA name to the ring. service-id 13 bridge 1 ring-id 2 For hardware (g8032-config-cfm)#g8032 mep mpid 105 rmepid Associate RMEP to the connected MEP 100 (g8032-config-cfm)#g8032 mep mpid 405 rmepid Associate RMEP to the connected MEP 400
400 (g8032-config-cfm)#exit Exit G.8032 configure cfm mode (g8032-config-switch) #g8032 rpl owner east- Configure the Ring Protection Link node as Owner and interface specify the interface as RPL owner. with east interface .The same may also be configured with west-interface. (g8032-config-switch)#exit Exit G.8032 configure switching mode. Bridge 1 #configure terminal Enter configure mode. (config)#bridge 1 g8032 ring-id 2 east- Configure the bridge with G.8032 for a specific ring ID, identify
interface eth2 west-interface eth1 instance the east and west interfaces, and associate them with MSTP 1 instance 1. (config)#g8032 configure vlan ring-id 2 Enter G.8032 configure VLAN mode. bridge 1 (g8032-config-vlan)#g8032 vlan 5 control Set VLAN 5 as control. (g8032-config-vlan)#exit Exit G.8032 configure VLAN mode. (config)#g8032 configure switching ring-id 2 Enter G.8032 configure switching mode. bridge 1
bridge 1 (g8032-config-switch)#g8032 md-name customer Associate an MD and MA name to the ring. service-id 13 bridge 1 ring-id 2 For hardware (g8032-config-cfm)#g8032 mep mpid 300 rmepid Associate RMEP to the connected MEP 305 © 2015 IP Infusion Inc. Proprietary 197 G.8032 ERPS Version 1 (g8032-config-cfm)#g8032 mep mpid 400 rmepid Associate RMEP to the connected MEP 405 (g8032-config-cfm)#exit Exit G.8032 configure cfm mode
(g8032-config-switch) #g8032 rpl non-owner Configure the Ring Protection Link node as Owner and none specify the RPL owner. (g8032-config-switch)#exit Exit G.8032 configure switching mode. Bridge 3 #configure terminal Enter configure mode. (config)#bridge 3 g8032 ring-id 2 east- Configure the bridge with G.8032 for a specific ring ID and interface eth2 west-interface eth1 instance identify the east and west interfaces with xSTP instance 1. 1
1 (config)#g8032 configure vlan ring-id 2 Enter G.8032 configure VLAN mode. bridge 3 (g8032-config-vlan)#g8032 vlan 5 control Set VLAN 5 as control. (g8032-config-vlan)#exit Exit G.8032 configure VLAN mode. (config)#g8032 configure switching ring-id 2 Enter G.8032 configure switching mode. bridge 3 (g8032-config-switch)#g8032 md-name customer Associate an MD and MA name to the ring. service-id 13 bridge 3 ring-id 2 For hardware
service-id 13 bridge 3 ring-id 2 For hardware (g8032-config-cfm)#g8032 mep mpid 100 rmepid Associate RMEP to the connected MEP 105 (g8032-config-cfm)#g8032 mep mpid 200 rmepid Associate RMEP to the connected MEP 205 (g8032-config-cfm)#exit Exit G.8032 configure cfm mode (g8032-config-switch) #g8032 rpl non-owner Configure the Ring Protection Link node as Owner and none specify the RPL owner. (g8032-config-switch)#exit Exit G.8032 configure switching mode. Bridge 4
Bridge 4 #configure terminal Enter configure mode. (config)#bridge 4 g8032 ring-id 2 east- Configure the bridge with G.8032 for a specific ring ID, identify interface eth2 west-interface eth1 instance the east and west interfaces, and associate them with MSTP 1 instance 1. (config)#g8032 configure vlan ring-id 2 Enter G.8032 configure VLAN mode. bridge 4 (g8032-config-vlan)#g8032 vlan 5 control Set VLAN 5 as control. (g8032-config-vlan)#exit Exit G.8032 configure VLAN mode.
(config)#g8032 configure switching ring-id 2 Enter G.8032 configure switching mode. bridge 4 (g8032-config-switch)#g8032 md-name customer Associate an MD and MA name to the ring. service-id 13 bridge 4 ring-id 2 For hardware 198 © 2015 IP Infusion Inc. Proprietary G.8032 ERPS Version 1 (g8032-config-cfm)#g8032 mep mpid 205 rmepid Associate RMEP to the connected MEP 200 (g8032-config-cfm)#g8032 mep mpid 305 rmepid Associate RMEP to the connected MEP 300
300 (g8032-config-cfm)#exit Exit G.8032 configure cfm mode (g8032-config-switch) #g8032 rpl non-owner Configure the Ring Protection Link node as Owner and none specify the RPL owner. (g8032-config-switch)#exit Exit G.8032 configure switching mode. Setting Ring Protection Switching Timers The commands below are for setting the Ring Protection Switching timers for the ring of bridges. #configure terminal Enter configure mode.
#configure terminal Enter configure mode. (config)#g8032 configure switching ring-id 1 Enter G.8032 configure switching mode. bridge 1 (g8032-config-switching)#g8032 timer wait- Set wait-to-restore timer to 360 seconds. to-restore 360 (g8032-config-switching)#g8032 timer hold- Set the hold-off timer to 100 milli seconds. off 100 (g8032-config-switching)#g8032 timer guard- Set the guard-timer to 10 milli seconds. timer 10 (g8032-config-switching)#exit Exit G.8032 configure switching mode.
Removing G.8032 Ring Configurations The steps below are used to remove Ring Protection Switching configurations from the bridges. Bridge 2 #configure terminal Enter configure mode. (config)#g8032 configure switching ring-id 2 Enter G.8032 configure switching mode. bridge 2 (g8032-config-switch)#no g8032 md-name Remove the association of the bridge and the G.8032 ring with customer service-id 13 bridge 2 ring-id 2 CFM using md-name and service-id.
(g8032-config-switch)#exit Exit G.8032 configure switching mode. (config)#no bridge 2 g8032 ring-id 2 Remove G.8032 ring 2 for bridge 2 Bridge 1 #configure terminal Enter configure mode. (config)#g8032 configure switching ring-id 2 Enter G.8032 configure switching mode. bridge 1 (g8032-config-switch)#no g8032 md-name Remove the association of the bridge and the G.8032 ring with customer service-id 13 bridge 1 ring-id 2 CFM using md-name and service-id. © 2015 IP Infusion Inc. Proprietary 199
© 2015 IP Infusion Inc. Proprietary 199 G.8032 ERPS Version 1 (g8032-config-switch)#exit Exit G.8032 configure switching mode. (config)#no bridge 1 g8032 ring-id 2 Remove G.8032 ring 2 for bridge 1 Bridge 3 #configure terminal Enter configure mode. (config)#g8032 configure switching ring-id 2 Enter G.8032 configure switching mode. bridge 3 (g8032-config-switch)#no g8032 md-name Remove the association of the bridge and the G.8032 ring with
customer service-id 13 bridge 3 ring-id 2 CFM using md-name and service-id. (g8032-config-switch)#exit Exit G.8032 configure switching mode. (config)#no bridge 3 g8032 ring-id 2 Remove G.8032 ring 2 for bridge 3 Bridge 4 #configure terminal Enter configure mode. (config)#g8032 configure switching ring-id 2 Enter G.8032 configure switching mode. bridge 4 (g8032-config-switch)#no g8032 md-name Remove the association of the bridge and the G.8032 ring with
customer service-id 13 bridge 4 ring-id 2 CFM using md-name and service-id. (g8032-config-switch)#exit Exit G.8032 configure switching mode. (config)#no bridge 4 g8032 ring-id 2 Remove G.8032 ring 2 for bridge 4 Validation The following command displays G.8032 information for ring-id 2: #show bridge 1 g8032 ring-id 2 The following command displays G.8032 information for all rings configured: #show bridge 1 g8032 G8032v1 Configuration with Sub Ring
G8032v1 Configuration with Sub Ring Ethernet ring protection enables the interconnection of rings using either a single-node or dual-node (a shared link). ERPS protects services that are traversing interconnected rings. For interconnected rings that use dual nodes, ERPS ensures that a super loop does not form in the event that a shared link fails. Only a RPL (Ring Protection Link) with a
highest priority protects a ring when a shared link fails. This prevents the formation of a super loop. A signal failure on a non-shared link (that is, when the ring is in idle state) triggers protection switching within the ring where the link failed. All other interconnected rings will ignore this event. Note: G.8032 (2008) Ethernet Ring Protection Switching (ERPS) Version 1 is obsolete for X86 platform. For hardware platforms only G.8032 Version 1 is supported. Topology
Topology Figure 15-2 displays a sample Ethernet Ring Protection Switching topology. 200 © 2015 IP Infusion Inc. Proprietary G.8032 ERPS Version 1 Figure 15-2: Simple Ethernet Ring Protection Switching Topology Bridge 1 #configure terminal Enter configure mode. (config)#bridge 1 protocol mstp Configure MSTP bridge. (config)#vlan database Enter VLAN configure mode. (config-vlan)#vlan 5 bridge 1 name ipi5 Create VLAN 5 on bridge 1.
(config-vlan)#vlan 10 bridge 1 name ipi10 Create VLAN 10 on bridge 1. (config-vlan)#exit Exit VLAN configure mode. (config)#interface eth1 Enter interface mode. (config-if)#switchport Configure Eth1 as a Layer 2 port. (config-if)#bridge-group 1 Configure Eth1 in bridge group 1. (config-if)#switchport mode trunk Make the interface a trunk. (config-if)#switchport trunk allowed vlan all Allow all VLANs on interface Eth1. (config-if)#exit Exit interface mode.
(config-if)#exit Exit interface mode. (config)#interface eth2 Enter interface mode. (config-if)#switchport Configure Eth2 as a Layer 2 port. (config-if)#bridge-group 1 Configure Eth2 in bridge group 1. (config-if)#switchport mode trunk Make the interface a trunk. (config-if)#switchport trunk allowed vlan all Allow all VLANs on interface Eth2. (config-if)#exit Exit interface mode. (config)#ethernet cfm domain-name type Enter CFM mode and create domain test at level 7, setting
character-string name test level 7 mip- MIP creation permissions to the default. creation none bridge 1 (config-ether-cfm)#service ma-type string ma- Create MA with type as integer and set MIP creation name 12 vlan 5 mip-creation none permissions to default. (config-ether-cfm)#mep crosscheck mpid 13 Enable crosscheck to remote MEP 13 on VLAN 5. vlan 5 mac 0007.e9a5.1cd1 © 2015 IP Infusion Inc. Proprietary 201 G.8032 ERPS Version 1
G.8032 ERPS Version 1 (config-ether-cfm)#mep crosscheck mpid 10 Enable crosscheck to remote MEP 10 on VLAN 5. vlan 5 mac 0002.b328.52f5 (config-ether-cfm)#exit Exit ether-cfm mode. (config)#int eth1 Enter interface mode (config-if)#ethernet cfm mep down mpid 11 Create a down MEP, assign an MPID, associate it with active true domain test vlan 5 local-vid 5 domain test in VLAN 5 and bridge 1 bridge 1 (config-if-eth-cfm-mep)#cc unicast rmpid 10 Enable unicast continuity checking (CC). state enable
state enable (config-if-eth-cfm-mep)#exit Exit CFM MEP mode. (config-if)#exit Exit interface mode. (config)#int eth2 Enter interface mode. (config-if)#ethernet cfm mep down mpid 12 Create a down MEP, assign an MPID, associate it with active true domain test vlan 5 local-vid 5 domain test in VLAN 5 and bridge 1. bridge 1 (config-if-eth-cfm-mep)#cc unicast rmpid 13 Enable unicast continuity checking (CC). state enable (config-if-eth-cfm-mep)#exit Exit CFM MEP mode.
(config-if-eth-cfm-mep)#exit Exit CFM MEP mode. (config-if)#exit Exit interface mode. (config)#bridge 1 g8032 ring-id 1 east- Create g8032 bridge with ring-ID 1. interface eth1 west-interface eth2 instance 2control (config)#g8032 configure vlan ring-id 1 Enter the g8032 VLAN configuration mode. bridge 1 (g8032-config-vlan)#g8032 vlan 5 control Configure VLAN 5 as control. (g8032-config-vlan)#exit Exit g8032 VLAN configuration mode.
(config)#g8032 configure switching ring-id 1 Enter the g8032 switching parameters configuration mode. bridge 1 (g8032-config-switch)#g8032 md-name test Associate g8032 switch with CFM. service-id 12 bridge 1 ring-id 1 *For HW Platforms Associate RMEP to the connected MEP. (g8032-config-cfm)#g8032 mep mpid 11 rmepid 10 *For HW Platforms Associate RMEP to the connected MEP. (g8032-config-cfm)#g8032 mep mpid 12 rmepid 13 *For HW Platforms Exit G.8032 configure cfm mode. (g8032-config-cfm)#exit
(g8032-config-cfm)#exit (g8032-config-switch)#g8032 rpl owner east- Configure RPL owner. interface (g8032-config-switch)#end Exit the g8032 switch configuration mode. Bridge 2 #configure terminal Enter configure mode. (config)#bridge 1 protocol mstp Configure MSTP bridge. (config)#vlan database Enter VLAN configure mode. 202 © 2015 IP Infusion Inc. Proprietary G.8032 ERPS Version 1 (config-vlan)#vlan 5 bridge 1 name ipi5 Create VLAN 5 on bridge 1.
(config-vlan)#vlan 10 bridge 1 name ipi10 Create VLAN 10 on bridge 1. (config-vlan)#vlan 20 bridge 1 name ipi20 Create VLAN 20 on bridge 1. (config-vlan)#exit Exit VLAN configure mode. (config)#interface eth1 Enter interface mode. (config-if)#switchport Configure Eth1 as a Layer 2 port. (config-if)#bridge-group 1 Configure Eth1 in bridge group 1. (config-if)#switchport mode trunk Make the interface a trunk. (config-if)#switchport trunk allowed vlan all Allow all VLANs on interface Eth1.
(config-if)#exit Exit interface mode. (config)#interface eth2 Enter interface mode. (config-if)#switchport Configure Eth2 as a Layer 2 port. (config-if)#bridge-group 1 Configure Eth2 in bridge group 1. (config-if)#switchport mode trunk Make the interface a trunk. (config-if)#switchport trunk allowed vlan all Allow all VLANs on interface Eth2. (config-if)#exit Exit interface mode. (config)#interface eth3 Enter interface mode. (config-if)#switchport Configure Eth3 as a Layer 2 port.
(config-if)#bridge-group 1 Configure Eth3 in bridge group 1. (config-if)#switchport mode trunk Make the interface a trunk. (config-if)#switchport trunk allowed vlan all Allow all VLANs on interface Eth3. (config-if)#exit Exit interface mode. (config)#ethernet cfm domain-name type Enter CFM mode and create domain test at level 7, setting character-string name test level 7 mip- MIP creation permissions to the default. creation none bridge 1
creation none bridge 1 (config-ether-cfm)#service ma-type string ma- Create MA with type as integer and set MIP creation name 12 vlan 5 mip-creation none permissions to default. (config-ether-cfm)#mep crosscheck mpid 11 Enable crosscheck to remote MEP 11 on VLAN 5. vlan 5 mac 0002.a5dd.9563 (config-ether-cfm)#mep crosscheck mpid 19 Enable crosscheck to remote MEP 19 on VLAN 5. vlan 5 mac 0002.a581.9563
vlan 5 mac 0002.a581.9563 (config-ether-cfm)#service ma-type string ma- Create MA with type as integer and set MIP creation name 13 vlan 10 mip-creation none permissions to default. (config-ether-cfm)#mep crosscheck mpid 20 Enable crosscheck to remote MEP 20 on VLAN 5. vlan 19 mac 0002.a581.9563 (config-ether-cfm)#mep crosscheck mpid 19 Enable crosscheck to remote MEP 19 on VLAN 5. vlan 5 mac 0002.a5ad.9563 (config-ether-cfm)#exit Exit ether-cfm mode. (config)#int eth1 Enter interface mode
(config)#int eth1 Enter interface mode (config-if)#ethernet cfm mep down mpid 10 Create a down MEP, assign an MPID, associate it with active true domain test vlan 5 local-vid 5 domain test in VLAN 5 and bridge 1 bridge 1 (config-if-eth-cfm-mep)#cc unicast rmpid 11 Enable unicast continuity checking (CC). state enable (config-if-eth-cfm-mep)#exit Exit CFM MEP mode. © 2015 IP Infusion Inc. Proprietary 203 G.8032 ERPS Version 1 (config-if)#exit Exit interface mode.
(config-if)#exit Exit interface mode. (config)#int eth2 Enter interface mode. (config-if)#ethernet cfm mep down mpid 17 Create a down MEP, assign an MPID, associate it with active true domain test vlan 10 local-vid 10 domain test in VLAN 10 and bridge 1. bridge 1 (config-if-eth-cfm-mep)#cc unicast rmpid 16 Enable unicast continuity checking (CC). state enable (config-if-eth-cfm-mep)#exit Exit CFM MEP mode. (config-if)#exit Exit interface mode. (config)#int eth3 Enter interface mode.
(config)#int eth3 Enter interface mode. (config-if)#ethernet cfm mep down mpid 18 Create a down MEP, assign an MPID, associate it with active true domain test vlan 10 local-vid 10 domain test in VLAN 10 and bridge 1. bridge 1 (config-if-eth-cfm-mep)#cc unicast rmpid 19 Enable unicast continuity checking (CC). state enable (config-if-eth-cfm-mep)#exit Exit CFM MEP mode. (config-if)#ethernet cfm mep down mpid 18 Create a down MEP, assign an MPID, associate it with
active true domain test vlan 5 local-vid 5 domain test in VLAN 5 and bridge 1. bridge 1 (config-if-eth-cfm-mep)#cc unicast rmpid 19 Enable unicast continuity checking (CC). state enable (config-if-eth-cfm-mep)#exit Exit CFM MEP mode. (config-if)#exit Exit interface mode. (config)#bridge 1 g8032 ring-id 1 east- Create g8032 bridge with ring-ID 1. interface eth1 west-interface eth3 instance 2 (config)#bridge 1 g8032 ring-id 2 east- Create g8032 bridge with ring-ID 2.
interface eth2 west-interface eth3 instance 3 (config)#g8032 configure vlan ring-id 1 Enter the g8032 VLAN configuration mode. bridge 1 (g8032-config-vlan)#g8032 vlan 20 Configure VLAN 20. (g8032-config-vlan)#g8032 vlan 5 control Configure VLAN 5 as control. (g8032-config-vlan)#exit Exit g8032 VLAN configuration mode. (config)#g8032 configure vlan ring-id 2 Enter the g8032 VLAN configuration mode. bridge 1 (g8032-config-vlan)#g8032 vlan 20 Configure VLAN 20.
(g8032-config-vlan)#g8032 vlan 10 control Configure VLAN 10 as control. (g8032-config-vlan)#exit Exit g8032 VLAN configuration mode. (config)#g8032 configure switching ring-id 1 Enter the g8032 switching parameters configuration mode. bridge 1 (g8032-config-switch)#g8032 md-name test Associate g8032 switch with CFM. service-id 12 bridge 1 ring-id 1 (g8032-config-switch)#g8032 rpl non-owner Configure RPL non-owner. none (g8032-config-switch)#g8032 shared-link Create shared link with peer ring.
interface eth3 peer-ring 2 (g8032-config-switch)#exit Exit the g8032 switch configuration mode. 204 © 2015 IP Infusion Inc. Proprietary G.8032 ERPS Version 1 (config)#g8032 configure switching ring-id 2 Enter the g8032 switching parameters configuration mode. bridge 1 (g8032-config-switch)#g8032 md-name test Associate g8032 switch with CFM. service-id 13 bridge 1 ring-id 2 *For HW Platforms Associate RMEP to the connected MEP. (g8032-config-cfm)#g8032 mep mpid 17 rmepid 16
(g8032-config-cfm)#g8032 mep mpid 17 rmepid 16 *For HW Platforms Associate RMEP to the connected MEP. (g8032-config-cfm)#g8032 mep mpid 18 rmepid 19 *For HW Platforms Exit G.8032 configure cfm mode. (g8032-config-cfm)#exit (g8032-config-switch)#g8032 rpl non-owner Configure RPL non-owner. none (g8032-config-switch)#g8032 shared-link Create shared link with a peer ring. interface eth3 peer-ring 1 (g8032-config-switch)#end Exit the g8032 switch configuration mode. Bridge 3
Bridge 3 #configure terminal Enter configure mode. (config)#bridge 1 protocol mstp Configure MSTP bridge. (config)##vlan database Enter VLAN configure mode. (config-vlan)#vlan 5 bridge 1 name ipi5 Create VLAN 5 on bridge 1. (config-vlan)#vlan 10 bridge 1 name ipi10 Create VLAN 10 on bridge 1. (config-vlan)#exit Exit VLAN configure mode. (config)#interface eth1 Enter interface mode. (config-if)#switchport Configure Eth1 as a Layer 2 port.
(config-if)#bridge-group 1 Configure Eth1 in bridge group 1. (config-if)#switchport mode trunk Make the interface a trunk. (config-if)#switchport trunk allowed vlan all Allow all VLANs on interface Eth1. (config-if)#exit Exit interface mode. (config)#interface eth2 Enter interface mode. (config-if)#switchport Configure Eth2 as a Layer 2 port. (config-if)#bridge-group 1 Configure Eth2 in bridge group 1. (config-if)#switchport mode trunk Make the interface a trunk.
(config-if)#switchport trunk allowed vlan all Allow all VLANs on interface Eth2. (config-if)#exit Exit interface mode. (config)#interface eth3 Enter interface mode. (config-if)#switchport Configure Eth3 as a Layer 2 port. (config-if)#bridge-group 1 Configure Eth3 in bridge group 1. (config-if)#switchport mode trunk Make the interface a trunk. (config-if)#switchport trunk allowed vlan all Allow all VLANs on interface Eth3. © 2015 IP Infusion Inc. Proprietary 205 G.8032 ERPS Version 1
G.8032 ERPS Version 1 (config-if)#exit Exit interface mode. (config)#ethernet cfm domain-name type Enter CFM mode and create domain test at level 7, setting character-string name test level 7 mip- MIP creation permissions to the default. creation none bridge 1 (config-ether-cfm)#service ma-type string ma- Create MA with type as integer and set MIP creation name 13 vlan 10 mip-creation none permissions to default.
(config-ether-cfm)#mep crosscheck mpid 14 Enable crosscheck to remote MEP 14 on VLAN 10. vlan 10 mac 0002.a581.9562 (config-ether-cfm)#mep crosscheck mpid 17 Enable crosscheck to remote MEP 17 on VLAN 10. vlan 10 mac 0002.b328.5272 (config-ether-cfm)#exit Exit ether-cfm mode. (config)#int eth1 Enter interface mode (config-if)#ethernet cfm mep down mpid 16 Create a down MEP, assign an MPID, associate it with active true domain test vlan 10 local-vid 10 domain test in VLAN 10 and bridge 1
bridge 1 (config-if-eth-cfm-mep)#cc unicast rmpid 17 Enable unicast continuity checking (CC). state enable (config-if-eth-cfm-mep)#exit Exit CFM MEP mode. (config-if)#exit Exit interface mode. (config)#int eth2 Enter interface mode. (config-if)#ethernet cfm mep down mpid 15 Create a down MEP, assign an MPID, associate it with active true domain test vlan 10 local-vid 10 domain test in VLAN 10 and bridge 1. bridge 1
bridge 1 (config-if-eth-cfm-mep)#cc unicast rmpid 14 Enable unicast continuity checking (CC). state enable (config-if-eth-cfm-mep)#exit Exit CFM MEP mode. (config-if)#exit Exit interface mode. (config)#bridge 1 g8032 ring-id 2 east- Create g8032 bridge with ring-ID 2. interface eth1 west-interface eth2 instance 2 (config)#g8032 configure vlan ring-id 2 Enter the g8032 VLAN configuration mode. bridge 1 (g8032-config-vlan)#g8032 vlan 10 control Configure VLAN 10 as control.
(g8032-config-vlan)#exit Exit g8032 VLAN configuration mode. (config)#g8032 configure switching ring-id 2 Enter the g8032 switching parameters configuration mode. bridge 1 (g8032-config-switch)#g8032 md-name test Associate g8032 switch with CFM. service-id 13 bridge 1 ring-id 2 *For HW Platforms Associate RMEP to the connected MEP. (g8032-config-cfm)#g8032 mep mpid 16 rmepid 17 *For HW Platforms Associate RMEP to the connected MEP. (g8032-config-cfm)#g8032 mep mpid 15 rmepid 14
(g8032-config-cfm)#g8032 mep mpid 15 rmepid 14 *For HW Platforms Exit G.8032 configure cfm mode. (g8032-config-cfm)#exit (g8032-config-switch)#g8032 rpl owner east- Configure RPL owner. interface (g8032-config-switch)#end Exit the g8032 switch configuration mode. 206 © 2015 IP Infusion Inc. Proprietary G.8032 ERPS Version 1 Bridge 4 #configure terminal Enter configure mode. (config)#bridge 1 protocol mstp Configure MSTP bridge. (config)##vlan database Enter VLAN configure mode.
(config-vlan)#vlan 5 bridge 1 name ipi5 Create VLAN 5 on bridge 1. (config-vlan)#vlan 10 bridge 1 name ipi10 Create VLAN 10 on bridge 1. (config-vlan)#vlan 20 bridge 1 name ipi20 Create VLAN 20 on bridge 1. (config-vlan)#exit Exit VLAN configure mode. (config)#interface eth1 Enter interface mode. (config-if)#switchport Configure Eth1 as a Layer 2 port. (config-if)#bridge-group 1 Configure Eth1 in bridge group 1. (config-if)#switchport mode trunk Make the interface a trunk.
(config-if)#switchport trunk allowed vlan all Allow all VLANs on interface Eth1. (config-if)#exit Exit interface mode. (config)#interface eth2 Enter interface mode. (config-if)#switchport Configure Eth2 as a Layer 2 port. (config-if)#bridge-group 1 Configure Eth2 in bridge group 1. (config-if)#switchport mode trunk Make the interface a trunk. (config-if)#switchport trunk allowed vlan all Allow all VLANs on interface Eth2. (config-if)#exit Exit interface mode.
(config-if)#exit Exit interface mode. (config)#interface eth3 Enter interface mode. (config-if)#switchport Configure Eth3 as a Layer 2 port. (config-if)#bridge-group 1 Configure Eth3 in bridge group 1. (config-if)#switchport mode trunk Make the interface a trunk. (config-if)#switchport trunk allowed vlan all Allow all VLANs on interface Eth3. (config-if)#exit Exit interface mode. (config)#ethernet cfm domain-name type Enter CFM mode and create domain test at level 7, setting
character-string name test level 7 mip- MIP creation permissions to the default. creation none bridge 1 (config-ether-cfm)#service ma-type string ma- Create MA with type as integer and set MIP creation name 12 vlan 5 mip-creation none permissions to default. (config-ether-cfm)#mep crosscheck mpid 12 Enable crosscheck to remote MEP 12 on VLAN 5. vlan 5 mac 00d0.v727.a854 (config-ether-cfm)#mep crosscheck mpid 18 Enable crosscheck to remote MEP 18 on VLAN 5. vlan 5 mac 0002.b328.5273
vlan 5 mac 0002.b328.5273 (config-ether-cfm)#service ma-type string ma- Create MA with type as integer and set MIP creation name 13 vlan 10 mip-creation none permissions to default. (config-ether-cfm)#mep crosscheck mpid 15 Enable crosscheck to remote MEP 15 on VLAN 10. vlan 10 mac 00d0.b793.9e57 (config-ether-cfm)#mep crosscheck mpid 18 Enable crosscheck to remote MEP 18 on VLAN 10. vlan 10 mac 0002.b328.5273 (config-ether-cfm)#exit Exit ether-cfm mode. © 2015 IP Infusion Inc. Proprietary 207
© 2015 IP Infusion Inc. Proprietary 207 G.8032 ERPS Version 1 (config)#int eth1 Enter interface mode (config-if)#ethernet cfm mep down mpid 13 Create a down MEP, assign an MPID, associate it with active true domain test vlan 5 local-vid 5 domain test in VLAN 5 and bridge 1 bridge 1 (config-if-eth-cfm-mep)#cc unicast rmpid 12 Enable unicast continuity checking (CC). state enable (config-if-eth-cfm-mep)#exit Exit CFM MEP mode. (config-if)#exit Exit interface mode.
(config-if)#exit Exit interface mode. (config)#int eth2 Enter interface mode. (config-if)#ethernet cfm mep down mpid 14 Create a down MEP, assign an MPID, associate it with active true domain test vlan 10 local-vid 10 domain test in VLAN 10 and bridge 1. bridge 1 (config-if-eth-cfm-mep)#cc unicast rmpid 15 Enable unicast continuity checking (CC). state enable (config-if-eth-cfm-mep)#exit Exit CFM MEP mode. (config-if)#exit Exit interface mode. (config)#int eth3 Enter interface mode.
(config)#int eth3 Enter interface mode. (config-if)#ethernet cfm mep down mpid 19 Create a down MEP, assign an MPID, associate it with active true domain test vlan 5 local-vid 5 domain test in VLAN 5 and bridge 1. bridge 1 (config-if-eth-cfm-mep)#cc unicast rmpid 19 Enable unicast continuity checking (CC). state enable (config-if-eth-cfm-mep)#exit Exit CFM MEP mode. (config-if)#ethernet cfm mep down mpid 19 Create a down MEP, assign an MPID, associate it with
active true domain test vlan 10 local-vid 10 domain test in VLAN 10 and bridge 1. bridge 1 (config-if-eth-cfm-mep)#cc unicast rmpid 18 Enable unicast continuity checking (CC). state enable (config-if-eth-cfm-mep)#exit Exit CFM MEP mode. (config-if)#exit Exit interface mode. (config)#bridge 1 g8032 ring-id 1 east- Create g8032 bridge with ring-ID 1. interface eth1 west-interface eth3 instance 2 (config)#bridge 1 g8032 ring-id 2 east- Create g8032 bridge with ring-ID 2.
interface eth2 west-interface eth3 instance 3 (config)#g8032 configure vlan ring-id 1 Enter the g8032 VLAN configuration mode. bridge 1 (g8032-config-vlan)#g8032 vlan 20 Configure VLAN 20. (g8032-config-vlan)#g8032 vlan 5 control Configure VLAN 5 as control. (g8032-config-vlan)#exit Exit g8032 VLAN configuration mode. (config)#g8032 configure vlan ring-id 2 Enter the g8032 VLAN configuration mode. bridge 1 (g8032-config-vlan)#g8032 vlan 20 Configure VLAN 20.
(g8032-config-vlan)#g8032 vlan 10 control Configure VLAN 10 as control. (g8032-config-vlan)#exit Exit g8032 VLAN configuration mode. (config)#g8032 configure switching ring-id 1 Enter the g8032 switching parameters configuration mode. bridge 1 208 © 2015 IP Infusion Inc. Proprietary G.8032 ERPS Version 1 (g8032-config-switch)#g8032 md-name test Associate g8032 switch with CFM. service-id 12 bridge 1 ring-id 1 (g8032-config-switch)#g8032 rpl non-owner Configure RPL non-owner. none
none (g8032-config-switch)#g8032 shared-link Create shared link with peer ring. interface eth3 peer-ring 2 (g8032-config-switch)#exit Exit switch configuration mode. (config)#g8032 configure switching ring-id 2 Enter the g8032 switching parameters configuration mode. bridge 1 (g8032-config-switch)#g8032 md-name test Associate g8032 switch with CFM. service-id 13 bridge 1 ring-id 2 *For HW Platforms Associate RMEP to the connected MEP. (g8032-config-cfm)#g8032 mep mpid 14 rmepid 15
(g8032-config-cfm)#g8032 mep mpid 14 rmepid 15 *For HW Platforms Associate RMEP to the connected MEP. (g8032-config-cfm)#g8032 mep mpid 19 rmepid 18 *For HW Platforms Exit G.8032 configure cfm mode. (g8032-config-cfm)#exit (g8032-config-switch)#g8032 rpl non-owner Configure RPL non-owner. none (g8032-config-switch)#g8032 shared-link Create shared link with a peer ring. interface eth3 peer-ring 1 (g8032-config-switch)#end Exit the g8032 switch configuration mode. Validation
Validation Enter the commands listed in the sections below to confirm the configurations. Bridge 1 #show ethernet cfm maintenance-points remote domain test vlan 5 bridge 1 MPID LEVEL VLAN ACTIVE Remote Mac RDI FLAGS ------------------------------------------------------------------------------ --- 13 7 5 Yes 0007.e9a5.1cd1 False Configured 10 7 5 Yes 0002.b328.52f5 False Configured #show bridge 1 g8032 Bridge 1 Ringid Current Role East Status West Status Primary Current Peer Shared
Shared ID State Intf Intf VLAN Event Ring ID Link -- -- -- -- -- -- -- -- -- -- 1 Idle OWNER eth1 Blocked eth2 Forward 5 NR-RB Bridge 2 #show ethernet cfm maintenance-points remote domain test vlan 5 bridge 1 MPID LEVEL VLAN ACTIVE Remote Mac RDI FLAGS ------------------------------------------------------------------------------ -- 11 7 5 Yes 0002.a5dd.9563 False Configured 19 7 5 Yes 0002.a581.9563 False Configured © 2015 IP Infusion Inc. Proprietary 209 G.8032 ERPS Version 1
G.8032 ERPS Version 1 #show ethernet cfm maintenance-points remote domain test vlan 10 bridge 1 MPID LEVEL VLAN ACTIVE Remote Mac RDI FLAGS ------------------------------------------------------------------------------ --- 19 7 10 Yes 0002.a581.9563 False Configured 16 7 10 Yes 0002.a5ad.9563 False Configured #show bridge 1 g8032 Bridge 1 Ringid Current Role East Status West Status Primary Current Peer Shared ID State Intf Intf VLAN Event RingID Link -- -- -- -- -- -- -- -- -- --
RingID Link -- -- -- -- -- -- -- -- -- -- 1 Idle Non-Owner eth1 Forward eth3 Forward 5 NR-RB 2 eth3 2 Idle Non-Owner eth2 Forward eth3 Forward 10 NR-RB 1 eth3 Protected Vlans 20 20 Bridge 3 BRIDGE3#show ethernet cfm maintenance-points remote domain test vlan 10 bridge 1 MPID LEVEL VLAN ACTIVE Remote Mac RDI FLAGS ------------------------------------------------------------------------------ -- 14 7 10 Yes 0002.a581.9562 True Configured 17 7 10 Yes 0002.b328.5272 False Configured
17 7 10 Yes 0002.b328.5272 False Configured BRIDGE3#show bridge 1 g8032 Bridge 1 Ringid Current Role East Status West Status Primary Current Peer Shared ID State Intf Intf VLAN Event Ring ID Link -- -- -- -- -- -- -- -- -- -- 2 Idle OWNER eth1 Blocked eth2 Forward 10 NR-RB Bridge 4 BRIDGE4#show ethernet cfm maintenance-points remote domain test vlan 5 bridge 1 MPID LEVEL VLAN ACTIVE Remote Mac RDI FLAGS ------------------------------------------------------------------------------ --
-- 12 7 5 Yes 00d0.b727.a854 False Configured 18 7 5 Yes 0002.b328.5273 True Configured BRIDGE4#show ethernet cfm maintenance-points remote domain test vlan 10 bridge 1 MPID LEVEL VLAN ACTIVE Remote Mac RDI FLAGS ------------------------------------------------------------------------------ -- 15 7 10 Yes 00d0.b793.9e57 False Configured 18 7 10 Yes 0002.b328.5273 False Configured BRIDGE4#show bridge 1 g8032 Bridge 1 Ringid Current Role East Status West Status Primary Current Peer Shared
Shared 210 © 2015 IP Infusion Inc. Proprietary G.8032 ERPS Version 1 ID State Intf Intf VLAN Event Ring ID Link -- -- -- -- -- -- -- -- -- -- 1 Idle Non-Owner eth1 Forward eth3 Forward 5 NR-RB 2 eth3 2 Idle Non-Owner eth2 Forward eth3 Forward 10 NR-RB 1 eth3 Protected Vlans 20 20 © 2015 IP Infusion Inc. Proprietary 211 G.8032 ERPS Version 1 212 © 2015 IP Infusion Inc. Proprietary G.8032 ERPS Version 2 CHAPTER 16
G.8032 ERPS Version 2 CHAPTER 16 This chapter contains a complete sample configuration for G.8032 Ethernet Ring Protection Switching (ERPS). “Version 2” refers to ITU-T Recommendation G.8032/Y.1344 as published in February 2012. Note: ERPS version 2 is not supported for ZebIC releases. Topology Figure 16-1 displays a Ethernet Ring Protection Switching topology. Figure 16-1: Ring Protection Link (RPL) RPL Owner rtr1#configure terminal Enter configure mode
rtr1#configure terminal Enter configure mode rtr1(config)#bridge 1 protocol ieee vlan- Configure bridge 1 as VLAN-aware bridge rtr1(config)#vlan database Enter VLAN configure mode rtr1(config-vlan)#vlan 2 bridge 1 Configure VLAN 2 and associate it with bridge 1 rtr1(config-vlan)#exit Exit VLAN configure mode rtr1(config)#int eth1 Enter interface mode rtr1(config-if)#switchport Configure the interface as a layer 2 interface rtr1(config-if)#bridge-group 1 Bind the interface to bridge 1
rtr1(config-if)#switchport mode trunk Configure the switchport mode as trunk © 2015 IP Infusion Inc. Proprietary 213 G.8032 ERPS Version 2 rtr1(config-if)#switchport trunk allowed Associate the trunk to all VLANs vlan all rtr1(config-if)#exit Exit interface mode rtr1(config)#int eth2 Enter interface mode rtr1(config-if)#switchport Configure the interface as a layer 2 interface rtr1(config-if)#bridge-group 1 Bind the interface to bridge 1
rtr1(config-if)#switchport mode trunk Configure the switchport mode as trunk rtr1(config-if)#switchport trunk allowed Associate the trunk to all VLANs vlan all rtr1(config-if)#exit Exit interface mode rtr1(config)#g8032 profile P1 bridge 1 Create profile a profile and enter G.8032 profile configure mode rtr1(g8032-profile-config)#timer wait-to- Configure wait-to-restore timer restore 5 rtr1(g8032-profile-config)#timer hold-off Configure hold-off timer 10
10 rtr1(g8032-profile-config)#timer guard- Configure guard-timer timer 50 rtr1(g8032-profile-config)#enable Enable revertive mode revertive rtr1(g8032-profile-config)#exit Exit G.8032 profile configure mode rtr1(config)#bridge 1 g8032 physical-ring Configure physical ring, specifying the east and west interfaces R1 east-interface eth1 west-interface eth2 rtr1(config)#g8032 erp-instance major Create ERP instance on bridge 1 and enter G.8032 configure bridge 1 switch mode
bridge 1 switch mode rtr1(g8032-config-switch)#physical-ring R1 Associate physical ring to ERP instance rtr1(g8032-config-switch)#rpl role owner Configure RPL role as owner east-interface rtr1(g8032-config-switch)#profile name P1 Associate profile to ERP instance rtr1(g8032-config-switch)#vlan 2 raps- Associate VLAN 2 with the R-APS channel channel rtr1(g8032-config-switch)#ring-id 5 Configure the ring identifier rtr1(g8032-config-switch)#level 4 Configure the level to carry in R-APS messages
rtr1(g8032-config-switch)#exit Exit G.8032 configure switch mode RPL Neighbor rtr2#configure terminal Enter configure mode rtr2(config)#bridge 1 protocol ieee vlan- Configure bridge 1 as VLAN-aware bridge rtr2(config)#vlan database Enter VLAN configure mode rtr2(config-vlan)#vlan 2 bridge 1 Configure VLAN 2 and associate it with bridge 1 rtr2(config-vlan)#exit Exit VLAN configure mode rtr2(config)#int eth1 Enter interface mode
rtr2(config)#int eth1 Enter interface mode rtr2(config-if)#switchport Configure the interface as a layer 2 interface 214 © 2015 IP Infusion Inc. Proprietary G.8032 ERPS Version 2 rtr2(config-if)#bridge-group 1 Bind the interface to bridge 1 rtr2(config-if)#switchport mode trunk Configure the switchport mode as trunk rtr2(config-if)#switchport trunk allowed Associate the trunk to all VLANs vlan all rtr2(config-if)#exit Exit interface mode rtr2(config)#int eth2 Enter interface mode
rtr2(config)#int eth2 Enter interface mode rtr2(config-if)#switchport Configure the interface as a layer 2 interface rtr2(config-if)#bridge-group 1 Bind the interface to bridge 1 rtr2(config-if)#switchport mode trunk Configure the switchport mode as trunk. rtr2(config-if)#switchport trunk allowed Associate the trunk to all VLANs vlan all rtr2(config-if)#exit Exit interface mode rtr2(config)#g8032 profile P1 bridge 1 Create profile a profile and enter G.8032 profile configure mode
rtr2(g8032-profile-config)#timer wait-to- Configure wait-to-restore timer restore 5 rtr2(g8032-profile-config)#timer hold-off Configure hold-off timer 10 rtr2(g8032-profile-config)#timer guard- Configure guard-timer timer 50 rtr2(g8032-profile-config)#enable Enable revertive mode revertive rtr2(g8032-profile-config)#exit Exit G.8032 profile configure mode rtr2(config)#bridge 1 g8032 physical-ring Configure physical ring, specifying the east and west interfaces
R1 east-interface eth1 west-interface eth2 rtr2(config)#g8032 erp-instance major Create ERP instance on bridge 1 and enter G.8032 configure bridge 1 switch mode rtr2(g8032-config-switch)#physical-ring R1 Associate physical ring to ERP instance rtr2(g8032-config-switch)#rpl role Configure RPL role as neighbor neighbor east-interface rtr2(g8032-config-switch)#profile name P1 Associate profile to ERP instance rtr2(g8032-config-switch)#vlan 2 raps- Associate VLAN 2 with the R-APS channel channel
channel rtr2(g8032-config-switch)#ring-id 5 Configure the ring identifier rtr2(g8032-config-switch)#level 4 Configure the level to carry in R-APS messages rtr2(g8032-config-switch)#exit Exit G.8032 configure switch mode RPL Non-Owner rtr3#configure terminal Enter configure mode rtr3(config)#bridge 1 protocol ieee vlan- Configure bridge 1 as VLAN-aware bridge rtr3(config)#vlan database Enter VLAN configure mode rtr3(config-vlan)#vlan 2 bridge 1 Configure VLAN 2 and associate it with bridge 1
rtr3(config-vlan)#exit Exit VLAN configure mode © 2015 IP Infusion Inc. Proprietary 215 G.8032 ERPS Version 2 rtr3(config)#int eth1 Enter interface mode rtr3(config-if)#switchport Configure the interface as a layer 2 interface rtr3(config-if)#bridge-group 1 Bind the interface to bridge 1 rtr3(config-if)#switchport mode trunk Configure the switchport mode as trunk rtr3(config-if)#switchport trunk allowed Associate the trunk to all VLANs vlan all rtr3(config-if)#exit Exit interface mode
vlan all rtr3(config-if)#exit Exit interface mode rtr3(config)#int eth2 Enter interface mode rtr3(config-if)#switchport Configure the interface as a layer 2 interface rtr3(config-if)#bridge-group 1 Bind the interface to bridge 1 rtr3(config-if)#switchport mode trunk Configure the switchport mode as trunk. rtr3(config-if)#switchport trunk allowed Associate the trunk to all VLANs vlan all rtr3(config-if)#exit Exit interface mode
vlan all rtr3(config-if)#exit Exit interface mode rtr3(config)#g8032 profile P1 bridge 1 Create profile a profile and enter G.8032 profile configure mode rtr3(g8032-profile-config)#timer wait-to- Configure wait-to-restore timer restore 5 rtr3(g8032-profile-config)#timer hold-off Configure hold-off timer 10 rtr3(g8032-profile-config)#timer guard- Configure guard-timer timer 50 rtr3(g8032-profile-config)#enable Enable revertive mode revertive
revertive rtr3(g8032-profile-config)#exit Exit G.8032 profile configure mode rtr3(config)#bridge 1 g8032 physical-ring Configure physical ring, specifying the east and west interfaces R1 east-interface eth1 west-interface eth2 rtr3(config)#g8032 erp-instance major Create ERP instance on bridge 1 and enter G.8032 configure bridge 1 switch mode rtr3(g8032-config-switch)#physical-ring R1 Associate physical ring to ERP instance rtr3(g8032-config-switch)#rpl role non- Configure RPL role as non-owner
owner rtr3(g8032-config-switch)#profile name P1 Associate profile to ERP instance rtr3(g8032-config-switch)#vlan 2 raps- Associate VLAN 2 with the R-APS channel channel rtr3(g8032-config-switch)#ring-id 5 Configure the ring identifier rtr3(g8032-config-switch)#level 4 Configure the level to carry in R-APS messages rtr3(g8032-config-switch)#exit Exit G.8032 configure switch mode Validation show erp-instance rtr1#sh g8032 erp-instance major bridge 1 Inst Name : major State : G8032_ST_IDLE
Inst Name : major State : G8032_ST_IDLE 216 © 2015 IP Infusion Inc. Proprietary G.8032 ERPS Version 2 Phy Ring : R1 Role : OWNER East Link : Link_Blocked West Link : Link_Unblocked Attached : - Attached To: - Virtual ID : -:- --------------------------------------------------------------- Channel | Interface | Profile (LEVL, VID, RID) | (east,ver) , (west,ver) | ================================================================ (4, 2, 5) | (eth1 , V=1), (eth2 , V=1) | P1
(4, 2, 5) | (eth1 , V=1), (eth2 , V=1) | P1 ================================================================ DataTraffic: show profile rtr1#sh g8032 profile P1 bridge 1 Profile : P1 ========= Wait-To-Restore : 5 mins Hold Off Timer : 1 secs Guard Timer : 500 ms Wait-To-Block : 5500 ms Protection Type : Revertive show physical-ring rtr1#sh g8032 physical-ring R1 bridge 1 Ring : R1 ========== Bridge : 1 East : eth1 West : eth2 ERP Inst :major, Force Switch/Manual Switch Force Switch
Force Switch/Manual Switch Force Switch rtr1(config)#g8032 erp-instance major Enter G.8032 configure switch mode bridge 1 rtr1(g8032-config-switch)#force-switch Force switch the east interface east-interface rtr1(g8032-config-switch)#exit Exit G.8032 configure switch mode show erp-instance rtr1#sh g8032 erp-instance major bridge 1 Inst Name : major State : G8032_ST_FS Phy Ring : R1 © 2015 IP Infusion Inc. Proprietary 217 G.8032 ERPS Version 2 Role : OWNER East Link : Link_Blocked
Role : OWNER East Link : Link_Blocked West Link : Link_Unblocked Attached : - Attached To: - Virtual ID : -:- --------------------------------------------------------------- Channel | Interface | Profile (LEVL, VID, RID) | (east,ver) , (west,ver) | ================================================================ (4, 2, 5) | (eth1 , V=1), (eth2 , V=1) | P1 ================================================================ DataTraffic: Manual Switch
DataTraffic: Manual Switch rtr1(config)#g8032 erp-instance major Enter G.8032 configure switch mode bridge 1 rtr1(g8032-config-switch)#manual-switch Perform a manual switch for the east interface east-interface rtr1(g8032-config-switch)#exit Exit G.8032 configure switch mode show erp-instance rtr1#sh g8032 erp-instance major bridge 1 Inst Name : major State : G8032_ST_MS Phy Ring : R1 Role : OWNER East Link : Link_Blocked West Link : Link_Unblocked Attached : - Attached To: - Virtual ID : -:-
Attached : - Attached To: - Virtual ID : -:- --------------------------------------------------------------- Channel | Interface | Profile (LEVL, VID, RID) | (east,ver) , (west,ver) | ================================================================ (4, 2, 5) | (eth1 , V=1), (eth2 , V=1) | P1 ================================================================ DataTraffic: Clearing the Force Switch /Manual Switch rtr1(config)#g8032 erp-instance major Enter G.8032 configure switch mode bridge 1
bridge 1 rtr1(g8032-config-switch)#clear Clear the force switch/manual switch rtr1(g8032-config-switch)#exit Exit G.8032 configure switch mode 218 © 2015 IP Infusion Inc. Proprietary G.8032 ERPS Version 2 show erp-instance rtr1#sh g8032 erp-instance major bridge 1 Inst Name : major State : G8032_ST_IDLE Phy Ring : R1 Role : OWNER East Link : Link_Blocked West Link : Link_Unblocked Attached : - Attached To: - Virtual ID : -:- ---------------------------------------------------------------
Channel | Interface | Profile (LEVL, VID, RID) | (east,ver) , (west,ver) | ================================================================ (4, 2, 5) | (eth1 , V=1), (eth2 , V=1) | P1 ================================================================ DataTraffic: Miscellaneous Commands rtr1(config)#g8032 erp-instance major Enter G.8032 configure switch mode bridge 1 rtr1(g8032-config-switch)#virtual-channel Create a virtual channel and attach to an instance 2 attached-to-instance MI1
2 attached-to-instance MI1 rtr1(g8032-config-switch)#no virtual- Delete the virtual channel channel rtr1(g8032-config-switch)#non-virtual- Create a non virtual channel channel rtr1(g8032-config-switch)#no non-virtual- Delete the non virtual channel channel rtr1(g8032-config-switch)#no sub-ring Delete a sub-ring rtr1(g8032-config-switch)#tcn-propogation Enable tcn-propagation enable rtr1(g8032-config-switch)#tcn-propogation Disable tcn-propagation disable
disable rtr1(g8032-config-switch)#version 0 Set the version as V1 rtr1(g8032-config-switch)#exit Exit G.8032 configure switch mode rtr1(g8032-config-switch)#no raps-channel Delete raps-channel rtr1(g8032-config-switch)#no data-traffic Delete data-traffic rtr1(config)#no bridge 1 g8032 physical- Delete a physical ring ring R1 © 2015 IP Infusion Inc. Proprietary 219 G.8032 ERPS Version 2 rtr1(config)#no g8032 erp-instance major Delete an ERP instance bridge 1
bridge 1 rtr1(config)#no g8032 profile P1 bridge 1 Delete a g8032 profile G8032v2 Configuration with Sub Ring The diagrams below show the topology of G8032v2 configuration with a sub ring. Topology with a Virtual Channel Figure 16-2 displays a sample sub ring configuration topology with a virtual channel. Figure 16-2: Topology 1- Sub Ring Configuration with Virtual Channel Topology without a Virtual Channel Figure 16-3 displays a sample sub ring configuration topology without a virtual channel.
220 © 2015 IP Infusion Inc. Proprietary G.8032 ERPS Version 2 Figure 16-3: Sub Ring Configuration without Virtual Channel © 2015 IP Infusion Inc. Proprietary 221 G.8032 ERPS Version 2 CFM Configuration with a Virual Channel Bridge 1 Bridge1#conf t Enter configure mode Bridge1(config)#bridge 1 protocol ieee Configure an IEEE VLAN-aware bridge vlan Bridge1(config)#vlan database Enter VLAN configure mode Bridge1(config-vlan)#vlan 5 bridge 1 Configure a VLAN and add it to the bridge state enable
state enable Bridge1(config-vlan)#vlan 6 bridge 1 Configure a VLAN and add it to the bridge state enable Bridge1(config-vlan)#exit Exit the VLAN configuration mode Bridge1(config)#ethernet cfm domain-name Enter CFM mode and create a domain at level 0 on bridge1 type character-string name customer level 7 mip-creation default bridge 1 Bridge1(config-ether-cfm)#service ma-type Create a service ID integer ma-name 13 vlan 5 mip-creation default
integer ma-name 13 vlan 5 mip-creation default Bridge1(config-ether-cfm)#service ma-type Create a service ID integer ma-name 14 vlan 6 mip-creation default Bridge1(config-ether-cfm)#mep crosscheck Configure crosscheck between host MEP and the remote MEP mpid 103 vlan 5 Bridge1(config-ether-cfm)#mep crosscheck Configure crosscheck between host MEP and the remote MEP mpid 108 vlan 5 Bridge1(config-ether-cfm)#mep crosscheck Configure crosscheck between host MEP and the remote MEP mpid 117 vlan 6
mpid 117 vlan 6 Bridge1(config-ether-cfm)#mep crosscheck Configure crosscheck between host MEP and the remote MEP mpid 121 vlan 6 Bridge1(config-ether-cfm)#exit Exit domain configuration mode Bridge1(config)#interface eth1 Enter interface mode Bridge1(config-if)#switchport Configure interface as a layer2 port Bridge1(config-if)#bridge-group 1 Associates the interface Eth1 with bridge 1 Bridge1(config-if)#ethernet cfm mep down Configure the interface as MEP
mpid 101 active true domain customer vlan 5 local-vid 5 bridge 1 Bridge1(config-if-eth-cfm-mep)#cc Enable multicast continuity checking (CC) on the interface multicast state enable Bridge1(config-if-eth-cfm-mep)#exit Exit CFM MEP mode Bridge1(config-if)#ethernet cfm mep down Enter CFM MEP mode and configure the interface as a mpid 115 active true domain customer vlan maintenance end point (MEP) 6 local-vid 6 bridge 1
6 local-vid 6 bridge 1 Bridge1(config-if-eth-cfm-mep)#cc Enable multicast continuity checking (CC) on the interface multicast state enable Bridge1(config-if-eth-cfm-mep)#exit Exit CFM MEP mode Bridge1(config-if)#switchport mode trunk Set the switching abilities of this interface to trunk mode 222 © 2015 IP Infusion Inc. Proprietary G.8032 ERPS Version 2 Bridge1(config-if)#switchport trunk Allow all VLANs on this interface allowed vlan all Bridge1(config-if)#exit Exit interface mode
Bridge1(config-if)#exit Exit interface mode Bridge1(config)#interface eth2 Enter interface mode Bridge1(config-if)#switchport Configure interface as a layer2 port Bridge1(config-if)#bridge-group 1 Associates the interface Eth2 with bridge 1 Bridge1(config-if)#ethernet cfm mep down Configure the interface as an MEP mpid 102 active true domain customer vlan 5 local-vid 5 bridge 1 Bridge1(config-if-eth-cfm-mep)#cc Enable multicast continuity checking (CC) on the interface multicast state enable
multicast state enable Bridge1(config-if-eth-cfm-mep)#exit Exit CFM MEP mode Bridge1(config-if)#ethernet cfm mep down Enter CFM MEP mode and configure the interface as a mpid 116 active true domain customer vlan maintenance end point (MEP) 6 local-vid 6 bridge 1 Bridge1(config-if-eth-cfm-mep)#cc Enable multicast continuity checking (CC) on the interface multicast state enable Bridge1(config-if-eth-cfm-mep)#exit Exit CFM MEP mode
Bridge1(config-if)#switchport mode trunk Set the switching abilities of this interface to trunk mode Bridge1(config-if)#switchport trunk Allow all VLANs on this interface allowed vlan all Bridge1(config-if)#end Exit Bridge 2 Bridge2#conf t Enter configure mode Enter configuration commands, one per Configure an IEEE VLAN-aware bridge line. End with CNTL/Z. Bridge2(config)#bridge 2 protocol ieee Enter VLAN configure mode vlan Bridge2(config)#vlan database Enter VLAN configure mode
Bridge2(config-vlan)#vlan 5 bridge 2 Configure a VLAN and add it to the bridge state enable Bridge2(config-vlan)#vlan 6 bridge 2 Configure a VLAN and add it to the bridge state enable Bridge2(config-vlan)#exit Exit the VLAN configuration mode Bridge2(config)#ethernet cfm domain-name Enter CFM mode and create a domain at level 0 on bridge1 type character-string name customer level 7 mip-creation default bridge 2 Bridge2(config-ether-cfm)#service ma- Create a service ID
type integer ma-name 13 vlan 5 mip- creation default Bridge2(config-ether-cfm)#service ma- Create a service ID type integer ma-name 14 vlan 6 mip- creation default Bridge2(config-ether-cfm)#mep crosscheck Configure crosscheck between host MEP and the remote MEP mpid 101 vlan 5 © 2015 IP Infusion Inc. Proprietary 223 G.8032 ERPS Version 2 Bridge2(config-ether-cfm)#mep crosscheck Configure crosscheck between host MEP and the remote MEP mpid 106 vlan 5
mpid 106 vlan 5 Bridge2(config-ether-cfm)#mep crosscheck Configure crosscheck between host MEP and the remote MEP mpid 115 vlan 6 Bridge2(config-ether-cfm)#mep crosscheck Configure crosscheck between host MEP and the remote MEP mpid 119 vlan 6 Bridge2(config-ether-cfm)#exit Exit domain configuration mode Bridge2(config)#interface eth1 Enter interface mode Bridge2(config-if)#switchport Configure interface as a layer2 port
Bridge2(config-if)#bridge-group 2 Associates the Eth1 interface with bridge 2 Bridge2(config-if)#ethernet cfm mep down Configure the interface as an MEP mpid 103 active true domain customer vlan 5 local-vid 5 bridge 2 Bridge2(config-if-eth-cfm-mep)#cc Enable multicast continuity checking (CC) on the interface multicast state enable Bridge2(config-if-eth-cfm-mep)#exit Exit CFM MEP mode Bridge2(config-if)#ethernet cfm mep down Enter CFM MEP mode and configure the interface as a
mpid 117 active true domain customer vlan maintenance end point (MEP) 6 local-vid 6 bridge 2 Bridge2(config-if-eth-cfm-mep)#cc Enable multicast continuity checking (CC) on the interface multicast state enable Bridge2(config-if-eth-cfm-mep)#exit Exit CFM MEP mode Bridge2(config-if)#switchport mode trunk Set the switching abilities of this interface to trunk mode Bridge2(config-if)#switchport trunk Allow all VLANs on this interface allowed vlan all Bridge2(config-if)#exit Exit interface mode
Bridge2(config-if)#exit Exit interface mode Bridge2(config)#interface eth2 Enter interface mode Bridge2(config-if)#switchport Configure interface as a layer2 port Bridge2(config-if)#bridge-group 2 Associates the Eth2 interface with bridge 2 Bridge2(config-if)#ethernet cfm mep down Configure the interface as an MEP mpid 104 active true domain customer vlan 5 local-vid 5 bridge 1 Bridge2(config-if-eth-cfm-mep)#cc Enable multicast continuity checking (CC) on the interface multicast state enable
multicast state enable Bridge2(config-if-eth-cfm-mep)#exit Exit CFM MEP mode Bridge2(config-if)#ethernet cfm mep down Enter CFM MEP mode and configure the interface as a mpid 118 active true domain customer vlan maintenance end point (MEP) 6 local-vid 6 bridge 2 Bridge2(config-if-eth-cfm-mep)#cc Enable multicast continuity checking (CC) on the interface multicast state enable Bridge2(config-if-eth-cfm-mep)#exit Exit CFM MEP mode
Bridge2(config-if)#switchport mode trunk Set the switching abilities of this interface to trunk mode Bridge2(config-if)#switchport trunk Allow all VLANs on this interface allowed vlan all Bridge2(config-if)#end Exit 224 © 2015 IP Infusion Inc. Proprietary G.8032 ERPS Version 2 Bridge 3 Bridge3#conf t Enter configure mode Bridge3(config)#bridge 3 protocol ieee Configure an IEEE VLAN-aware bridge vlan Bridge3(config)#vlan database Enter VLAN configure mode
Bridge3(config-vlan)#vlan 5 bridge 3 Configure a VLAN and add it to the bridge state enable Bridge3(config-vlan)#vlan 6 bridge 3 Configure a VLAN and add it to the bridge state enable Bridge3(config-vlan)#exit Exit the VLAN configuration mode Bridge3(config)#ethernet cfm domain- Enter CFM mode and create a domain at level 0 on bridge1 name type character-string name customer level 7 mip-creation default bridge 3 Bridge3(config-ether-cfm)#service ma- Create a service ID
type integer ma-name 13 vlan 5 mip- creation default Bridge3(config-ether-cfm)#service ma- Create a service ID type integer ma-name 14 vlan 6 mip- creation default Bridge3(config-ether-cfm)#mep Configure crosscheck between host MEP and the remote MEP crosscheck mpid 104 vlan 5 Bridge3(config-ether-cfm)#mep Configure crosscheck between host MEP and the remote MEP crosscheck mpid 107 vlan 5 Bridge3(config-ether-cfm)#mep Configure crosscheck between host MEP and the remote MEP
crosscheck mpid 111 vlan 6 Bridge3(config-ether-cfm)#mep Configure crosscheck between host MEP and the remote MEP crosscheck mpid 118 vlan 6 Bridge3(config-ether-cfm)#mep Configure crosscheck between host MEP and the remote MEP crosscheck mpid 122 vlan 6 Bridge3(config-ether-cfm)#exit Exit domain configuration mode Bridge3(config)#interface eth1 Enter interface mode Bridge3(config-if)#switchport Configure interface as a layer2 port
Bridge3(config-if)#bridge-group 3 Associates the Eth1 interface with bridge 1 Bridge3(config-if)#ethernet cfm mep Configure the interface as an MEP down mpid 105 active true domain customer vlan 5 local-vid 5 bridge 3 Bridge3(config-if-eth-cfm-mep)#cc Enable multicast continuity checking (CC) on the interface multicast state enable Bridge3(config-if-eth-cfm-mep)#exit Exit CFM MEP mode Bridge3(config-if)#ethernet cfm mep Enter CFM MEP mode and configure the interface as a maintenance
down mpid 120 active true domain end point (MEP) customer vlan 6 local-vid 6 bridge 3 Bridge3(config-if-eth-cfm-mep)#cc Enable multicast continuity checking (CC) on the interface multicast state enable Bridge3(config-if-eth-cfm-mep)#exit Exit CFM MEP mode Bridge3(config-if)#switchport mode Set the switching abilities of this interface to trunk mode trunk © 2015 IP Infusion Inc. Proprietary 225 G.8032 ERPS Version 2 Bridge3(config-if)#switchport trunk Allow all VLANs on this interface
allowed vlan all Bridge1(config-if)#exit Exit interface mode Bridge1(config)#interface eth2 Enter interface mode Bridge1(config-if)#switchport Configure interface as a layer2 port Bridge1(config-if)#bridge-group 3 Associates the interface Eth2 with bridge 3 Bridge1(config-if)#ethernet cfm mep Configure the interface as an MEP down mpid 102 active true domain customer vlan 5 local-vid 5 bridge 3 Bridge3(config-if-eth-cfm-mep)#cc Enable multicast continuity checking (CC) on the interface
multicast state enable Bridge3(config-if-eth-cfm-mep)#exit Exit CFM MEP mode Bridge3(config-if)#ethernet cfm mep Configure the interface as an MEP down mpid 119 active true domain customer vlan 6 local-vid 6 bridge 3 Bridge3(config-if)#switchport mode Set the switching abilities of this interface to trunk mode trunk Bridge3(config-if)#switchport trunk Allow all VLANs on this interface allowed vlan all Bridge3(config-if)#exit Exit interface mode
Bridge3(config-if)#exit Exit interface mode Bridge3(config)#interface eth3 Enter interface mode Bridge3(config-if)#switchport Configure interface as a layer2 port Bridge3(config-if)#bridge-group 3 Associates the Eth3 interface with bridge 3 Bridge3(config-if)#ethernet cfm mep Configure the interface as an MEP down mpid 114 active true domain customer vlan 6 local-vid 6 bridge 3 Bridge3(config-if-eth-cfm-mep)#cc Enable multicast continuity checking (CC) on the interface multicast state enable
multicast state enable Bridge3(config-if-eth-cfm-mep)#exit Exit CFM MEP mode Bridge3(config-if)#switchport mode Set the switching abilities of this interface to trunk mode trunk Bridge3(config-if)#switchport trunk Allow all VLANs on this interface allowed vlan all Bridge3(config-if)#exit Exit interface mode Bridge 4 Bridge4#conf t Enter configure mode Bridge4(config)#bridge 4 protocol ieee Configure an IEEE VLAN-aware bridge vlan Bridge4(config)#vlan database Enter VLAN configure mode
Bridge4(config-vlan)#vlan 5 bridge 4 Configure a VLAN and add it to the bridge state enable Bridge4(config-vlan)#vlan 6 bridge 4 Configure a VLAN and add it to the bridge state enable Bridge4(config-vlan)#exit Exit the VLAN configuration mode 226 © 2015 IP Infusion Inc. Proprietary G.8032 ERPS Version 2 Bridge4(config)#ethernet cfm domain- Enter CFM mode and create a domain at level 0 on bridge4 name type character-string name customer level 7 mip-creation default bridge 4
customer level 7 mip-creation default bridge 4 Bridge4(config-ether-cfm)#service ma- Create a service ID type integer ma-name 13 vlan 5 mip- creation default Bridge4(config-ether-cfm)#service ma- Create a service ID type integer ma-name 14 vlan 6 mip- creation default Bridge4(config-ether-cfm)#mep Configure crosscheck between host MEP and the remote MEP crosscheck mpid 102 vlan 5 Bridge4(config-ether-cfm)#mep Configure crosscheck between host MEP and the remote MEP crosscheck mpid 105 vlan 5
crosscheck mpid 105 vlan 5 Bridge4(config-ether-cfm)#mep Configure crosscheck between host MEP and the remote MEP crosscheck mpid 109 vlan 6 Bridge4(config-ether-cfm)#mep Configure crosscheck between host MEP and the remote MEP crosscheck mpid 116 vlan 6 Bridge4(config-ether-cfm)#mep Configure crosscheck between host MEP and the remote MEP crosscheck mpid 120 vlan 6 Bridge4(config-ether-cfm)#exit Exit domain configuration mode Bridge4(config)#interface eth1 Enter interface mode
Bridge4(config-if)#switchport Configure interface as a layer2 port Bridge4(config-if)#bridge-group 4 Associates the interface Eth1 with bridge 4 Bridge4(config-if)#ethernet cfm mep Configure the interface as an MEP down mpid 107 active true domain customer vlan 5 local-vid 5 bridge 4 Bridge4(config-if-eth-cfm-mep)#cc Enable multicast continuity checking (CC) on the interface multicast state enable Bridge4(config-if-eth-cfm-mep)#exit Exit CFM MEP mode
Bridge4(config-if)#ethernet cfm mep Enter CFM MEP mode and configure the interface as a maintenance down mpid 122 active true domain end point (MEP) customer vlan 6 local-vid 6 bridge 4 Bridge4(config-if-eth-cfm-mep)#cc Enable multicast continuity checking (CC) on the interface multicast state enable Bridge4(config-if-eth-cfm-mep)#exit Exit CFM MEP mode Bridge4(config-if)#switchport mode Set the switching abilities of this interface to trunk mode trunk
trunk Bridge4(config-if)#switchport trunk Allow all VLANs on this interface allowed vlan all Bridge4(config-if)#exit Exit interface mode Bridge4(config)#interface eth2 Enter interface mode Bridge4(config-if)#switchport Configure interface as a layer2 port Bridge4(config-if)#bridge-group 4 Associates the Eth2 interface with bridge 4 Bridge4(config-if)#ethernet cfm mep Configure the interface as an MEP down mpid 108 active true domain customer vlan 5 local-vid 5 bridge 4
customer vlan 5 local-vid 5 bridge 4 Bridge4(config-if-eth-cfm-mep)#cc Enable multicast continuity checking (CC) on the interface multicast state enable © 2015 IP Infusion Inc. Proprietary 227 G.8032 ERPS Version 2 Bridge4(config-if-eth-cfm-mep)#exit Exit CFM MEP mode Bridge4(config-if)#ethernet cfm mep Configure the interface as an MEP down mpid 121 active true domain customer vlan 6 local-vid 6 bridge 4
customer vlan 6 local-vid 6 bridge 4 Bridge4(config-if-eth-cfm-mep)#cc Enable multicast continuity checking (CC) on the interface multicast state enable Bridge4(config-if-eth-cfm-mep)#exit Exit CFM MEP mode Bridge4(config-if)#switchport mode Set the switching abilities of this interface to trunk mode trunk Bridge4(config-if)#switchport trunk Allow all VLANs on this interface allowed vlan all Bridge4(config-if)#exit Exit interface mode Bridge4(config)#interface eth3 Enter interface mode
Bridge4(config-if)#switchport Configure interface as a layer2 port Bridge4(config-if)#bridge-group 4 Associates the Eth3 interface with bridge 4 Bridge4(config-if)#ethernet cfm mep Configure the interface as an MEP down mpid 113 active true domain customer vlan 6 local-vid 6 bridge 4 Bridge4(config-if-eth-cfm-mep)#cc Enable multicast continuity checking (CC) on the interface multicast state enable Bridge4(config-if-eth-cfm-mep)#exit Exit CFM MEP mode
Bridge4(config-if)#switchport mode Set the switching abilities of this interface to trunk mode trunk Bridge4(config-if)#switchport trunk Allow all VLANs on this interface allowed vlan all Bridge4(config-if)#exit Exit interface mode Bridge 5 Bridge5#conf t Enter configure mode Bridge5(config)#bridge 5 protocol ieee Configure an IEEE VLAN-aware bridge vlan Bridge5(config)#vlan database Enter VLAN configure mode Bridge5(config-vlan)#vlan 6 bridge 5 Configure a VLAN and add it to the bridge
state enable Bridge5(config-vlan)#exit Exit the VLAN configuration mode Bridge5(config)#ethernet cfm domain- Enter CFM mode and create a domain at level 0 on bridge1 name type character-string name customer level 7 mip-creation default bridge 5 Bridge5(config-ether-cfm)#service ma- Create a service ID type integer ma-name 14 vlan 6 mip- creation default Bridge5(config-ether-cfm)#mep Configure crosscheck between host MEP and the remote MEP crosscheck mpid 113 vlan 6
crosscheck mpid 113 vlan 6 Bridge5(config-ether-cfm)#mep Configure crosscheck between host MEP and the remote MEP crosscheck mpid 112 vlan 6 Bridge5(config-ether-cfm)#exit Exit domain configuration mode 228 © 2015 IP Infusion Inc. Proprietary G.8032 ERPS Version 2 Bridge5(config)#interface eth1 Enter interface mode Bridge5(config-if)#switchport Configure interface as a layer2 port Bridge5(config-if)#bridge-group 5 Associates the Eth1 interface with bridge 5
Bridge5(config-if)#ethernet cfm mep Configure the interface as an MEP down mpid 109 active true domain customer vlan 6 local-vid 6 bridge 5 Bridge5(config-if-eth-cfm-mep)#cc Enable multicast continuity checking (CC) on the interface multicast state enable Bridge5(config-if-eth-cfm-mep)#exit Exit CFM MEP mode Bridge5(config-if)#switchport mode Set the switching abilities of this interface to trunk mode trunk Bridge5(config-if)#switchport trunk Allow all VLANs on this interface allowed vlan all
allowed vlan all Bridge5(config-if)#exit Exit CFM MEP mode Bridge5(config)#interface eth2 Enter interface mode Bridge5(config-if)#switchport Configure interface as a layer2 port Bridge5(config-if)#bridge-group 5 Associates the Eth2 interface with bridge 5 Bridge5(config-if)#ethernet cfm mep Configure the interface as an MEP down mpid 110 active true domain customer vlan 6 local-vid 6 bridge 5 Bridge5(config-if-eth-cfm-mep)#cc Enable multicast continuity checking (CC) on the interface
multicast state enable Bridge5(config-if-eth-cfm-mep)#exit Exit CFM MEP mode Bridge5(config-if)#switchport mode Set the switching abilities of this interface to trunk mode trunk Bridge5(config-if)#switchport trunk Allow all VLANs on this interface allowed vlan all Bridge5(config-if)#end Exit interface mode Bridge 6 Bridge6#conf t Enter configure mode Bridge6(config)#bridge 6 protocol ieee Configure an IEEE VLAN-aware bridge vlan Bridge6(config)#vlan database Enter VLAN configure mode
Bridge6(config-vlan)#vlan 6 bridge 6 Configure a VLAN and add it to the bridge state enable Bridge6(config-vlan)#exit Exit the VLAN configuration mode Bridge6(config)#ethernet cfm domain- Enter CFM mode and create a domain at level 0 on bridge1 name type character-string name customer level 7 mip-creation default bridge 6 Bridge6(config-ether-cfm)#service ma- Create a service ID type integer ma-name 14 vlan 6 mip- creation default
creation default Bridge6(config-ether-cfm)#mep Configure crosscheck between host MEP and the remote MEP crosscheck mpid 110 vlan 6 © 2015 IP Infusion Inc. Proprietary 229 G.8032 ERPS Version 2 Bridge6(config-ether-cfm)#mep Configure crosscheck between host MEP and the remote MEP crosscheck mpid 114 vlan 6 Bridge6(config-ether-cfm)#exit Exit domain configuration mode Bridge6(config)#interface eth1 Enter interface mode Bridge6(config-if)#switchport Configure interface as a layer2 port
Bridge6(config-if)#bridge-group 6 Associates the Eth1 interface with bridge 6 Bridge6(config-if)#ethernet cfm mep Configure the interface as an MEP down mpid 111 active true domain customer vlan 6 local-vid 6 bridge 6 Bridge6(config-if-eth-cfm-mep)#cc Enable multicast continuity checking (CC) on the interface multicast state enable Bridge6(config-if-eth-cfm-mep)#exit Exit CFM MEP mode Bridge6(config-if)#switchport mode Set the switching abilities of this interface to trunk mode trunk
trunk Bridge6(config-if)#switchport trunk Allow all VLANs on this interface allowed vlan all Bridge6(config-if)#exit Exit CFM MEP mode Bridge6(config)#interface eth2 Enter interface mode Bridge6(config-if)#switchport Configure interface as a layer2 port Bridge6(config-if)#bridge-group 6 Associates the Eth2 interface with bridge 6 Bridge6(config-if)#ethernet cfm mep Configure the interface as an MEP down mpid 112 active true domain customer vlan 6 local-vid 6 bridge 6
customer vlan 6 local-vid 6 bridge 6 Bridge6(config-if-eth-cfm-mep)#cc Enable multicast continuity checking (CC) on the interface multicast state enable Bridge6(config-if-eth-cfm-mep)#exit Exit CFM MEP mode Bridge6(config-if)#switchport mode Set the switching abilities of this interface to trunk mode trunk Bridge6(config-if)#switchport trunk Allow all VLANs on this interface allowed vlan all Bridge6(config-if)#end Exit interface mode CCM Convergence Verification Bridge 1
CCM Convergence Verification Bridge 1 Bridge1#show ethernet cfm maintenance-points remote level 7 vlan 5 bridge 1 MPID LEVEL VLAN ACTIVE Remote Mac RDI FLAGS --------------------------------------------------------------------------------- 103 7 5 Yes 5254.0059.424f False Configured 108 7 5 Yes 5254.006b.866f False Configured Bridge 2 Bridge2#show ethernet cfm maintenance-points remote level 7 vlan 5 bridge 2 MPID LEVEL VLAN ACTIVE Remote Mac RDI FLAGS
MPID LEVEL VLAN ACTIVE Remote Mac RDI FLAGS --------------------------------------------------------------------------------- 101 7 5 Yes 5254.00dd.c9e6 False Configured 106 7 5 Yes 5254.00cc.bf79 False Configured 230 © 2015 IP Infusion Inc. Proprietary G.8032 ERPS Version 2 Bridge 3 Bridge3#show ethernet cfm maintenance-points remote level 7 vlan 6 bridge 13 MPID LEVEL VLAN ACTIVE Remote Mac RDI FLAGS ---------------------------------------------------------------------------------
111 7 6 Yes 5254.009d.93ae False Configured Bridge3#show ethernet cfm maintenance-points remote level 7 vlan 5 bridge 1 MPID LEVEL VLAN ACTIVE Remote Mac RDI FLAGS --------------------------------------------------------------------------------- 104 7 5 Yes 5254.0053.71fc False Configured 107 7 5 Yes 5254.000f.258f False Configured Bridge 4 Bridge4#show ethernet cfm maintenance-points remote level 7 vlan 5 bridge 14 MPID LEVEL VLAN ACTIVE Remote Mac RDI FLAGS
MPID LEVEL VLAN ACTIVE Remote Mac RDI FLAGS --------------------------------------------------------------------------------- 102 7 5 Yes 5254.005e.7609 False Configured 105 7 5 Yes 5254.0014.d97d False Configured Bridge4#show ethernet cfm maintenance-points remote level 7 vlan 6 bridge 1 MPID LEVEL VLAN ACTIVE Remote Mac RDI FLAGS --------------------------------------------------------------------------------- 109 7 6 Yes 5254.0090.8b1a False Configured Bridge 5
Bridge 5 Bridge5#show ethernet cfm maintenance-points remote level 7 vlan 6 bridge 5 MPID LEVEL VLAN ACTIVE Remote Mac RDI FLAGS --------------------------------------------------------------------------------- 113 7 6 Yes 5254.0013.9c53 False Configured 112 7 6 Yes 5254.0085.25e1 False Configured Bridge 6 Bridge6#show ethernet cfm maintenance-points remote level 7 vlan 6 bridge 6 MPID LEVEL VLAN ACTIVE Remote Mac RDI FLAGS
MPID LEVEL VLAN ACTIVE Remote Mac RDI FLAGS --------------------------------------------------------------------------------- 110 7 6 Yes 5254.0000.eb38 False Configured 114 7 6 Yes 5254.0025.5930 False Configured Configuration with a Virtual Channel Bridge 1 Bridge1#configure terminal Enter configure mode Bridge1(config)#g8032 profile profile1 Create a profile and enter G.8032 profile configure mode bridge 1 Bridge1(g8032-profile-config)#exit Exit G.8032 profile configure mode
Bridge1(config)#bridge 1 g8032 Configure physical ring, specifying the east and west interfaces physical-ring R1 east-interface eth1 west-interface eth2 Bridge1(config)#g8032 profile profile1 Create a profile and enter G.8032 profile configure mode bridge 1 © 2015 IP Infusion Inc. Proprietary 231 G.8032 ERPS Version 2 Bridge1(g8032-profile-config)#timer Configure wait-to-restore timer wait 1 Bridge1(g8032-profile-config)#exit Exit G.8032 profile configure mode
Bridge1(config)#g8032 erp-instance Create ERP instance on bridge 1 and enter G.8032 configure ERP_INST_1 bridge 1 switch mode Bridge1(g8032-config-switch)#physical- Associate physical ring to ERP instance ring R1 Bridge1(g8032-config-switch)#vlan 5 Associate VLAN 5 with the R-APS channel raps-channel Bridge1(g8032-config-switch)#ring-id Configure the ring identifier 101 Bridge1(g8032-config-switch)#profile Associate profile to ERP instance name profile1
name profile1 Bridge1(g8032-config-switch)#rpl role Configure RPL role as neighbor owner east-interface Bridge1(g8032-config-switch)#level 7 Configure the level to carry in R-APS messages Bridge1(g8032-config-switch)#vlan 6 data-traffic Bridge1(g8032-config-switch)#exit Bridge 2 Bridge2#configure terminal Enter configure mode Bridge2(config)#g8032 profile profile1 Create a profile and enter G.8032 profile configure mode bridge 2
bridge 2 Bridge2(g8032-profile-config)#exit Exit G.8032 profile configure mode Bridge2(config)#bridge 2 g8032 Configure physical ring, specifying the east and west interfaces physical-ring R1 east-interface eth1 west-interface eth2 Bridge2(config)#g8032 profile profile1 Create a profile and enter G.8032 profile configure mode bridge 2 Bridge2(g8032-profile-config)#timer Configure wait-to-restore timer wait 1 Bridge2(g8032-profile-config)#exit Exit G.8032 profile configure mode
Bridge2(config)#g8032 erp-instance Create ERP instance on bridge 2 and enter G.8032 configure ERP_INST_1 bridge 2 switch mode Bridge2(g8032-config- Associate physical ring to ERP instance switch)#physical-ring R1 Bridge2(g8032-config-switch)#vlan 5 Associate VLAN 5 with the R-APS channel raps-channel Bridge2(g8032-config-switch)#ring-id Configure the ring identifier 101 Bridge2(g8032-config-switch)#profile Associate profile to ERP instance name profile1
name profile1 Bridge2(g8032-config-switch)#rpl role Configure RPL role as neighbor neigh east-interface Bridge2(g8032-config-switch)#level 7 Configure the level to carry in R-APS messages 232 © 2015 IP Infusion Inc. Proprietary G.8032 ERPS Version 2 Bridge2(g8032-config-switch)#vlan 6 Configure VLAN data traffic data-traffic Bridge2(g8032-config-switch)#exit Exit G.8032 configuration switch mode Bridge 3 Bridge3#configure terminal Enter configure mode
Bridge3#configure terminal Enter configure mode Bridge3(config)#g8032 profile profile1 Create a profile and enter G.8032 profile configure mode bridge 3 Bridge3(g8032-profile-config)#timer wait Set wait-to-restore timer 1 Bridge3(g8032-profile-config)#exit Exit G.8032 profile configure mode Bridge3(config)#bridge 3 g8032 physical- Configure physical ring, specifying the east and west interfaces ring R1 east-interface eth1 west- interface eth2
ring R1 east-interface eth1 west- interface eth2 Bridge3(config)#g8032 profile profile1 Create a profile and enter G.8032 profile configure mode bridge 3 Bridge3(g8032-profile-config)#exit Exit G.8032 profile configure mode Bridge3(config)#g8032 erp-instance Create ERP instance on bridge 3 and enter G.8032 configure ERP_INST_1 bridge 3 switch mode Bridge3(g8032-config-switch)#physical- Associate physical ring to ERP instance ring R1
ring R1 Bridge3(g8032-config-switch)#vlan 5 Associate VLAN 5 with the R-APS channel raps-channel Bridge3(g8032-config-switch)#ring-id 101 Configure the ring identifier Bridge3(g8032-config-switch)#profile Associate profile to ERP instance name profile1 Bridge3(g8032-config-switch)#rpl role Configure the Ring Protection Link node as Owner and non-owner specify the RPL owner Bridge3(g8032-config-switch)#level 7 Configure the level to carry in R-APS messages
Bridge3(g8032-config-switch)#exit Exit G.8032 configure switch mode Bridge3(config)#bridge 1 g8032 physical- Configure physical ring, specifying the east and west interfaces ring R2 east-interface eth1 west- interface eth3 Bridge3(config)#g8032 erp-instance Create a profile and enter G.8032 profile configure mode ERP_INST_2 bridge 1 Bridge3(g8032-config-switch)#physical- Associate physical ring to ERP instance ring R2 Bridge3(g8032-config-switch)#ring-id 102 Configure the ring identifier
Bridge3(g8032-config-switch)#profile Associate profile to ERP instance name profile1 Bridge3(g8032-config-switch)#rpl role Configure RPL role as non-owner non-owner Bridge3(g8032-config-switch)#level 7 Configure the level to carry in R-APS messages Bridge3(g8032-config-switch)#sub-ring Associate profile to ERP instance block east-interface Bridge3(g8032-config-switch)#vlan 6 Associate VLAN 6 with the R-APS channel raps-channel © 2015 IP Infusion Inc. Proprietary 233 G.8032 ERPS Version 2
G.8032 ERPS Version 2 Bridge3(g8032-config-switch)#virtual- Create a virtual channel and attach to an instance channel 6 attached-to-instance ERP_INST_1 Bridge3(g8032-config-switch)#ex Exit G.8032 configure switch mode Bridge 4 Bridge4#configure terminal Enter configure mode Bridge4(config)#g8032 profile profile1 Create a profile and enter G.8032 profile configure mode bridge 4 Bridge4(g8032-profile-config)#timer wait Set wait-to-restore timer 1
1 Bridge4(g8032-profile-config)#exit Exit G.8032 profile configure mode Bridge4(config)#bridge 4 g8032 physical- Configure physical ring, specifying the east and west interfaces ring R1 east-interface eth1 west- interface eth2 Bridge4(config)#g8032 profile profile1 Create a profile and enter G.8032 profile configure mode bridge 4 Bridge4(g8032-profile-config)#exit Exit G.8032 profile configure mode Bridge4(config)#g8032 erp-instance Create ERP instance on bridge 4 and enter G.8032 configure
ERP_INST_1 bridge 4 switch mode Bridge4(g8032-config-switch)#physical- Associate physical ring to ERP instance ring R1 Bridge4(g8032-config-switch)#vlan 5 raps- Associate VLAN 5 with the R-APS channel channel Bridge4(g8032-config-switch)#ring-id 101 Configure the ring identifier Bridge4(g8032-config-switch)#profile Associate profile to ERP instance name profile1 Bridge4(g8032-config-switch)#rpl role Configure the Ring Protection Link node as Owner and non-owner specify the RPL owner
non-owner specify the RPL owner Bridge4(g8032-config-switch)#level 7 Configure the level to carry in R-APS messages Bridge4(g8032-config-switch)#exit Exit G.8032 configure switch mode Bridge4(config)#bridge 4 g8032 physical- Configure physical ring, specifying the east and west interfaces ring R2 east-interface eth1 west- interface eth3 Bridge4(config)#g8032 erp-instance Create ERP instance on bridge 4 and enter G.8032 configure ERP_INST_2 bridge 4 switch mode
ERP_INST_2 bridge 4 switch mode Bridge4(g8032-config-switch)#physical- Associate physical ring to ERP instance ring R2 Bridge4(g8032-config-switch)#ring-id 102 Configure the ring identifier Bridge4(g8032-config-switch)#profile Associate profile to ERP instance name profile1 Bridge4(g8032-config-switch)#rpl role Configure RPL role as non-owner non-owner Bridge4(g8032-config-switch)#level 7 Configure the level to carry in R-APS messages
Bridge4(g8032-config-switch)#sub-ring Associate profile to ERP instance block east-interface 234 © 2015 IP Infusion Inc. Proprietary G.8032 ERPS Version 2 Bridge4(g8032-config-switch)#virtual- Create a virtual channel and attach to an instance channel 6 attached ERP_INST_1 Bridge4(g8032-config-switch)#vlan 6 raps- Associate VLAN 5 with the R-APS channel channel Bridge4(g8032-config-switch)#end Exit G.8032 configure switch mode Bridge 5 Bridge5#configure terminal Enter configure mode
Bridge5#configure terminal Enter configure mode Bridge5(config)#g8032 profile profile1 Create a profile and enter G.8032 profile configure mode bridge 5 Bridge5(g8032-profile-config)#exit Exit G.8032 profile configure mode Bridge5(config)#bridge 5 g8032 Configure physical ring, specifying the east and west interfaces physical-ring R1 east-interface eth1 west-interface eth2 Bridge5(config)#g8032 profile profile1 Create a profile and enter G.8032 profile configure mode bridge 5
bridge 5 Bridge5(g8032-profile-config)#exit Exit G.8032 profile configure mode Bridge5(config)#g8032 erp-instance Create ERP instance on bridge 5 and enter G.8032 configure ERP_INST_1 bridge 5 switch mode Bridge5(g8032-config- Associate physical ring to ERP instance switch)#physical-ring R1 Bridge5(g8032-config-switch)#vlan 6 Associate VLAN 6 with the R-APS channel raps-channel Bridge5(g8032-config-switch)#ring-id Configure the ring identifier 102
102 Bridge5(g8032-config-switch)#profile Associate profile to ERP instance name profile1 Bridge5(g8032-config-switch)#rpl role Configure the Ring Protection Link node as Owner and owner west-interface specify the RPL owner Bridge5(g8032-config-switch)#level 7 Configure the level to carry in R-APS messages Bridge5(g8032-config-switch)#end Exit G.8032 configure switch mode Bridge 6 Bridge6#configure terminal Enter configure mode
Bridge6#configure terminal Enter configure mode Bridge6(config)#g8032 profile profile1 Create a profile and enter G.8032 profile configure mode bridge 6 Bridge6(g8032-profile-config)#exit Exit G.8032 profile configure mode Bridge6(config)#bridge 6 g8032 Configure physical ring, specifying the east and west interfaces physical-ring R1 east-interface eth1 west-interface eth2 Bridge6(config)#vlan database Enter VLAN configure mode
Bridge6(config-vlan)#vlan 6 bridge 6 Configure a VLAN and add it to the bridge state enable Bridge6(config-vlan)#exit Exit the VLAN configuration mode Bridge6(config)#g8032 erp-instance Create ERP instance on bridge 6 and enter G.8032 configure ERP_INST_1 bridge 6 switch mode © 2015 IP Infusion Inc. Proprietary 235 G.8032 ERPS Version 2 Bridge6(g8032-config- Associate physical ring to ERP instance switch)#physical-ring R1
switch)#physical-ring R1 Bridge6(g8032-config-switch)#vlan 6 Associate VLAN 6 with the R-APS channel raps-channel Bridge6(g8032-config-switch)#ring-id Configure the ring identifier 102 Bridge6(g8032-config-switch)#profile Associate profile to ERP instance name profile1 Bridge6(g8032-config-switch)#rpl role Configure RPL role as neighbor neigh west-interface Bridge6(g8032-config-switch)#level 7 Configure the level to carry in R-APS messages
Bridge6(g8032-config-switch)#end Exit G.8032 configure switch mode CFM Configuration without a Virtual Channel Bridge 1 Bridge1#conf t Enter configure mode Bridge1(config)#bridge 1 protocol ieee Configure an IEEE VLAN-aware bridge vlan Bridge1(config)#vlan database Enter VLAN configure mode Bridge1(config-vlan)#vlan 5 bridge 1 Configure a VLAN and add it to the bridge state enable Bridge1(config-vlan)#exit Exit the VLAN configuration mode
Bridge1(config)#ethernet cfm domain- Enter CFM mode and create a domain at level 0 on bridge1 name type character-string name customer level 7 mip-creation default bridge 1 Bridge1(config-ether-cfm)#service ma- Create a service ID type integer ma-name 13 vlan 5 mip- creation default Bridge1(config-ether-cfm)#mep Configure crosscheck between host MEP and the remote MEP crosscheck mpid 103 vlan 5 Bridge1(config-ether-cfm)#mep Configure crosscheck between host MEP and the remote MEP
crosscheck mpid 108 vlan 5 Bridge1(config-ether-cfm)#exit Exit domain configuration mode Bridge1(config)#interface eth1 Enter interface mode Bridge1(config-if)#switchport Configure interface as a layer2 port Bridge1(config-if)#bridge-group 1 Associates the Eth1 interface with bridge 1 Bridge1(config-if)#ethernet cfm mep Configure the interface as an MEP down mpid 101 active true domain customer vlan 5 local-vid 5 bridge 1
customer vlan 5 local-vid 5 bridge 1 Bridge1(config-if-eth-cfm-mep)#cc Enable multicast continuity checking (CC) on the interface multicast state enable 236 © 2015 IP Infusion Inc. Proprietary G.8032 ERPS Version 2 Bridge1(config-if-eth-cfm-mep)#exit Exit CFM MEP mode Bridge1(config-if)#switchport mode Set the switching abilities of this interface to trunk mode trunk Bridge1(config-if)#switchport trunk Allow all VLANs on this interface allowed vlan all
allowed vlan all Bridge1(config-if)#exit Exit interface mode Bridge1(config)#interface eth2 Enter interface mode Bridge1(config-if)#switchport Configure interface as a layer2 port Bridge1(config-if)#bridge-group 1 Associates the Eth2 interface with bridge 1 Bridge1(config-if)#ethernet cfm mep Configure the interface as an MEP down mpid 102 active true domain customer vlan 5 local-vid 5 bridge 1 Bridge1(config-if-eth-cfm-mep)#cc Enable multicast continuity checking (CC) on the interface
multicast state enable Bridge1(config-if-eth-cfm-mep)#exit Exit CFM MEP mode Bridge1(config-if)#switchport mode Set the switching abilities of this interface to trunk mode trunk Bridge1(config-if)#switchport trunk Allow all VLANs on this interface allowed vlan all Bridge1(config-if)#end Exit Bridge 2 Bridge2#conf t Enter configure mode Bridge2(config)#bridge 2 protocol ieee Configure an IEEE VLAN-aware bridge vlan Bridge2(config)#vlan database Enter VLAN configure mode
Bridge2(config-vlan)#vlan 5 bridge 2 Configure a VLAN and add it to the bridge state enable Bridge2(config-vlan)#exit Exit the VLAN configuration mode Bridge2(config)#ethernet cfm domain- Enter CFM mode and create a domain at level 0 on bridge2 name type character-string name customer level 7 mip-creation default bridge 2 Bridge2(config-ether-cfm)#service ma- Create a service ID type integer ma-name 13 vlan 5 mip- creation default
creation default Bridge2(config-ether-cfm)#mep Configure crosscheck between host MEP and the remote MEP crosscheck mpid 101 vlan 5 © 2015 IP Infusion Inc. Proprietary 237 G.8032 ERPS Version 2 Bridge2(config-ether-cfm)#mep Configure crosscheck between host MEP and the remote MEP crosscheck mpid 106 vlan 5 Bridge2(config-ether-cfm)#exit Exit domain configuration mode Bridge2(config)#interface eth1 Enter interface mode Bridge2(config-if)#switchport Configure Eth1 as a layer2 port
Bridge2(config-if)#bridge-group 2 Associates the Eth1 interface with bridge 2 Bridge2(config-if)#ethernet cfm mep Configure the interface as an MEP down mpid 103 active true domain customer vlan 5 local-vid 5 bridge 2 Bridge2(config-if-eth-cfm-mep)#cc Enable multicast continuity checking (CC) on the interface multicast state enable Bridge2(config-if-eth-cfm-mep)#exit Exit CFM MEP mode Bridge2(config-if)#switchport mode Set the switching abilities of this interface to trunk mode trunk
trunk Bridge2(config-if)#switchport trunk Allow all VLANs on this interface allowed vlan all Bridge2(config-if)#exit Exit interface mode Bridge2(config)#interface eth2 Enter interface mode Bridge2(config-if)#switchport Configure interface as a layer2 port Bridge2(config-if)#bridge-group 2 Associates the Eth1 interface with bridge 2 Bridge2(config-if)#ethernet cfm mep Configure the interface as an MEP down mpid 104 active true domain customer vlan 5 local-vid 5 bridge 2
customer vlan 5 local-vid 5 bridge 2 Bridge2(config-if-eth-cfm-mep)#cc Enable multicast continuity checking (CC) on the interface multicast state enable Bridge2(config-if-eth-cfm-mep)#exit Exit CFM MEP mode Bridge2(config-if)#switchport mode Set the switching abilities of this interface to trunk mode trunk Bridge2(config-if)#switchport trunk Allow all VLANs on this interface allowed vlan all Bridge2(config-if)#end Exit Bridge 3 Bridge3#conf t Enter configure mode
Bridge 3 Bridge3#conf t Enter configure mode Bridge3(config)#bridge 3 protocol ieee Configure an IEEE VLAN-aware bridge vlan Bridge3(config)#vlan database Enter VLAN configure mode Bridge3(config-vlan)#vlan 5 bridge 3 Configure a VLAN and add it to the bridge state enable Bridge3(config-vlan)#vlan 6 bridge 3 Configure a VLAN and add it to the bridge state enable 238 © 2015 IP Infusion Inc. Proprietary G.8032 ERPS Version 2 Bridge3(config-vlan)#exit Exit the VLAN configuration mode
Bridge3(config)#ethernet cfm domain- Enter CFM mode and create a domain at level 0 on bridge 3 name type character-string name customer level 7 mip-creation default bridge 3 Bridge3(config-ether-cfm)#service ma- Create a service ID type integer ma-name 13 vlan 5 mip- creation default Bridge3(config-ether-cfm)#service ma- Create a service ID type integer ma-name 14 vlan 6 mip- creation default Bridge3(config-ether-cfm)#mep Configure crosscheck between host MEP and the remote MEP
crosscheck mpid 104 vlan 5 Bridge3(config-ether-cfm)#mep Configure crosscheck between host MEP and the remote MEP crosscheck mpid 107 vlan 5 Bridge3(config-ether-cfm)#mep Configure crosscheck between host MEP and the remote MEP crosscheck mpid 111 vlan 6 Bridge3(config-ether-cfm)#exit Exit domain configuration mode Bridge3(config)#interface eth1 Enter interface mode Bridge3(config-if)#switchport Configure Eth1 as a layer2 port
Bridge3(config-if)#bridge-group 3 Associates the Eth1 interface with bridge 3 Bridge3(config-if)#ethernet cfm mep Configure the interface as an MEP down mpid 105 active true domain customer vlan 5 local-vid 5 bridge 3 Bridge3(config-if-eth-cfm-mep)#cc Enable multicast continuity checking (CC) on the interface multicast state enable Bridge3(config-if-eth-cfm-mep)#exit Exit CFM MEP mode Bridge3(config-if)#switchport mode Set the switching abilities of this interface to trunk mode trunk
trunk Bridge3(config-if)#switchport trunk Allow all VLANs on this interface allowed vlan all Bridge3(config-if)#exit Exit interface mode Bridge3(config)#interface eth2 Enter interface mode Bridge3(config-if)#switchport Configure Eth2 as a layer2 port Bridge3(config-if)#bridge-group 3 Associates the Eth2 interface with bridge 3 Bridge3(config-if)#ethernet cfm mep Configure the interface as an MEP down mpid 106 active true domain customer vlan 5 local-vid 5 bridge 3
customer vlan 5 local-vid 5 bridge 3 Bridge3(config-if-eth-cfm-mep)#cc Enable multicast continuity checking (CC) on the interface multicast state enable Bridge3(config-if-eth-cfm-mep)#exit Exit CFM MEP mode Bridge3(config-if)#switchport mode Set the switching abilities of this interface to trunk mode trunk Bridge3(config-if)#switchport trunk Allow all VLANs on this interface allowed vlan all Bridge3(config-if)#exit Exit interface mode © 2015 IP Infusion Inc. Proprietary 239
© 2015 IP Infusion Inc. Proprietary 239 G.8032 ERPS Version 2 Bridge3(config)#interface eth3 Enter interface mode Bridge3(config-if)#switchport Configure Eth3 as a layer2 port Bridge3(config-if)#bridge-group 3 Associates the Eth13interface with bridge 3 Bridge3(config-if)#ethernet cfm mep Configure the interface as an MEP down mpid 114 active true domain customer vlan 6 local-vid 6 bridge 3 Bridge3(config-if-eth-cfm-mep)#cc Enable multicast continuity checking (CC) on the interface
multicast state enable Bridge3(config-if-eth-cfm-mep)#exit Exit CFM MEP mode Bridge3(config-if)#switchport mode Set the switching abilities of this interface to trunk mode trunk Bridge3(config-if)#switchport trunk Allow all VLANs on this interface allowed vlan all Bridge3(config-if)#exit Exit interface mode Bridge 4 Bridge4#conf t Enter configure mode Bridge4(config)#bridge 4 protocol ieee Configure an IEEE VLAN-aware bridge vlan Bridge4(config)#vlan database Enter VLAN configure mode
Bridge4(config-vlan)#vlan 5 bridge 4 Configure a VLAN and add it to the bridge state enable Bridge4(config-vlan)#vlan 6 bridge 4 Configure a VLAN and add it to the bridge state enable Bridge4(config-vlan)#exit Exit the VLAN configuration mode Bridge4(config)#ethernet cfm domain-name Enter CFM mode and create a domain at level 0 on bridge1 type character-string name customer level 7 mip-creation default bridge 4 Bridge4(config-ether-cfm)#service ma- Create a service ID
type integer ma-name 13 vlan 5 mip- creation default Bridge4(config-ether-cfm)#service ma- Create a service ID type integer ma-name 14 vlan 6 mip- creation default Bridge4(config-ether-cfm)#mep crosscheck Configure crosscheck between host MEP and the remote MEP mpid 102 vlan 5 Bridge4(config-ether-cfm)#mep crosscheck Configure crosscheck between host MEP and the remote MEP mpid 105 vlan 5 Bridge4(config-ether-cfm)#mep crosscheck Configure crosscheck between host MEP and the remote MEP
mpid 109 vlan 6 Bridge4(config-ether-cfm)#exit Exit domain configuration mode Bridge4(config)#interface eth1 Enter interface mode Bridge4(config-if)#switchport Configure Eth1 as a layer2 port Bridge4(config-if)#bridge-group 4 Associates the Eth1 interface with bridge 4 Bridge4(config-if)#ethernet cfm mep down Configure the interface as an MEP mpid 107 active true domain customer vlan 5 local-vid 5 bridge 4 240 © 2015 IP Infusion Inc. Proprietary G.8032 ERPS Version 2
G.8032 ERPS Version 2 Bridge4(config-if-eth-cfm-mep)#cc Enable multicast continuity checking (CC) on the interface multicast state enable Bridge4(config-if-eth-cfm-mep)#exit Exit CFM MEP mode Bridge4(config-if)#switchport mode trunk Set the switching abilities of this interface to trunk mode Bridge4(config-if)#switchport trunk Allow all VLANs on this interface allowed vlan all Bridge4(config-if)#exit Exit interface mode Bridge4(config)#interface eth2 Enter interface mode
Bridge4(config-if)#switchport Configure Eth2 as a layer2 port Bridge4(config-if)#bridge-group 4 Associates the Eth2 interface with bridge 4 Bridge4(config-if)#ethernet cfm mep down Configure the interface as an MEP mpid 108 active true domain customer vlan 5 local-vid 5 bridge 4 Bridge4(config-if-eth-cfm-mep)#cc Enable multicast continuity checking (CC) on the interface multicast state enable Bridge4(config-if-eth-cfm-mep)#exit Exit CFM MEP mode
Bridge4(config-if)#switchport mode trunk Set the switching abilities of this interface to trunk mode Bridge4(config-if)#switchport trunk Allow all VLANs on this interface allowed vlan all Bridge4(config-if)#exit Exit interface mode Bridge4(config)#interface eth3 Enter interface mode Bridge4(config-if)#switchport Configure Eth3 as a layer2 port Bridge4(config-if)#bridge-group 4 Associates the Eth3 interface with bridge 4 Bridge4(config-if)#ethernet cfm mep down Configure the interface as an MEP
mpid 113 active true domain customer vlan 6 local-vid 6 bridge 4 Bridge4(config-if-eth-cfm-mep)#cc Enable multicast continuity checking (CC) on the interface multicast state enable Bridge4(config-if-eth-cfm-mep)#exit Exit CFM MEP mode Bridge4(config-if)#switchport mode trunk Set the switching abilities of this interface to trunk mode Bridge4(config-if)#switchport trunk Allow all VLANs on this interface allowed vlan all Bridge4(config-if)#exit Exit interface mode Bridge 5
Bridge 5 Bridge5#conf t Enter configure mode Bridge5(config)#bridge 5 protocol ieee Configure an IEEE VLAN-aware bridge vlan Bridge5(config)#vlan database Enter VLAN configure mode Bridge5(config-vlan)#vlan 6 bridge 5 Configure a VLAN and add it to the bridge state enable Bridge5(config-vlan)#exit Exit the VLAN configuration mode Bridge5(config)#ethernet cfm domain- Enter CFM mode and create a domain at level 0 on bridge5 name type character-string name customer level 7 mip-creation default
customer level 7 mip-creation default bridge 5 © 2015 IP Infusion Inc. Proprietary 241 G.8032 ERPS Version 2 Bridge5(config-ether-cfm)#service ma- Create a service ID type integer ma-name 14 vlan 6 mip- creation default Bridge5(config-ether-cfm)#mep Configure crosscheck between host MEP and the remote MEP crosscheck mpid 113 vlan 6 Bridge5(config-ether-cfm)#mep Configure crosscheck between host MEP and the remote MEP crosscheck mpid 112 vlan 6
crosscheck mpid 112 vlan 6 Bridge5(config-ether-cfm)#exit Exit domain configuration mode Bridge5(config)#interface eth1 Enter interface mode Bridge5(config-if)#switchport Configure interface as a layer2 port Bridge5(config-if)#bridge-group 5 Associates the Eth1 interface with bridge 5 Bridge5(config-if)#ethernet cfm mep Configure the interface as an MEP down mpid 109 active true domain customer vlan 6 local-vid 6 bridge 5
customer vlan 6 local-vid 6 bridge 5 Bridge5(config-if-eth-cfm-mep)#cc Enable multicast continuity checking (CC) on the interface multicast state enable Bridge5(config-if-eth-cfm-mep)#exit Exit CFM MEP mode Bridge5(config-if)#switchport mode Set the switching abilities of this interface to trunk mode trunk Bridge5(config-if)#switchport trunk Allow all VLANs on this interface allowed vlan all Bridge5(config-if)#exit Exit interface mode Bridge5(config)#interface eth2 Enter interface mode
Bridge5(config-if)#switchport Configure interface as a layer2 port Bridge5(config-if)#bridge-group 5 Associates the Eth2 interface with bridge 5 Bridge5(config-if)#ethernet cfm mep Configure the interface as an MEP down mpid 110 active true domain customer vlan 6 local-vid 6 bridge 5 Bridge5(config-if-eth-cfm-mep)#cc Enable multicast continuity checking (CC) on the interface multicast state enable Bridge5(config-if-eth-cfm-mep)#exit Exit CFM MEP mode
Bridge5(config-if)#switchport mode Set the switching abilities of this interface to trunk mode trunk Bridge5(config-if)#switchport trunk Allow all VLANs on this interface allowed vlan all Bridge5(config-if)#end Exit interface mode Bridge 6 Bridge6#conf t Enter configure mode Bridge6(config)#bridge 6 protocol ieee Configure an IEEE VLAN-aware bridge vlan Bridge6(config)#vlan database Enter VLAN configure mode Bridge6(config-vlan)#vlan 6 bridge 6 Configure a VLAN and add it to the bridge
state enable Bridge6(config-vlan)#exit Exit the VLAN configuration mode 242 © 2015 IP Infusion Inc. Proprietary G.8032 ERPS Version 2 Bridge6(config)#ethernet cfm domain-name Enter CFM mode and create a domain at level 0 on bridge6 type character-string name customer level 7 mip-creation default bridge 6 Bridge6(config-ether-cfm)#service ma-type Create a service ID integer ma-name 14 vlan 6 mip-creation default
integer ma-name 14 vlan 6 mip-creation default Bridge6(config-ether-cfm)#mep crosscheck Configure crosscheck between host MEP and the remote MEP mpid 110 vlan 6 Bridge6(config-ether-cfm)#mep crosscheck Configure crosscheck between host MEP and the remote MEP mpid 114 vlan 6 Bridge6(config-ether-cfm)#exit Exit domain configuration mode Bridge6(config)#interface eth1 Enter interface mode Bridge6(config-if)#switchport Configure interface as a layer2 port
Bridge6(config-if)#bridge-group 6 Associates the Eth1 interface with bridge 6 Bridge6(config-if)#ethernet cfm mep down Configure the interface as an MEP mpid 111 active true domain customer vlan 6 local-vid 6 bridge 6 Bridge6(config-if-eth-cfm-mep)#cc Enable multicast continuity checking (CC) on the interface multicast state enable Bridge6(config-if-eth-cfm-mep)#exit Exit CFM MEP mode Bridge6(config-if)#switchport mode trunk Set the switching abilities of this interface to trunk mode
Bridge6(config-if)#switchport trunk Allow all VLANs on this interface allowed vlan all Bridge6(config-if)#exit Exit interface mode Bridge6(config)#interface eth2 Enter interface mode Bridge6(config-if)#switchport Configure interface as a layer2 port Bridge6(config-if)#bridge-group 1 Associates the Eth2 interface with bridge 6 Bridge6(config-if)#ethernet cfm mep down Configure the interface as an MEP mpid 112 active true domain customer vlan 6 local-vid 6 bridge 6
6 local-vid 6 bridge 6 Bridge6(config-if-eth-cfm-mep)#cc Enable multicast continuity checking (CC) on the interface multicast state enable Bridge6(config-if-eth-cfm-mep)#exit Exit CFM MEP mode Bridge6(config-if)#switchport mode trunk Set the switching abilities of this interface to trunk mode Bridge6(config-if)#switchport trunk Allow all VLANs on this interface allowed vlan all Bridge6(config-if)#end Exit interface mode CCM Convergence Verification Bridge 1
CCM Convergence Verification Bridge 1 Bridge1#show ethernet cfm maintenance-points remote level 7 vlan 5 bridge 1 MPID LEVEL VLAN ACTIVE Remote Mac RDI FLAGS --------------------------------------------------------------------------------- 103 7 5 Yes 5254.0059.424f False Configured 108 7 5 Yes 5254.006b.866f False Configured © 2015 IP Infusion Inc. Proprietary 243 G.8032 ERPS Version 2 Bridge 2 Bridge2#show ethernet cfm maintenance-points remote level 7 vlan 5 bridge 2
MPID LEVEL VLAN ACTIVE Remote Mac RDI FLAGS --------------------------------------------------------------------------------- 101 7 5 Yes 5254.00dd.c9e6 False Configured 106 7 5 Yes 5254.00cc.bf79 False Configured Bridge 3 Bridge3#show ethernet cfm maintenance-points remote level 7 vlan 6 bridge 3 MPID LEVEL VLAN ACTIVE Remote Mac RDI FLAGS --------------------------------------------------------------------------------- 111 7 6 Yes 5254.009d.93ae False Configured
111 7 6 Yes 5254.009d.93ae False Configured Bridge3#show ethernet cfm maintenance-points remote level 7 vlan 5 bridge 1 MPID LEVEL VLAN ACTIVE Remote Mac RDI FLAGS --------------------------------------------------------------------------------- 104 7 5 Yes 5254.0053.71fc False Configured 107 7 5 Yes 5254.000f.258f False Configured Bridge 4 Bridge4#show ethernet cfm maintenance-points remote level 7 vlan 5 bridge 4 MPID LEVEL VLAN ACTIVE Remote Mac RDI FLAGS
MPID LEVEL VLAN ACTIVE Remote Mac RDI FLAGS --------------------------------------------------------------------------------- 102 7 5 Yes 5254.005e.7609 False Configured 105 7 5 Yes 5254.0014.d97d False Configured Bridge4#show ethernet cfm maintenance-points remote level 7 vlan 6 bridge 1 MPID LEVEL VLAN ACTIVE Remote Mac RDI FLAGS --------------------------------------------------------------------------------- 109 7 6 Yes 5254.0090.8b1a False Configured Bridge 5
Bridge 5 Bridge5#show ethernet cfm maintenance-points remote level 7 vlan 6 bridge 5 MPID LEVEL VLAN ACTIVE Remote Mac RDI FLAGS --------------------------------------------------------------------------------- 113 7 6 Yes 5254.0013.9c53 False Configured 112 7 6 Yes 5254.0085.25e1 False Configured Bridge 6 Bridge6#show ethernet cfm maintenance-points remote level 7 vlan 6 bridge 6 MPID LEVEL VLAN ACTIVE Remote Mac RDI FLAGS
MPID LEVEL VLAN ACTIVE Remote Mac RDI FLAGS --------------------------------------------------------------------------------- 110 7 6 Yes 5254.0000.eb38 False Configured 114 7 6 Yes 5254.0025.5930 False Configured 244 © 2015 IP Infusion Inc. Proprietary G.8032 ERPS Version 2 Configuration without a Virutal Channel Bridge 1 Bridge1#configure terminal Enter configure mode Bridge1(config)#g8032 profile profile1 Create a profile and enter G.8032 profile configure mode bridge 1
bridge 1 Bridge1(g8032-profile-config)#exit Exit G.8032 profile configure mode Bridge1(config)#bridge 1 g8032 Configure physical ring, specifying the east and west interfaces physical-ring R1 east-interface eth1 west-interface eth2 Bridge1(config)#g8032 profile profile1 Create a profile and enter G.8032 profile configure mode bridge 1 Bridge1(g8032-profile-config)#timer Configure wait-to-restore timer wait 1 Bridge1(g8032-profile-config)#exit Exit G.8032 profile configure mode
Bridge1(config)#g8032 erp-instance Create ERP instance on bridge 1 and enter G.8032 configure ERP_INST_1 bridge 1 switch mode Bridge1(g8032-config- Associate physical ring to ERP instance switch)#physical-ring R1 Bridge1(g8032-config-switch)#vlan 5 Associate VLAN 5 with the R-APS channel raps-channel Bridge1(g8032-config-switch)#ring-id Configure the ring identifier 101 Bridge1(g8032-config-switch)#profile Associate profile to ERP instance name profile1
name profile1 Bridge1(g8032-config-switch)#rpl role Configure RPL role as neighbor owner east-interface Bridge1(g8032-config-switch)#level 7 Configure the level to carry in R-APS messages Bridge1(g8032-config-switch)#exit Exit G.8032 profile configure mode Bridge 2 Bridge2#configure terminal Enter configure mode Bridge2(config)#g8032 profile Create a profile and enter G.8032 profile configure mode profile1 bridge 2 Bridge2(g8032-profile-config)#exit Exit G.8032 profile configure mode
Bridge2(config)#bridge 2 g8032 Configure physical ring, specifying the east and west interfaces physical-ring R1 east-interface eth1 west-interface eth2 Bridge2(config)#g8032 profile Create a profile and enter G.8032 profile configure mode profile1 bridge 2 Bridge2(g8032-profile-config)#timer Configure wait-to-restore timer wait 1 Bridge2(g8032-profile-config)#exit Exit G.8032 profile configure mode Bridge2(config)#g8032 erp-instance Create ERP instance on bridge 2 and enter G.8032 configure
ERP_INST_1 bridge 2 © 2015 IP Infusion Inc. Proprietary 245 G.8032 ERPS Version 2 Bridge2(g8032-config- Associate physical ring to ERP instance switch)#physical-ring R1 Bridge2(g8032-config-switch)#vlan 5 Associate VLAN 5 with the R-APS channel raps-channel Bridge2(g8032-config-switch)#ring-id Configure the ring identifier 101 Bridge2(g8032-config-switch)#profile Associate profile to ERP instance name profile1 Bridge2(g8032-config-switch)#rpl role Configure RPL role as neighbor
neigh east-interface Bridge2(g8032-config-switch)#level 7 Configure the level to carry in R-APS messages Bridge2(g8032-config-switch)#exit Exit interface mode Bridge 3 Bridge3#configure terminal Enter configure mode Bridge3(config)#g8032 profile profile1 Create a profile and enter G.8032 profile configure mode bridge 3 Bridge3(g8032-profile-config)#timer Set wait-to-restore timer wait 1 Bridge3(g8032-profile-config)#exit Exit G.8032 profile configure mode
Bridge3(config)#bridge 3 g8032 Configure physical ring, specifying the east and west interfaces physical-ring R1 east-interface eth1 west-interface eth2 Bridge3(config)#g8032 profile profile1 Create a profile and enter G.8032 profile configure mode bridge 3 Bridge3(g8032-profile-config)#exit Exit G.8032 profile configure mode Bridge3(config)#g8032 erp-instance Create ERP instance on bridge 3 and enter G.8032 configure switch ERP_INST_1 bridge 3 mode
ERP_INST_1 bridge 3 mode Bridge3(g8032-config- Associate physical ring to ERP instance switch)#physical-ring R1 Bridge3(g8032-config-switch)#vlan 5 Associate VLAN 5 with the R-APS channel raps-channel Bridge3(g8032-config-switch)#ring-id Configure the ring identifier 101 Bridge3(g8032-config-switch)#profile Associate profile to ERP instance name profile1 Bridge3(g8032-config-switch)#rpl role Configure the Ring Protection Link node as Owner and specify the non-owner RPL owner
non-owner RPL owner Bridge3(g8032-config-switch)#level 7 Configure the level to carry in R-APS messages Bridge3(g8032-config-switch)#exit Exit G.8032 configure switch mode Bridge3(config)#bridge 3 g8032 Configure physical ring, specifying the east and west interfaces physical-ring R2 east-interface eth1 west-interface eth3 Bridge3(config)#g8032 erp-instance Create a profile and enter G.8032 profile configure mode ERP_INST_2 bridge 3 Bridge3(g8032-config- Associate physical ring to ERP instance
switch)#physical-ring R2 246 © 2015 IP Infusion Inc. Proprietary G.8032 ERPS Version 2 Bridge3(g8032-config-switch)#ring-id Configure the ring identifier 102 Bridge3(g8032-config-switch)#profile Associate profile to ERP instance name profile1 Bridge3(g8032-config-switch)#rpl role Configure RPL role as non-owner non-owner Bridge3(g8032-config-switch)#level 7 Configure the level to carry in R-APS messages Bridge3(g8032-config-switch)#sub-ring Associate profile to ERP instance block east-interface
block east-interface Bridge3(g8032-config-switch)#vlan 6 Associate VLAN 6 with the R-APS channel raps-channel Bridge3(g8032-config-switch)#non- virtual-channel Bridge3(g8032-config-switch)#end Exit G.8032 configure switch mode Bridge 4 Bridge4#configure terminal Enter configure mode Bridge4(config)#g8032 profile profile1 Create a profile and enter G.8032 profile configure mode bridge 4 Bridge4(g8032-profile-config)#timer Set wait-to-restore timer wait 1
wait 1 Bridge4(g8032-profile-config)#exit Exit G.8032 profile configure mode Bridge4(config)#bridge 4 g8032 Configure physical ring, specifying the east and west interfaces physical-ring R1 east-interface eth1 west-interface eth2 Bridge4(config)#g8032 profile profile1 Create a profile and enter G.8032 profile configure mode bridge 4 Bridge4(g8032-profile-config)#exit Exit G.8032 profile configure mode
Bridge4(config)#g8032 erp-instance Create ERP instance on bridge 4 and enter G.8032 configure switch ERP_INST_1 bridge 4 mode Bridge4(g8032-config-switch)#physical- Associate physical ring to ERP instance ring R1 Bridge4(g8032-config-switch)#vlan 5 Associate VLAN 5 with the R-APS channel raps-channel Bridge4(g8032-config-switch)#ring-id Configure the ring identifier 101 Bridge4(g8032-config-switch)#profile Associate profile to ERP instance name profile1
name profile1 Bridge4(g8032-config-switch)#rpl role Configure the Ring Protection Link node as Owner and specify the non-owner RPL owner Bridge4(g8032-config-switch)#level 7 Configure the level to carry in R-APS messages Bridge4(g8032-config-switch)#exit Exit G.8032 configure switch mode Bridge4(config)#bridge 4 g8032 Configure physical ring, specifying the east and west interfaces physical-ring R2 east-interface eth1 west-interface eth3
west-interface eth3 Bridge4(config)#g8032 erp-instance Create ERP instance on bridge 4 and enter G.8032 configure switch ERP_INST_2 bridge 4 mode © 2015 IP Infusion Inc. Proprietary 247 G.8032 ERPS Version 2 Bridge4(g8032-config-switch)#physical- Associate physical ring to ERP instance ring R2 Bridge4(g8032-config-switch)#ring-id Configure the ring identifier 102 Bridge4(g8032-config-switch)#profile Associate profile to ERP instance name profile1
name profile1 Bridge4(g8032-config-switch)#rpl role Configure RPL role as non-owner non-owner Bridge4(g8032-config-switch)#level 7 Configure the level to carry in R-APS messages Bridge4(g8032-config-switch)#sub-ring Associate profile to ERP instance block east-interface Bridge4(g8032-config-switch)#non- virtual-channel Bridge4(g8032-config-switch)#vlan 6 Associate VLAN 5 with the R-APS channel raps-channel Bridge4(g8032-config-switch)#end Exit G.8032 configure switch mode Bridge 5
Bridge 5 Bridge5#configure terminal Enter configure mode Bridge5(config)#g8032 profile profile1 Create a profile and enter G.8032 profile configure mode bridge 5 Bridge5(g8032-profile-config)#timer wait 1 Bridge5(g8032-profile-config)#exit Exit G.8032 profile configure mode Bridge5(config)#bridge 5 g8032 physical- Configure physical ring, specifying the east and west interfaces ring R1 east-interface eth1 west- interface eth2
ring R1 east-interface eth1 west- interface eth2 Bridge5(config)#g8032 profile profile1 Create a profile and enter G.8032 profile configure mode bridge 5 Bridge5(g8032-profile-config)#exit Exit G.8032 profile configure mode Bridge5(config)#g8032 erp-instance Create ERP instance on bridge 5 and enter G.8032 configure ERP_INST_1 bridge 5 switch mode Bridge5(g8032-config-switch)#physical- Associate physical ring to ERP instance ring R1
ring R1 Bridge5(g8032-config-switch)#vlan 6 Associate VLAN 6 with the R-APS channel raps-channel Bridge5(g8032-config-switch)#ring-id 102 Configure the ring identifier Bridge5(g8032-config-switch)#profile Associate profile to ERP instance name profile1 Bridge5(g8032-config-switch)#rpl role Configure the Ring Protection Link node as Owner and specify the owner west-interface RPL owner Bridge5(g8032-config-switch)#level 7 Configure the level to carry in R-APS messages
Bridge5(g8032-config-switch)#non- virtual-channel Bridge5(g8032-config-switch)#end Exit G.8032 configure switch mode 248 © 2015 IP Infusion Inc. Proprietary G.8032 ERPS Version 2 Bridge 6 Bridge6#configure terminal Enter configure mode Bridge6(config)#g8032 profile profile1 Create a profile and enter G.8032 profile configure mode bridge 6 Bridge6(g8032-profile-config)#timer wait 1 Bridge6(g8032-profile-config)#exit Exit G.8032 profile configure mode
Bridge6(config)#bridge 6 g8032 physical- Configure physical ring, specifying the east and west interfaces ring R1 east-interface eth1 west- interface eth2 Bridge6(config)#g8032 erp-instance Create ERP instance on bridge 6 and enter G.8032 configure ERP_INST_1 bridge 6 switch mode Bridge6(g8032-config-switch)#physical- Associate physical ring to ERP instance ring R1 Bridge6(g8032-config-switch)#vlan 6 raps- Associate VLAN 6 with the R-APS channel channel
channel Bridge6(g8032-config-switch)#ring-id 102 Configure the ring identifier Bridge6(g8032-config-switch)#profile Associate profile to ERP instance name profile1 Bridge6(g8032-config-switch)#rpl role Configure RPL role as neighbor neigh west-interface Bridge6(g8032-config-switch)#level 7 Configure the level to carry in R-APS messages Bridge6(g8032-config-switch)#non- virtual-channel Bridge6(g8032-config-switch)#end Exit G.8032 configure switch mode © 2015 IP Infusion Inc. Proprietary 249
© 2015 IP Infusion Inc. Proprietary 249 G.8032 ERPS Version 2 250 © 2015 IP Infusion Inc. Proprietary Dual-Ended LMM Configurations CHAPTER 17 This chapter contains a complete sample Dual-ended LMM (Loss Measurement Message) configurations. Dual-ended ETH-LM (Ethernet Loss Measurement) provides proactive OAM for performance monitoring and for fault management. By default, in a point-to-point Maintenance Entity (ME), each Maintenance Endpoint (MEP) sends
periodic, dual-ended frames with ETH-LM information to its peer MEP to help facilitate frame loss measurements at the peer MEP. Each MEP terminates the dual-ended frames with the ETH-LM information and makes both a near-end and far-end loss measurements. The CCM (Continuity Check Message) frame that carries the ETH-LM information will continue to do so until the ETH-LM is disabled for the MEP. When configured for proactive loss measurement, a MEP
periodically transmits CCM frames with the following information elements: • TxFCf: Value of the local counter TxFCl at the time of transmission of the CCM frame. • RxFCb: Value of the local counter RxFCl at the time of reception of the last CCM frame from the peer MEP. • TxFCb: Value of TxFCf in the last received CCM frame from the peer MEP Figure 17-1 displays a sample Dual-ended LMM (Loss Measurement Message) topology. Figure 17-1: Simple Connectivity Fault Management Topology SW1
SW1 #configure terminal Enter configure mode. (config)#bridge 1 protocol mstp Configure MSTP bridge. (config)#vlan database Enter VLAN configure mode. (config-vlan)#vlan 2 bridge 1 state enable Configure VLAN 2 on bridge 1. (config-vlan)#exit Exit VLAN configure mode (config)#interface eth2 Enter interface mode. (config-if)#switchport Configure Eth2 as a layer-2 interface. (config-if)#bridge-group 1 Associate Eth2 with bridge-group 1.
(config-if)#switchport mode trunk Set the switching characteristics of this interface to trunk mode. (config-if)#switchport trunk allowed vlan all Configure the interface to allow all the VLANs. (config-if)#no shutdown Administratively shut down the interface. (config-if)#exit Exit interface mode (config)#ethernet cfm domain-name type Enter CFM mode and create domain test at level 5 on character-string name test level 5 mip-creation bridge 1. default bridge 1
default bridge 1 (config-ether-cfm)#service ma-type string ma- Configure MA abc on VLAN 2. name abc vlan 2 mip-creation default (config-ether-cfm)#exit Exit CFM mode. © 2015 IP Infusion Inc. Proprietary 251 Dual-Ended LMM Configurations (config)#interface eth2 Enter interface mode. (config-if)#ethernet cfm mep down mpid 10 active Enter CFM MEP mode and configure down MEP 10 on true domain test vlan 2 local-vid 2 bridge 1 VLAN 2. (config)#ethernet cfm domain-name type Enter CFM mode.
character-string name test level 5 mip-creation default bridge 1 (config-ether-cfm)#mep crosscheck mpid 20 vlan 2 Configure the MEP crosscheck using the Remote MAC mac 0002.b328.5260 address of SW3-Eth1. (config-ether-cfm)#exit Exit CFM mode. (config)#interface eth2 Enter interface mode. (config-if)#ethernet cfm mep down mpid 10 active Enter CFM MEP mode and configure down MEP 10 on true domain test vlan 2 local-vid 2 bridge 1 VLAN 2.
(config-if-eth-cfm-mep)#cc unicast rmpid 20 Enable CCMs on RMPID 20. state enable (config-if-eth-cfm-mep)#exit Exit CFM MEP mode. (config-if)#exit Exit interface mode. For x86 platform only Configure Ethernet LMM on MEPID 10. (config)#ethernet cfm lmm enable mepid 10 rmepid 20 domain test vlan 2 bridge 1 (config)#ethernet cfm lmm frame count simulator Start the frame count measurement. start SW2 #configure terminal Enter configure mode. (config)#bridge 1 protocol mstp Configure MSTP bridge.
(config)#vlan database Enter VLAN configure mode. (config-vlan)#vlan 2 bridge 1 state enable Configure VLAN 2 on bridge 1. (config-vlan)#exit Exit VLAN configure mode (config)#interface eth1 Enter interface mode. (config-if)#switchport Configure Eth1 as a layer-2 interface. (config-if)#bridge-group 1 Associate Eth1 with bridge-group 1. (config-if)#switchport mode trunk Set the switching characteristics of this interface to trunk mode.
trunk mode. (config-if)#switchport trunk allowed vlan all Configure the interface to allow all the VLANs. (config-if)#no shutdown Administratively shut down the interface. (config)#interface eth2 Enter interface mode. (config-if)#switchport Configure Eth2 as a layer-2 interface. (config-if)#bridge-group 1 Associate Eth2 with bridge-group 1. (config-if)#switchport mode trunk Set the switching characteristics of this interface to trunk mode.
trunk mode. (config-if)#switchport trunk allowed vlan all Configure the interface to allow all the VLANs. (config-if)#ethernet cfm configure default-md- Configure default MD with level 5. level level 5 mip-creation default bridge 1 252 © 2015 IP Infusion Inc. Proprietary Dual-Ended LMM Configurations SW3 #configure terminal Enter configure mode. (config)#bridge 1 protocol mstp Configure MSTP bridge. (config)#vlan database Enter VLAN configure mode.
(config)#vlan database Enter VLAN configure mode. (config-vlan)#vlan 2 bridge 1 state enable Configure VLAN 2 on bridge 1. (config-vlan)#exit Exit VLAN configure mode (config)#interface eth1 Enter interface mode. (config-if)#switchport Configure Eth2 as a layer-2 interface. (config-if)#bridge-group 1 Associate Eth2 with bridge-group 1. (config-if)#switchport mode trunk Set the switching characteristics of this interface to trunk mode.
mode. (config-if)#switchport trunk allowed vlan all Configure the interface to allow all the VLANs. (config-if)#no shutdown Administratively shut down the interface. (config)#ethernet cfm domain-name type Enter CFM mode and create domain test at level 5 on character-string name test level 5 mip- bridge 1. creation default bridge 1 (config-ether-cfm)#service ma-type string ma- Configure MA abc on VLAN 2. name abc vlan 2 mip-creation default (config)#interface eth1 Enter interface mode.
(config)#interface eth1 Enter interface mode. (config-if)#ethernet cfm mep down mpid 20 Enter CFM MEP mode and configure down MEP 20 on active true domain test vlan 2 local-vid 2 VLAN 2. bridge 1 (config)#ethernet cfm domain-name type Enter CFM mode. character-string name test level 5 mip- creation default bridge 1 (config-ether-cfm)#mep crosscheck mpid 20 Configure the MEP crosscheck using the Remote MAC vlan 2 mac 0007.e92a5.1c4e address of SW1-eth2. (config-ether-cfm)#exit Exit CFM mode.
(config-ether-cfm)#exit Exit CFM mode. (config)#interface eth1 Enter interface mode. (config-if)#ethernet cfm mep down mpid 20 Enter CFM MEP mode and configure down MEP 20 on active true domain test vlan 2 local-vid 2 VLAN 2. bridge 1 (config-if-eth-cfm-mep)#cc unicast rmpid 10 Enable CCMs on RMPID 10. state enable (config-if-eth-cfm-mep)#exit Exit CFM MEP mode. (config-if)#exit Exit interface mode. For x86 platform only Configure Ethernet LMM on MEPID 20.
(config)#ethernet cfm lmm enable mepid 20 rmepid 10 domain test vlan 2 bridge 1 (config)#ethernet cfm lmm frame count Start the frame count measurement. simulator start © 2015 IP Infusion Inc. Proprietary 253 Dual-Ended LMM Configurations Validation #show ethernet cfm maintenance-points remote domain test vlan 2 bridge 1 MPID LEVEL VLAN ACTIVE Remote Mac RDI FLAGS ------------------------------------------------------------------------------ -- 20 5 2 Yes 0002.b328.5260 False Configured
-- 20 5 2 Yes 0002.b328.5260 False Configured #show ethernet cfm maintenance-points remote domain test vlan 2 bridge 1 MPID LEVEL VLAN ACTIVE Remote Mac RDI FLAGS ------------------------------------------------------------------------------ -- 10 5 2 Yes 0007.e9a5.1c4e False Configured #show ethernet cfm dual-ended lmm mep 10 domain test vlan 2 bridge 1 MEPID: 10, RMEPID: 20 Start Time: 2010/04/27 13:45:54 Near-End Frame Loss: 11 Far-End Frame Loss: 11 Current Time: 2010/04/27 14:14:47
Current Time: 2010/04/27 14:14:47 Current Near-End Frame Loss: 0 Current Far-End Frame Loss: 0 #show ethernet cfm dual-ended lmm mep 20 domain test vlan 2 bridge 1 MEPID: 20, RMEPID: 10 Start Time: 2010/04/28 05:48:07 Near-End Frame Loss: 11 Far-End Frame Loss: 11 Current Time: 2010/04/28 06:16:55 Current Near-End Frame Loss: 0 Current Far-End Frame Loss: 0 254 © 2015 IP Infusion Inc. Proprietary CFM Support on PEB Configuration CHAPTER 18
CFM Support on PEB Configuration CHAPTER 18 This chapter contains a complete sample configuration for Connectivity Fault Management (CFM) support on a Provider Edge Bridge (PEB) network. Connectivity Fault Management provides a path for end-to-end service instance monitoring across Provider Bridging Network. It includes a mechanism for CFM frames to flow across PB network in compliance with IEEE 802.1ag 2007 Section 22.6, and MEF 17 and MEF20. Topology
Section 22.6, and MEF 17 and MEF20. Topology Figure 18-1 displays a simple CFM topology. Figure 18-1: Simple Connectivity Fault Management (CFM) Topology CE1 #configure terminal Enter configure mode. (config)#bridge 1 protocol rstp vlan-bridge Configure bridge 1 as RSTP VLAN aware. (config)#vlan database Enter vlan configure mode. (config-vlan)#vlan 2 bridge 1 state enable Configure vlan 2 and associate it with bridge 1. (config-vlan)#exit Exit vlan configure mode.
(config-vlan)#exit Exit vlan configure mode. (config)#interface eth1 Enter interface mode. (config-if)#switchport Configure Eth1 as a layer 2 port. (config-if)#bridge-group 1 Associate bridge to interface. (config-if)#switchport mode trunk Configure port as trunk. (config-if)#switchport trunk allowed vlan all Allow all the VLANs created on interface. (config-if)#exit Exit interface mode. (config)#ethernet cfm domain-name type Enter CFM mode and create a domain at level 5 on the
character-string name test level 5 mip- bridge. creation default bridge 1 (config-ether-cfm)#service ma-type string ma- Associate service ID to VLAN. name abc vlan 2 mip-creation default (config-ether-cfm)#mep crosscheck mpid 20 Configure crosscheck between host MEP and the remote vlan 2 mac 0008.a16c.eecd MEP. (config-ether-cfm)#exit Exit CFM mode. (config)#interface eth1 Enter interface mode. © 2015 IP Infusion Inc. Proprietary 255 CFM Support on PEB Configuration
CFM Support on PEB Configuration (config-if)#ethernet cfm mep down mpid 10 Enter CFM MEP mode and configure the interface as a active true domain test vlan 2 local-vid 2 maintenance end point (MEP). bridge 1 (config-if-eth-cfm-mep)#cc unicast rmpid 20 Enable unicast continuity checking (CC) in the selected state enable service instance (MA) instance with the configured domain- level. (config-if-eth-cfm-mep)#exit Exit CFM MEP mode. PEB1 #configure terminal Enter configure mode.
PEB1 #configure terminal Enter configure mode. (config)#bridge 1 protocol provider-rstp edge Configure bridge 1 as a provider-RSTP edge. (config)#vlan database Enter VLAN configure mode. (config-vlan)#vlan 2 type customer bridge 1 Configure customer VLAN 2 and associate it with bridge 1. state enable (config-vlan)#vlan 3 type service multipoint- Configure service VLAN 3 as multipoint-to-multipoint and multipoint bridge 1 state enable associate it with bridge 1.
(config-vlan)#exit Exit VLAN configure mode. (config)#cvlan registration table map1 bridge Configure CVLAN registration table map1 on bridge 1. 1 (config-cvlan-registration)#cvlan 2 svlan 3 Map CVLAN 2 to SVLAN 3. (config-cvlan-registration)#exit Exit configure CVLAN registration mode. (config)#interface eth1 Enter interface mode. (config-if)#switchport Configure Eth1 as a layer 2 port. (config-if)#bridge-group 1 Associate bridge to interface.
(config-if)#switchport mode customer-edge Configure port as customer-edge hybrid. hybrid (config-if)#switchport customer-edge hybrid Allow the VLAN 2 created on interface. allowed vlan add 2 egress-tagged enable (config-if)#switchport customer-edge vlan Associate map1 with the interface. registration map1 (config-if)#switchport provider-edge vlan 3 Configure untagged VID. untagged-vlan 2 (config-if)#switchport provider-edge vlan 3 Configure default VID. default-vlan 2
default-vlan 2 (config-if)#exit Exit interface mode. (config)#interface eth2 Enter interface mode. (config-if)#switchport Configure Eth2 as a layer 2 port. (config-if)#bridge-group 1 Associate bridge to interface. (config-if)#switchport mode provider-network Configure port as a provider-network. (config-if)#switchport provider-network Allow all the VLANs created on interface. allowed vlan all (config-if)#exit Exit interface mode.
(config-if)#exit Exit interface mode. (config)#ethernet cfm configure default-md- Configure MIP on level 5 for bridge 1 and set MIP creation level level 5 mip-creation default bridge 1 permissions. 256 © 2015 IP Infusion Inc. Proprietary CFM Support on PEB Configuration PB #configure terminal Enter configure mode. (config)#bridge 1 protocol provider-rstp Configure bridge 1 as a provider-RSTP. (config)#vlan database Enter VLAN configure mode.
(config)#vlan database Enter VLAN configure mode. (config-vlan)#vlan 3 type service multipoint- Configure service vlan 3 as multipoint-to-multipoint and multipoint bridge 1 state enable associate it with bridge 1. (config-vlan)#exit Exit VLAN configure mode. (config)#interface eth1 Enter interface mode. (config-if)#switchport Configure Eth1 as a layer 2 port. (config-if)#bridge-group 1 Associate bridge to interface.
(config-if)#switchport mode provider-network Configure port as a provider-network. (config-if)#switchport provider-network Allow all the VLANs created on interface. allowed vlan all (config-if)#exit Exit interface mode. (config)#interface eth2 Enter interface mode. (config-if)#switchport Configure Eth2 as a layer 2 port. (config-if)#bridge-group 1 Associate bridge to interface. (config-if)#switchport mode provider-network Configure port as a provider-network.
(config-if)#switchport provider-network Allow all the VLANs created on interface. allowed vlan all (config-if)#exit Exit interface mode. (config)#ethernet cfm configure default-md- Configure MIP on level 5 for bridge 1 and set MIP creation level level 5 mip-creation default bridge 1 permissions. PEB2 #configure terminal Enter configure mode. (config)#bridge 1 protocol provider-rstp edge Configure bridge 1 as a provider-RSTP edge. (config)#vlan database Enter VLAN configure mode.
(config)#vlan database Enter VLAN configure mode. (config-vlan)#vlan 2 type customer bridge 1 Configure customer VLAN 2 and associate it with bridge 1. state enable (config-vlan)#vlan 3 type service multipoint- Configure service VLAN 3 as multipoint-to-multipoint and multipoint bridge 1 state enable associate it with bridge 1. (config-vlan)#exit Exit VLAN configure mode. (config)#cvlan registration table map1 bridge Configure CVLAN registration table map1 on bridge 1. 1
1 (config-cvlan-registration)#cvlan 2 svlan 3 Map CVLAN 2 to SVLAN 3. (config-cvlan-registration)#exit Exit configure CVLAN registration mode. (config)#interface eth1 Enter interface mode. (config-if)#switchport Configure Eth1 as a layer 2 port. © 2015 IP Infusion Inc. Proprietary 257 CFM Support on PEB Configuration (config-if)#bridge-group 1 Associate bridge to interface. (config-if)#switchport mode customer-edge Configure port as customer-edge hybrid. hybrid
hybrid (config-if)#switchport customer-edge hybrid Allow the VLAN 2 created on interface. allowed vlan add 2 egress-tagged enable (config-if)#switchport customer-edge vlan Associate map1 with the interface. registration map1 (config-if)#switchport provider-edge vlan 3 Configure untagged VID. untagged-vlan 2 (config-if)#switchport provider-edge vlan 3 Configure default VID. default-vlan 2 (config-if)#exit Exit interface mode. (config)#interface eth2 Enter interface mode.
(config)#interface eth2 Enter interface mode. (config-if)#switchport Configure Eth2 as a layer 2 port. (config-if)#bridge-group 1 Associate bridge to interface. (config-if)#switchport mode provider-network Configure port as a provider-network. (config-if)#switchport provider-network Allow all the VLANs created on interface. allowed vlan all (config-if)#exit Exit interface mode. (config)#ethernet cfm configure default-md- Configure MIP on level 5 for bridge 1 and set MIP creation
level level 5 mip-creation default bridge 1 permissions. CE2 #configure terminal Enter configure mode. (config)#bridge 1 protocol rstp vlan-bridge Configure bridge 1 as RSTP VLAN aware. (config)#vlan database Enter VLAN configure mode. (config-vlan)#vlan 2 bridge 1 state enable Configure VLAN 2 and associate it with bridge 1. (config-vlan)#exit Exit VLAN configure mode. (config)#interface eth1 Enter interface mode. (config-if)#switchport Configure Eth1 as a layer 2 port.
(config-if)#bridge-group 1 Associate bridge to interface. (config-if)#switchport mode trunk Configure port as trunk. (config-if)#switchport trunk allowed vlan all Allow all the VLANs created on interface. (config-if)#exit Exit interface mode. (config)#ethernet cfm domain-name type Enter CFM mode and create a domain at level 5 on the character-string name test level 5 mip- bridge. creation default bridge 1 (config-ether-cfm)#service ma-type string ma- Associate service ID to VLAN.
name abc vlan 2 mip-creation default (config-ether-cfm)#mep crosscheck mpid 10 Configure crosscheck between host MEP and the remote vlan 2 mac 00d0.b7ba.db76 MEP. (config-ether-cfm)#exit Exit domain configuration mode. (config)#interface eth1 Enter interface mode. 258 © 2015 IP Infusion Inc. Proprietary CFM Support on PEB Configuration (config-if)#ethernet cfm mep down mpid 20 Enter CFM MEP mode and configure the interface as a
active true domain test vlan 2 local-vid 2 maintenance end point (MEP). bridge 1 (config-if-eth-cfm-mep)#cc unicast rmpid 20 Enable unicast continuity checking (CC) in the selected state enable service instance (MA) instance with the configured domain- level. (config-if-eth-cfm-mep)#exit Exit CFM MEP mode. Validation #show ethernet cfm maintenance-points remote domain test vlan 2 bridge 1 MPID LEVEL VLAN ACTIVE Remote Mac RDI FLAGS
MPID LEVEL VLAN ACTIVE Remote Mac RDI FLAGS -------------------------------------------------------------------------------- 20 5 2 Yes 0008.a16c.eecd False Configured CE1# #show ethernet cfm maintenance-points remote domain test vlan 2 bridge 1 MPID LEVEL VLAN ACTIVE Remote Mac RDI FLAGS -------------------------------------------------------------------------------- 10 5 2 Yes 00d0.b7ba.db76 False Configured CE2# CFM Convergence between two Provider Edge Bridges
CFM Convergence between two Provider Edge Bridges Figure 18-2 displays a simple topology of CFM Convergence between two Provider Edge Bridges. Figure 18-2: Simple Connectivity Fault Management Topology PEB1 #configure terminal Enter configure mode. (config)#bridge 1 protocol provider-rstp edge Configure bridge 1 as a provider-RSTP edge. (config)#vlan database Enter VLAN configure mode (config-vlan)#vlan 2 type customer bridge 1 Configure customer VLAN 2 and associate it with bridge 1.
state enable (config-vlan)#vlan 3 type service multipoint- Configure service VLAN 3 as multipoint-to-multipoint and multipoint bridge 1 state enable associate it with bridge 1. © 2015 IP Infusion Inc. Proprietary 259 CFM Support on PEB Configuration (config-vlan)#exit Exit VLAN configure mode. (config)#cvlan registration table map1 bridge Configure CVLAN registration table map1 on bridge 1. 1 (config-cvlan-registration)#cvlan 2 svlan 3 Map CVLAN 2 to SVLAN 3.
(config-cvlan-registration)#exit Exit configure CVLAN registration mode. (config)#interface eth1 Enter interface mode. (config-if)#switchport Configure Eth1 as a layer 2 port. (config-if)#bridge-group 1 Associate bridge to interface. (config-if)#switchport mode customer-edge Configure port as customer-edge hybrid. hybrid (config-if)#switchport customer-edge hybrid Allow the VLAN 2 created on interface. allowed vlan add 2 egress-tagged enable
allowed vlan add 2 egress-tagged enable (config-if)#switchport customer-edge vlan Associate map1 with the interface. registration map1 (config-if)#switchport provider-edge vlan 3 Configure untagged VID. untagged-vlan 2 (config-if)#switchport provider-edge vlan 3 Configure default VID. default-vlan 2 (config-if)#exit Exit interface mode. (config)#interface eth2 Enter interface mode. (config-if)#switchport Configure Eth2 as a layer 2 port. (config-if)#bridge-group 1 Associate bridge to interface.
(config-if)#switchport mode provider-network Configure port as a provider-network. (config-if)#switchport provider-network Allow all the VLANs created on interface. allowed vlan all (config-if)#exit Exit interface mode. (config-if)#ethernet cfm domain-name type Enter CFM mode and create a domain at level 4 on bridge character-string name check level 4 mip- 1. creation default bridge 1 (config-ether-cfm)#service ma-type string ma- Associate service ID to VLAN.
name abc vlan 3 mip-creation default (config-ether-cfm)#mep crosscheck mpid 52 Configure crosscheck between host MEP and the remote vlan 3 mac 0007.e9a5.6182 MEP. (config-ether-cfm)#Exit Exit domain configuration mode. (config)#interface eth1 Enter interface mode. (config-if)#ethernet cfm mep up mpid 36 Enter CFM MEP mode and configure the interface as a active true domain check vlan 3 local-vid 3 maintenance end point (MEP). bridge 1
bridge 1 (config-if-eth-cfm-mep)#cc unicast rmpid 52 Enable unicast continuity checking (cc) in the selected state enable service instance (MA) instance with the configured domain- level. Provider Bridge #configure terminal Enter configure mode. (config)#bridge 1 protocol provider-rstp Configure bridge 1 as a provider-RSTP. 260 © 2015 IP Infusion Inc. Proprietary CFM Support on PEB Configuration (config)#vlan database Enter VLAN configure mode.
(config)#vlan database Enter VLAN configure mode. (config-vlan)#vlan 3 type service multipoint- Configure service VLAN 3 as multipoint-to-multipoint and multipoint bridge 1 state enable associate it with bridge 1. (config-vlan)#exit Exit VLAN configure mode. (config)#interface eth1 Enter interface mode. (config-if)#switchport Configure Eth1 as a layer 2 port. (config-if)#bridge-group 1 Associate bridge to interface.
(config-if)#switchport mode provider-network Configure port as a provider-network. (config-if)#switchport provider-network Allow all the VLANs created on interface. allowed vlan all (config-if)#exit Exit interface mode. (config)#interface eth2 Enter interface mode. (config-if)#switchport Configure Eth2 as a layer 2 port. (config-if)#bridge-group 1 Associate bridge to interface. (config-if)#switchport mode provider-network Configure port as a provider-network.
(config-if)#switchport provider-network Allow all the VLANs created on interface. allowed vlan all (config-if)#exit Exit interface mode. (config)#ethernet cfm configure default-md- Configure MIP on level 4 for bridge 1 and set MIP creation level level 4 mip-creation default bridge 1 permissions. PEB2 #configure terminal Enter configure mode. (config)#bridge 1 protocol provider-rstp edge Configure bridge 1 as a provider-RSTP edge. (config)#vlan database Enter VLAN configure mode.
(config)#vlan database Enter VLAN configure mode. (config-vlan)#vlan 2 type customer bridge 1 Configure customer VLAN 2 and associate it with bridge 1. state enable (config-vlan)#vlan 3 type service multipoint- Configure service VLAN 3 as multipoint-to-multipoint and multipoint bridge 1 state enable associate it with bridge 1. (config-vlan)#exit Exit VLAN configure mode. (config)#cvlan registration table map1 bridge Configure CVLAN registration table map1 on bridge 1. 1
1 (config-cvlan-registration)#cvlan 2 svlan 3 Map CVLAN 2 to SVLAN 3. (config-cvlan-registration)#exit Exit configure CVLAN registration mode. (config)#interface eth1 Enter interface mode. (config-if)#switchport Configure Eth1 as a layer 2 port. (config-if)#bridge-group 1 Associate bridge to interface. (config-if)#switchport mode customer-edge Configure port as customer-edge hybrid. hybrid (config-if)#switchport customer-edge hybrid Allow the VLAN 2 created on interface.
allowed vlan add 2 egress-tagged enable (config-if)#switchport customer-edge vlan Associate map1 with the interface. registration map1 © 2015 IP Infusion Inc. Proprietary 261 CFM Support on PEB Configuration (config-if)#switchport provider-edge vlan 3 Configure untagged VID. untagged-vlan 2 (config-if)#switchport provider-edge vlan 3 Configure default VID. default-vlan 2 (config-if)#exit Exit interface mode. (config)#interface eth2 Enter interface mode.
(config)#interface eth2 Enter interface mode. (config-if)#switchport Configure Eth2 as a layer 2 port. (config-if)#bridge-group 1 Associate bridge to interface. (config-if)#switchport mode provider-network Configure port as a provider-network. (config-if)#switchport provider-network Allow all the VLANs created on interface. allowed vlan all (config-if)#exit Exit interface mode. (config-if)#ethernet cfm domain-name type Enter CFM mode and create a domain at level 4 on bridge
character-string name check level 4 mip- 1. creation default bridge 1 (config-ether-cfm)#service ma-type string ma- Associate service ID to VLAN. name abc vlan 3 mip-creation default (config-ether-cfm)#mep crosscheck mpid 36 Configure crosscheck between host MEP and the remote vlan 3 mac 0007.e9a5.6182 MEP. (config-ether-cfm)#exit Exit CFM mode. (config)#interface eth1 Enter interface mode. (config-if)#ethernet cfm mep up mpid 52 Enter CFM MEP mode and configure the interface as a
active true domain check vlan 3 local-vid 3 maintenance end point (MEP). bridge 1 (config-if-eth-cfm-mep)#cc unicast rmpid 36 Enable unicast continuity checking (cc) in the selected state enable service instance (MA) instance with the configured domain- level. (config-if-eth-cfm-mep)#exit Exit CFM MEP mode. Validation #show ethernet cfm maintenance-points remote domain check vlan 3 bridge 1 MPID LEVEL VLAN ACTIVE Remote Mac RDI FLAGS
MPID LEVEL VLAN ACTIVE Remote Mac RDI FLAGS ------------------------------------------------------------------------------ -- 52 4 3 Yes 0007.e9a5.617b False Configured # #show ethernet cfm maintenance-points remote domain check vlan 3 bridge 1 MPID LEVEL VLAN ACTIVE Remote Mac RDI FLAGS ------------------------------------------------------------------------------ -- 36 4 3 Yes 0007.e9a5.6182 False Configured 262 © 2015 IP Infusion Inc. Proprietary Index A E
262 © 2015 IP Infusion Inc. Proprietary Index A E ACTIVE_SEND_LOCAL 28 EFM OAM configuration Automatic Protection Switching (APS) Link Monitoring Events 31 configuration 175 remote failure detection 33 remote loopback 31 B validation 28 validation commands 29 Backbone Core Bridge 172 EMF OAM configuration Backbone Edge Bridge 169, 170, 175 validation commands 29 B-component 169, 170, 175, 179 Ethernet Ring Protection Switching (ERPS) Bundling in UNI 81 configuration 191, 213
Bundling in UNI 81 configuration 191, 213 validation 84 Ethernet Switched Path (ESP) configuration 169 C F CFM configuration 11 FAULT 29 CFM over PBB 19 commands H used 185 configuration how to configure Automated Protection Switching 144 EFM OAM 27 Ethernet Switched Path 139 LLDP 35 Multicast Connectivity Fault Management 159 Provider Bridging 59 PBB-TE 139 STP 111 Unicast Connectivity Fault Management 154 configuration commands 254 I configurations
configuration commands 254 I configurations Ethernet CFM 11 I-component 169, 170, 175, 179 PBB-TE 139 configure L EFM OAM Ethernet to the First Mile 27 LACP Peering LLDP 35 Configurations for Host machines 73 Provider Bridging 59 Validation commands 74 STP 111 verification 77 configuring CFM over PBB link Monitoring validation commands 24 validation 32 connectivity fault management link monitoring events 31 provider backbone bridging 19 LLDP configuration
provider backbone bridging 19 LLDP configuration Connectivity Fault Management (CFM) validation 36 configuration 255 O D OAM discovery state 28 DOT1.X Tunneling in UNI 77 ACTIVE_SEND_LOCAL 28 validation 80 FAULT 29 Dual-ended LMM PASSIVE_WAIT 28 configuration 251 SEND_ANY 29 SEND_LOCAL_REMOTE 28 SEND_LOCAL_REMOTE_OK 29 © 2015 IP Infusion Inc. Proprietary 263 Index P ring protection switching timers 199 ring protection switching timers 199 PASSIVE_WAIT 28 PBB-TE configurations 139 S
PASSIVE_WAIT 28 PBB-TE configurations 139 S Automatic Protection Switching 144 Ethernet Switched Path 139 SEND_ANY 29 Multicast Connectivity Fault Management 159 SEND_LOCAL_REMOT 28 Unicast Connectivity Fault Management 154 SEND_LOCAL_REMOTE_OK 29 R V remote failure detection 33 validation 33 remote loopback 31 validation commands 24, 29 validation 31 Ring Protection Switching Configuration 264 © 2015 IP Infusion Inc. Proprietary
